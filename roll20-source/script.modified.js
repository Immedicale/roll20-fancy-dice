function() {
    function cParticle() {
        this.position = Vector.create(),
        this.direction = Vector.create(),
        this.size = 0,
        this.sizeSmall = 0,
        this.timeToLive = 0,
        this.colour = [],
        this.drawColour = "",
        this.deltaColour = [],
        this.sharpness = 0
    }
    function cParticleSystem() {
        this.maxParticles = 150,
        this.particles = [],
        this.active = !0,
        this.position = Vector.create(100, 100),
        this.positionRandom = Vector.create(10, 10),
        this.size = 45,
        this.sizeRandom = 15,
        this.speed = 5,
        this.speedRandom = 1.5,
        this.lifeSpan = 9,
        this.lifeSpanRandom = 7,
        this.angle = 0,
        this.angleRandom = 360,
        this.gravity = Vector.create(.01, .01),
        this.startColour = [250, 218, 68, 1],
        this.startColourRandom = [62, 60, 60, 0],
        this.endColour = [245, 35, 0, 0],
        this.endColourRandom = [60, 60, 60, 0],
        this.sharpness = 40,
        this.sharpnessRandom = 10,
        this.particleCount = 0,
        this.elapsedTime = 0,
        this.duration = -1,
        this.emissionRate = 0,
        this.emitCounter = 0,
        this.particleIndex = 0,
        this.init = function() {
            this.emissionRate = this.emissionRate || this.maxParticles / this.lifeSpan,
            this.emitCounter = 0
        }
        ,
        this.addParticle = function() {
            if (this.particleCount == this.maxParticles)
                return !1;
            var e = new cParticle;
            return this.initParticle(e),
            this.particles[this.particleCount] = e,
            this.particleCount++,
            !0
        }
        ,
        this.initParticle = function(e) {
            var t = function() {
                return 2 * Math.random() - 1
            };
            e.position.x = this.position.x + this.positionRandom.x * t(),
            e.position.y = this.position.y + this.positionRandom.y * t();
            var n = (this.angle + this.angleRandom * t()) * (Math.PI / 180)
              , i = Vector.create(Math.cos(n), Math.sin(n))
              , o = this.speed + this.speedRandom * t();
            e.direction = Vector.multiply(i, o),
            e.size = this.size + this.sizeRandom * t(),
            e.size = e.size < 0 ? 0 : ~~e.size,
            e.timeToLive = this.lifeSpan + this.lifeSpanRandom * t(),
            e.sharpness = this.sharpness + this.sharpnessRandom * t(),
            e.sharpness = e.sharpness > 100 ? 100 : e.sharpness < 0 ? 0 : e.sharpness,
            e.sizeSmall = ~~(e.size / 200 * e.sharpness);
            var r = [this.startColour[0] + this.startColourRandom[0] * t(), this.startColour[1] + this.startColourRandom[1] * t(), this.startColour[2] + this.startColourRandom[2] * t(), this.startColour[3] + this.startColourRandom[3] * t()]
              , a = [this.endColour[0] + this.endColourRandom[0] * t(), this.endColour[1] + this.endColourRandom[1] * t(), this.endColour[2] + this.endColourRandom[2] * t(), this.endColour[3] + this.endColourRandom[3] * t()];
            e.colour = r,
            e.deltaColour[0] = (a[0] - r[0]) / e.timeToLive,
            e.deltaColour[1] = (a[1] - r[1]) / e.timeToLive,
            e.deltaColour[2] = (a[2] - r[2]) / e.timeToLive,
            e.deltaColour[3] = (a[3] - r[3]) / e.timeToLive
        }
        ,
        this.update = function(e) {
            if (this.active && this.emissionRate > 0) {
                this.animatePosition && (this.animatePosition.x === this.position.x && this.animatePosition.y === this.position.y ? delete this.animatePosition : (this.position.x < this.animatePosition.x ? this.position.x += this.animatePosition.rateX : this.position.x > this.animatePosition.x && (this.position.x -= this.animatePosition.rateX),
                this.position.y < this.animatePosition.y ? this.position.y += this.animatePosition.rateY : this.position.y > this.animatePosition.y && (this.position.y -= this.animatePosition.rateY)));
                var t = 1 / this.emissionRate;
                for (this.emitCounter += e; this.particleCount < this.maxParticles && this.emitCounter > t; )
                    this.addParticle(),
                    this.emitCounter -= t;
                this.elapsedTime += e,
                -1 !== this.duration && this.duration < this.elapsedTime && this.stop()
            }
            for (this.particleIndex = 0; this.particleIndex < this.particleCount; ) {
                var n = this.particles[this.particleIndex];
                if (n.timeToLive > 0) {
                    n.direction = Vector.add(n.direction, this.gravity),
                    n.position = Vector.add(n.position, n.direction),
                    n.timeToLive -= e;
                    var i = (i = n.colour[0] += n.deltaColour[0] * e) > 255 ? 255 : i < 0 ? 0 : ~~i
                      , o = (o = n.colour[1] += n.deltaColour[1] * e) > 255 ? 255 : o < 0 ? 0 : ~~o
                      , r = (r = n.colour[2] += n.deltaColour[2] * e) > 255 ? 255 : r < 0 ? 0 : ~~r
                      , a = (a = n.colour[3] += n.deltaColour[3] * e) > 1 ? 1 : a < 0 ? 0 : a.toFixed(2);
                    n.drawColour = [i / 255, o / 255, r / 255, a],
                    this.particleIndex++
                } else
                    this.particleIndex != this.particleCount - 1 && (this.particles[this.particleIndex] = this.particles[this.particleCount - 1]),
                    this.particleCount--
            }
        }
        ,
        this.stop = function() {
            this.onDeath && (d20.fx.spawnFx(this.position.x + this.size / 2, this.position.y + this.size / 2, this.onDeath, "", null, !0),
            delete this.onDeath),
            this.active = !1,
            this.elapsedTime = 0,
            this.emitCounter = 0
        }
        ,
        this.render = function(e, t, n, i, o) {
            for (var r = 0, a = this.particleCount; r < a; r++) {
                var s = this.particles[r]
                  , l = s.size
                  , c = l >> 1
                  , u = ~~s.position.x - t
                  , d = ~~s.position.y - n;
                if (!(u + c < 0 || d + c < 0 || u - c > i || d - c > o)) {
                    var h = e.createRadialGradient(u + c, d + c, s.sizeSmall, u + c, d + c, c);
                    h.addColorStop(0, s.drawColour),
                    h.addColorStop(1, s.drawColourTransparent),
                    e.fillStyle = h,
                    e.fillRect(u, d, l, l)
                }
            }
        }
        ,
        this.renderGl = function() {
            for (var e = 0, t = this.particleCount; e < t; e++) {
                var n = this.particles[e]
                  , i = n.size
                  , o = i >> 1
                  , r = ~~n.position.x
                  , a = ~~n.position.y;
                d20.canvas_overlay.gl.renderParticle([{
                    x: r,
                    y: a
                }, {
                    x: r + i,
                    y: a
                }, {
                    x: r + i,
                    y: a + i
                }, {
                    x: r,
                    y: a + i
                }], r + o, a + o, o, n.drawColour, n.sizeSmall)
            }
        }
    }
    function getUrlVars() {
        var e = {};
        window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(t, n, i) {
            e[n] = i
        });
        return e
    }
    function _EventDescriptor() {
        if (1 === arguments.length) {
            let e = arguments[0];
            for (let t in e)
                this.add(t, e[t])
        } else
            2 === arguments.length && this.add(arguments[0], arguments[1])
    }
    function _Listener(e, t, n) {
        this.target_name = e,
        this.target = t,
        this.callbacks = n
    }
    function FrameRecorder() {
        this._active = !1,
        this._started = !1,
        this._save_all = !1,
        this._event_types = new _EventDescriptor,
        this._fps_timer = 0,
        this._frames_this_second = 0,
        this.slow_frames = []
    }
    function addFrameRecorderSupportedEvents() {
        FrameRecorder.prototype._supported_event_listeners.push(new _Listener("canvas",d20.engine.canvas,{
            "object:moving": e=>{
                let t = {
                    type: "object:moving",
                    targets: []
                }
                  , n = Array.isArray(e.target) ? e.target : [e.target];
                for (const e of n) {
                    const n = "group" === e.type ? e._objects : [e];
                    t.targets.push(..._.map(n, e=>({
                        id: e.model.get("id"),
                        light_hassight: e.model.get("light_hassight"),
                        current_player_controls: e.model.currentPlayerControls()
                    })))
                }
                d20.engine.frame_recorder._add_event_data(t)
            }
        }), new _Listener("engine",d20.engine,{
            "afow:update": e=>{
                e.type = "afow:update",
                d20.engine.frame_recorder._add_event_data(e)
            }
        }))
    }
    function time_to_ms(e) {
        let t, n, i, o = 0;
        return i = e.hours ? e.hours : 0,
        n = e.minutes ? e.minutes : 0,
        t = e.seconds ? e.seconds : 0,
        o = e.milliseconds ? e.milliseconds : 0,
        o += 1e3 * (t += 60 * (n += 60 * i))
    }
    function currentTime() {
        var e = ""
          , t = new Date
          , n = t.getHours();
        e = n < 12 ? "AM" : "PM",
        0 == n && (n = 12),
        n > 12 && (n -= 12);
        var i = t.getMinutes();
        if (i < 10)
            var o = "0" + i;
        else
            o = i;
        return n + ":" + o + " " + e
    }
    function boundingBoxCollision(e, t) {
        return e.left = e.x,
        e.top = e.y,
        e.right = e.x + e.width,
        e.bottom = e.y + e.height,
        t.left = t.x,
        t.top = t.y,
        t.right = t.x + t.width,
        t.bottom = t.y + t.height,
        !(t.left > e.right || t.right < e.left || t.top > e.bottom || t.bottom < e.top)
    }
    function setMode(e) {
        console.log(e),
        "text" === e || "rect" === e || "polygon" === e || "path" === e || "pan" === e || "select" === e || "targeting" === e || "measure" === e || window.is_gm || (e = "select"),
        "text" == e ? $("#editor").addClass("texteditmode") : $("#editor").removeClass("texteditmode"),
        $("#floatingtoolbar li").removeClass("activebutton"),
        $("#" + e).addClass("activebutton"),
        "fog" == e.substring(0, 3) && $("#fogcontrols").addClass("activebutton"),
        "rect" == e && ($("#drawingtools").addClass("activebutton"),
        $("#drawingtools").removeClass("text path polygon").addClass("rect")),
        "text" == e && ($("#drawingtools").addClass("activebutton"),
        $("#drawingtools").removeClass("rect path polygon").addClass("text")),
        "path" == e && $("#drawingtools").addClass("activebutton").removeClass("text rect polygon").addClass("path"),
        "polygon" == e ? $("#drawingtools").addClass("activebutton").removeClass("text rect path").addClass("polygon") : d20.engine.finishCurrentPolygon(),
        "pan" !== e && "select" !== e && d20.engine.unselect(),
        "pan" == e ? ($("#select").addClass("pan").removeClass("select").addClass("activebutton"),
        d20.token_editor.removeRadialMenu(),
        $("#editor-wrapper").addClass("panning")) : $("#editor-wrapper").removeClass("panning"),
        "select" == e && $("#select").addClass("select").removeClass("pan").addClass("activebutton"),
        $("#floatingtoolbar .mode").hide(),
        "text" != e && "select" != e || $("#floatingtoolbar ." + e).show(),
        "gridalign" == e ? $("#gridaligninstructions").show() : "gridalign" === d20.engine.mode && $("#gridaligninstructions").hide(),
        "targeting" === e ? ($("#targetinginstructions").show(),
        $("#finalcanvas").addClass("targeting"),
        d20.engine.canvas.hoverCursor = "crosshair") : "targeting" === d20.engine.mode && ($("#targetinginstructions").hide(),
        $("#finalcanvas").removeClass("targeting"),
        d20.engine.nextTargetCallback && _.defer(function() {
            d20.engine.nextTargetCallback && d20.engine.nextTargetCallback(!1)
        }),
        d20.engine.canvas.hoverCursor = "move"),
        console.log("Switch mode to " + e),
        d20.engine.mode = e,
        "measure" !== e && window.currentPlayer && d20.engine.measurements[window.currentPlayer.id] && !d20.engine.measurements[window.currentPlayer.id].sticky && (d20.engine.announceEndMeasure({
            player: window.currentPlayer.id
        }),
        d20.engine.endMeasure()),
        d20.engine.canvas.isDrawingMode = "path" == e,
        "text" == e || "path" == e || "rect" == e || "polygon" == e || "fxtools" == e ? ($("#secondary-toolbar").show(),
        $("#secondary-toolbar .mode").hide(),
        $("#secondary-toolbar ." + e).show(),
        "path" != e && "rect" != e && "polygon" != e || ("objects" == window.currentEditingLayer ? ($("#path_strokecolor").val(window.currentPlayer.get("color")).trigger("change-silent"),
        $("#path_fillcolor").val("transparent").trigger("change-silent")) : "" === $("#path_strokecolor").val() && ($("#path_strokecolor").val("#000000").trigger("change-silent"),
        $("#path_fillcolor").val("transparent").trigger("change-silent")),
        d20.engine.canvas.freeDrawingBrush.color = $("#path_strokecolor").val(),
        d20.engine.canvas.freeDrawingBrush.fill = $("#path_fillcolor").val() || "transparent",
        $("#path_width").trigger("change")),
        "fxtools" == e && "" === $("#fxtools_color").val() && $("#fxtools_color").val("#a61c00").trigger("change-silent")) : $("#secondary-toolbar").hide(),
        $("#floatingtoolbar").trigger("blur"),
        d20.engine.redrawScreenNextTick()
    }
    function setFillColor(e) {
        var t = e.options[e.selectedIndex];
        svgeditor.set("fill", t.value),
        $("#fillcolor").removeClass().addClass(t.value + "Thing")
    }
    function setStrokeColor(e) {
        var t = e.options[e.selectedIndex];
        svgeditor.set("stroke", t.value),
        $("#strokecolor").removeClass().addClass(t.value + "Thing")
    }
    function setStrokeWidth(e) {
        var t = e.options[e.selectedIndex].value;
        svgeditor.set("stroke-width", parseInt(t))
    }
    function setStrokeOpacity(e) {
        var t = e.options[e.selectedIndex].value;
        svgeditor.set("stroke-opacity", parseFloat(t))
    }
    function setFillOpacity(e) {
        var t = e.options[e.selectedIndex].value;
        svgeditor.set("fill-opacity", parseFloat(t))
    }
    function getOptionByValue(e, t) {
        for (var n = 0; n < e.length; n++)
            if (e.options[n].value == t)
                return n;
        return -1
    }
    function save() {
        Backbone.execute_notify()
    }
    function onFillColorChange(e) {
        setFillColor(e.srcElement || e.originalTarget)
    }
    function onFillOpacityChange(e) {
        setFillOpacity(e.srcElement || e.originalTarget)
    }
    function onStrokeColorChange(e) {
        setStrokeColor(e.srcElement || e.originalTarget)
    }
    function onStrokeOpacityChange(e) {
        setStrokeOpacity(e.srcElement || e.originalTarget)
    }
    function onStrokeWidthChange(e) {
        setStrokeWidth(e.srcElement || e.originalTarget)
    }
    function onSelect() {
        setMode("select")
    }
    function onSelectp() {
        setMode("selectp")
    }
    function onRect() {
        setMode("rect")
    }
    function onLine() {
        setMode("line")
    }
    function onEllipse() {
        setMode("ellipse")
    }
    function onPath() {
        setMode("path")
    }
    function onPolygon() {
        setMode("polygon")
    }
    function onImage() {
        setMode("image")
    }
    function onText() {
        setMode("text")
    }
    function onDelete() {
        setMode("delete")
    }
    function onPrint() {
        window.open("/print/" + campaign.id)
    }
    function onClearCanvas() {
        confirm("Are you sure you want to clear the canvas?") && svgeditor.deleteAll()
    }
    var d20 = {
        siteURL: window.d20ext.siteURL,
        environment: window.d20ext.environment,
        rollsrv: window.d20ext.rollsrv
    }, exports = exports || {}, fabric = fabric || {
        version: "1.2.14"
    }, slice, apply, Dummy, utilMin, utilMax, cursorMap, cursorOffset, addListener, removeListener, getPointer, degreesToRadians;
    window.d20 = d20;
    window.exports = exports;
    /*! Fabric.js Copyright 2008-2013, Printio (Juriy Zaytsev, Maxim Chernyak) */
    exports.fabric = fabric,
    "undefined" != typeof document && "undefined" != typeof window ? (fabric.document = document,
    fabric.window = window) : (fabric.document = require("jsdom").jsdom("<!DOCTYPE html><html><head></head><body></body></html>"),
    fabric.window = fabric.document.createWindow()),
    fabric.isTouchSupported = "ontouchstart"in fabric.document.documentElement,
    fabric.isLikelyNode = "undefined" != typeof Buffer && "undefined" == typeof window,
    fabric.log = function() {}
    ,
    fabric.warn = function() {}
    ,
    "undefined" != typeof console && ("undefined" != typeof console.log && console.log.apply && (fabric.log = function() {
        return console.log.apply(console, arguments)
    }
    ),
    "undefined" != typeof console.warn && console.warn.apply && (fabric.warn = function() {
        return console.warn.apply(console, arguments)
    }
    )),
    function() {
        function e(e, t) {
            this.__eventListeners[e] && (t ? fabric.util.removeFromArray(this.__eventListeners[e], t) : this.__eventListeners[e].length = 0)
        }
        function t(e, t) {
            if (this.__eventListeners || (this.__eventListeners = {}),
            1 === arguments.length)
                for (var n in e)
                    this.on(n, e[n]);
            else
                this.__eventListeners[e] || (this.__eventListeners[e] = []),
                this.__eventListeners[e].push(t);
            return this
        }
        function n(t, n) {
            if (this.__eventListeners) {
                if (1 === arguments.length && "object" == typeof arguments[0])
                    for (var i in t)
                        e.call(this, i, t[i]);
                else
                    e.call(this, t, n);
                return this
            }
        }
        function i(e, t) {
            if (this.__eventListeners) {
                var n = this.__eventListeners[e];
                if (n) {
                    for (var i = 0, o = n.length; i < o; i++)
                        n[i].call(this, t || {});
                    return this
                }
            }
        }
        fabric.Observable = {
            observe: t,
            stopObserving: n,
            fire: i,
            on: t,
            off: n,
            trigger: i
        }
    }(),
    fabric.Collection = {
        add: function() {
            this._objects.push.apply(this._objects, arguments);
            const e = _.filter(arguments, e=>e.isAnimatedOrVideoStill);
            this.animations && e.length && this.animations.push(...e);
            for (var t = arguments.length; t--; )
                this._onObjectAdded(arguments[t]);
            return this.renderOnAddRemove && this.renderAll(),
            this
        },
        insertAt: function(e, t, n) {
            var i = this.getObjects();
            return n ? i[t] = e : i.splice(t, 0, e),
            this._onObjectAdded(e),
            this.renderOnAddRemove && this.renderAll(),
            this
        },
        remove: function(e) {
            var t = this.getObjects()
              , n = t.indexOf(e);
            return -1 !== n && (t.splice(n, 1),
            this.animations && -1 !== (n = this.animations.indexOf(e)) && this.animations.splice(n, 1),
            this._onObjectRemoved(e)),
            this.renderOnAddRemove && this.renderAll(),
            e
        },
        forEachObject: function(e, t) {
            for (var n = this.getObjects(), i = n.length; i--; )
                e.call(t, n[i], i, n);
            return this
        },
        item: function(e) {
            return this.getObjects()[e]
        },
        isEmpty: function() {
            return 0 === this.getObjects().length
        },
        size: function() {
            return this.getObjects().length
        },
        contains: function(e) {
            return this.getObjects().indexOf(e) > -1
        },
        complexity: function() {
            return this.getObjects().reduce(function(e, t) {
                return e += t.complexity ? t.complexity() : 0
            }, 0)
        },
        toGrayscale: function() {
            return this.forEachObject(function(e) {
                e.toGrayscale()
            })
        }
    },
    function() {
        function e(e, t) {
            var n = e.indexOf(t);
            return -1 !== n && e.splice(n, 1),
            e
        }
        function t(e, t) {
            return Math.floor(Math.random() * (t - e + 1)) + e
        }
        function n(e) {
            return e * C
        }
        function i(e) {
            return e / C
        }
        function o(e, t, n) {
            var i = Math.sin(n)
              , o = Math.cos(n);
            e.subtractEquals(t);
            var r = e.x * o - e.y * i
              , a = e.x * i + e.y * o;
            return new fabric.Point(r,a).addEquals(t)
        }
        function r(e, t) {
            return parseFloat(Number(e).toFixed(t))
        }
        function a() {
            return !1
        }
        function s(e, t) {
            return l(t)[fabric.util.string.camelize(fabric.util.string.capitalize(e))]
        }
        function l(e) {
            if (!e)
                return fabric;
            for (var t = e.split("."), n = t.length, i = fabric.window, o = 0; o < n; ++o)
                i = i[t[o]];
            return i
        }
        function c(e, t, n) {
            if (e) {
                var i = fabric.util.createImage();
                i.onload = function() {
                    t && t.call(n, i),
                    i = i.onload = null
                }
                ,
                i.src = e
            } else
                t && t.call(n, e)
        }
        function u(e, t, n, i) {
            function o() {
                ++a === s && t && t(r)
            }
            var r = []
              , a = 0
              , s = e.length;
            e.forEach(function(e, t) {
                if (e.type) {
                    var a = fabric.util.getKlass(e.type, n);
                    a.async ? a.fromObject(e, function(n, a) {
                        a || (r[t] = n,
                        i && i(e, r[t])),
                        o()
                    }) : (r[t] = a.fromObject(e),
                    i && i(e, r[t]),
                    o())
                }
            })
        }
        function d(e, t, n) {
            var i;
            return i = e.length > 1 ? new fabric.PathGroup(e,t) : e[0],
            void 0 !== n && i.setSourcePath(n),
            i
        }
        function h(e, t, n) {
            if (n && "[object Array]" === Object.prototype.toString.call(n))
                for (var i = 0, o = n.length; i < o; i++)
                    n[i]in e && (t[n[i]] = e[n[i]])
        }
        function p(e, t, n, i, o, r) {
            var a = i - t
              , s = o - n
              , l = k(a * a + s * s)
              , c = E(s, a)
              , u = r.length
              , d = 0
              , h = !0;
            for (e.save(),
            e.translate(t, n),
            e.moveTo(0, 0),
            e.rotate(c),
            t = 0; l > t; )
                (t += r[d++ % u]) > l && (t = l),
                e[h ? "lineTo" : "moveTo"](t, 0),
                h = !h;
            e.restore()
        }
        function f(e) {
            return e || (e = fabric.document.createElement("canvas")),
            e.getContext || "undefined" == typeof G_vmlCanvasManager || G_vmlCanvasManager.initElement(e),
            e
        }
        function g() {
            return fabric.isLikelyNode ? new (require("canvas").Image) : fabric.document.createElement("img")
        }
        function m(e) {
            for (var t = e.prototype, n = t.stateProperties.length; n--; ) {
                var i = t.stateProperties[n]
                  , o = i.charAt(0).toUpperCase() + i.slice(1)
                  , r = "set" + o
                  , a = "get" + o;
                t[a] || (t[a] = new Function('return this.get("' + i + '")')),
                t[r] || (t[r] = new Function("value",'return this.set("' + i + '", value)'))
            }
        }
        function y(e, t) {
            t.save(),
            t.beginPath(),
            e.clipTo(t),
            t.clip()
        }
        function v(e, t) {
            for (var n = [[e[0], e[2], e[4]], [e[1], e[3], e[5]], [0, 0, 1]], i = [[t[0], t[2], t[4]], [t[1], t[3], t[5]], [0, 0, 1]], o = [], r = 0; r < 3; r++) {
                o[r] = [];
                for (var a = 0; a < 3; a++) {
                    for (var s = 0, l = 0; l < 3; l++)
                        s += n[r][l] * i[l][a];
                    o[r][a] = s
                }
            }
            return [o[0][0], o[1][0], o[0][1], o[1][1], o[0][2], o[1][2]]
        }
        function b(e) {
            return (String(e).match(/function[^{]*\{([\s\S]*)\}/) || {})[1]
        }
        function w(e, t, n, i) {
            for (var o = i[0], r = i[1], a = i[2], s = i[3], l = i[4], c = _(i[5], i[6], o, r, s, l, a, t, n), u = 0; u < c.length; u++) {
                var d = x.apply(this, c[u]);
                e.bezierCurveTo.apply(e, d)
            }
        }
        function _(e, t, n, i, o, r, a, s, l) {
            if (S = R.call(arguments),
            T[S])
                return T[S];
            var c = a * (Math.PI / 180)
              , u = Math.sin(c)
              , d = Math.cos(c)
              , h = d * (s - e) * .5 + u * (l - t) * .5
              , p = d * (l - t) * .5 - u * (s - e) * .5
              , f = h * h / ((n = Math.abs(n)) * n) + p * p / ((i = Math.abs(i)) * i);
            f > 1 && (n *= f = Math.sqrt(f),
            i *= f);
            var g = d / n
              , m = u / n
              , y = -u / i
              , v = d / i
              , b = g * s + m * l
              , w = y * s + v * l
              , _ = g * e + m * t
              , x = y * e + v * t
              , k = 1 / ((_ - b) * (_ - b) + (x - w) * (x - w)) - .25;
            k < 0 && (k = 0);
            var E = Math.sqrt(k);
            r === o && (E = -E);
            var C = .5 * (b + _) - E * (x - w)
              , A = .5 * (w + x) + E * (_ - b)
              , M = Math.atan2(w - A, b - C)
              , P = Math.atan2(x - A, _ - C) - M;
            P < 0 && 1 === r ? P += 2 * Math.PI : P > 0 && 0 === r && (P -= 2 * Math.PI);
            for (var I = Math.ceil(Math.abs(P / (.5 * Math.PI + .001))), O = [], D = 0; D < I; D++) {
                var L = M + D * P / I
                  , B = M + (D + 1) * P / I;
                O[D] = [C, A, L, B, n, i, u, d]
            }
            return T[S] = O,
            O
        }
        function x(e, t, n, i, o, r, a, s) {
            if (S = R.call(arguments),
            A[S])
                return A[S];
            var l = s * o
              , c = -a * r
              , u = a * o
              , d = s * r
              , h = .5 * (i - n)
              , p = 8 / 3 * Math.sin(.5 * h) * Math.sin(.5 * h) / Math.sin(h)
              , f = e + Math.cos(n) - p * Math.sin(n)
              , g = t + Math.sin(n) + p * Math.cos(n)
              , m = e + Math.cos(i)
              , y = t + Math.sin(i)
              , v = m + p * Math.sin(i)
              , b = y - p * Math.cos(i);
            return A[S] = [l * f + c * g, u * f + d * g, l * v + c * b, u * v + d * b, l * m + c * y, u * m + d * y],
            A[S]
        }
        var k = Math.sqrt
          , E = Math.atan2;
        fabric.util = {};
        var S, C = Math.PI / 180, T = {}, A = {}, R = Array.prototype.join;
        fabric.util.removeFromArray = e,
        fabric.util.degreesToRadians = n,
        fabric.util.radiansToDegrees = i,
        fabric.util.rotatePoint = o,
        fabric.util.toFixed = r,
        fabric.util.getRandomInt = t,
        fabric.util.falseFunction = a,
        fabric.util.getKlass = s,
        fabric.util.resolveNamespace = l,
        fabric.util.loadImage = c,
        fabric.util.enlivenObjects = u,
        fabric.util.groupSVGElements = d,
        fabric.util.populateWithProperties = h,
        fabric.util.drawDashedLine = p,
        fabric.util.createCanvasElement = f,
        fabric.util.createImage = g,
        fabric.util.createAccessors = m,
        fabric.util.clipContext = y,
        fabric.util.multiplyTransformMatrices = v,
        fabric.util.getFunctionBody = b,
        fabric.util.drawArc = w
    }(),
    function() {
        function e(e, t) {
            for (var n = i.call(arguments, 2), o = [], r = 0, a = e.length; r < a; r++)
                o[r] = n.length ? e[r][t].apply(e[r], n) : e[r][t].call(e[r]);
            return o
        }
        function t(e, t) {
            if (!e || 0 === e.length)
                return undefined;
            var n = e.length - 1
              , i = t ? e[n][t] : e[n];
            if (t)
                for (; n--; )
                    e[n][t] >= i && (i = e[n][t]);
            else
                for (; n--; )
                    e[n] >= i && (i = e[n]);
            return i
        }
        function n(e, t) {
            if (!e || 0 === e.length)
                return undefined;
            var n = e.length - 1
              , i = t ? e[n][t] : e[n];
            if (t)
                for (; n--; )
                    e[n][t] < i && (i = e[n][t]);
            else
                for (; n--; )
                    e[n] < i && (i = e[n]);
            return i
        }
        var i = Array.prototype.slice;
        Array.prototype.indexOf || (Array.prototype.indexOf = function(e) {
            if (null == this)
                throw new TypeError;
            var t = Object(this)
              , n = t.length >>> 0;
            if (0 === n)
                return -1;
            var i = 0;
            if (arguments.length > 0 && ((i = Number(arguments[1])) != i ? i = 0 : 0 !== i && i !== Number.POSITIVE_INFINITY && i !== Number.NEGATIVE_INFINITY && (i = (i > 0 || -1) * Math.floor(Math.abs(i)))),
            i >= n)
                return -1;
            for (var o = i >= 0 ? i : Math.max(n - Math.abs(i), 0); o < n; o++)
                if (o in t && t[o] === e)
                    return o;
            return -1
        }
        ),
        Array.prototype.forEach || (Array.prototype.forEach = function(e, t) {
            for (var n = 0, i = this.length >>> 0; n < i; n++)
                n in this && e.call(t, this[n], n, this)
        }
        ),
        Array.prototype.map || (Array.prototype.map = function(e, t) {
            for (var n = [], i = 0, o = this.length >>> 0; i < o; i++)
                i in this && (n[i] = e.call(t, this[i], i, this));
            return n
        }
        ),
        Array.prototype.every || (Array.prototype.every = function(e, t) {
            for (var n = 0, i = this.length >>> 0; n < i; n++)
                if (n in this && !e.call(t, this[n], n, this))
                    return !1;
            return !0
        }
        ),
        Array.prototype.some || (Array.prototype.some = function(e, t) {
            for (var n = 0, i = this.length >>> 0; n < i; n++)
                if (n in this && e.call(t, this[n], n, this))
                    return !0;
            return !1
        }
        ),
        Array.prototype.filter || (Array.prototype.filter = function(e, t) {
            for (var n, i = [], o = 0, r = this.length >>> 0; o < r; o++)
                o in this && (n = this[o],
                e.call(t, n, o, this) && i.push(n));
            return i
        }
        ),
        Array.prototype.reduce || (Array.prototype.reduce = function(e) {
            var t, n = this.length >>> 0, i = 0;
            if (arguments.length > 1)
                t = arguments[1];
            else
                for (; ; ) {
                    if (i in this) {
                        t = this[i++];
                        break
                    }
                    if (++i >= n)
                        throw new TypeError
                }
            for (; i < n; i++)
                i in this && (t = e.call(null, t, this[i], i, this));
            return t
        }
        ),
        fabric.util.array = {
            invoke: e,
            min: n,
            max: t
        }
    }(),
    function() {
        function e(e, t) {
            for (var n in t)
                e[n] = t[n];
            return e
        }
        function t(t) {
            return e({}, t)
        }
        fabric.util.object = {
            extend: e,
            clone: t
        }
    }(),
    function() {
        function e(e) {
            return e.replace(/-+(.)?/g, function(e, t) {
                return t ? t.toUpperCase() : ""
            })
        }
        function t(e) {
            return e.charAt(0).toUpperCase() + e.slice(1).toLowerCase()
        }
        function n(e) {
            return e.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&apos;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
        }
        String.prototype.trim || (String.prototype.trim = function() {
            return this.replace(/^[\s\xA0]+/, "").replace(/[\s\xA0]+$/, "")
        }
        ),
        fabric.util.string = {
            camelize: e,
            capitalize: t,
            escapeXml: n
        }
    }(),
    slice = Array.prototype.slice,
    apply = Function.prototype.apply,
    Dummy = function() {}
    ,
    Function.prototype.bind || (Function.prototype.bind = function(e) {
        var t, n = this, i = slice.call(arguments, 1);
        return t = i.length ? function() {
            return apply.call(n, this instanceof Dummy ? this : e, i.concat(slice.call(arguments)))
        }
        : function() {
            return apply.call(n, this instanceof Dummy ? this : e, arguments)
        }
        ,
        Dummy.prototype = this.prototype,
        t.prototype = new Dummy,
        t
    }
    ),
    function() {
        function e() {}
        function t(e) {
            var t = this.constructor.superclass.prototype[e];
            return arguments.length > 1 ? t.apply(this, i.call(arguments, 1)) : t.call(this)
        }
        function n() {
            function n() {
                this.initialize.apply(this, arguments)
            }
            var r = null
              , s = i.call(arguments, 0);
            "function" == typeof s[0] && (r = s.shift()),
            n.superclass = r,
            n.subclasses = [],
            r && (e.prototype = r.prototype,
            n.prototype = new e,
            r.subclasses.push(n));
            for (var l = 0, c = s.length; l < c; l++)
                a(n, s[l], r);
            return n.prototype.initialize || (n.prototype.initialize = o),
            n.prototype.constructor = n,
            n.prototype.callSuper = t,
            n
        }
        var i = Array.prototype.slice
          , o = function() {}
          , r = function() {
            for (var e in {
                toString: 1
            })
                if ("toString" === e)
                    return !1;
            return !0
        }()
          , a = function(e, t, n) {
            for (var i in t)
                i in e.prototype && "function" == typeof e.prototype[i] && (t[i] + "").indexOf("callSuper") > -1 ? e.prototype[i] = function(e) {
                    return function() {
                        var i = this.constructor.superclass;
                        this.constructor.superclass = n;
                        var o = t[e].apply(this, arguments);
                        if (this.constructor.superclass = i,
                        "initialize" !== e)
                            return o
                    }
                }(i) : e.prototype[i] = t[i],
                r && (t.toString !== Object.prototype.toString && (e.prototype.toString = t.toString),
                t.valueOf !== Object.prototype.valueOf && (e.prototype.valueOf = t.valueOf))
        };
        fabric.util.createClass = n
    }(),
    function() {
        function e(e) {
            var t, n, i = Array.prototype.slice.call(arguments, 1), o = i.length;
            for (n = 0; n < o; n++)
                if (t = typeof e[i[n]],
                !/^(?:function|object|unknown)$/.test(t))
                    return !1;
            return !0
        }
        function t(e, t) {
            return {
                handler: t,
                wrappedHandler: n(e, t)
            }
        }
        function n(e, t) {
            return function(n) {
                t.call(a(e), n || fabric.window.event)
            }
        }
        function i(e, t) {
            return function(n) {
                if (g[e] && g[e][t])
                    for (var i = g[e][t], o = 0, r = i.length; o < r; o++)
                        i[o].call(this, n || fabric.window.event)
            }
        }
        function o(e) {
            if (e || (e = fabric.window.event),
            fabric.isTouchSupported) {
                var t = e.touches || e.originalEvent.touches || e.changedTouches;
                return t && t[0] ? {
                    x: Math.floor(t[0].pageX / d20.engine.canvasZoom) + d20.engine.currentCanvasOffset[0] - Math.floor(d20.engine.paddingOffset[0] / d20.engine.canvasZoom),
                    y: Math.floor(t[0].pageY / d20.engine.canvasZoom) + d20.engine.currentCanvasOffset[1] - Math.floor(d20.engine.paddingOffset[1] / d20.engine.canvasZoom)
                } : {
                    x: 0,
                    y: 0
                }
            }
            return {
                x: Math.floor(e.pageX / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom),
                y: Math.floor(e.pageY / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom)
            }
        }
        var r, a, s, l, c = (r = 0,
        function(e) {
            return e.__uniqueID || (e.__uniqueID = "uniqueID__" + r++)
        }
        );
        l = {},
        a = function(e) {
            return l[e]
        }
        ,
        s = function(e, t) {
            l[e] = t
        }
        ;
        var u, d, h = e(fabric.document.documentElement, "addEventListener", "removeEventListener") && e(fabric.window, "addEventListener", "removeEventListener"), p = e(fabric.document.documentElement, "attachEvent", "detachEvent") && e(fabric.window, "attachEvent", "detachEvent"), f = {}, g = {};
        h ? (u = function(e, t, n) {
            e.addEventListener(t, n, !1)
        }
        ,
        d = function(e, t, n) {
            e.removeEventListener(t, n, !1)
        }
        ) : p ? (u = function(e, n, i) {
            var o = c(e);
            s(o, e),
            f[o] || (f[o] = {}),
            f[o][n] || (f[o][n] = []);
            var r = t(o, i);
            f[o][n].push(r),
            e.attachEvent("on" + n, r.wrappedHandler)
        }
        ,
        d = function(e, t, n) {
            var i, o = c(e);
            if (f[o] && f[o][t])
                for (var r = 0, a = f[o][t].length; r < a; r++)
                    (i = f[o][t][r]) && i.handler === n && (e.detachEvent("on" + t, i.wrappedHandler),
                    f[o][t][r] = null)
        }
        ) : (u = function(e, t, n) {
            var o = c(e);
            if (g[o] || (g[o] = {}),
            !g[o][t]) {
                g[o][t] = [];
                var r = e["on" + t];
                r && g[o][t].push(r),
                e["on" + t] = i(o, t)
            }
            g[o][t].push(n)
        }
        ,
        d = function(e, t, n) {
            var i = c(e);
            if (g[i] && g[i][t])
                for (var o = g[i][t], r = 0, a = o.length; r < a; r++)
                    o[r] === n && o.splice(r, 1)
        }
        ),
        fabric.util.addListener = u,
        fabric.util.removeListener = d;
        fabric.isTouchSupported && function(e) {
            return "touchend" !== e.type ? e.touches && e.touches[0] && e.touches[0].pageX - (e.touches[0].pageX - e.touches[0].clientX) || e.clientX : e.changedTouches && e.changedTouches[0] && e.changedTouches[0].pageX - (e.changedTouches[0].pageX - e.changedTouches[0].clientX) || e.clientX
        }
        ,
        fabric.util.getPointer = o,
        fabric.util.object.extend(fabric.util, fabric.Observable)
    }(),
    function() {
        function e(e, t) {
            var n = e.style;
            if (!n)
                return e;
            if ("string" == typeof t)
                return e.style.cssText += ";" + t,
                t.indexOf("opacity") > -1 ? r(e, t.match(/opacity:\s*(\d?\.?\d*)/)[1]) : e;
            for (var i in t) {
                if ("opacity" === i)
                    r(e, t[i]);
                else
                    n["float" === i || "cssFloat" === i ? "undefined" == typeof n.styleFloat ? "cssFloat" : "styleFloat" : i] = t[i]
            }
            return e
        }
        var t = fabric.document.createElement("div")
          , n = "string" == typeof t.style.opacity
          , i = "string" == typeof t.style.filter
          , o = /alpha\s*\(\s*opacity\s*=\s*([^\)]+)\)/
          , r = function(e) {
            return e
        };
        n ? r = function(e, t) {
            return e.style.opacity = t,
            e
        }
        : i && (r = function(e, t) {
            var n = e.style;
            return e.currentStyle && !e.currentStyle.hasLayout && (n.zoom = 1),
            o.test(n.filter) ? (t = t >= .9999 ? "" : "alpha(opacity=" + 100 * t + ")",
            n.filter = n.filter.replace(o, t)) : n.filter += " alpha(opacity=" + 100 * t + ")",
            e
        }
        ),
        fabric.util.setStyle = e
    }(),
    function() {
        function e(e) {
            return "string" == typeof e ? fabric.document.getElementById(e) : e
        }
        function t(e, t) {
            var n = fabric.document.createElement(e);
            for (var i in t)
                "class" === i ? n.className = t[i] : "for" === i ? n.htmlFor = t[i] : n.setAttribute(i, t[i]);
            return n
        }
        function n(e, t) {
            -1 === (" " + e.className + " ").indexOf(" " + t + " ") && (e.className += (e.className ? " " : "") + t)
        }
        function i(e, n, i) {
            return "string" == typeof n && (n = t(n, i)),
            e.parentNode && e.parentNode.replaceChild(n, e),
            n.appendChild(e),
            n
        }
        function o() {
            return {
                left: 0,
                top: 0
            }
        }
        function r(e, t) {
            if (e.style || (e.style = {}),
            fabric.document.defaultView && fabric.document.defaultView.getComputedStyle)
                return fabric.document.defaultView.getComputedStyle(e, null)[t];
            var n = e.style[t];
            return !n && e.currentStyle && (n = e.currentStyle[t]),
            n
        }
        var a, s = Array.prototype.slice, l = function(e) {
            return s.call(e, 0)
        };
        try {
            a = l(fabric.document.childNodes)instanceof Array
        } catch (c) {}
        a || (l = function(e) {
            for (var t = new Array(e.length), n = e.length; n--; )
                t[n] = e[n];
            return t
        }
        ),
        function() {
            function e(e) {
                return "undefined" != typeof e.onselectstart && (e.onselectstart = fabric.util.falseFunction),
                i ? e.style[i] = "none" : "string" == typeof e.unselectable && (e.unselectable = "on"),
                e
            }
            function t(e) {
                return "undefined" != typeof e.onselectstart && (e.onselectstart = null),
                i ? e.style[i] = "" : "string" == typeof e.unselectable && (e.unselectable = ""),
                e
            }
            var n = fabric.document.documentElement.style
              , i = "userSelect"in n ? "userSelect" : "MozUserSelect"in n ? "MozUserSelect" : "WebkitUserSelect"in n ? "WebkitUserSelect" : "KhtmlUserSelect"in n ? "KhtmlUserSelect" : "";
            fabric.util.makeElementUnselectable = e,
            fabric.util.makeElementSelectable = t
        }(),
        function() {
            function e(e, t) {
                var n = fabric.document.getElementsByTagName("head")[0]
                  , i = fabric.document.createElement("script")
                  , o = !0;
                i.onload = i.onreadystatechange = function(e) {
                    if (o) {
                        if ("string" == typeof this.readyState && "loaded" !== this.readyState && "complete" !== this.readyState)
                            return;
                        o = !1,
                        t(e || fabric.window.event),
                        i = i.onload = i.onreadystatechange = null
                    }
                }
                ,
                i.src = e,
                n.appendChild(i)
            }
            fabric.util.getScript = e
        }(),
        fabric.util.getById = e,
        fabric.util.toArray = l,
        fabric.util.makeElement = t,
        fabric.util.addClass = n,
        fabric.util.wrapElement = i,
        fabric.util.getElementOffset = o,
        fabric.util.getElementStyle = r
    }(),
    function() {
        function e(e, t) {
            return e + (/\?/.test(e) ? "&" : "?") + t
        }
        function t() {}
        function n(n, o) {
            o || (o = {});
            var r, a = o.method ? o.method.toUpperCase() : "GET", s = o.onComplete || function() {}
            , l = i();
            return l.onreadystatechange = function() {
                4 === l.readyState && (s(l),
                l.onreadystatechange = t)
            }
            ,
            "GET" === a && (r = null,
            "string" == typeof o.parameters && (n = e(n, o.parameters))),
            l.open(a, n, !0),
            "POST" !== a && "PUT" !== a || l.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
            l.send(r),
            l
        }
        var i = function() {
            for (var e = [function() {
                return new ActiveXObject("Microsoft.XMLHTTP")
            }
            , function() {
                return new ActiveXObject("Msxml2.XMLHTTP")
            }
            , function() {
                return new ActiveXObject("Msxml2.XMLHTTP.3.0")
            }
            , function() {
                return new XMLHttpRequest
            }
            ], t = e.length; t--; )
                try {
                    if (e[t]())
                        return e[t]
                } catch (n) {}
        }();
        fabric.util.request = n
    }(),
    function() {
        function e(e) {
            e || (e = {});
            var t, i = +new Date, o = e.duration || 500, r = i + o, a = e.onChange || function() {}
            , s = e.abort || function() {
                return !1
            }
            , l = e.easing || function(e, t, n, i) {
                return -n * Math.cos(e / i * (Math.PI / 2)) + n + t
            }
            , c = "startValue"in e ? e.startValue : 0, u = "endValue"in e ? e.endValue : 100, d = e.byValue || u - c;
            e.onStart && e.onStart(),
            function h() {
                t = +new Date,
                a(l(t > r ? o : t - i, c, d, o)),
                t > r || s() ? e.onComplete && e.onComplete() : n(h)
            }()
        }
        var t = fabric.window.requestAnimationFrame || fabric.window.webkitRequestAnimationFrame || fabric.window.mozRequestAnimationFrame || fabric.window.oRequestAnimationFrame || fabric.window.msRequestAnimationFrame || function(e) {
            fabric.window.setTimeout(e, 1e3 / 60)
        }
          , n = function() {
            return t.apply(fabric.window, arguments)
        };
        fabric.util.animate = e,
        fabric.util.requestAnimFrame = n
    }(),
    function(e) {
        "use strict";
        function t(e, t) {
            this.x = e,
            this.y = t
        }
        var n = e.fabric || (e.fabric = {});
        n.Point ? n.warn("fabric.Point is already defined") : (n.Point = t,
        t.prototype = {
            constructor: t,
            add: function(e) {
                return new t(this.x + e.x,this.y + e.y)
            },
            addEquals: function(e) {
                return this.x += e.x,
                this.y += e.y,
                this
            },
            scalarAdd: function(e) {
                return new t(this.x + e,this.y + e)
            },
            scalarAddEquals: function(e) {
                return this.x += e,
                this.y += e,
                this
            },
            subtract: function(e) {
                return new t(this.x - e.x,this.y - e.y)
            },
            subtractEquals: function(e) {
                return this.x -= e.x,
                this.y -= e.y,
                this
            },
            scalarSubtract: function(e) {
                return new t(this.x - e,this.y - e)
            },
            scalarSubtractEquals: function(e) {
                return this.x -= e,
                this.y -= e,
                this
            },
            multiply: function(e) {
                return new t(this.x * e,this.y * e)
            },
            multiplyEquals: function(e) {
                return this.x *= e,
                this.y *= e,
                this
            },
            divide: function(e) {
                return new t(this.x / e,this.y / e)
            },
            divideEquals: function(e) {
                return this.x /= e,
                this.y /= e,
                this
            },
            eq: function(e) {
                return this.x === e.x && this.y === e.y
            },
            lt: function(e) {
                return this.x < e.x && this.y < e.y
            },
            lte: function(e) {
                return this.x <= e.x && this.y <= e.y
            },
            gt: function(e) {
                return this.x > e.x && this.y > e.y
            },
            gte: function(e) {
                return this.x >= e.x && this.y >= e.y
            },
            lerp: function(e, n) {
                return new t(this.x + (e.x - this.x) * n,this.y + (e.y - this.y) * n)
            },
            distanceFrom: function(e) {
                var t = this.x - e.x
                  , n = this.y - e.y;
                return Math.sqrt(t * t + n * n)
            },
            midPointFrom: function(e) {
                return new t(this.x + (e.x - this.x) / 2,this.y + (e.y - this.y) / 2)
            },
            min: function(e) {
                return new t(Math.min(this.x, e.x),Math.min(this.y, e.y))
            },
            max: function(e) {
                return new t(Math.max(this.x, e.x),Math.max(this.y, e.y))
            },
            toString: function() {
                return this.x + "," + this.y
            },
            setXY: function(e, t) {
                this.x = e,
                this.y = t
            },
            setFromPoint: function(e) {
                this.x = e.x,
                this.y = e.y
            },
            swap: function(e) {
                var t = this.x
                  , n = this.y;
                this.x = e.x,
                this.y = e.y,
                e.x = t,
                e.y = n
            }
        })
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        function t(e) {
            this.status = e,
            this.points = []
        }
        var n = e.fabric || (e.fabric = {});
        n.Intersection ? n.warn("fabric.Intersection is already defined") : (n.Intersection = t,
        n.Intersection.prototype = {
            appendPoint: function(e) {
                this.points.push(e)
            },
            appendPoints: function(e) {
                this.points = this.points.concat(e)
            }
        },
        n.Intersection.intersectLineLine = function(e, i, o, r) {
            var a, s = (r.x - o.x) * (e.y - o.y) - (r.y - o.y) * (e.x - o.x), l = (i.x - e.x) * (e.y - o.y) - (i.y - e.y) * (e.x - o.x), c = (r.y - o.y) * (i.x - e.x) - (r.x - o.x) * (i.y - e.y);
            if (0 !== c) {
                var u = s / c
                  , d = l / c;
                0 <= u && u <= 1 && 0 <= d && d <= 1 ? (a = new t("Intersection")).points.push(new n.Point(e.x + u * (i.x - e.x),e.y + u * (i.y - e.y))) : a = new t
            } else
                a = new t(0 === s || 0 === l ? "Coincident" : "Parallel");
            return a
        }
        ,
        n.Intersection.intersectLinePolygon = function(e, n, i) {
            for (var o = new t, r = i.length, a = 0; a < r; a++) {
                var s = i[a]
                  , l = i[(a + 1) % r]
                  , c = t.intersectLineLine(e, n, s, l);
                o.appendPoints(c.points)
            }
            return o.points.length > 0 && (o.status = "Intersection"),
            o
        }
        ,
        n.Intersection.intersectPolygonPolygon = function(e, n) {
            for (var i = new t, o = e.length, r = 0; r < o; r++) {
                var a = e[r]
                  , s = e[(r + 1) % o]
                  , l = t.intersectLinePolygon(a, s, n);
                i.appendPoints(l.points)
            }
            return i.points.length > 0 && (i.status = "Intersection"),
            i
        }
        ,
        n.Intersection.intersectPolygonRectangle = function(e, i, o) {
            var r = i.min(o)
              , a = i.max(o)
              , s = new n.Point(a.x,r.y)
              , l = new n.Point(r.x,a.y)
              , c = t.intersectLinePolygon(r, s, e)
              , u = t.intersectLinePolygon(s, a, e)
              , d = t.intersectLinePolygon(a, l, e)
              , h = t.intersectLinePolygon(l, r, e)
              , p = new t;
            return p.appendPoints(c.points),
            p.appendPoints(u.points),
            p.appendPoints(d.points),
            p.appendPoints(h.points),
            p.points.length > 0 && (p.status = "Intersection"),
            p
        }
        ,
        n.Intersection.intersectLineRectangle = function(e, i, o, r) {
            var a = o.min(r)
              , s = o.max(r)
              , l = new n.Point(s.x,a.y)
              , c = new n.Point(a.x,s.y)
              , u = t.intersectLineLine(a, l, e, i)
              , d = t.intersectLineLine(l, s, e, i)
              , h = t.intersectLineLine(s, c, e, i)
              , p = t.intersectLineLine(c, a, e, i)
              , f = new t;
            return f.appendPoints(u.points),
            f.appendPoints(d.points),
            f.appendPoints(h.points),
            f.appendPoints(p.points),
            f.points.length > 0 && (f.status = "Intersection"),
            f
        }
        )
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        function t(e) {
            e ? this._tryParsingColor(e) : this.setSource([0, 0, 0, 1])
        }
        function n(e, t, n) {
            return n < 0 && (n += 1),
            n > 1 && (n -= 1),
            n < 1 / 6 ? e + 6 * (t - e) * n : n < .5 ? t : n < 2 / 3 ? e + (t - e) * (2 / 3 - n) * 6 : e
        }
        var i = e.fabric || (e.fabric = {});
        i.Color ? i.warn("fabric.Color is already defined.") : (i.Color = t,
        i.Color.prototype = {
            _tryParsingColor: function(e) {
                var n;
                e in t.colorNameMap && (e = t.colorNameMap[e]),
                (n = t.sourceFromHex(e)) || (n = t.sourceFromRgb(e)),
                n || (n = t.sourceFromHsl(e)),
                n && this.setSource(n)
            },
            _rgbToHsl: function(e, t, n) {
                e /= 255,
                t /= 255,
                n /= 255;
                var o, r, a, s = i.util.array.max([e, t, n]), l = i.util.array.min([e, t, n]);
                if (a = (s + l) / 2,
                s === l)
                    o = r = 0;
                else {
                    var c = s - l;
                    switch (r = a > .5 ? c / (2 - s - l) : c / (s + l),
                    s) {
                    case e:
                        o = (t - n) / c + (t < n ? 6 : 0);
                        break;
                    case t:
                        o = (n - e) / c + 2;
                        break;
                    case n:
                        o = (e - t) / c + 4
                    }
                    o /= 6
                }
                return [Math.round(360 * o), Math.round(100 * r), Math.round(100 * a)]
            },
            getSource: function() {
                return this._source
            },
            setSource: function(e) {
                this._source = e
            },
            toRgb: function() {
                var e = this.getSource();
                return "rgb(" + e[0] + "," + e[1] + "," + e[2] + ")"
            },
            toRgba: function() {
                var e = this.getSource();
                return "rgba(" + e[0] + "," + e[1] + "," + e[2] + "," + e[3] + ")"
            },
            toHsl: function() {
                var e = this.getSource()
                  , t = this._rgbToHsl(e[0], e[1], e[2]);
                return "hsl(" + t[0] + "," + t[1] + "%," + t[2] + "%)"
            },
            toHsla: function() {
                var e = this.getSource()
                  , t = this._rgbToHsl(e[0], e[1], e[2]);
                return "hsla(" + t[0] + "," + t[1] + "%," + t[2] + "%," + e[3] + ")"
            },
            toHex: function() {
                var e = this.getSource()
                  , t = e[0].toString(16);
                t = 1 === t.length ? "0" + t : t;
                var n = e[1].toString(16);
                n = 1 === n.length ? "0" + n : n;
                var i = e[2].toString(16);
                return i = 1 === i.length ? "0" + i : i,
                t.toUpperCase() + n.toUpperCase() + i.toUpperCase()
            },
            getAlpha: function() {
                return this.getSource()[3]
            },
            setAlpha: function(e) {
                var t = this.getSource();
                return t[3] = e,
                this.setSource(t),
                this
            },
            toGrayscale: function() {
                var e = this.getSource()
                  , t = parseInt((.3 * e[0] + .59 * e[1] + .11 * e[2]).toFixed(0), 10)
                  , n = e[3];
                return this.setSource([t, t, t, n]),
                this
            },
            toBlackWhite: function(e) {
                var t = this.getSource()
                  , n = (.3 * t[0] + .59 * t[1] + .11 * t[2]).toFixed(0)
                  , i = t[3];
                return e = e || 127,
                n = Number(n) < Number(e) ? 0 : 255,
                this.setSource([n, n, n, i]),
                this
            },
            overlayWith: function(e) {
                e instanceof t || (e = new t(e));
                for (var n = [], i = this.getAlpha(), o = .5, r = this.getSource(), a = e.getSource(), s = 0; s < 3; s++)
                    n.push(Math.round(r[s] * (1 - o) + a[s] * o));
                return n[3] = i,
                this.setSource(n),
                this
            }
        },
        i.Color.reRGBa = /^rgba?\(\s*(\d{1,3}\%?)\s*,\s*(\d{1,3}\%?)\s*,\s*(\d{1,3}\%?)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/,
        i.Color.reHSLa = /^hsla?\(\s*(\d{1,3})\s*,\s*(\d{1,3}\%)\s*,\s*(\d{1,3}\%)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/,
        i.Color.reHex = /^#?([0-9a-f]{6}|[0-9a-f]{3})$/i,
        i.Color.colorNameMap = {
            aqua: "#00FFFF",
            black: "#000000",
            blue: "#0000FF",
            fuchsia: "#FF00FF",
            gray: "#808080",
            green: "#008000",
            lime: "#00FF00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            orange: "#FFA500",
            purple: "#800080",
            red: "#FF0000",
            silver: "#C0C0C0",
            teal: "#008080",
            white: "#FFFFFF",
            yellow: "#FFFF00"
        },
        i.Color.fromRgb = function(e) {
            return t.fromSource(t.sourceFromRgb(e))
        }
        ,
        i.Color.sourceFromRgb = function(e) {
            var n = e.match(t.reRGBa);
            if (n) {
                var i = parseInt(n[1], 10) / (/%$/.test(n[1]) ? 100 : 1) * (/%$/.test(n[1]) ? 255 : 1)
                  , o = parseInt(n[2], 10) / (/%$/.test(n[2]) ? 100 : 1) * (/%$/.test(n[2]) ? 255 : 1)
                  , r = parseInt(n[3], 10) / (/%$/.test(n[3]) ? 100 : 1) * (/%$/.test(n[3]) ? 255 : 1);
                return [parseInt(i, 10), parseInt(o, 10), parseInt(r, 10), n[4] ? parseFloat(n[4]) : 1]
            }
        }
        ,
        i.Color.fromRgba = t.fromRgb,
        i.Color.fromHsl = function(e) {
            return t.fromSource(t.sourceFromHsl(e))
        }
        ,
        i.Color.sourceFromHsl = function(e) {
            var i = e.match(t.reHSLa);
            if (i) {
                var o, r, a, s = (parseFloat(i[1]) % 360 + 360) % 360 / 360, l = parseFloat(i[2]) / (/%$/.test(i[2]) ? 100 : 1), c = parseFloat(i[3]) / (/%$/.test(i[3]) ? 100 : 1);
                if (0 === l)
                    o = r = a = c;
                else {
                    var u = c <= .5 ? c * (l + 1) : c + l - c * l
                      , d = 2 * c - u;
                    o = n(d, u, s + 1 / 3),
                    r = n(d, u, s),
                    a = n(d, u, s - 1 / 3)
                }
                return [Math.round(255 * o), Math.round(255 * r), Math.round(255 * a), i[4] ? parseFloat(i[4]) : 1]
            }
        }
        ,
        i.Color.fromHsla = t.fromHsl,
        i.Color.fromHex = function(e) {
            return t.fromSource(t.sourceFromHex(e))
        }
        ,
        i.Color.sourceFromHex = function(e) {
            if (e.match(t.reHex)) {
                var n = e.slice(e.indexOf("#") + 1)
                  , i = 3 === n.length
                  , o = i ? n.charAt(0) + n.charAt(0) : n.substring(0, 2)
                  , r = i ? n.charAt(1) + n.charAt(1) : n.substring(2, 4)
                  , a = i ? n.charAt(2) + n.charAt(2) : n.substring(4, 6);
                return [parseInt(o, 16), parseInt(r, 16), parseInt(a, 16), 1]
            }
        }
        ,
        i.Color.fromSource = function(e) {
            var n = new t;
            return n.setSource(e),
            n
        }
        )
    }(void 0 !== exports ? exports : this),
    function() {
        "use strict";
        if (fabric.StaticCanvas)
            fabric.warn("fabric.StaticCanvas is already defined.");
        else {
            var e = fabric.util.object.extend
              , t = fabric.util.getElementOffset
              , n = fabric.util.removeFromArray
              , i = fabric.util.removeListener
              , o = new Error("Could not initialize `canvas` element");
            fabric.StaticCanvas = fabric.util.createClass({
                initialize: function(e, t) {
                    t || (t = {}),
                    this._initStatic(e, t),
                    fabric.StaticCanvas.activeInstance = this
                },
                backgroundColor: "",
                backgroundImage: "",
                backgroundImageOpacity: 1,
                backgroundImageStretch: !0,
                overlayImage: "",
                overlayImageLeft: 0,
                overlayImageTop: 0,
                includeDefaultValues: !0,
                stateful: !0,
                renderOnAddRemove: !0,
                clipTo: null,
                controlsAboveOverlay: !1,
                allowTouchScrolling: !1,
                onBeforeScaleRotate: function() {},
                _initStatic: function(e, t) {
                    this._objects = [],
                    this._createLowerCanvas(e),
                    this._initOptions(t),
                    t.overlayImage && this.setOverlayImage(t.overlayImage, this.renderAll.bind(this)),
                    t.backgroundImage && this.setBackgroundImage(t.backgroundImage, this.renderAll.bind(this)),
                    t.backgroundColor && this.setBackgroundColor(t.backgroundColor, this.renderAll.bind(this)),
                    this.calcOffset()
                },
                calcOffset: function() {
                    return this._offset = t(this.lowerCanvasEl),
                    this
                },
                setOverlayImage: function(e, t, n) {
                    return fabric.util.loadImage(e, function(e) {
                        this.overlayImage = e,
                        n && "overlayImageLeft"in n && (this.overlayImageLeft = n.overlayImageLeft),
                        n && "overlayImageTop"in n && (this.overlayImageTop = n.overlayImageTop),
                        t && t()
                    }, this),
                    this
                },
                setBackgroundImage: function(e, t, n) {
                    return fabric.util.loadImage(e, function(e) {
                        this.backgroundImage = e,
                        n && "backgroundImageOpacity"in n && (this.backgroundImageOpacity = n.backgroundImageOpacity),
                        n && "backgroundImageStretch"in n && (this.backgroundImageStretch = n.backgroundImageStretch),
                        t && t()
                    }, this),
                    this
                },
                setBackgroundColor: function(e, t) {
                    if (e.source) {
                        var n = this;
                        fabric.util.loadImage(e.source, function(i) {
                            n.backgroundColor = new fabric.Pattern({
                                source: i,
                                repeat: e.repeat
                            }),
                            t && t()
                        })
                    } else
                        this.backgroundColor = e,
                        t && t();
                    return this
                },
                _createCanvasElement: function() {
                    var e = fabric.document.createElement("canvas");
                    if (e.style || (e.style = {}),
                    !e)
                        throw o;
                    return this._initCanvasElement(e),
                    e
                },
                _initCanvasElement: function(e) {
                    if (fabric.util.createCanvasElement(e),
                    "undefined" == typeof e.getContext)
                        throw o
                },
                _initOptions: function(e) {
                    for (var t in e)
                        this[t] = e[t];
                    this.width = parseInt(this.lowerCanvasEl.width, 10) || 0,
                    this.height = parseInt(this.lowerCanvasEl.height, 10) || 0,
                    this.lowerCanvasEl.style && (this.lowerCanvasEl.style.width = this.width + "px",
                    this.lowerCanvasEl.style.height = this.height + "px")
                },
                _createLowerCanvas: function(e) {
                    this.lowerCanvasEl = e,
                    this._initCanvasElement(this.lowerCanvasEl),
                    fabric.util.addClass(this.lowerCanvasEl, "lower-canvas"),
                    this.interactive && this._applyCanvasStyle(this.lowerCanvasEl),
                    this.contextContainer = this.lowerCanvasEl.getContext("2d")
                },
                getWidth: function() {
                    return this.width
                },
                getHeight: function() {
                    return this.height
                },
                setWidth: function(e) {
                    return this._setDimension("width", e)
                },
                setHeight: function(e) {
                    return this._setDimension("height", e)
                },
                setDimensions: function(e) {
                    for (var t in e)
                        this._setDimension(t, e[t]);
                    return this
                },
                _setDimension: function(e, t) {
                    return this.lowerCanvasEl[e] = t,
                    this.lowerCanvasEl.style[e] = t + "px",
                    this.upperCanvasEl && (this.upperCanvasEl[e] = t,
                    this.upperCanvasEl.style[e] = t + "px"),
                    this.cacheCanvasEl && (this.cacheCanvasEl[e] = t),
                    this.wrapperEl && (this.wrapperEl.style[e] = t + "px"),
                    this[e] = t,
                    this.calcOffset(),
                    this.renderAll(),
                    this
                },
                getElement: function() {
                    return this.lowerCanvasEl
                },
                getActiveObject: function() {
                    return null
                },
                getActiveGroup: function() {
                    return null
                },
                _draw: function(e, t) {
                    if (t)
                        if (this.controlsAboveOverlay) {
                            var n = t.hasBorders
                              , i = t.hasControls;
                            t.hasBorders = t.hasControls = !1,
                            t.render(e),
                            t.hasBorders = n,
                            t.hasControls = i
                        } else
                            t.render(e)
                },
                _onObjectAdded: function(e) {
                    this.stateful && e.setupState(),
                    e.setCoords(),
                    e.canvas = this,
                    this.fire("object:added", {
                        target: e
                    }),
                    e.fire("added")
                },
                _onObjectRemoved: function(e) {
                    this.fire("object:removed", {
                        target: e
                    }),
                    e.fire("removed")
                },
                getObjects: function() {
                    return this._objects
                },
                clearContext: function(e) {
                    return e.clearRect(0, 0, Math.ceil(this.width / d20.engine.canvasZoom), Math.ceil(this.height / d20.engine.canvasZoom)),
                    this
                },
                getContext: function() {
                    return this.contextContainer
                },
                clear: function() {
                    return this._objects.length = 0,
                    this.discardActiveGroup && this.discardActiveGroup(),
                    this.discardActiveObject && this.discardActiveObject(),
                    this.clearContext(this.contextContainer),
                    this.contextTop && this.clearContext(this.contextTop),
                    this.fire("canvas:cleared"),
                    this.renderAll(),
                    this
                },
                getInvalidatedRectangles: function() {
                    const e = [];
                    for (const t of this.animations) {
                        const n = d20.math.radians(t.angle || 0);
                        if (t.group ? e.push(new d20.math.Rectangle(t.originalLeft,t.originalTop,t.width,t.height,n)) : e.push(new d20.math.Rectangle(t.left,t.top,t.width,t.height,n)),
                        t._bar_data)
                            for (let n = 0; n < t._bar_data.to_render.length; ++n) {
                                const i = d20.math.sub(t._bar_data.position, [0, (t._bar_data.height + t._bar_data.vertical_padding) * n]);
                                e.push(new d20.math.Rectangle(...i,t._bar_data.width,t._bar_data.height,0))
                            }
                        t._nameplate_data && t._nameplate_data.position && e.push(new d20.math.Rectangle(...t._nameplate_data.position,...t._nameplate_data.size,0))
                    }
                    return e
                },
                _layerIteratorGenerator: function*(e) {
                    yield[this.map, "map"],
                    window.is_gm && "walls" === window.currentEditingLayer && (yield[this.walls, "walls"]);
                    const t = e && e.grid_before_afow
                      , n = !d20.Campaign.activePage().get("adv_fow_enabled") || e && e.disable_afow
                      , i = !d20.Campaign.activePage().get("showgrid") || e && e.disable_grid;
                    t && !i && (yield[null, "grid"]),
                    !n && window.largefeats && (yield[null, "afow"]),
                    t || i || (yield[null, "grid"]),
                    yield[this.objects, "objects"],
                    window.is_gm && (yield[this.gmlayer, "gmlayer"])
                },
                _renderAll: function(e) {
                    const t = e && e.context || this.contextContainer
                      , n = this.getActiveGroup()
                      , i = [d20.engine.canvasWidth / d20.engine.canvasZoom, d20.engine.canvasHeight / d20.engine.canvasZoom]
                      , o = new d20.math.Rectangle(...d20.math.add(d20.engine.currentCanvasOffset, d20.math.div(i, 2)),...i,0);
                    n && !window.is_gm && (n.hideResizers = !0),
                    this.clipTo ? fabric.util.clipContext(this, t) : t.save();
                    const r = {
                        map: [],
                        walls: [],
                        objects: [],
                        gmlayer: []
                    };
                    r[Symbol.iterator] = this._layerIteratorGenerator.bind(r, e);
                    const a = e && e.tokens_to_render || this._objects;
                    for (let e of a)
                        if (e.model) {
                            const t = e.model.get("layer");
                            if (!r[t])
                                continue;
                            r[t].push(e)
                        } else
                            r[window.currentEditingLayer].push(e);
                    for (const [i,a] of r) {
                        switch (a) {
                        case "grid":
                            d20.canvas_overlay.drawGrid(t);
                            continue;
                        case "afow":
                            d20.canvas_overlay.drawAFoW(d20.engine.advfowctx, d20.engine.work_canvases.floater.context);
                            continue;
                        case "gmlayer":
                            t.globalAlpha = d20.engine.gm_layer_opacity;
                            break;
                        case "objects":
                            if ("map" === window.currentEditingLayer || "walls" === window.currentEditingLayer) {
                                t.globalAlpha = .45;
                                break
                            }
                        default:
                            t.globalAlpha = 1
                        }
                        _.chain(i).filter(i=>{
                            let r;
                            return n && i && n.contains(i) ? (i.renderingInGroup = n,
                            i.hasControls = !1) : (i.renderingInGroup = null,
                            i.hasControls = !0,
                            "text" !== i.type && window.is_gm ? i.hideResizers = !1 : i.hideResizers = !0),
                            e && e.invalid_rects ? (r = i.intersects([o]) && (i.needsToBeDrawn || i.intersects(e.invalid_rects)),
                            !e.skip_prerender && i.renderPre && i.renderPre(t)) : (r = i.needsRender(o),
                            (!e || !e.skip_prerender) && r && i.renderPre && i.renderPre(t, {
                                should_update: !0
                            })),
                            r
                        }
                        ).each(n=>{
                            const i = "image" === n.type.toLowerCase() && n.model.controlledByPlayer(window.currentPlayer.id)
                              , o = n._model && n._model.get("light_hassight")
                              , r = e && e.owned_with_sight_auras_only;
                            r && (!r || i && o) || this._draw(t, n),
                            n.renderingInGroup = null
                        }
                        )
                    }
                    return t.restore(),
                    this
                },
                renderSelectionBox: function(e) {
                    const t = this.getActiveGroup();
                    t && t.setCoords(),
                    this.selection && this._groupSelector && this._drawSelection(),
                    this.controlsAboveOverlay && this.interactive && this.drawControls(e)
                },
                _drawBackroundImage: function(e) {
                    e.save(),
                    e.globalAlpha = this.backgroundImageOpacity,
                    this.backgroundImageStretch ? e.drawImage(this.backgroundImage, 0, 0, this.width, this.height) : e.drawImage(this.backgroundImage, 0, 0),
                    e.restore()
                },
                getCenter: function() {
                    return {
                        top: this.getHeight() / 2,
                        left: this.getWidth() / 2
                    }
                },
                centerObjectH: function(e) {
                    return e.set("left", this.getCenter().left),
                    this.renderAll(),
                    this
                },
                centerObjectV: function(e) {
                    return e.set("top", this.getCenter().top),
                    this.renderAll(),
                    this
                },
                centerObject: function(e) {
                    return this.centerObjectH(e).centerObjectV(e)
                },
                toDatalessJSON: function(e) {
                    return this.toDatalessObject(e)
                },
                toObject: function(e) {
                    return this._toObjectMethod("toObject", e)
                },
                toDatalessObject: function(e) {
                    return this._toObjectMethod("toDatalessObject", e)
                },
                _toObjectMethod: function(e, t) {
                    var n = this.getActiveGroup();
                    n && this.discardActiveGroup();
                    var i = {
                        objects: this.getObjects().map(function(n) {
                            var i;
                            this.includeDefaultValues || (i = n.includeDefaultValues,
                            n.includeDefaultValues = !1);
                            var o = n[e](t);
                            return this.includeDefaultValues || (n.includeDefaultValues = i),
                            o
                        }, this),
                        background: this.backgroundColor && this.backgroundColor.toObject ? this.backgroundColor.toObject() : this.backgroundColor
                    };
                    return this.backgroundImage && (i.backgroundImage = this.backgroundImage.src,
                    i.backgroundImageOpacity = this.backgroundImageOpacity,
                    i.backgroundImageStretch = this.backgroundImageStretch),
                    this.overlayImage && (i.overlayImage = this.overlayImage.src,
                    i.overlayImageLeft = this.overlayImageLeft,
                    i.overlayImageTop = this.overlayImageTop),
                    fabric.util.populateWithProperties(this, i, t),
                    n && (this.setActiveGroup(new fabric.Group(n.getObjects())),
                    n.forEachObject(function(e) {
                        e.set("active", !0)
                    })),
                    i
                },
                toSVG: function(e) {
                    e || (e = {});
                    var t = [];
                    e.suppressPreamble || t.push('<?xml version="1.0" encoding="', e.encoding || "UTF-8", '" standalone="no" ?>', '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" ', '"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n'),
                    t.push("<svg ", 'xmlns="http://www.w3.org/2000/svg" ', 'xmlns:xlink="http://www.w3.org/1999/xlink" ', 'version="1.1" ', 'width="', e.viewBox ? e.viewBox.width : this.width, '" ', 'height="', e.viewBox ? e.viewBox.height : this.height, '" ', this.backgroundColor && !this.backgroundColor.source ? 'style="background-color: ' + this.backgroundColor + '" ' : null, e.viewBox ? 'viewBox="' + e.viewBox.x + " " + e.viewBox.y + " " + e.viewBox.width + " " + e.viewBox.height + '" ' : null, 'xml:space="preserve">', "<desc>Created with Fabric.js ", fabric.version, "</desc>", "<defs>", fabric.createSVGFontFacesMarkup(this.getObjects()), fabric.createSVGRefElementsMarkup(this), "</defs>"),
                    this.backgroundColor && this.backgroundColor.source && t.push('<rect x="0" y="0" ', 'width="', "repeat-y" === this.backgroundColor.repeat || "no-repeat" === this.backgroundColor.repeat ? this.backgroundColor.source.width : this.width, '" height="', "repeat-x" === this.backgroundColor.repeat || "no-repeat" === this.backgroundColor.repeat ? this.backgroundColor.source.height : this.height, '" fill="url(#backgroundColorPattern)"', "></rect>"),
                    this.backgroundImage && t.push('<image x="0" y="0" ', 'width="', this.backgroundImageStretch ? this.width : this.backgroundImage.width, '" height="', this.backgroundImageStretch ? this.height : this.backgroundImage.height, '" preserveAspectRatio="', this.backgroundImageStretch ? "none" : "defer", '" xlink:href="', this.backgroundImage.src, '" style="opacity:', this.backgroundImageOpacity, '"></image>'),
                    this.overlayImage && t.push('<image x="', this.overlayImageLeft, '" y="', this.overlayImageTop, '" width="', this.overlayImage.width, '" height="', this.overlayImage.height, '" xlink:href="', this.overlayImage.src, '"></image>');
                    var n = this.getActiveGroup();
                    n && this.discardActiveGroup();
                    for (var i = 0, o = this.getObjects(), r = o.length; i < r; i++)
                        t.push(o[i].toSVG());
                    return n && (this.setActiveGroup(new fabric.Group(n.getObjects())),
                    n.forEachObject(function(e) {
                        e.set("active", !0)
                    })),
                    t.push("</svg>"),
                    t.join("")
                },
                remove: function(e) {
                    return this.getActiveObject() === e && (this.fire("before:selection:cleared", {
                        target: e
                    }),
                    this.discardActiveObject(),
                    this.fire("selection:cleared")),
                    fabric.Collection.remove.call(this, e)
                },
                sendToBack: function(e) {
                    return n(this._objects, e),
                    this._objects.unshift(e),
                    this.renderAll && this.renderAll()
                },
                bringToFront: function(e) {
                    return n(this._objects, e),
                    this._objects.push(e),
                    this.renderAll && this.renderAll()
                },
                sendBackwards: function(e, t) {
                    var i = this._objects.indexOf(e);
                    if (0 !== i) {
                        var o;
                        if (t) {
                            o = i;
                            for (var r = i - 1; r >= 0; --r) {
                                if (e.intersectsWithObject(this._objects[r]) || e.isContainedWithinObject(this._objects[r]) || this._objects[r].isContainedWithinObject(e)) {
                                    o = r;
                                    break
                                }
                            }
                        } else
                            o = i - 1;
                        n(this._objects, e),
                        this._objects.splice(o, 0, e),
                        this.renderAll && this.renderAll()
                    }
                    return this
                },
                bringForward: function(e, t) {
                    var i = this._objects.indexOf(e);
                    if (i !== this._objects.length - 1) {
                        var o;
                        if (t) {
                            o = i;
                            for (var r = i + 1; r < this._objects.length; ++r) {
                                if (e.intersectsWithObject(this._objects[r]) || e.isContainedWithinObject(this._objects[r]) || this._objects[r].isContainedWithinObject(e)) {
                                    o = r;
                                    break
                                }
                            }
                        } else
                            o = i + 1;
                        n(this._objects, e),
                        this._objects.splice(o, 0, e),
                        this.renderAll && this.renderAll()
                    }
                    return this
                },
                moveTo: function(e, t) {
                    return n(this._objects, e),
                    this._objects.splice(t, 0, e),
                    this.renderAll && this.renderAll()
                },
                dispose: function() {
                    return this.clear(),
                    this.interactive ? (fabric.isTouchSupported ? (i(this.upperCanvasEl, "touchstart", this._onMouseDown),
                    i(this.upperCanvasEl, "touchmove", this._onMouseMove),
                    "undefined" != typeof Event && "remove"in Event && Event.remove(this.upperCanvasEl, "gesture", this._onGesture)) : (i(this.upperCanvasEl, "mousedown", this._onMouseDown),
                    i(this.upperCanvasEl, "mousemove", this._onMouseMove),
                    i(fabric.window, "resize", this._onResize)),
                    this) : this
                },
                toString: function() {
                    return "#<fabric.Canvas (" + this.complexity() + "): { objects: " + this.getObjects().length + " }>"
                }
            }),
            e(fabric.StaticCanvas.prototype, fabric.Observable),
            e(fabric.StaticCanvas.prototype, fabric.Collection),
            e(fabric.StaticCanvas.prototype, fabric.DataURLExporter),
            e(fabric.StaticCanvas, {
                EMPTY_JSON: '{"objects": [], "background": "white"}',
                toGrayscale: function(e) {
                    var t, n, i, o, r = e.getContext("2d"), a = r.getImageData(0, 0, e.width, e.height), s = a.data, l = a.width, c = a.height;
                    for (i = 0; i < l; i++)
                        for (o = 0; o < c; o++)
                            n = (s[t = 4 * i * c + 4 * o] + s[t + 1] + s[t + 2]) / 3,
                            s[t] = n,
                            s[t + 1] = n,
                            s[t + 2] = n;
                    r.putImageData(a, 0, 0)
                },
                supports: function(e) {
                    var t = fabric.util.createCanvasElement();
                    if (!t || !t.getContext)
                        return null;
                    var n = t.getContext("2d");
                    if (!n)
                        return null;
                    switch (e) {
                    case "getImageData":
                        return "undefined" != typeof n.getImageData;
                    case "setLineDash":
                        return "undefined" != typeof n.setLineDash;
                    case "toDataURL":
                        return "undefined" != typeof t.toDataURL;
                    case "toDataURLWithQuality":
                        try {
                            return t.toDataURL("image/jpeg", 0),
                            !0
                        } catch (i) {}
                        return !1;
                    default:
                        return null
                    }
                }
            }),
            fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject
        }
    }(),
    fabric.BaseBrush = fabric.util.createClass({
        color: "rgb(0, 0, 0)",
        width: 1,
        fill: "transparent",
        shadow: null,
        strokeLineCap: "round",
        strokeLineJoin: "round",
        setShadow: function(e) {
            return this.shadow = new fabric.Shadow(e),
            this
        },
        _setBrushStyles: function() {
            var e = this.canvas.contextTop;
            e.strokeStyle = this.color,
            e.fillStyle = this.fill,
            e.lineWidth = this.width,
            e.lineCap = this.strokeLineCap,
            e.lineJoin = this.strokeLineJoin
        },
        _setShadow: function() {
            if (this.shadow) {
                var e = this.canvas.contextTop;
                e.shadowColor = this.shadow.color,
                e.shadowBlur = this.shadow.blur,
                e.shadowOffsetX = this.shadow.offsetX,
                e.shadowOffsetY = this.shadow.offsetY
            }
        },
        _resetShadow: function() {
            var e = this.canvas.contextTop;
            e.shadowColor = "",
            e.shadowBlur = e.shadowOffsetX = e.shadowOffsetY = 0
        }
    }),
    utilMin = fabric.util.array.min,
    utilMax = fabric.util.array.max,
    fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, {
        initialize: function(e) {
            this.canvas = e,
            this._points = []
        },
        onMouseDown: function(e) {
            this._prepareForDrawing(e),
            this._captureDrawingPath(e),
            this._render()
        },
        onMouseMove: function(e) {
            this._captureDrawingPath(e),
            this.canvas.clearContext(this.canvas.contextTop),
            this._render()
        },
        onMouseUp: function() {
            this._finalizeAndAddPath()
        },
        _prepareForDrawing: function(e) {
            var t = new fabric.Point(e.x - d20.engine.currentCanvasOffset[0],e.y - d20.engine.currentCanvasOffset[1]);
            this._reset(),
            this._addPoint(t),
            this.canvas.contextTop.moveTo(t.x, t.y)
        },
        _addPoint: function(e) {
            this._points.push(e)
        },
        _reset: function() {
            this._points.length = 0,
            this._setBrushStyles(),
            this._setShadow()
        },
        _captureDrawingPath: function(e) {
            var t = new fabric.Point(e.x - d20.engine.currentCanvasOffset[0],e.y - d20.engine.currentCanvasOffset[1]);
            this._addPoint(t)
        },
        _render: function() {
            var e = this.canvas.contextTop;
            e.beginPath();
            var t = this._points[0]
              , n = this._points[1];
            2 === this._points.length && t.x === n.x && t.y === n.y && (t.x -= .5,
            n.x += .5),
            e.moveTo(t.x, t.y);
            for (var i = 1, o = this._points.length; i < o; i++) {
                var r = t.midPointFrom(n);
                e.quadraticCurveTo(t.x, t.y, r.x, r.y),
                t = this._points[i],
                n = this._points[i + 1]
            }
            e.lineTo(t.x, t.y),
            "transparent" !== this.fill && e.fill(),
            e.stroke()
        },
        _getSVGPathData: function() {
            return this.box = this.getPathBoundingBox(this._points),
            this.convertPointsToSVGPath(this._points, this.box.minx, this.box.maxx, this.box.miny, this.box.maxy)
        },
        getPathBoundingBox: function(e) {
            for (var t = [], n = [], i = e[0], o = e[1], r = i, a = 1, s = e.length; a < s; a++) {
                var l = i.midPointFrom(o);
                t.push(r.x),
                t.push(l.x),
                n.push(r.y),
                n.push(l.y),
                i = e[a],
                o = e[a + 1],
                r = l
            }
            return t.push(i.x),
            n.push(i.y),
            {
                minx: utilMin(t),
                miny: utilMin(n),
                maxx: utilMax(t),
                maxy: utilMax(n)
            }
        },
        convertPointsToSVGPath: function(e, t, n, i) {
            var o = []
              , r = new fabric.Point(e[0].x - t,e[0].y - i)
              , a = new fabric.Point(e[1].x - t,e[1].y - i);
            o.push("M ", e[0].x - t, " ", e[0].y - i, " ");
            for (var s = 1, l = e.length; s < l; s++) {
                var c = r.midPointFrom(a);
                o.push("Q ", r.x, " ", r.y, " ", c.x, " ", c.y, " "),
                r = new fabric.Point(e[s].x - t,e[s].y - i),
                s + 1 < e.length && (a = new fabric.Point(e[s + 1].x - t,e[s + 1].y - i))
            }
            return o.push("L ", r.x, " ", r.y, " "),
            o
        },
        createPath: function(e) {
            var t = new fabric.Path(e);
            return t.fill = this.fill,
            t.stroke = this.color,
            t.strokeWidth = this.width,
            t.strokeLineCap = this.strokeLineCap,
            t.strokeLineJoin = this.strokeLineJoin,
            this.shadow && (this.shadow.affectStroke = !0,
            t.setShadow(this.shadow)),
            t
        },
        _finalizeAndAddPath: function() {
            this.canvas.contextTop.closePath();
            var e = this._getSVGPathData().join("");
            if ("M 0 0 Q 0 0 0 0 L 0 0" !== e) {
                var t = this.box.minx + (this.box.maxx - this.box.minx) / 2 + d20.engine.currentCanvasOffset[0]
                  , n = this.box.miny + (this.box.maxy - this.box.miny) / 2 + d20.engine.currentCanvasOffset[1];
                this.canvas.contextTop.arc(t, n, 3, 0, 2 * Math.PI, !1);
                var i = this.createPath(e);
                i.set({
                    left: t,
                    top: n
                }),
                this.canvas.add(i),
                i.setCoords(),
                this.canvas.clearContext(this.canvas.contextTop),
                this._resetShadow(),
                this.canvas.renderAll(),
                this.canvas.fire("path:created", {
                    path: i
                })
            } else
                this.canvas.renderAll()
        }
    }),
    fabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, {
        width: 10,
        initialize: function(e) {
            this.canvas = e,
            this.points = []
        },
        drawDot: function(e) {
            var t = this.addPoint(e)
              , n = this.canvas.contextTop;
            n.fillStyle = t.fill,
            n.beginPath(),
            n.arc(t.x, t.y, t.radius, 0, 2 * Math.PI, !1),
            n.closePath(),
            n.fill()
        },
        onMouseDown: function(e) {
            this.points.length = 0,
            this.canvas.clearContext(this.canvas.contextTop),
            this._setShadow(),
            this.drawDot(e)
        },
        onMouseMove: function(e) {
            this.drawDot(e)
        },
        onMouseUp: function() {
            var e = this.canvas.renderOnAddRemove;
            this.canvas.renderOnAddRemove = !1;
            for (var t = [], n = 0, i = this.points.length; n < i; n++) {
                var o = this.points[n]
                  , r = new fabric.Circle({
                    radius: o.radius,
                    left: o.x,
                    top: o.y,
                    fill: o.fill
                });
                this.shadow && r.setShadow(this.shadow),
                t.push(r)
            }
            var a = new fabric.Group(t);
            this.canvas.add(a),
            this.canvas.fire("path:created", {
                path: a
            }),
            this.canvas.clearContext(this.canvas.contextTop),
            this._resetShadow(),
            this.canvas.renderOnAddRemove = e,
            this.canvas.renderAll()
        },
        addPoint: function(e) {
            var t = new fabric.Point(e.x,e.y)
              , n = fabric.util.getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2
              , i = new fabric.Color(this.color).setAlpha(fabric.util.getRandomInt(0, 100) / 100).toRgba();
            return t.radius = n,
            t.fill = i,
            this.points.push(t),
            t
        }
    }),
    fabric.SprayBrush = fabric.util.createClass(fabric.BaseBrush, {
        width: 10,
        density: 20,
        dotWidth: 1,
        dotWidthVariance: 1,
        randomOpacity: !1,
        initialize: function(e) {
            this.canvas = e,
            this.sprayChunks = []
        },
        onMouseDown: function(e) {
            this.sprayChunks.length = 0,
            this.canvas.clearContext(this.canvas.contextTop),
            this._setShadow(),
            this.addSprayChunk(e),
            this.render()
        },
        onMouseMove: function(e) {
            this.addSprayChunk(e),
            this.render()
        },
        onMouseUp: function() {
            var e = this.canvas.renderOnAddRemove;
            this.canvas.renderOnAddRemove = !1;
            for (var t = [], n = 0, i = this.sprayChunks.length; n < i; n++)
                for (var o = this.sprayChunks[n], r = 0, a = o.length; r < a; r++) {
                    var s = new fabric.Rect({
                        width: o[r].width,
                        height: o[r].width,
                        left: o[r].x + 1,
                        top: o[r].y + 1,
                        fill: this.color
                    });
                    this.shadow && s.setShadow(this.shadow),
                    t.push(s)
                }
            var l = new fabric.Group(t);
            this.canvas.add(l),
            this.canvas.fire("path:created", {
                path: l
            }),
            this.canvas.clearContext(this.canvas.contextTop),
            this._resetShadow(),
            this.canvas.renderOnAddRemove = e,
            this.canvas.renderAll()
        },
        render: function() {
            var e = this.canvas.contextTop;
            e.fillStyle = this.color,
            e.save();
            for (var t = 0, n = this.sprayChunkPoints.length; t < n; t++) {
                var i = this.sprayChunkPoints[t];
                "undefined" != typeof i.opacity && (e.globalAlpha = i.opacity),
                e.fillRect(i.x, i.y, i.width, i.width)
            }
            e.restore()
        },
        addSprayChunk: function(e) {
            this.sprayChunkPoints = [];
            for (var t = this.width / 2, n = 0; n < this.density; n++) {
                var i = {
                    x: fabric.util.getRandomInt(e.x - t, e.x + t),
                    y: fabric.util.getRandomInt(e.y - t, e.y + t),
                    width: this.dotWidthVariance ? fabric.util.getRandomInt(Math.max(1, this.dotWidth - this.dotWidthVariance), this.dotWidth + this.dotWidthVariance) : this.dotWidth
                };
                this.randomOpacity && (i.opacity = fabric.util.getRandomInt(0, 100) / 100),
                this.sprayChunkPoints.push(i)
            }
            this.sprayChunks.push(this.sprayChunkPoints)
        }
    }),
    fabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, {
        getPatternSrc: function() {
            var e = 20
              , t = 5
              , n = fabric.document.createElement("canvas")
              , i = n.getContext("2d");
            return n.width = n.height = e + t,
            i.fillStyle = this.color,
            i.beginPath(),
            i.arc(e / 2, e / 2, e / 2, 0, 2 * Math.PI, !1),
            i.closePath(),
            i.fill(),
            n
        },
        getPatternSrcFunction: function() {
            return String(this.getPatternSrc).replace("this.color", '"' + this.color + '"')
        },
        getPattern: function() {
            return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), "repeat")
        },
        setBrushStyles: function() {
            this.callSuper("setBrushStyles"),
            this.canvas.contextTop.strokeStyle = this.getPattern()
        },
        createPath: function(e) {
            var t = this.callSuper("createPath", e);
            return t.stroke = new fabric.Pattern({
                source: this.source || this.getPatternSrcFunction()
            }),
            t
        }
    }),
    function() {
        var e = fabric.util.getPointer
          , t = fabric.util.degreesToRadians
          , n = fabric.util.radiansToDegrees
          , i = Math.atan2
          , o = Math.abs
          , r = Math.min
          , a = Math.max
          , s = .5;
        for (var l in fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, {
            initialize: function(e, t, n) {
                n || (n = {}),
                this._initStatic(e, n),
                this._initInteractive(t),
                this._createCacheCanvas(),
                fabric.Canvas.activeInstance = this
            },
            animations: [],
            uniScaleTransform: !1,
            centerTransform: !1,
            interactive: !0,
            selection: !0,
            selectionColor: "rgba(100, 100, 255, 0.3)",
            selectionDashArray: [],
            selectionBorderColor: "rgba(255, 255, 255, 0.3)",
            selectionLineWidth: 1,
            freeDrawingColor: "rgb(0, 0, 0)",
            freeDrawingFill: "transparent",
            freeDrawingLineWidth: 1,
            hoverCursor: "move",
            moveCursor: "move",
            defaultCursor: "default",
            freeDrawingCursor: "crosshair",
            rotationCursor: "crosshair",
            containerClass: "canvas-container",
            perPixelTargetFind: !1,
            targetFindTolerance: 0,
            skipTargetFind: !1,
            animationsToStills: function() {
                _.each(this.animations, e=>{
                    e.setElement(e._placeholder),
                    delete e._placeholder,
                    e._animated = !1,
                    e._is_still = !0
                }
                )
            },
            stillsToAnimations: function() {
                _.each(this.animations, e=>{
                    const t = t=>{
                        e._placeholder = e._element,
                        e._animated = !0,
                        delete e._is_still,
                        e.setElement(t),
                        e._initializeAnimationData()
                    }
                    ;
                    fabric.Image.fromURL(e._element.src.replace(/(sample|frame|)\.png/, "med.webm"), t, {
                        usecors: !0,
                        video: !0,
                        element_only: !0
                    })
                }
                )
            },
            _initInteractive: function(e) {
                this._currentTransform = null,
                this._groupSelector = null,
                this._initWrapperElement(),
                this._createUpperCanvas(e),
                this._initEvents(),
                this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this),
                this.calcOffset()
            },
            _resetCurrentTransform: function() {
                var e = this._currentTransform;
                e.target.set("scaleX", e.original.scaleX),
                e.target.set("scaleY", e.original.scaleY),
                e.target.set("left", e.original.left),
                e.target.set("top", e.original.top),
                this.centerTransform || e.target.centerTransform ? ("center" !== e.originX && ("right" === e.originX ? e.mouseXSign = -1 : e.mouseXSign = 1),
                "center" !== e.originY && ("bottom" === e.originY ? e.mouseYSign = -1 : e.mouseYSign = 1),
                e.originX = "center",
                e.originY = "center") : (e.originX = e.original.originX,
                e.originY = e.original.originY)
            },
            containsPoint: function(e, t) {
                var n = this.getPointer(e)
                  , i = this._normalizePointer(t, n);
                return t.containsPoint(i) || t._findTargetCorner(e, this._offset)
            },
            _normalizePointer: function(e, t) {
                var n = this.getActiveGroup()
                  , i = t.x
                  , o = t.y;
                return n && "group" !== e.type && n.contains(e) && (i -= n.left,
                o -= n.top),
                {
                    x: i,
                    y: o
                }
            },
            isTargetTransparent: function(e, t, n) {
                var i = this.contextCache
                  , o = e.hasBorders
                  , r = e.transparentCorners;
                e.hasBorders = e.transparentCorners = !1,
                this._draw(i, e),
                e.hasBorders = o,
                e.transparentCorners = r,
                t -= d20.engine.currentCanvasOffset[0],
                n -= d20.engine.currentCanvasOffset[1],
                this.targetFindTolerance > 0 && (t > this.targetFindTolerance ? t -= this.targetFindTolerance : t = 0,
                n > this.targetFindTolerance ? n -= this.targetFindTolerance : n = 0);
                for (var a = !0, s = i.getImageData(t, n, 2 * this.targetFindTolerance || 1, 2 * this.targetFindTolerance || 1), l = 3, c = s.data.length; l < c; l += 4) {
                    if (!1 === (a = s.data[l] <= 0))
                        break
                }
                return s = null,
                this.clearContext(i),
                a
            },
            _shouldClearSelection: function(e, t) {
                var n = this.getActiveGroup();
                return !t || t && n && !n.contains(t) && n !== t && !e.shiftKey || t && !t.selectable
            },
            _setupCurrentTransform: function(n, i, o) {
                if (i) {
                    var r, a = "drag", s = e(n, i.canvas.upperCanvasEl);
                    (r = i._findTargetCorner(n, this._offset)) && (a = "ml" === r || "mr" === r ? "scaleX" : "mt" === r || "mb" === r ? "scaleY" : "mtr" === r ? "rotate" : "scale"),
                    "rotate" != a && "scale" != a && "scaleX" != a && "scaleY" != a || o || (a = "drag");
                    var l = i.originX
                      , c = i.originY;
                    "ml" === r || "tl" === r || "bl" === r ? l = "right" : "mr" !== r && "tr" !== r && "br" !== r || (l = "left"),
                    "tl" === r || "mt" === r || "tr" === r ? c = "bottom" : "bl" !== r && "mb" !== r && "br" !== r || (c = "top"),
                    this._currentTransform = {
                        target: i,
                        action: a,
                        scaleX: i.scaleX,
                        scaleY: i.scaleY,
                        offsetX: s.x - i.left,
                        offsetY: s.y - i.top,
                        originX: l,
                        originY: c,
                        ex: s.x,
                        ey: s.y,
                        left: i.left,
                        top: i.top,
                        theta: t(i.angle),
                        width: i.width * i.scaleX,
                        mouseXSign: 1,
                        mouseYSign: 1
                    },
                    this._currentTransform.original = {
                        left: i.left,
                        top: i.top,
                        scaleX: i.scaleX,
                        scaleY: i.scaleY,
                        originX: l,
                        originY: c
                    },
                    this._resetCurrentTransform(n)
                }
            },
            _shouldHandleGroupLogic: function(e, t) {
                var n = this.getActiveObject();
                return e.shiftKey && (this.getActiveGroup() || n && n !== t) && this.selection
            },
            _handleGroupLogic: function(e, t) {
                if (t !== this.getActiveGroup() || (t = this.findTarget(e, !0)) && !t.isType("group")) {
                    var n = this.getActiveGroup();
                    if (n)
                        n.contains(t) ? (n.removeWithUpdate(t),
                        this._resetObjectTransform(n),
                        t.set("active", !1),
                        1 === n.size() && this.discardActiveGroup()) : (n.addWithUpdate(t),
                        this._resetObjectTransform(n)),
                        this.fire("selection:created", {
                            target: n,
                            e: e
                        }),
                        n.set("active", !0);
                    else {
                        if (this._activeObject && t !== this._activeObject) {
                            var i = this.getObjects()
                              , o = i.indexOf(this._activeObject) < i.indexOf(t)
                              , r = new fabric.Group(o ? [t, this._activeObject] : [this._activeObject, t]);
                            this.setActiveGroup(r),
                            this._activeObject = null,
                            n = this.getActiveGroup(),
                            this.fire("selection:created", {
                                target: n,
                                e: e
                            })
                        }
                        t.set("active", !0)
                    }
                    n && n.saveCoords()
                }
            },
            _translateObject: function(e, t) {
                var n = this._currentTransform.target;
                if (d20.engine && d20.engine.checkMovement) {
                    var i = d20.engine.checkMovement(n, [n.get("left"), n.get("top")], [e - this._currentTransform.offsetX, t - this._currentTransform.offsetY]);
                    if (0 === i)
                        return;
                    if (1 === i)
                        return void n.set("left", e - this._currentTransform.offsetX);
                    if (2 === i)
                        return void n.set("top", t - this._currentTransform.offsetY)
                }
                n.get("lockMovementX") || n.set("left", e - this._currentTransform.offsetX),
                n.get("lockMovementY") || n.set("top", t - this._currentTransform.offsetY)
            },
            _scaleObject: function(e, t, n) {
                var i = this._currentTransform
                  , r = this._offset
                  , a = i.target
                  , s = a.get("lockScalingX")
                  , l = a.get("lockScalingY");
                if (!s || !l) {
                    var c = a.translateToOriginPoint(a.getCenterPoint(), i.originX, i.originY)
                      , u = a.toLocalPoint(new fabric.Point(e - r.left,t - r.top), i.originX, i.originY);
                    "right" === i.originX ? u.x *= -1 : "center" === i.originX && (u.x *= 2 * i.mouseXSign,
                    u.x < 0 && (i.mouseXSign = -i.mouseXSign)),
                    "bottom" === i.originY ? u.y *= -1 : "center" === i.originY && (u.y *= 2 * i.mouseYSign,
                    u.y < 0 && (i.mouseYSign = -i.mouseYSign)),
                    o(u.x) > a.padding ? u.x < 0 ? u.x += a.padding : u.x -= a.padding : u.x = 0,
                    o(u.y) > a.padding ? u.y < 0 ? u.y += a.padding : u.y -= a.padding : u.y = 0;
                    var d = a.scaleX
                      , h = a.scaleY;
                    if ("equally" !== n || s || l)
                        n ? "x" !== n || a.get("lockUniScaling") ? "y" !== n || a.get("lockUniScaling") || (h = u.y / (a.height + a.strokeWidth),
                        l || a.set("scaleY", h)) : (d = u.x / (a.width + a.strokeWidth),
                        s || a.set("scaleX", d)) : (d = u.x / (a.width + a.strokeWidth),
                        h = u.y / (a.height + a.strokeWidth),
                        s || a.set("scaleX", d),
                        l || a.set("scaleY", h));
                    else {
                        var p = u.y + u.x
                          , f = (a.height + a.strokeWidth) * i.original.scaleY + (a.width + a.strokeWidth) * i.original.scaleX;
                        d = i.original.scaleX * p / f,
                        h = i.original.scaleY * p / f,
                        a.set("scaleX", d),
                        a.set("scaleY", h)
                    }
                    d < 0 && ("left" === i.originX ? i.originX = "right" : "right" === i.originX && (i.originX = "left")),
                    h < 0 && ("top" === i.originY ? i.originY = "bottom" : "bottom" === i.originY && (i.originY = "top")),
                    a.setPositionByOrigin(c, i.originX, i.originY)
                }
            },
            _rotateObject: function(e, t) {
                var o = this._currentTransform
                  , r = this._offset;
                if (!o.target.get("lockRotation")) {
                    var a = i(o.ey - o.top - r.top, o.ex - o.left - r.left)
                      , s = i(t - o.top - r.top, e - o.left - r.left)
                      , l = n(s - a + o.theta);
                    l < 0 && (l = 360 + l),
                    o.target.angle = l
                }
            },
            _setCursor: function(e) {
                d20.engine.final_canvas.style.cursor = e
            },
            _resetObjectTransform: function(e) {
                e.scaleX = 1,
                e.scaleY = 1,
                e.setAngle(0)
            },
            _drawSelection: function() {
                var e = this.contextTop
                  , t = this._groupSelector
                  , n = t.left
                  , i = t.top
                  , r = o(n)
                  , a = o(i);
                if (e.save(),
                e.translate(-d20.engine.currentCanvasOffset[0], -d20.engine.currentCanvasOffset[1]),
                e.fillStyle = this.selectionColor,
                e.fillRect(t.ex - (n > 0 ? 0 : -n), t.ey - (i > 0 ? 0 : -i), r, a),
                e.lineWidth = this.selectionLineWidth,
                e.strokeStyle = this.selectionBorderColor,
                this.selectionDashArray.length > 1) {
                    var l = t.ex + s - (n > 0 ? 0 : r)
                      , c = t.ey + s - (i > 0 ? 0 : a);
                    e.beginPath(),
                    fabric.util.drawDashedLine(e, l, c, l + r, c, this.selectionDashArray),
                    fabric.util.drawDashedLine(e, l, c + a - 1, l + r, c + a - 1, this.selectionDashArray),
                    fabric.util.drawDashedLine(e, l, c, l, c + a, this.selectionDashArray),
                    fabric.util.drawDashedLine(e, l + r - 1, c, l + r - 1, c + a, this.selectionDashArray),
                    e.closePath(),
                    e.stroke()
                } else
                    e.strokeRect(t.ex + s - (n > 0 ? 0 : r), t.ey + s - (i > 0 ? 0 : a), r, a);
                e.restore()
            },
            _findSelectedObjects: function(e) {
                for (var t, n = [], i = this._groupSelector.ex, o = this._groupSelector.ey, s = i + this._groupSelector.left, l = o + this._groupSelector.top, c = new fabric.Point(r(i, s),r(o, l)), u = new fabric.Point(a(i, s),a(o, l)), d = i === s && o === l, h = [], p = this._objects.length; p--; )
                    if ((t = this._objects[p]) && (!e.altKey || "image" != t.type || !t.model || 1 == t.model.get("isdrawing")) && (!e.ctrlKey || !("image" != t.type || t.model && 1 == t.model.get("isdrawing"))) && t.selectable)
                        if (t.isContainedWithinRect(c, u) && this.selection) {
                            if (t.set("active", !0),
                            n.push(t),
                            d)
                                break
                        } else if ((t.intersectsWithRect(c, u) || t.containsPoint(c) || t.containsPoint(u)) && this.selection && t.selectable)
                            if (t.model && t.path !== undefined && t.model && "transparent" === t.model.get("fill"))
                                h.push(t);
                            else if (t.set("active", !0),
                            n.push(t),
                            d)
                                break;
                if (h.length > 0)
                    for (p = 0; p < h.length; p++)
                        for (var f = h[p].left - Math.floor(h[p].width / 2), g = h[p].top - Math.floor(h[p].height / 2), m = !1, y = !1, v = 0; v < h[p].path.length; v++)
                            if ("L" !== h[p].path[v][0] && "M" !== h[p].path[v][0] || (y = new fabric.Point(h[p].path[v][1] + f,h[p].path[v][2] + g)),
                            y) {
                                if (m && "Intersection" === fabric.Intersection.intersectLineRectangle(y, m, c, u).status) {
                                    h[p].set("active", !0),
                                    n.push(h[p]);
                                    break
                                }
                                m = y
                            }
                1 === n.length ? this.setActiveObject(n[0], e) : n.length > 1 && (n = new fabric.Group(n.reverse()),
                this.setActiveGroup(n),
                n.saveCoords(),
                this.fire("selection:created", {
                    target: n
                }),
                this.renderAll())
            },
            findTarget: function(e, t, n) {
                if (this.skipTargetFind)
                    return;
                var i, o = this.getPointer(e);
                if (this.controlsAboveOverlay && this.lastRenderedObjectWithControlsAboveOverlay && this.lastRenderedObjectWithControlsAboveOverlay.visible && this.containsPoint(e, this.lastRenderedObjectWithControlsAboveOverlay) && this.lastRenderedObjectWithControlsAboveOverlay._findTargetCorner(e, this._offset))
                    return i = this.lastRenderedObjectWithControlsAboveOverlay;
                var r = this.getActiveGroup();
                if (r && !t && this.containsPoint(e, r))
                    return i = r;
                const a = _.sortBy(this._objects, e=>{
                    const t = e._model && e._model.controlledByPlayer && e._model.controlledByPlayer(window.currentPlayer.get("id")) && e._model.get("light_hassight");
                    return this._objects.indexOf(e) + (t ? this._objects.length : 0)
                }
                );
                for (var s = [], l = a.length; l--; )
                    if (a[l] && a[l].visible && (a[l].selectable || n && a[l].model && a[l].model.get("layer") === window.currentEditingLayer) && this.containsPoint(e, a[l])) {
                        if (!this.perPixelTargetFind && !a[l].perPixelTargetFind) {
                            i = a[l],
                            this.relatedTarget = i;
                            break
                        }
                        s[s.length] = a[l]
                    }
                for (var c = 0, u = s.length; c < u; c++) {
                    if (o = this.getPointer(e),
                    !this.isTargetTransparent(s[c], o.x, o.y)) {
                        i = s[c],
                        this.relatedTarget = i;
                        break
                    }
                }
                return i
            },
            getPointer: function(t) {
                var n = e(t, this.upperCanvasEl);
                return {
                    x: n.x - this._offset.left,
                    y: n.y - this._offset.top
                }
            },
            _createUpperCanvas: function(e) {
                this.upperCanvasEl = e,
                this.contextTop = this.upperCanvasEl.getContext("2d")
            },
            _createCacheCanvas: function() {
                this.cacheCanvasEl = this._createCanvasElement(),
                this.cacheCanvasEl.setAttribute("width", this.width),
                this.cacheCanvasEl.setAttribute("height", this.height),
                this.contextCache = this.cacheCanvasEl.getContext("2d")
            },
            _initWrapperElement: function() {
                this.wrapperEl = fabric.util.getById(this.containerClass) || fabric.util.wrapElement(this.lowerCanvasEl, "div", {
                    "class": this.containerClass
                }),
                fabric.util.setStyle(this.wrapperEl, {
                    width: this.getWidth() + "px",
                    height: this.getHeight() + "px",
                    position: "relative"
                }),
                fabric.util.makeElementUnselectable(this.wrapperEl)
            },
            _applyCanvasStyle: function(e) {
                var t = this.getWidth() || e.width
                  , n = this.getHeight() || e.height;
                fabric.util.setStyle(e, {
                    position: "absolute",
                    width: t + "px",
                    height: n + "px",
                    left: 0,
                    top: 0
                }),
                e.width = t,
                e.height = n,
                fabric.util.makeElementUnselectable(e)
            },
            _copyCanvasStyle: function(e, t) {
                t.style.cssText = e.style.cssText
            },
            getSelectionContext: function() {
                return this.contextTop
            },
            getSelectionElement: function() {
                return this.upperCanvasEl
            },
            setActiveObject: function(e, t) {
                return this._activeObject && this._activeObject.set("active", !1),
                this._activeObject = e,
                e.set("active", !0),
                this.renderAll(),
                this.fire("object:selected", {
                    target: e,
                    e: t
                }),
                e.fire("selected", {
                    e: t
                }),
                this
            },
            getActiveObject: function() {
                return this._activeObject
            },
            discardActiveObject: function() {
                return this._activeObject && this._activeObject.set("active", !1),
                this._activeObject = null,
                this
            },
            setActiveGroup: function(e) {
                return this._activeGroup = e,
                e && (e.canvas = this,
                e.set("active", !0)),
                this
            },
            getActiveGroup: function() {
                return this._activeGroup
            },
            discardActiveGroup: function() {
                var e = this.getActiveGroup();
                return e && e.destroy(),
                this.setActiveGroup(null)
            },
            deactivateAll: function() {
                for (var e = this.getObjects(), t = 0, n = e.length; t < n; t++)
                    e[t].set("active", !1);
                return this.discardActiveGroup(),
                this.discardActiveObject(),
                this
            },
            deactivateAllWithDispatch: function() {
                var e = this.getActiveGroup() || this.getActiveObject();
                return e && this.fire("before:selection:cleared", {
                    target: e
                }),
                this.deactivateAll(),
                e && this.fire("selection:cleared"),
                d20.engine.redrawScreenNextTick(),
                this
            },
            drawControls: function(e) {
                var t = this.getActiveGroup();
                if (t)
                    e.save(),
                    fabric.Group.prototype.transform.call(t, e),
                    t.drawBorders(e).drawControls(e),
                    e.restore();
                else
                    for (var n = 0, i = this._objects.length; n < i; ++n)
                        this._objects[n] && this._objects[n].active && (e.save(),
                        fabric.Object.prototype.transform.call(this._objects[n], e),
                        this._objects[n].drawBorders(e).drawControls(e),
                        e.restore(),
                        this.lastRenderedObjectWithControlsAboveOverlay = this._objects[n])
            }
        }),
        fabric.StaticCanvas)
            "prototype" !== l && (fabric.Canvas[l] = fabric.StaticCanvas[l]);
        fabric.isTouchSupported && (fabric.Canvas.prototype._setCursorFromEvent = function() {}
        ),
        fabric.Element = fabric.Canvas
    }(),
    cursorMap = ["n-resize", "ne-resize", "e-resize", "se-resize", "s-resize", "sw-resize", "w-resize", "nw-resize"],
    cursorOffset = {
        mt: 0,
        tr: 1,
        mr: 2,
        br: 3,
        mb: 4,
        bl: 5,
        ml: 6,
        tl: 7
    },
    addListener = fabric.util.addListener,
    removeListener = fabric.util.removeListener,
    getPointer = fabric.util.getPointer,
    fabric.util.object.extend(fabric.Canvas.prototype, {
        _initEvents: function() {
            var e = this;
            this._onMouseDown = this._onMouseDown.bind(this),
            this._onMouseMove = this._onMouseMove.bind(this),
            this._onMouseUp = this._onMouseUp.bind(this),
            this._onResize = this._onResize.bind(this),
            this._onGesture = function(t, n) {
                e.__onTransformGesture(t, n)
            }
            ,
            addListener(fabric.window, "resize", this._onResize),
            fabric.isTouchSupported && "undefined" != typeof Event && "add"in Event && Event.add(this.upperCanvasEl, "gesture", function(t, n) {
                e.__onTransformGesture(t, n)
            })
        },
        _onMouseDown: function(e) {
            this.__onMouseDown(e),
            !fabric.isTouchSupported && addListener(fabric.document, "mouseup", this._onMouseUp),
            fabric.isTouchSupported && addListener(fabric.document, "touchend", this._onMouseUp),
            !fabric.isTouchSupported && addListener(fabric.document, "mousemove", this._onMouseMove),
            fabric.isTouchSupported && addListener(fabric.document, "touchmove", this._onMouseMove),
            !fabric.isTouchSupported && removeListener(this.upperCanvasEl, "mousemove", this._onMouseMove),
            fabric.isTouchSupported && removeListener(this.upperCanvasEl, "touchmove", this._onMouseMove)
        },
        _onMouseUp: function(e) {
            this.__onMouseUp(e),
            !fabric.isTouchSupported && removeListener(fabric.document, "mouseup", this._onMouseUp),
            fabric.isTouchSupported && removeListener(fabric.document, "touchend", this._onMouseUp),
            !fabric.isTouchSupported && removeListener(fabric.document, "mousemove", this._onMouseMove),
            fabric.isTouchSupported && removeListener(fabric.document, "touchmove", this._onMouseMove),
            !fabric.isTouchSupported && addListener(this.upperCanvasEl, "mousemove", this._onMouseMove),
            fabric.isTouchSupported && addListener(this.upperCanvasEl, "touchmove", this._onMouseMove)
        },
        _onMouseMove: function(e) {
            !this.allowTouchScrolling && e.preventDefault && e.preventDefault(),
            this.__onMouseMove(e)
        },
        _onResize: function() {
            this.calcOffset()
        },
        __onMouseUp: function(e) {
            var t;
            if (this.isDrawingMode && this._isCurrentlyDrawing)
                return this._isCurrentlyDrawing = !1,
                this.clipTo && this.contextTop.restore(),
                this.freeDrawingBrush.onMouseUp(),
                void this.fire("mouse:up", {
                    e: e
                });
            if (this._currentTransform) {
                var n = this._currentTransform;
                if ((t = n.target)._scaling && (t._scaling = !1),
                t.isMoving = !1,
                t.setCoords(),
                this.stateful && t.hasStateChanged() && (this.fire("object:modified", {
                    target: t
                }),
                t.fire("modified")),
                this._previousOriginX && this._previousOriginY) {
                    var i = t.translateToOriginPoint(t.getCenterPoint(), this._previousOriginX, this._previousOriginY);
                    t.originX = this._previousOriginX,
                    t.originY = this._previousOriginY,
                    t.left = i.x,
                    t.top = i.y,
                    this._previousOriginX = null,
                    this._previousOriginY = null
                }
            }
            this._currentTransform = null,
            this.selection && this._groupSelector && this._groupSelector.top && this._groupSelector.left && Math.abs(this._groupSelector.top) + Math.abs(this._groupSelector.left) > 5 && this._findSelectedObjects(e);
            var o = this.getActiveGroup();
            o && (o.setObjectsCoords(),
            o.set("isMoving", !1),
            this._setCursor(this.defaultCursor)),
            this._groupSelector = null,
            this.renderAll(),
            this._setCursorFromEvent(e, t);
            var r = this;
            setTimeout(function() {
                r._setCursorFromEvent(e, t)
            }, 50),
            this.fire("mouse:up", {
                target: t,
                e: e
            }),
            t && t.fire("mouseup", {
                e: e
            })
        },
        __onMouseDown: function(e) {
            var t;
            if (("which"in e ? 1 === e.which : 1 === e.button) || fabric.isTouchSupported) {
                if (this.isDrawingMode)
                    return t = this.getPointer(e),
                    this._isCurrentlyDrawing = !0,
                    this.discardActiveObject().renderAll(),
                    this.clipTo && fabric.util.clipContext(this, this.contextTop),
                    this.freeDrawingBrush.onMouseDown(t),
                    void this.fire("mouse:down", {
                        e: e
                    });
                if (!this._currentTransform) {
                    var n, i = this.findTarget(e), o = !1;
                    if (t = this.getPointer(e),
                    this._shouldClearSelection(e, i) ? (this._groupSelector = {
                        ex: t.x,
                        ey: t.y,
                        top: 0,
                        left: 0
                    },
                    this.deactivateAllWithDispatch(),
                    i && i.selectable && this.setActiveObject(i, e)) : this._shouldHandleGroupLogic(e, i) ? (this._handleGroupLogic(e, i),
                    i = this.getActiveGroup()) : (this.stateful && i.saveState(),
                    (n = i._findTargetCorner(e, this._offset)) && this.onBeforeScaleRotate(i),
                    i !== this.getActiveGroup() && i !== this.getActiveObject() ? (this.deactivateAll(),
                    this.setActiveObject(i, e)) : o = !0,
                    this._setupCurrentTransform(e, i, o)),
                    this.renderAll(),
                    this.fire("mouse:down", {
                        target: i,
                        e: e
                    }),
                    i && i.fire("mousedown", {
                        e: e
                    }),
                    "mtr" === n && i.centerTransform) {
                        console.log("Resetting to center transform!"),
                        this._previousOriginX = this._currentTransform.target.originX,
                        this._previousOriginY = this._currentTransform.target.originY;
                        var r = i.getCenterPoint();
                        i.originX = "center",
                        i.originY = "center",
                        i.left = r.x,
                        i.top = r.y,
                        this._currentTransform.left = i.left,
                        this._currentTransform.top = i.top
                    }
                }
            }
        },
        __onMouseMove: function(e) {
            var t, n;
            if (this.isDrawingMode)
                return this._isCurrentlyDrawing && (n = this.getPointer(e),
                this.freeDrawingBrush.onMouseMove(n)),
                this.upperCanvasEl.style.cursor = this.freeDrawingCursor,
                void this.fire("mouse:move", {
                    e: e
                });
            var i = this._groupSelector;
            if (i)
                n = getPointer(e, this.upperCanvasEl),
                i.left = n.x - this._offset.left - i.ex,
                i.top = n.y - this._offset.top - i.ey,
                d20.engine.redrawScreenNextTick(!0);
            else if (this._currentTransform) {
                var o = (n = getPointer(e, this.upperCanvasEl)).x
                  , r = n.y
                  , a = !1
                  , s = this._currentTransform;
                (t = s.target).isMoving = !0,
                "scale" !== s.action && "scaleX" !== s.action && "scaleY" !== s.action || (!e.altKey || "center" === s.originX && "center" === s.originY) && (e.altKey || "center" !== s.originX || "center" !== s.originY) || (this._resetCurrentTransform(e),
                a = !0),
                "rotate" === s.action ? (this._rotateObject(o, r),
                this.fire("object:rotating", {
                    target: t,
                    e: e
                }),
                t.fire("rotating", {
                    e: e
                })) : "scale" === s.action ? (!e.shiftKey && !this.uniScaleTransform || t.get("lockUniScaling") ? (a || "scale" !== s.currentAction || this._resetCurrentTransform(e),
                s.currentAction = "scaleEqually",
                this._scaleObject(o, r, "equally")) : (s.currentAction = "scale",
                this._scaleObject(o, r)),
                this.fire("object:scaling", {
                    target: t,
                    e: e
                }),
                t.fire("scaling", {
                    e: e
                })) : "scaleX" === s.action ? (this._scaleObject(o, r, "x"),
                this.fire("object:scaling", {
                    target: t,
                    e: e
                }),
                t.fire("scaling", {
                    e: e
                })) : "scaleY" === s.action ? (this._scaleObject(o, r, "y"),
                this.fire("object:scaling", {
                    target: t,
                    e: e
                }),
                t.fire("scaling", {
                    e: e
                })) : (this._translateObject(o, r),
                this.fire("object:moving", {
                    target: t,
                    e: e
                }),
                t.fire("moving", {
                    e: e
                }),
                this._setCursor(this.moveCursor)),
                this.renderAll()
            } else {
                var l = d20.engine.final_canvas.style
                  , c = !(!d20.engine || "targeting" !== d20.engine.mode);
                !(t = this.findTarget(e, null, c)) || t && !t.selectable && !c ? l.cursor = this.defaultCursor : this._setCursorFromEvent(e, t)
            }
            this.fire("mouse:move", {
                target: t,
                e: e
            }),
            t && t.fire("mousemove", {
                e: e
            })
        },
        _setCursorFromEvent: function(e, t) {
            var n = d20.engine.final_canvas.style;
            if (!t)
                return n.cursor = this.defaultCursor,
                !1;
            var i = this.getActiveGroup()
              , o = t._findTargetCorner && (!i || !i.contains(t)) && t._findTargetCorner(e, this._offset);
            if (o)
                if (o in cursorOffset) {
                    var r = Math.round(t.getAngle() % 360 / 45);
                    r < 0 && (r += 8),
                    r += cursorOffset[o],
                    r %= 8,
                    n.cursor = cursorMap[r]
                } else {
                    if ("mtr" !== o || !t.hasRotatingPoint)
                        return n.cursor = this.defaultCursor,
                        !1;
                    n.cursor = this.rotationCursor
                }
            else
                n.cursor = t.hoverCursor || this.hoverCursor;
            return !0
        }
    }),
    fabric.util.object.extend(fabric.StaticCanvas.prototype, {
        toDataURL: function(e) {
            e || (e = {});
            var t = e.format || "png"
              , n = e.quality || 1
              , i = e.multiplier || 1
              , o = {
                left: e.left,
                top: e.top,
                width: e.width,
                height: e.height
            };
            return 1 !== i ? this.__toDataURLWithMultiplier(t, n, o, i) : this.__toDataURL(t, n, o)
        },
        __toDataURL: function(e, t, n) {
            this.renderAll(!0);
            var i = this.upperCanvasEl || this.lowerCanvasEl
              , o = this.__getCroppedCanvas(i, n);
            "jpg" === e && (e = "jpeg");
            var r = fabric.StaticCanvas.supports("toDataURLWithQuality") ? (o || i).toDataURL("image/" + e, t) : (o || i).toDataURL("image/" + e);
            return this.contextTop && this.clearContext(this.contextTop),
            this.renderAll(),
            o && (o = null),
            r
        },
        __getCroppedCanvas: function(e, t) {
            var n, i;
            return ("left"in t || "top"in t || "width"in t || "height"in t) && (i = (n = fabric.util.createCanvasElement()).getContext("2d"),
            n.width = t.width || this.width,
            n.height = t.height || this.height,
            i.drawImage(e, -t.left || 0, -t.top || 0)),
            n
        },
        __toDataURLWithMultiplier: function(e, t, n, i) {
            var o = this.getWidth()
              , r = this.getHeight()
              , a = o * i
              , s = r * i
              , l = this.getActiveObject()
              , c = this.getActiveGroup()
              , u = this.contextTop || this.contextContainer;
            this.setWidth(a).setHeight(s),
            u.scale(i, i),
            n.left && (n.left *= i),
            n.top && (n.top *= i),
            n.width && (n.width *= i),
            n.height && (n.height *= i),
            c ? this._tempRemoveBordersControlsFromGroup(c) : l && this.deactivateAll && this.deactivateAll(),
            this.width = o,
            this.height = r,
            this.renderAll(!0);
            var d = this.__toDataURL(e, t, n);
            return u.scale(1 / i, 1 / i),
            this.setWidth(o).setHeight(r),
            c ? this._restoreBordersControlsOnGroup(c) : l && this.setActiveObject && this.setActiveObject(l),
            this.contextTop && this.clearContext(this.contextTop),
            this.renderAll(),
            d
        },
        toDataURLWithMultiplier: function(e, t, n) {
            return this.toDataURL({
                format: e,
                multiplier: t,
                quality: n
            })
        },
        _tempRemoveBordersControlsFromGroup: function(e) {
            e.origHasControls = e.hasControls,
            e.origBorderColor = e.borderColor,
            e.hasControls = !0,
            e.borderColor = "rgba(0,0,0,0)",
            e.forEachObject(function(e) {
                e.origBorderColor = e.borderColor,
                e.borderColor = "rgba(0,0,0,0)"
            })
        },
        _restoreBordersControlsOnGroup: function(e) {
            e.hideControls = e.origHideControls,
            e.borderColor = e.origBorderColor,
            e.forEachObject(function(e) {
                e.borderColor = e.origBorderColor,
                delete e.origBorderColor
            })
        }
    }),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = t.util.object.extend
          , i = t.util.toFixed
          , o = t.util.string.capitalize
          , r = t.util.degreesToRadians
          , a = t.StaticCanvas.supports("setLineDash");
        t.Object || (t.Object = t.util.createClass({
            type: "object",
            originX: "center",
            originY: "center",
            top: 0,
            left: 0,
            width: 0,
            height: 0,
            scaleX: 1,
            scaleY: 1,
            flipX: !1,
            flipY: !1,
            opacity: 1,
            angle: 0,
            cornerSize: 12,
            transparentCorners: !1,
            hoverCursor: null,
            padding: 0,
            borderColor: "rgba(102,153,255,0.75)",
            cornerColor: "rgba(102,153,255,0.5)",
            centerTransform: !1,
            fill: "rgb(0,0,0)",
            fillRule: "source-over",
            overlayFill: null,
            stroke: null,
            strokeWidth: 1,
            strokeDashArray: null,
            strokeLineCap: "butt",
            strokeLineJoin: "miter",
            strokeMiterLimit: 10,
            shadow: null,
            borderOpacityWhenMoving: .4,
            borderScaleFactor: 1,
            transformMatrix: null,
            minScaleLimit: .01,
            selectable: !0,
            visible: !0,
            hasControls: !0,
            hasBorders: !0,
            hasRotatingPoint: !0,
            rotatingPointOffset: 40,
            perPixelTargetFind: !1,
            includeDefaultValues: !0,
            clipTo: null,
            lockMovementX: !1,
            lockMovementY: !1,
            lockRotation: !1,
            lockScalingX: !1,
            lockScalingY: !1,
            lockUniScaling: !1,
            stateProperties: "top left width height scaleX scaleY flipX flipY originX originY transformMatrix stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit angle opacity fill fillRule overlayFill shadow clipTo visible".split(" "),
            initialize: function(e) {
                e && this.setOptions(e)
            },
            intersects: function(e) {
                const t = d20.math.radians(this.angle || 0);
                let n;
                return n = this.group ? new d20.math.Rectangle(this.originalLeft,this.originalTop,this.width,this.height,t) : new d20.math.Rectangle(this.left,this.top,this.width,this.height,t),
                _.some(e, e=>n.rectangleIntersection(e))
            },
            _initGradient: function(e) {
                !e.fill || !e.fill.colorStops || e.fill instanceof t.Gradient || this.set("fill", new t.Gradient(e.fill))
            },
            _initPattern: function(e) {
                !e.fill || !e.fill.source || e.fill instanceof t.Pattern || this.set("fill", new t.Pattern(e.fill)),
                !e.stroke || !e.stroke.source || e.stroke instanceof t.Pattern || this.set("stroke", new t.Pattern(e.stroke))
            },
            _initClipping: function(e) {
                if (e.clipTo && "string" == typeof e.clipTo) {
                    var n = t.util.getFunctionBody(e.clipTo);
                    void 0 !== n && (this.clipTo = new Function("ctx",n))
                }
            },
            setOptions: function(e) {
                for (var t in e)
                    this.set(t, e[t]);
                this._initGradient(e),
                this._initPattern(e),
                this._initClipping(e)
            },
            transform: function(e, t) {
                e.globalAlpha *= this.opacity;
                var n = t ? this._getLeftTopCoords() : this.getCenterPoint();
                this.renderingInGroup ? (this.renderingInGroup.transform(e),
                e.translate(n.x, n.y)) : e.translate(n.x - d20.engine.currentCanvasOffset[0], n.y - d20.engine.currentCanvasOffset[1]),
                e.rotate(r(this.angle)),
                e.scale(this.scaleX * (this.flipX ? -1 : 1), this.scaleY * (this.flipY ? -1 : 1))
            },
            toObject: function(e) {
                var n = t.Object.NUM_FRACTION_DIGITS
                  , o = {
                    type: this.type,
                    originX: this.originX,
                    originY: this.originY,
                    left: i(this.left, n),
                    top: i(this.top, n),
                    width: i(this.width, n),
                    height: i(this.height, n),
                    fill: this.fill && this.fill.toObject ? this.fill.toObject() : this.fill,
                    overlayFill: this.overlayFill,
                    stroke: this.stroke && this.stroke.toObject ? this.stroke.toObject() : this.stroke,
                    strokeWidth: i(this.strokeWidth, n),
                    strokeDashArray: this.strokeDashArray,
                    strokeLineCap: this.strokeLineCap,
                    strokeLineJoin: this.strokeLineJoin,
                    strokeMiterLimit: i(this.strokeMiterLimit, n),
                    scaleX: i(this.scaleX, n),
                    scaleY: i(this.scaleY, n),
                    angle: i(this.getAngle(), n),
                    flipX: this.flipX,
                    flipY: this.flipY,
                    opacity: i(this.opacity, n),
                    shadow: this.shadow && this.shadow.toObject ? this.shadow.toObject() : this.shadow,
                    visible: this.visible,
                    clipTo: this.clipTo && String(this.clipTo)
                };
                return this.includeDefaultValues || (o = this._removeDefaultValues(o)),
                t.util.populateWithProperties(this, o, e),
                o
            },
            toDatalessObject: function(e) {
                return this.toObject(e)
            },
            getSvgStyles: function() {
                var e = this.fill ? this.fill.toLive ? "url(#SVGID_" + this.fill.id + ")" : this.fill : "none"
                  , t = this.stroke ? this.stroke.toLive ? "url(#SVGID_" + this.stroke.id + ")" : this.stroke : "none"
                  , n = this.strokeWidth ? this.strokeWidth : "0"
                  , i = this.strokeDashArray ? this.strokeDashArray.join(" ") : ""
                  , o = this.strokeLineCap ? this.strokeLineCap : "butt"
                  , r = this.strokeLineJoin ? this.strokeLineJoin : "miter"
                  , a = this.strokeMiterLimit ? this.strokeMiterLimit : "4"
                  , s = "undefined" != typeof this.opacity ? this.opacity : "1"
                  , l = this.visible ? "" : " visibility: hidden;";
                return ["stroke: ", t, "; ", "stroke-width: ", n, "; ", "stroke-dasharray: ", i, "; ", "stroke-linecap: ", o, "; ", "stroke-linejoin: ", r, "; ", "stroke-miterlimit: ", a, "; ", "fill: ", e, "; ", "opacity: ", s, ";", this.shadow && "text" !== this.type ? "filter: url(#SVGID_" + this.shadow.id + ");" : "", l].join("")
            },
            getSvgTransform: function() {
                var e = this.getAngle()
                  , n = this.getCenterPoint()
                  , o = t.Object.NUM_FRACTION_DIGITS;
                return ["translate(" + i(n.x, o) + " " + i(n.y, o) + ")", 0 !== e ? " rotate(" + i(e, o) + ")" : "", 1 === this.scaleX && 1 === this.scaleY ? "" : " scale(" + i(this.scaleX, o) + " " + i(this.scaleY, o) + ")", this.flipX ? "matrix(-1 0 0 1 0 0) " : "", this.flipY ? "matrix(1 0 0 -1 0 0)" : ""].join("")
            },
            _createBaseSVGMarkup: function() {
                var e = [];
                return this.fill && this.fill.toLive && e.push(this.fill.toSVG(this, !1)),
                this.stroke && this.stroke.toLive && e.push(this.stroke.toSVG(this, !1)),
                this.shadow && e.push(this.shadow.toSVG(this)),
                e
            },
            _removeDefaultValues: function(e) {
                return this.stateProperties.forEach(function(t) {
                    e[t] === this.constructor.prototype[t] && delete e[t]
                }, this),
                e
            },
            toString: function() {
                return "#<fabric." + o(this.type) + ">"
            },
            get: function(e) {
                return this[e]
            },
            set: function(e, t) {
                if ("object" == typeof e)
                    for (var n in e)
                        this._set(n, e[n]);
                else
                    "function" == typeof t && "clipTo" !== e ? this._set(e, t(this.get(e))) : this._set(e, t);
                return this
            },
            _set: function(e, n) {
                return ("scaleX" === e || "scaleY" === e) && (n = this._constrainScale(n)),
                "scaleX" === e && n < 0 ? (this.flipX = !this.flipX,
                n *= -1) : "scaleY" === e && n < 0 ? (this.flipY = !this.flipY,
                n *= -1) : "width" === e || "height" === e ? this.minScaleLimit = i(Math.min(.1, 1 / Math.max(this.width, this.height)), 2) : "shadow" !== e || !n || n instanceof t.Shadow || (n = new t.Shadow(n)),
                this[e] = n,
                this
            },
            toggle: function(e) {
                var t = this.get(e);
                return "boolean" == typeof t && this.set(e, !t),
                this
            },
            setSourcePath: function(e) {
                return this.sourcePath = e,
                this
            },
            render: function(e, n) {
                if (0 !== this.width && 0 !== this.height && this.visible) {
                    e.save();
                    var i = this.transformMatrix;
                    i && !this.group && e.setTransform(i[0], i[1], i[2], i[3], i[4], i[5]),
                    n || this.transform(e),
                    this.stroke && (e.lineWidth = this.strokeWidth,
                    e.lineCap = this.strokeLineCap,
                    e.lineJoin = this.strokeLineJoin,
                    e.miterLimit = this.strokeMiterLimit,
                    e.strokeStyle = this.stroke.toLive ? this.stroke.toLive(e) : this.stroke),
                    this.overlayFill ? e.fillStyle = this.overlayFill : this.fill && (e.fillStyle = this.fill.toLive ? this.fill.toLive(e) : this.fill),
                    i && this.group && (e.translate(-this.group.width / 2, -this.group.height / 2),
                    e.transform(i[0], i[1], i[2], i[3], i[4], i[5])),
                    this._setShadow(e),
                    this.clipTo && t.util.clipContext(this, e),
                    this._render(e, n),
                    this.clipTo && e.restore(),
                    this._removeShadow(e),
                    this.active && !n && (this.drawBorders(e),
                    this.drawControls(e)),
                    e.restore()
                }
            },
            _setShadow: function(e) {
                this.shadow && (e.shadowColor = this.shadow.color,
                e.shadowBlur = this.shadow.blur,
                e.shadowOffsetX = this.shadow.offsetX,
                e.shadowOffsetY = this.shadow.offsetY)
            },
            _removeShadow: function(e) {
                e.shadowColor = "",
                e.shadowBlur = e.shadowOffsetX = e.shadowOffsetY = 0
            },
            _renderFill: function(e) {
                this.fill && (this.fill.toLive && (e.save(),
                e.translate(-this.width / 2 + this.fill.offsetX || 0, -this.height / 2 + this.fill.offsetY || 0)),
                e.fill(),
                this.fill.toLive && e.restore(),
                this.shadow && !this.shadow.affectStroke && this._removeShadow(e))
            },
            _renderStroke: function(e) {
                this.stroke && (e.save(),
                this.strokeDashArray ? (1 & this.strokeDashArray.length && this.strokeDashArray.push.apply(this.strokeDashArray, this.strokeDashArray),
                a ? (e.setLineDash(this.strokeDashArray),
                this._stroke && this._stroke(e)) : this._renderDashedStroke && this._renderDashedStroke(e),
                e.stroke()) : this._stroke ? this._stroke(e) : e.stroke(),
                this._removeShadow(e),
                e.restore())
            },
            clone: function(e, n) {
                return this.constructor.fromObject ? this.constructor.fromObject(this.toObject(n), e) : new t.Object(this.toObject(n))
            },
            cloneAsImage: function(e) {
                var n = this.toDataURL();
                return t.util.loadImage(n, function(n) {
                    e && e(new t.Image(n))
                }),
                this
            },
            toDataURL: function(e) {
                e || (e = {});
                var n = t.util.createCanvasElement();
                n.width = this.getBoundingRectWidth(),
                n.height = this.getBoundingRectHeight(),
                t.util.wrapElement(n, "div");
                var i = new t.Canvas(n);
                "jpeg" === e.format && (i.backgroundColor = "#fff");
                var o = {
                    active: this.get("active"),
                    left: this.getLeft(),
                    top: this.getTop()
                };
                this.set({
                    active: !1,
                    left: n.width / 2,
                    top: n.height / 2
                }),
                i.add(this);
                var r = i.toDataURL(e);
                return this.set(o).setCoords(),
                i.dispose(),
                i = null,
                r
            },
            isType: function(e) {
                return this.type === e
            },
            toGrayscale: function() {
                var e = this.get("fill");
                return e && this.set("overlayFill", new t.Color(e).toGrayscale().toRgb()),
                this
            },
            complexity: function() {
                return 0
            },
            toJSON: function(e) {
                return this.toObject(e)
            },
            needsRender: function(e) {
                if (this.active || this.renderingInGroup || this.needsToBeDrawn || !e)
                    return !0;
                const t = [new d20.math.Rectangle(this.left,this.top,this.width,this.height,this.angle || 0)];
                if ("image" == this.type && this._model) {
                    let e = 0;
                    for (let t = 1; t <= 2; ++t) {
                        const n = +this._model.get(`aura${t}_radius`);
                        e = Math.max(e, n) || e
                    }
                    if (e > 0 && t[0].resize({
                        left: e,
                        right: e,
                        up: e,
                        down: e
                    }),
                    this._bar_data)
                        for (let e = 0; e < this._bar_data.to_render.length; ++e) {
                            const n = d20.math.sub(this._bar_data.position, [0, (this._bar_data.height + this._bar_data.vertical_padding) * e]);
                            t.push(new d20.math.Rectangle(...n,this._bar_data.width,this._bar_data.height,0))
                        }
                    this._nameplate_data && this._nameplate_data.position && t.push(new d20.math.Rectangle(...this._nameplate_data.position,...this._nameplate_data.size,0))
                }
                return _.some(t, t=>t.rectangleIntersection(e))
            },
            setGradient: function(e, n) {
                n || (n = {});
                var i = {
                    colorStops: []
                };
                for (var o in i.type = n.type || (n.r1 || n.r2 ? "radial" : "linear"),
                i.coords = {
                    x1: n.x1,
                    y1: n.y1,
                    x2: n.x2,
                    y2: n.y2
                },
                (n.r1 || n.r2) && (i.coords.r1 = n.r1,
                i.coords.r2 = n.r2),
                n.colorStops) {
                    var r = new t.Color(n.colorStops[o]);
                    i.colorStops.push({
                        offset: o,
                        color: r.toRgb(),
                        opacity: r.getAlpha()
                    })
                }
                return this.set(e, t.Gradient.forObject(this, i))
            },
            setPatternFill: function(e) {
                return this.set("fill", new t.Pattern(e))
            },
            setShadow: function(e) {
                return this.set("shadow", new t.Shadow(e))
            },
            setColor: function(e) {
                return this.set("fill", e),
                this
            },
            centerH: function() {
                return this.canvas.centerObjectH(this),
                this
            },
            centerV: function() {
                return this.canvas.centerObjectV(this),
                this
            },
            center: function() {
                return this.centerH().centerV()
            },
            remove: function() {
                return this.canvas.remove(this)
            },
            sendToBack: function() {
                return this.group ? t.StaticCanvas.prototype.sendToBack.call(this.group, this) : this.canvas.sendToBack(this),
                this
            },
            bringToFront: function() {
                return this.group ? t.StaticCanvas.prototype.bringToFront.call(this.group, this) : this.canvas.bringToFront(this),
                this
            },
            sendBackwards: function(e) {
                return this.group ? t.StaticCanvas.prototype.sendBackwards.call(this.group, this, e) : this.canvas.sendBackwards(this, e),
                this
            },
            bringForward: function(e) {
                return this.group ? t.StaticCanvas.prototype.bringForward.call(this.group, this, e) : this.canvas.bringForward(this, e),
                this
            },
            moveTo: function(e) {
                return this.group ? t.StaticCanvas.prototype.moveTo.call(this.group, this, e) : this.canvas.moveTo(this, e),
                this
            }
        }),
        t.util.createAccessors(t.Object),
        t.Object.prototype.rotate = t.Object.prototype.setAngle,
        n(t.Object.prototype, t.Observable),
        t.Object.NUM_FRACTION_DIGITS = 2,
        t.Object.__uid = 0)
    }(void 0 !== exports ? exports : this),
    degreesToRadians = fabric.util.degreesToRadians,
    fabric.util.object.extend(fabric.Object.prototype, {
        translateToCenterPoint: function(e, t, n) {
            var i = e.x
              , o = e.y;
            return "left" === t ? i = e.x + (this.getWidth() + this.strokeWidth * this.scaleX) / 2 : "right" === t && (i = e.x - (this.getWidth() + this.strokeWidth * this.scaleX) / 2),
            "top" === n ? o = e.y + (this.getHeight() + this.strokeWidth * this.scaleY) / 2 : "bottom" === n && (o = e.y - (this.getHeight() + this.strokeWidth * this.scaleY) / 2),
            fabric.util.rotatePoint(new fabric.Point(i,o), e, degreesToRadians(this.angle))
        },
        translateToOriginPoint: function(e, t, n) {
            var i = e.x
              , o = e.y;
            return "left" === t ? i = e.x - (this.getWidth() + this.strokeWidth * this.scaleX) / 2 : "right" === t && (i = e.x + (this.getWidth() + this.strokeWidth * this.scaleX) / 2),
            "top" === n ? o = e.y - (this.getHeight() + this.strokeWidth * this.scaleY) / 2 : "bottom" === n && (o = e.y + (this.getHeight() + this.strokeWidth * this.scaleY) / 2),
            fabric.util.rotatePoint(new fabric.Point(i,o), e, degreesToRadians(this.angle))
        },
        getCenterPoint: function() {
            return this.translateToCenterPoint(new fabric.Point(this.left,this.top), this.originX, this.originY)
        },
        toLocalPoint: function(e, t, n) {
            var i, o, r = this.getCenterPoint();
            return t !== undefined && n !== undefined ? (i = "left" === t ? r.x - (this.getWidth() + this.strokeWidth * this.scaleX) / 2 : "right" === t ? r.x + (this.getWidth() + this.strokeWidth * this.scaleX) / 2 : r.x,
            o = "top" === n ? r.y - (this.getHeight() + this.strokeWidth * this.scaleY) / 2 : "bottom" === n ? r.y + (this.getHeight() + this.strokeWidth * this.scaleY) / 2 : r.y) : (i = this.left,
            o = this.top),
            fabric.util.rotatePoint(new fabric.Point(e.x,e.y), r, -degreesToRadians(this.angle)).subtractEquals(new fabric.Point(i,o))
        },
        setPositionByOrigin: function(e, t, n) {
            var i = this.translateToCenterPoint(e, t, n)
              , o = this.translateToOriginPoint(i, this.originX, this.originY);
            this.set("left", o.x),
            this.set("top", o.y)
        },
        adjustPosition: function(e) {
            var t = degreesToRadians(this.angle)
              , n = this.getWidth() / 2
              , i = Math.cos(t) * n
              , o = Math.sin(t) * n
              , r = this.getWidth()
              , a = Math.cos(t) * r
              , s = Math.sin(t) * r;
            "center" === this.originX && "left" === e || "right" === this.originX && "center" === e ? (this.left -= i,
            this.top -= o) : "left" === this.originX && "center" === e || "center" === this.originX && "right" === e ? (this.left += i,
            this.top += o) : "left" === this.originX && "right" === e ? (this.left += a,
            this.top += s) : "right" === this.originX && "left" === e && (this.left -= a,
            this.top -= s),
            this.setCoords(),
            this.originX = e
        },
        _getLeftTopCoords: function() {
            var e = degreesToRadians(this.angle)
              , t = this.getWidth() / 2
              , n = Math.cos(e) * t
              , i = Math.sin(e) * t
              , o = this.left
              , r = this.top;
            return "center" !== this.originX && "right" !== this.originX || (o -= n),
            "center" !== this.originY && "bottom" !== this.originY || (r -= i),
            {
                x: o,
                y: r
            }
        }
    }),
    function() {
        var e = fabric.util.degreesToRadians;
        fabric.util.object.extend(fabric.Object.prototype, {
            oCoords: null,
            intersectsWithRect: function(e, t) {
                var n = this.oCoords
                  , i = new fabric.Point(n.tl.x,n.tl.y)
                  , o = new fabric.Point(n.tr.x,n.tr.y)
                  , r = new fabric.Point(n.bl.x,n.bl.y)
                  , a = new fabric.Point(n.br.x,n.br.y);
                return "Intersection" === fabric.Intersection.intersectPolygonRectangle([i, o, a, r], e, t).status
            },
            intersectsWithObject: function(e) {
                function t(e) {
                    return {
                        tl: new fabric.Point(e.tl.x,e.tl.y),
                        tr: new fabric.Point(e.tr.x,e.tr.y),
                        bl: new fabric.Point(e.bl.x,e.bl.y),
                        br: new fabric.Point(e.br.x,e.br.y)
                    }
                }
                var n = t(this.oCoords)
                  , i = t(e.oCoords);
                return "Intersection" === fabric.Intersection.intersectPolygonPolygon([n.tl, n.tr, n.br, n.bl], [i.tl, i.tr, i.br, i.bl]).status
            },
            isContainedWithinObject: function(e) {
                var t = e.getBoundingRect()
                  , n = new fabric.Point(t.left,t.top)
                  , i = new fabric.Point(t.left + t.width,t.top + t.height);
                return this.isContainedWithinRect(n, i)
            },
            isContainedWithinRect: function(e, t) {
                var n = this.getBoundingRect();
                return n.left > e.x && n.left + n.width < t.x && n.top > e.y && n.top + n.height < t.y
            },
            containsPoint: function(e) {
                var t = this._getImageLines(this.oCoords)
                  , n = this._findCrossPoints(e, t);
                return 0 !== n && n % 2 == 1
            },
            _getImageLines: function(e) {
                return {
                    topline: {
                        o: e.tl,
                        d: e.tr
                    },
                    rightline: {
                        o: e.tr,
                        d: e.br
                    },
                    bottomline: {
                        o: e.br,
                        d: e.bl
                    },
                    leftline: {
                        o: e.bl,
                        d: e.tl
                    }
                }
            },
            _findCrossPoints: function(e, t) {
                var n, i, o, r, a, s = 0;
                for (var l in t)
                    if (!((a = t[l]).o.y < e.y && a.d.y < e.y || a.o.y >= e.y && a.d.y >= e.y || (a.o.x === a.d.x && a.o.x >= e.x ? (r = a.o.x,
                    e.y) : (n = 0,
                    i = (a.d.y - a.o.y) / (a.d.x - a.o.x),
                    (o = e.y - n * e.x) + n * (r = -(o - (a.o.y - i * a.o.x)) / (n - i))),
                    r >= e.x && (s += 1),
                    2 !== s)))
                        break;
                return s
            },
            getBoundingRectWidth: function() {
                return this.getBoundingRect().width
            },
            getBoundingRectHeight: function() {
                return this.getBoundingRect().height
            },
            getBoundingRect: function() {
                this.oCoords || this.setCoords();
                var e = [this.oCoords.tl.x, this.oCoords.tr.x, this.oCoords.br.x, this.oCoords.bl.x]
                  , t = fabric.util.array.min(e)
                  , n = fabric.util.array.max(e)
                  , i = Math.abs(t - n)
                  , o = [this.oCoords.tl.y, this.oCoords.tr.y, this.oCoords.br.y, this.oCoords.bl.y]
                  , r = fabric.util.array.min(o)
                  , a = fabric.util.array.max(o);
                return {
                    left: t,
                    top: r,
                    width: i,
                    height: Math.abs(r - a)
                }
            },
            getWidth: function() {
                return this.width * this.scaleX
            },
            getHeight: function() {
                return this.height * this.scaleY
            },
            _constrainScale: function(e) {
                return Math.abs(e) < this.minScaleLimit ? e < 0 ? -this.minScaleLimit : this.minScaleLimit : e
            },
            scale: function(e) {
                return (e = this._constrainScale(e)) < 0 && (this.flipX = !this.flipX,
                this.flipY = !this.flipY,
                e *= -1),
                this.scaleX = e,
                this.scaleY = e,
                this.setCoords(),
                this
            },
            scaleToWidth: function(e) {
                var t = this.getBoundingRectWidth() / this.getWidth();
                return this.scale(e / this.width / t)
            },
            scaleToHeight: function(e) {
                var t = this.getBoundingRectHeight() / this.getHeight();
                return this.scale(e / this.height / t)
            },
            setCoords: function() {
                var t = this.strokeWidth > 1 ? this.strokeWidth : 0
                  , n = this.padding
                  , i = e(this.angle);
                this.currentWidth = (this.width + t) * this.scaleX + 2 * n,
                this.currentHeight = (this.height + t) * this.scaleY + 2 * n,
                this.currentWidth < 0 && (this.currentWidth = Math.abs(this.currentWidth));
                var o = Math.sqrt(Math.pow(this.currentWidth / 2, 2) + Math.pow(this.currentHeight / 2, 2))
                  , r = Math.atan(isFinite(this.currentHeight / this.currentWidth) ? this.currentHeight / this.currentWidth : 0)
                  , a = Math.cos(r + i) * o
                  , s = Math.sin(r + i) * o
                  , l = Math.sin(i)
                  , c = Math.cos(i)
                  , u = this.getCenterPoint()
                  , d = {
                    x: u.x - a,
                    y: u.y - s
                }
                  , h = {
                    x: d.x + this.currentWidth * c,
                    y: d.y + this.currentWidth * l
                }
                  , p = {
                    x: h.x - this.currentHeight * l,
                    y: h.y + this.currentHeight * c
                }
                  , f = {
                    x: d.x - this.currentHeight * l,
                    y: d.y + this.currentHeight * c
                }
                  , g = {
                    x: d.x - this.currentHeight / 2 * l,
                    y: d.y + this.currentHeight / 2 * c
                }
                  , m = {
                    x: d.x + this.currentWidth / 2 * c,
                    y: d.y + this.currentWidth / 2 * l
                }
                  , y = {
                    x: h.x - this.currentHeight / 2 * l,
                    y: h.y + this.currentHeight / 2 * c
                }
                  , v = {
                    x: f.x + this.currentWidth / 2 * c,
                    y: f.y + this.currentWidth / 2 * l
                }
                  , b = {
                    x: m.x,
                    y: m.y
                };
                return this.oCoords = {
                    tl: d,
                    tr: h,
                    br: p,
                    bl: f,
                    ml: g,
                    mt: m,
                    mr: y,
                    mb: v,
                    mtr: b
                },
                this._setCornerCoords && this._setCornerCoords(),
                this
            }
        })
    }(),
    fabric.util.object.extend(fabric.Object.prototype, {
        hasStateChanged: function() {
            return this.stateProperties.some(function(e) {
                return this.get(e) !== this.originalState[e]
            }, this)
        },
        saveState: function(e) {
            return this.stateProperties.forEach(function(e) {
                this.originalState[e] = this.get(e)
            }, this),
            e && e.stateProperties && e.stateProperties.forEach(function(e) {
                this.originalState[e] = this.get(e)
            }, this),
            this
        },
        setupState: function() {
            return this.originalState = {},
            this.saveState(),
            this
        }
    }),
    function() {
        var e = fabric.util.getPointer
          , t = fabric.util.degreesToRadians;
        fabric.util.object.extend(fabric.Object.prototype, {
            _findTargetCorner: function(t, n) {
                if (!this.hasControls || !this.active)
                    return !1;
                var i, o, r = e(t, this.canvas.upperCanvasEl), a = r.x - n.left, s = r.y - n.top;
                for (var l in this.oCoords)
                    if (("mtr" === l || !this.hideResizers) && ("mtr" !== l || this.hasRotatingPoint) && (!this.get("lockUniScaling") || "mt" !== l && "mr" !== l && "mb" !== l && "ml" !== l) && (o = this._getImageLines(this.oCoords[l].corner),
                    0 !== (i = this._findCrossPoints({
                        x: a,
                        y: s
                    }, o)) && i % 2 == 1))
                        return this.__corner = l,
                        l;
                return !1
            },
            _setCornerCoords: function() {
                var e = this.oCoords
                  , n = t(this.angle)
                  , i = t(45 - this.angle)
                  , o = Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2
                  , r = o * Math.cos(i)
                  , a = o * Math.sin(i)
                  , s = Math.sin(n)
                  , l = Math.cos(n);
                e.tl.corner = {
                    tl: {
                        x: e.tl.x - a,
                        y: e.tl.y - r
                    },
                    tr: {
                        x: e.tl.x + r,
                        y: e.tl.y - a
                    },
                    bl: {
                        x: e.tl.x - r,
                        y: e.tl.y + a
                    },
                    br: {
                        x: e.tl.x + a,
                        y: e.tl.y + r
                    }
                },
                e.tr.corner = {
                    tl: {
                        x: e.tr.x - a,
                        y: e.tr.y - r
                    },
                    tr: {
                        x: e.tr.x + r,
                        y: e.tr.y - a
                    },
                    br: {
                        x: e.tr.x + a,
                        y: e.tr.y + r
                    },
                    bl: {
                        x: e.tr.x - r,
                        y: e.tr.y + a
                    }
                },
                e.bl.corner = {
                    tl: {
                        x: e.bl.x - a,
                        y: e.bl.y - r
                    },
                    bl: {
                        x: e.bl.x - r,
                        y: e.bl.y + a
                    },
                    br: {
                        x: e.bl.x + a,
                        y: e.bl.y + r
                    },
                    tr: {
                        x: e.bl.x + r,
                        y: e.bl.y - a
                    }
                },
                e.br.corner = {
                    tr: {
                        x: e.br.x + r,
                        y: e.br.y - a
                    },
                    bl: {
                        x: e.br.x - r,
                        y: e.br.y + a
                    },
                    br: {
                        x: e.br.x + a,
                        y: e.br.y + r
                    },
                    tl: {
                        x: e.br.x - a,
                        y: e.br.y - r
                    }
                },
                e.ml.corner = {
                    tl: {
                        x: e.ml.x - a,
                        y: e.ml.y - r
                    },
                    tr: {
                        x: e.ml.x + r,
                        y: e.ml.y - a
                    },
                    bl: {
                        x: e.ml.x - r,
                        y: e.ml.y + a
                    },
                    br: {
                        x: e.ml.x + a,
                        y: e.ml.y + r
                    }
                },
                e.mt.corner = {
                    tl: {
                        x: e.mt.x - a,
                        y: e.mt.y - r
                    },
                    tr: {
                        x: e.mt.x + r,
                        y: e.mt.y - a
                    },
                    bl: {
                        x: e.mt.x - r,
                        y: e.mt.y + a
                    },
                    br: {
                        x: e.mt.x + a,
                        y: e.mt.y + r
                    }
                },
                e.mr.corner = {
                    tl: {
                        x: e.mr.x - a,
                        y: e.mr.y - r
                    },
                    tr: {
                        x: e.mr.x + r,
                        y: e.mr.y - a
                    },
                    bl: {
                        x: e.mr.x - r,
                        y: e.mr.y + a
                    },
                    br: {
                        x: e.mr.x + a,
                        y: e.mr.y + r
                    }
                },
                e.mb.corner = {
                    tl: {
                        x: e.mb.x - a,
                        y: e.mb.y - r
                    },
                    tr: {
                        x: e.mb.x + r,
                        y: e.mb.y - a
                    },
                    bl: {
                        x: e.mb.x - r,
                        y: e.mb.y + a
                    },
                    br: {
                        x: e.mb.x + a,
                        y: e.mb.y + r
                    }
                },
                e.mtr.corner = {
                    tl: {
                        x: e.mtr.x - a + s * this.rotatingPointOffset,
                        y: e.mtr.y - r - l * this.rotatingPointOffset
                    },
                    tr: {
                        x: e.mtr.x + r + s * this.rotatingPointOffset,
                        y: e.mtr.y - a - l * this.rotatingPointOffset
                    },
                    bl: {
                        x: e.mtr.x - r + s * this.rotatingPointOffset,
                        y: e.mtr.y + a - l * this.rotatingPointOffset
                    },
                    br: {
                        x: e.mtr.x + a + s * this.rotatingPointOffset,
                        y: e.mtr.y + r - l * this.rotatingPointOffset
                    }
                }
            },
            drawBorders: function(e) {
                if (!this.hasBorders)
                    return this;
                var t = this.padding
                  , n = 2 * t
                  , i = 2 * ~~(this.strokeWidth / 2);
                e.save(),
                e.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1,
                e.strokeStyle = this.borderColor;
                var o = 1 / this._constrainScale(this.scaleX)
                  , r = 1 / this._constrainScale(this.scaleY);
                e.lineWidth = 1 / this.borderScaleFactor,
                e.scale(o, r);
                var a = this.getWidth()
                  , s = this.getHeight();
                if (e.strokeRect(~~(-a / 2 - t - i / 2 * this.scaleX) - .5, ~~(-s / 2 - t - i / 2 * this.scaleY) - .5, 1 + ~~(a + n + i * this.scaleX), 1 + ~~(s + n + i * this.scaleY)),
                this.hasRotatingPoint && !this.get("lockRotation") && this.hasControls) {
                    var l = (this.flipY ? s + i * this.scaleY + 2 * t : -s - i * this.scaleY - 2 * t) / 2;
                    e.beginPath(),
                    e.moveTo(0, l),
                    e.lineTo(0, l + (this.flipY ? this.rotatingPointOffset : -this.rotatingPointOffset)),
                    e.closePath(),
                    e.stroke()
                }
                return e.restore(),
                this
            },
            drawControls: function(e) {
                if (!this.hasControls)
                    return this;
                var t, n, i = this.cornerSize, o = i / 2, r = ~~(this.strokeWidth / 2), a = -this.width / 2, s = -this.height / 2, l = i / this.scaleX, c = i / this.scaleY, u = this.padding / this.scaleX, d = this.padding / this.scaleY, h = o / this.scaleY, p = o / this.scaleX, f = (o - i) / this.scaleX, g = (o - i) / this.scaleY, m = this.height, y = this.width, v = this.transparentCorners ? "strokeRect" : "fillRect", b = this.transparentCorners, w = "undefined" != typeof G_vmlCanvasManager;
                return e.save(),
                e.lineWidth = 1 / Math.max(this.scaleX, this.scaleY),
                e.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1,
                e.strokeStyle = e.fillStyle = this.cornerColor,
                this.hideResizers || (t = a - p - r - u,
                n = s - h - r - d,
                w || b || e.clearRect(t, n, l, c),
                e[v](t, n, l, c),
                t = a + y - p + r + u,
                n = s - h - r - d,
                w || b || e.clearRect(t, n, l, c),
                e[v](t, n, l, c),
                t = a - p - r - u,
                n = s + m + g + r + d,
                w || b || e.clearRect(t, n, l, c),
                e[v](t, n, l, c),
                t = a + y + f + r + u,
                n = s + m + g + r + d,
                w || b || e.clearRect(t, n, l, c),
                e[v](t, n, l, c),
                this.get("lockUniScaling") || (t = a + y / 2 - p,
                n = s - h - r - d,
                w || e.clearRect(t, n, l, c),
                e[v](t, n, l, c),
                t = a + y / 2 - p,
                n = s + m + g + r + d,
                w || e.clearRect(t, n, l, c),
                e[v](t, n, l, c),
                t = a + y + f + r + u,
                n = s + m / 2 - h,
                w || e.clearRect(t, n, l, c),
                e[v](t, n, l, c),
                t = a - p - r - u,
                n = s + m / 2 - h,
                w || e.clearRect(t, n, l, c),
                e[v](t, n, l, c))),
                this.hasRotatingPoint && (t = a + y / 2 - p,
                n = this.flipY ? s + m + this.rotatingPointOffset / this.scaleY - c / 2 + r + d : s - this.rotatingPointOffset / this.scaleY - c / 2 - r - d,
                w || b || e.clearRect(t, n, l, c),
                e[v](t, n, l, c)),
                e.restore(),
                this
            }
        })
    }(),
    fabric.util.object.extend(fabric.StaticCanvas.prototype, {
        FX_DURATION: 500,
        fxCenterObjectH: function(e, t) {
            var n = function() {}
              , i = (t = t || {}).onComplete || n
              , o = t.onChange || n
              , r = this;
            return fabric.util.animate({
                startValue: e.get("left"),
                endValue: this.getCenter().left,
                duration: this.FX_DURATION,
                onChange: function(t) {
                    e.set("left", t),
                    r.renderAll(),
                    o()
                },
                onComplete: function() {
                    e.setCoords(),
                    i()
                }
            }),
            this
        },
        fxCenterObjectV: function(e, t) {
            var n = function() {}
              , i = (t = t || {}).onComplete || n
              , o = t.onChange || n
              , r = this;
            return fabric.util.animate({
                startValue: e.get("top"),
                endValue: this.getCenter().top,
                duration: this.FX_DURATION,
                onChange: function(t) {
                    e.set("top", t),
                    r.renderAll(),
                    o()
                },
                onComplete: function() {
                    e.setCoords(),
                    i()
                }
            }),
            this
        },
        fxRemove: function(e, t) {
            var n = function() {}
              , i = (t = t || {}).onComplete || n
              , o = t.onChange || n
              , r = this;
            return fabric.util.animate({
                startValue: e.get("opacity"),
                endValue: 0,
                duration: this.FX_DURATION,
                onStart: function() {
                    e.set("active", !1)
                },
                onChange: function(t) {
                    e.set("opacity", t),
                    r.renderAll(),
                    o()
                },
                onComplete: function() {
                    r.remove(e),
                    i()
                }
            }),
            this
        }
    }),
    fabric.util.object.extend(fabric.Object.prototype, {
        animate: function() {
            if (arguments[0] && "object" == typeof arguments[0]) {
                var e, t, n = [];
                for (e in arguments[0])
                    n.push(e);
                for (var i = 0, o = n.length; i < o; i++)
                    e = n[i],
                    t = i !== o - 1,
                    this._animate(e, arguments[0][e], arguments[1], t)
            } else
                this._animate.apply(this, arguments);
            return this
        },
        _animate: function(e, t, n, i) {
            var o, r = this;
            t = t.toString(),
            n = n ? fabric.util.object.clone(n) : {},
            ~e.indexOf(".") && (o = e.split("."));
            var a = o ? this.get(o[0])[o[1]] : this.get(e);
            "from"in n || (n.from = a),
            t = ~t.indexOf("=") ? a + parseFloat(t.replace("=", "")) : parseFloat(t),
            fabric.util.animate({
                startValue: n.from,
                endValue: t,
                byValue: n.by,
                easing: n.easing,
                duration: n.duration,
                abort: n.abort && function() {
                    return n.abort.call(r)
                }
                ,
                onChange: function(t) {
                    o ? r[o[0]][o[1]] = t : r.set(e, t),
                    i || n.onChange && n.onChange()
                },
                onComplete: function() {
                    i || (r.setCoords(),
                    n.onComplete && n.onComplete())
                }
            })
        }
    }),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = t.util.object.extend
          , i = {
            x1: 1,
            x2: 1,
            y1: 1,
            y2: 1
        }
          , o = t.StaticCanvas.supports("setLineDash");
        t.Line ? t.warn("fabric.Line is already defined") : (t.Line = t.util.createClass(t.Object, {
            type: "line",
            initialize: function(e, t) {
                t = t || {},
                e || (e = [0, 0, 0, 0]),
                this.callSuper("initialize", t),
                this.set("x1", e[0]),
                this.set("y1", e[1]),
                this.set("x2", e[2]),
                this.set("y2", e[3]),
                this._setWidthHeight(t)
            },
            _setWidthHeight: function(e) {
                e || (e = {}),
                this.set("width", Math.abs(this.x2 - this.x1) || 1),
                this.set("height", Math.abs(this.y2 - this.y1) || 1),
                this.set("left", "left"in e ? e.left : Math.min(this.x1, this.x2) + this.width / 2),
                this.set("top", "top"in e ? e.top : Math.min(this.y1, this.y2) + this.height / 2)
            },
            _set: function(e, t) {
                return this[e] = t,
                e in i && this._setWidthHeight(),
                this
            },
            _render: function(e) {
                if (e.beginPath(),
                this.group && "group" !== this.group.type && !this.transformMatrix && e.translate(-this.group.width / 2 + this.left, -this.group.height / 2 + this.top),
                !this.strokeDashArray || this.strokeDashArray && o) {
                    var t = this.x1 <= this.x2 ? -1 : 1
                      , n = this.y1 <= this.y2 ? -1 : 1;
                    e.moveTo(1 === this.width ? 0 : t * this.width / 2, 1 === this.height ? 0 : n * this.height / 2),
                    e.lineTo(1 === this.width ? 0 : -1 * t * this.width / 2, 1 === this.height ? 0 : -1 * n * this.height / 2)
                }
                e.lineWidth = this.strokeWidth;
                var i = e.strokeStyle;
                e.strokeStyle = this.stroke || e.fillStyle,
                this._renderStroke(e),
                e.strokeStyle = i
            },
            _renderDashedStroke: function(e) {
                var n = this.x1 <= this.x2 ? -1 : 1
                  , i = this.y1 <= this.y2 ? -1 : 1
                  , o = 1 === this.width ? 0 : n * this.width / 2
                  , r = 1 === this.height ? 0 : i * this.height / 2;
                e.beginPath(),
                t.util.drawDashedLine(e, o, r, -o, -r, this.strokeDashArray),
                e.closePath()
            },
            toObject: function(e) {
                return n(this.callSuper("toObject", e), {
                    x1: this.get("x1"),
                    y1: this.get("y1"),
                    x2: this.get("x2"),
                    y2: this.get("y2")
                })
            },
            toSVG: function() {
                var e = this._createBaseSVGMarkup();
                return e.push("<line ", 'x1="', this.get("x1"), '" y1="', this.get("y1"), '" x2="', this.get("x2"), '" y2="', this.get("y2"), '" style="', this.getSvgStyles(), '"/>'),
                e.join("")
            },
            complexity: function() {
                return 1
            }
        }),
        t.Line.fromObject = function(e) {
            var n = [e.x1, e.y1, e.x2, e.y2];
            return new t.Line(n,e)
        }
        )
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = 2 * Math.PI
          , i = t.util.object.extend;
        t.Circle ? t.warn("fabric.Circle is already defined.") : (t.Circle = t.util.createClass(t.Object, {
            type: "circle",
            initialize: function(e) {
                e = e || {},
                this.set("radius", e.radius || 0),
                this.callSuper("initialize", e)
            },
            _set: function(e, t) {
                return this.callSuper("_set", e, t),
                "radius" === e && this.setRadius(t),
                this
            },
            toObject: function(e) {
                return i(this.callSuper("toObject", e), {
                    radius: this.get("radius")
                })
            },
            toSVG: function() {
                var e = this._createBaseSVGMarkup();
                return e.push("<circle ", 'cx="0" cy="0" ', 'r="', this.radius, '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), '"/>'),
                e.join("")
            },
            _render: function(e, t) {
                e.beginPath(),
                e.globalAlpha = this.group ? e.globalAlpha * this.opacity : this.opacity,
                e.arc(t ? this.left : 0, t ? this.top : 0, this.radius, 0, n, !1),
                e.closePath(),
                this._renderFill(e),
                this._renderStroke(e)
            },
            getRadiusX: function() {
                return this.get("radius") * this.get("scaleX")
            },
            getRadiusY: function() {
                return this.get("radius") * this.get("scaleY")
            },
            setRadius: function(e) {
                this.radius = e,
                this.set("width", 2 * e).set("height", 2 * e)
            },
            complexity: function() {
                return 1
            }
        }),
        t.Circle.fromObject = function(e) {
            return new t.Circle(e)
        }
        )
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {});
        t.Triangle ? t.warn("fabric.Triangle is already defined") : (t.Triangle = t.util.createClass(t.Object, {
            type: "triangle",
            initialize: function(e) {
                e = e || {},
                this.callSuper("initialize", e),
                this.set("width", e.width || 100).set("height", e.height || 100)
            },
            _render: function(e) {
                var t = this.width / 2
                  , n = this.height / 2;
                e.beginPath(),
                e.moveTo(-t, n),
                e.lineTo(0, -n),
                e.lineTo(t, n),
                e.closePath(),
                this._renderFill(e),
                this._renderStroke(e)
            },
            _renderDashedStroke: function(e) {
                var n = this.width / 2
                  , i = this.height / 2;
                e.beginPath(),
                t.util.drawDashedLine(e, -n, i, 0, -i, this.strokeDashArray),
                t.util.drawDashedLine(e, 0, -i, n, i, this.strokeDashArray),
                t.util.drawDashedLine(e, n, i, -n, i, this.strokeDashArray),
                e.closePath()
            },
            toSVG: function() {
                var e = this._createBaseSVGMarkup()
                  , t = this.width / 2
                  , n = this.height / 2
                  , i = [-t + " " + n, "0 " + -n, t + " " + n].join(",");
                return e.push("<polygon ", 'points="', i, '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), '"/>'),
                e.join("")
            },
            complexity: function() {
                return 1
            }
        }),
        t.Triangle.fromObject = function(e) {
            return new t.Triangle(e)
        }
        )
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = 2 * Math.PI
          , i = t.util.object.extend;
        t.Ellipse ? t.warn("fabric.Ellipse is already defined.") : (t.Ellipse = t.util.createClass(t.Object, {
            type: "ellipse",
            rx: 0,
            ry: 0,
            initialize: function(e) {
                e = e || {},
                this.callSuper("initialize", e),
                this.set("rx", e.rx || 0),
                this.set("ry", e.ry || 0),
                this.set("width", 2 * this.get("rx")),
                this.set("height", 2 * this.get("ry"))
            },
            toObject: function(e) {
                return i(this.callSuper("toObject", e), {
                    rx: this.get("rx"),
                    ry: this.get("ry")
                })
            },
            toSVG: function() {
                var e = this._createBaseSVGMarkup();
                return e.push("<ellipse ", 'rx="', this.get("rx"), '" ry="', this.get("ry"), '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), '"/>'),
                e.join("")
            },
            render: function(e, t) {
                if (0 !== this.rx && 0 !== this.ry)
                    return this.callSuper("render", e, t)
            },
            _render: function(e, t) {
                e.beginPath(),
                e.save(),
                e.globalAlpha = this.group ? e.globalAlpha * this.opacity : this.opacity,
                this.transformMatrix && this.group && e.translate(this.cx, this.cy),
                e.transform(1, 0, 0, this.ry / this.rx, 0, 0),
                e.arc(t ? this.left : 0, t ? this.top : 0, this.rx, 0, n, !1),
                this._renderFill(e),
                this._renderStroke(e),
                e.restore()
            },
            complexity: function() {
                return 1
            }
        }),
        t.Ellipse.fromObject = function(e) {
            return new t.Ellipse(e)
        }
        )
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = t.util.object.extend;
        if (t.Rect)
            console.warn("fabric.Rect is already defined");
        else {
            var i = t.Object.prototype.stateProperties.concat();
            i.push("rx", "ry"),
            t.Rect = t.util.createClass(t.Object, {
                stateProperties: i,
                type: "rect",
                rx: 0,
                ry: 0,
                strokeDashArray: null,
                initialize: function(e) {
                    e = e || {},
                    this.callSuper("initialize", e),
                    this._initRxRy(),
                    this.x = e.x || 0,
                    this.y = e.y || 0
                },
                _initRxRy: function() {
                    this.rx && !this.ry ? this.ry = this.rx : this.ry && !this.rx && (this.rx = this.ry)
                },
                _render: function(e) {
                    var t = this.rx || 0
                      , n = this.ry || 0
                      , i = -this.width / 2
                      , o = -this.height / 2
                      , r = this.width
                      , a = this.height
                      , s = this.group && "group" !== this.group.type;
                    e.beginPath(),
                    e.globalAlpha = s ? e.globalAlpha * this.opacity : this.opacity,
                    this.transformMatrix && s && e.translate(this.width / 2 + this.x, this.height / 2 + this.y),
                    !this.transformMatrix && s && e.translate(-this.group.width / 2 + this.width / 2 + this.x, -this.group.height / 2 + this.height / 2 + this.y);
                    var l = 0 !== t || 0 !== n;
                    e.moveTo(i + t, o),
                    e.lineTo(i + r - t, o),
                    l && e.quadraticCurveTo(i + r, o, i + r, o + n, i + r, o + n),
                    e.lineTo(i + r, o + a - n),
                    l && e.quadraticCurveTo(i + r, o + a, i + r - t, o + a, i + r - t, o + a),
                    e.lineTo(i + t, o + a),
                    l && e.quadraticCurveTo(i, o + a, i, o + a - n, i, o + a - n),
                    e.lineTo(i, o + n),
                    l && e.quadraticCurveTo(i, o, i + t, o, i + t, o),
                    e.closePath(),
                    this._renderFill(e),
                    this._renderStroke(e)
                },
                _renderDashedStroke: function(e) {
                    var n = -this.width / 2
                      , i = -this.height / 2
                      , o = this.width
                      , r = this.height;
                    e.beginPath(),
                    t.util.drawDashedLine(e, n, i, n + o, i, this.strokeDashArray),
                    t.util.drawDashedLine(e, n + o, i, n + o, i + r, this.strokeDashArray),
                    t.util.drawDashedLine(e, n + o, i + r, n, i + r, this.strokeDashArray),
                    t.util.drawDashedLine(e, n, i + r, n, i, this.strokeDashArray),
                    e.closePath()
                },
                _normalizeLeftTopProperties: function(e) {
                    return "left"in e && this.set("left", e.left + this.getWidth() / 2),
                    this.set("x", e.left || 0),
                    "top"in e && this.set("top", e.top + this.getHeight() / 2),
                    this.set("y", e.top || 0),
                    this
                },
                toObject: function(e) {
                    return n(this.callSuper("toObject", e), {
                        rx: this.get("rx") || 0,
                        ry: this.get("ry") || 0,
                        x: this.get("x"),
                        y: this.get("y")
                    })
                },
                toSVG: function() {
                    var e = this._createBaseSVGMarkup();
                    return e.push("<rect ", 'x="', -1 * this.width / 2, '" y="', -1 * this.height / 2, '" rx="', this.get("rx"), '" ry="', this.get("ry"), '" width="', this.width, '" height="', this.height, '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), '"/>'),
                    e.join("")
                },
                complexity: function() {
                    return 1
                }
            }),
            t.Rect.fromObject = function(e) {
                return new t.Rect(e)
            }
        }
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = t.util.toFixed;
        t.util.array.min;
        t.Polyline ? t.warn("fabric.Polyline is already defined") : (t.Polyline = t.util.createClass(t.Object, {
            type: "polyline",
            initialize: function(e, t, n) {
                t = t || {},
                this.set("points", e),
                this.callSuper("initialize", t),
                this._calcDimensions(n)
            },
            _calcDimensions: function(e) {
                return t.Polygon.prototype._calcDimensions.call(this, e)
            },
            toObject: function(e) {
                return t.Polygon.prototype.toObject.call(this, e)
            },
            toSVG: function() {
                for (var e = [], t = this._createBaseSVGMarkup(), i = 0, o = this.points.length; i < o; i++)
                    e.push(n(this.points[i].x, 2), ",", n(this.points[i].y, 2), " ");
                return t.push("<polyline ", 'points="', e.join(""), '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), '"/>'),
                t.join("")
            },
            _render: function(e) {
                var t;
                e.beginPath(),
                e.moveTo(this.points[0].x, this.points[0].y);
                for (var n = 0, i = this.points.length; n < i; n++)
                    t = this.points[n],
                    e.lineTo(t.x, t.y);
                this._renderFill(e),
                this._renderStroke(e)
            },
            _renderDashedStroke: function(e) {
                var n, i;
                e.beginPath();
                for (var o = 0, r = this.points.length; o < r; o++)
                    n = this.points[o],
                    i = this.points[o + 1] || n,
                    t.util.drawDashedLine(e, n.x, n.y, i.x, i.y, this.strokeDashArray)
            },
            complexity: function() {
                return this.get("points").length
            }
        }),
        t.Polyline.fromObject = function(e) {
            var n = e.points;
            return new t.Polyline(n,e,!0)
        }
        )
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = t.util.object.extend
          , i = t.util.array.min
          , o = t.util.array.max
          , r = t.util.toFixed;
        t.Polygon ? t.warn("fabric.Polygon is already defined") : (t.Polygon = t.util.createClass(t.Object, {
            type: "polygon",
            initialize: function(e, t, n) {
                t = t || {},
                this.points = e,
                this.callSuper("initialize", t),
                this._calcDimensions(n)
            },
            _calcDimensions: function(e) {
                var t = this.points
                  , n = i(t, "x")
                  , r = i(t, "y")
                  , a = o(t, "x")
                  , s = o(t, "y");
                if (this.width = a - n || 1,
                this.height = s - r || 1,
                this.minX = n,
                this.minY = r,
                !e) {
                    var l = this.width / 2 + this.minX
                      , c = this.height / 2 + this.minY;
                    this.points.forEach(function(e) {
                        e.x -= l,
                        e.y -= c
                    }, this)
                }
            },
            toObject: function(e) {
                return n(this.callSuper("toObject", e), {
                    points: this.points.concat()
                })
            },
            toSVG: function() {
                for (var e = [], t = this._createBaseSVGMarkup(), n = 0, i = this.points.length; n < i; n++)
                    e.push(r(this.points[n].x, 2), ",", r(this.points[n].y, 2), " ");
                return t.push("<polygon ", 'points="', e.join(""), '" style="', this.getSvgStyles(), '" transform="', this.getSvgTransform(), '"/>'),
                t.join("")
            },
            _render: function(e) {
                var t;
                e.beginPath(),
                e.moveTo(this.points[0].x, this.points[0].y);
                for (var n = 0, i = this.points.length; n < i; n++)
                    t = this.points[n],
                    e.lineTo(t.x, t.y);
                this._renderFill(e),
                (this.stroke || this.strokeDashArray) && (e.closePath(),
                this._renderStroke(e))
            },
            _renderDashedStroke: function(e) {
                var n, i;
                e.beginPath();
                for (var o = 0, r = this.points.length; o < r; o++)
                    n = this.points[o],
                    i = this.points[o + 1] || this.points[0],
                    t.util.drawDashedLine(e, n.x, n.y, i.x, i.y, this.strokeDashArray);
                e.closePath()
            },
            complexity: function() {
                return this.points.length
            }
        }),
        t.Polygon.fromObject = function(e) {
            return new t.Polygon(e.points,e,!0)
        }
        )
    }(void 0 !== exports ? exports : this),
    function(e) {
        function t(e) {
            return "H" === e[0] ? e[1] : e[e.length - 2]
        }
        function n(e) {
            return "V" === e[0] ? e[1] : e[e.length - 1]
        }
        var i = {
            m: 2,
            l: 2,
            h: 1,
            v: 1,
            c: 6,
            s: 4,
            q: 4,
            t: 2,
            a: 7
        }
          , o = e.fabric || (e.fabric = {})
          , r = o.util.array.min
          , a = o.util.array.max
          , s = o.util.object.extend
          , l = Object.prototype.toString
          , c = o.util.drawArc;
        o.Path ? o.warn("fabric.Path is already defined") : (o.Path = o.util.createClass(o.Object, {
            type: "path",
            initialize: function(e, t) {
                if (t = t || {},
                this.setOptions(t),
                !e)
                    throw new Error("`path` argument is required");
                var n = "[object Array]" === l.call(e);
                this.path = n ? e : e.match && e.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi),
                this.path && (n || (this.path = this._parsePath()),
                this._initializePath(t),
                t.sourcePath && this.setSourcePath(t.sourcePath))
            },
            _initializePath: function(e) {
                var t = "width"in e && null != e.width
                  , n = "height"in e && null != e.width
                  , i = "left"in e
                  , o = "top"in e
                  , r = i ? this.left : 0
                  , a = o ? this.top : 0;
                t && n ? (o || (this.top = this.height / 2),
                i || (this.left = this.width / 2)) : (s(this, this._parseDimensions()),
                t && (this.width = e.width),
                n && (this.height = e.height)),
                this.pathOffset = this.pathOffset || this._calculatePathOffset(r, a)
            },
            _calculatePathOffset: function(e, t) {
                return {
                    x: this.left - e - this.width / 2,
                    y: this.top - t - this.height / 2
                }
            },
            _render: function(e) {
                for (var t, n, i, o, r, a = null, s = 0, l = 0, u = 0, d = 0, h = -(this.width / 2 + this.pathOffset.x), p = -(this.height / 2 + this.pathOffset.y), f = 0, g = this.path.length; f < g; ++f) {
                    switch ((t = this.path[f])[0]) {
                    case "l":
                        s += t[1],
                        l += t[2],
                        e.lineTo(s + h, l + p);
                        break;
                    case "L":
                        s = t[1],
                        l = t[2],
                        e.lineTo(s + h, l + p);
                        break;
                    case "h":
                        s += t[1],
                        e.lineTo(s + h, l + p);
                        break;
                    case "H":
                        s = t[1],
                        e.lineTo(s + h, l + p);
                        break;
                    case "v":
                        l += t[1],
                        e.lineTo(s + h, l + p);
                        break;
                    case "V":
                        l = t[1],
                        e.lineTo(s + h, l + p);
                        break;
                    case "m":
                        s += t[1],
                        l += t[2],
                        e[!a || "m" !== a[0] && "M" !== a[0] ? "moveTo" : "lineTo"](s + h, l + p);
                        break;
                    case "M":
                        s = t[1],
                        l = t[2],
                        e[!a || "m" !== a[0] && "M" !== a[0] ? "moveTo" : "lineTo"](s + h, l + p);
                        break;
                    case "c":
                        n = s + t[5],
                        i = l + t[6],
                        u = s + t[3],
                        d = l + t[4],
                        e.bezierCurveTo(s + t[1] + h, l + t[2] + p, u + h, d + p, n + h, i + p),
                        s = n,
                        l = i;
                        break;
                    case "C":
                        s = t[5],
                        l = t[6],
                        u = t[3],
                        d = t[4],
                        e.bezierCurveTo(t[1] + h, t[2] + p, u + h, d + p, s + h, l + p);
                        break;
                    case "s":
                        n = s + t[3],
                        i = l + t[4],
                        u = u ? 2 * s - u : s,
                        d = d ? 2 * l - d : l,
                        e.bezierCurveTo(u + h, d + p, s + t[1] + h, l + t[2] + p, n + h, i + p),
                        u = s + t[1],
                        d = l + t[2],
                        s = n,
                        l = i;
                        break;
                    case "S":
                        n = t[3],
                        i = t[4],
                        u = 2 * s - u,
                        d = 2 * l - d,
                        e.bezierCurveTo(u + h, d + p, t[1] + h, t[2] + p, n + h, i + p),
                        s = n,
                        l = i,
                        u = t[1],
                        d = t[2];
                        break;
                    case "q":
                        n = s + t[3],
                        i = l + t[4],
                        u = s + t[1],
                        d = l + t[2],
                        e.quadraticCurveTo(u + h, d + p, n + h, i + p),
                        s = n,
                        l = i;
                        break;
                    case "Q":
                        n = t[3],
                        i = t[4],
                        e.quadraticCurveTo(t[1] + h, t[2] + p, n + h, i + p),
                        s = n,
                        l = i,
                        u = t[1],
                        d = t[2];
                        break;
                    case "t":
                        n = s + t[1],
                        i = l + t[2],
                        null === a[0].match(/[QqTt]/) ? (u = s,
                        d = l) : "t" === a[0] ? (u = 2 * s - o,
                        d = 2 * l - r) : "q" === a[0] && (u = 2 * s - u,
                        d = 2 * l - d),
                        o = u,
                        r = d,
                        e.quadraticCurveTo(u + h, d + p, n + h, i + p),
                        l = i,
                        u = (s = n) + t[1],
                        d = l + t[2];
                        break;
                    case "T":
                        n = t[1],
                        i = t[2],
                        u = 2 * s - u,
                        d = 2 * l - d,
                        e.quadraticCurveTo(u + h, d + p, n + h, i + p),
                        s = n,
                        l = i;
                        break;
                    case "a":
                        c(e, s + h, l + p, [t[1], t[2], t[3], t[4], t[5], t[6] + s + h, t[7] + l + p]),
                        s += t[6],
                        l += t[7];
                        break;
                    case "A":
                        c(e, s + h, l + p, [t[1], t[2], t[3], t[4], t[5], t[6] + h, t[7] + p]),
                        s = t[6],
                        l = t[7];
                        break;
                    case "z":
                    case "Z":
                        e.closePath()
                    }
                    a = t
                }
            },
            render: function(e, t) {
                if (this.visible) {
                    e.save();
                    var n = this.transformMatrix;
                    n && e.transform(n[0], n[1], n[2], n[3], n[4], n[5]),
                    t || this.transform(e),
                    this.overlayFill ? e.fillStyle = this.overlayFill : this.fill && (e.fillStyle = this.fill.toLive ? this.fill.toLive(e) : this.fill),
                    this.stroke && (e.lineWidth = this.strokeWidth,
                    e.lineCap = this.strokeLineCap,
                    e.lineJoin = this.strokeLineJoin,
                    e.miterLimit = this.strokeMiterLimit,
                    e.strokeStyle = this.stroke.toLive ? this.stroke.toLive(e) : this.stroke),
                    this._setShadow(e),
                    this.clipTo && o.util.clipContext(this, e),
                    e.beginPath(),
                    this._render(e),
                    this._renderFill(e),
                    this._renderStroke(e),
                    this.clipTo && e.restore(),
                    this._removeShadow(e),
                    !t && this.active && (this.drawBorders(e),
                    this.drawControls(e)),
                    e.restore()
                }
            },
            toString: function() {
                return "#<fabric.Path (" + this.complexity() + '): { "top": ' + this.top + ', "left": ' + this.left + " }>"
            },
            toObject: function(e) {
                var t = s(this.callSuper("toObject", e), {
                    path: this.path,
                    pathOffset: this.pathOffset
                });
                return this.sourcePath && (t.sourcePath = this.sourcePath),
                this.transformMatrix && (t.transformMatrix = this.transformMatrix),
                t
            },
            toDatalessObject: function(e) {
                var t = this.toObject(e);
                return this.sourcePath && (t.path = this.sourcePath),
                delete t.sourcePath,
                t
            },
            toSVG: function() {
                for (var e = [], t = this._createBaseSVGMarkup(), n = 0, i = this.path.length; n < i; n++)
                    e.push(this.path[n].join(" "));
                var o = e.join(" ");
                return t.push('<g transform="', this.group ? "" : this.getSvgTransform(), '">', "<path ", 'd="', o, '" style="', this.getSvgStyles(), '" transform="translate(', -this.width / 2, " ", -this.height / 2, ")", '" stroke-linecap="round" ', "/>", "</g>"),
                t.join("")
            },
            complexity: function() {
                return this.path.length
            },
            _parsePath: function() {
                for (var e, t, n, o, r, a = [], s = [], l = /(-?\.\d+)|(-?\d+(\.\d+)?)/g, c = 0, u = this.path.length; c < u; c++) {
                    for (o = (e = this.path[c]).slice(1).trim(),
                    s.length = 0; n = l.exec(o); )
                        s.push(n[0]);
                    r = [e.charAt(0)];
                    for (var d = 0, h = s.length; d < h; d++)
                        t = parseFloat(s[d]),
                        isNaN(t) || r.push(t);
                    var p = r[0].toLowerCase()
                      , f = i[p];
                    if (r.length - 1 > f)
                        for (var g = 1, m = r.length; g < m; g += f)
                            a.push([r[0]].concat(r.slice(g, g + f)));
                    else
                        a.push(r)
                }
                return a
            },
            _parseDimensions: function() {
                var e, i, o, s, l = [], c = [], u = !1;
                this.path.forEach(function(r, a) {
                    "H" !== r[0] && (e = t(0 === a ? r : this.path[a - 1])),
                    "V" !== r[0] && (i = n(0 === a ? r : this.path[a - 1])),
                    r[0] === r[0].toLowerCase() && (u = !0),
                    o = u ? e + t(r) : "V" === r[0] ? e : t(r),
                    s = u ? i + n(r) : "H" === r[0] ? i : n(r);
                    var d = parseInt(o, 10);
                    isNaN(d) || l.push(d),
                    d = parseInt(s, 10),
                    isNaN(d) || c.push(d)
                }, this);
                var d = r(l)
                  , h = r(c)
                  , p = a(l) - d
                  , f = a(c) - h;
                return {
                    left: this.left + (d + p / 2),
                    top: this.top + (h + f / 2),
                    width: p,
                    height: f
                }
            }
        }),
        o.Path.fromObject = function(e, t) {
            "string" == typeof e.path ? o.loadSVGFromURL(e.path, function(n) {
                var i = n[0]
                  , r = e.path;
                delete e.path,
                o.util.object.extend(i, e),
                i.setSourcePath(r),
                t(i)
            }) : t(new o.Path(e.path,e))
        }
        ,
        o.Path.async = !0)
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = t.util.object.extend
          , i = t.util.array.invoke
          , o = t.Object.prototype.toObject;
        t.PathGroup ? t.warn("fabric.PathGroup is already defined") : (t.PathGroup = t.util.createClass(t.Path, {
            type: "path-group",
            fill: "",
            initialize: function(e, t) {
                t = t || {},
                this.paths = e || [];
                for (var n = this.paths.length; n--; )
                    this.paths[n].group = this;
                this.setOptions(t),
                this.setCoords(),
                t.sourcePath && this.setSourcePath(t.sourcePath)
            },
            render: function(e) {
                if (this.visible) {
                    e.save();
                    var n = this.transformMatrix;
                    n && e.transform(n[0], n[1], n[2], n[3], n[4], n[5]),
                    this.transform(e),
                    this._setShadow(e),
                    this.clipTo && t.util.clipContext(this, e);
                    for (var i = 0, o = this.paths.length; i < o; ++i)
                        this.paths[i].render(e, !0);
                    this.clipTo && e.restore(),
                    this._removeShadow(e),
                    this.active && (this.drawBorders(e),
                    this.drawControls(e)),
                    e.restore()
                }
            },
            _set: function(e, t) {
                if (("fill" === e || "overlayFill" === e) && t && this.isSameColor())
                    for (var n = this.paths.length; n--; )
                        this.paths[n]._set(e, t);
                return this.callSuper("_set", e, t)
            },
            toObject: function(e) {
                return n(o.call(this, e), {
                    paths: i(this.getObjects(), "toObject", e),
                    sourcePath: this.sourcePath
                })
            },
            toDatalessObject: function(e) {
                var t = this.toObject(e);
                return this.sourcePath && (t.paths = this.sourcePath),
                t
            },
            toSVG: function() {
                for (var e = this.getObjects(), t = ["<g ", 'style="', this.getSvgStyles(), '" ', 'transform="', this.getSvgTransform(), '" ', ">"], n = 0, i = e.length; n < i; n++)
                    t.push(e[n].toSVG());
                return t.push("</g>"),
                t.join("")
            },
            toString: function() {
                return "#<fabric.PathGroup (" + this.complexity() + "): { top: " + this.top + ", left: " + this.left + " }>"
            },
            isSameColor: function() {
                var e = this.getObjects()[0].get("fill");
                return this.getObjects().every(function(t) {
                    return t.get("fill") === e
                })
            },
            complexity: function() {
                return this.paths.reduce(function(e, t) {
                    return e + (t && t.complexity ? t.complexity() : 0)
                }, 0)
            },
            toGrayscale: function() {
                for (var e = this.paths.length; e--; )
                    this.paths[e].toGrayscale();
                return this
            },
            getObjects: function() {
                return this.paths
            }
        }),
        t.PathGroup.fromObject = function(e, n) {
            "string" == typeof e.paths ? t.loadSVGFromURL(e.paths, function(i) {
                var o = e.paths;
                delete e.paths;
                var r = t.util.groupSVGElements(i, e, o);
                n(r)
            }) : t.util.enlivenObjects(e.paths, function(i) {
                delete e.paths,
                n(new t.PathGroup(i,e))
            })
        }
        ,
        t.PathGroup.async = !0)
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = t.util.object.extend
          , i = t.util.array.min
          , o = t.util.array.max
          , r = t.util.array.invoke;
        if (!t.Group) {
            var a = {
                lockMovementX: !0,
                lockMovementY: !0,
                lockRotation: !0,
                lockScalingX: !0,
                lockScalingY: !0,
                lockUniScaling: !0
            };
            t.Group = t.util.createClass(t.Object, t.Collection, {
                type: "group",
                initialize: function(e, t) {
                    t = t || {},
                    this._objects = e || [];
                    for (var i = this._objects.length; i--; )
                        this._objects[i].group = this;
                    this.originalState = {},
                    this.callSuper("initialize"),
                    this._calcBounds(),
                    this._updateObjectsCoords(),
                    t && n(this, t),
                    this._setOpacityIfSame(),
                    this.hasControls = !0,
                    this.setCoords(!0),
                    this.saveCoords()
                },
                _updateObjectsCoords: function() {
                    var e = this.left
                      , t = this.top;
                    this.forEachObject(function(n) {
                        var i = n.get("left")
                          , o = n.get("top");
                        n.set("originalLeft", i),
                        n.set("originalTop", o),
                        n.set("left", i - e),
                        n.set("top", o - t),
                        n.setCoords(),
                        n.__origHasControls = n.hasControls,
                        n.hasControls = !1
                    }, this)
                },
                toString: function() {
                    return "#<fabric.Group: (" + this.complexity() + ")>"
                },
                getObjects: function() {
                    return this._objects
                },
                addWithUpdate: function(e) {
                    return this._restoreObjectsState(),
                    this._objects.push(e),
                    e.group = this,
                    this.forEachObject(function(e) {
                        e.set("active", !0),
                        e.group = this
                    }, this),
                    this._calcBounds(),
                    this._updateObjectsCoords(),
                    this
                },
                removeWithUpdate: function(e) {
                    return this._restoreObjectsState(),
                    this.forEachObject(function(e) {
                        e.set("active", !0),
                        e.group = this
                    }, this),
                    this.remove(e),
                    this._calcBounds(),
                    this._updateObjectsCoords(),
                    this
                },
                _onObjectAdded: function(e) {
                    e.group = this
                },
                _onObjectRemoved: function(e) {
                    delete e.group,
                    e.set("active", !1)
                },
                delegatedProperties: {
                    fill: !0,
                    opacity: !0,
                    fontFamily: !0,
                    fontWeight: !0,
                    fontSize: !0,
                    fontStyle: !0,
                    lineHeight: !0,
                    textDecoration: !0,
                    textAlign: !0,
                    backgroundColor: !0
                },
                _set: function(e, t) {
                    if (e in this.delegatedProperties) {
                        var n = this._objects.length;
                        for (this[e] = t; n--; )
                            this._objects[n].set(e, t)
                    } else
                        this[e] = t
                },
                toObject: function(e) {
                    return n(this.callSuper("toObject", e), {
                        objects: r(this._objects, "toObject", e)
                    })
                },
                render: function(e, n) {
                    if (this.visible) {
                        e.save(),
                        this.transform(e);
                        var i = Math.max(this.scaleX, this.scaleY);
                        this.clipTo && t.util.clipContext(this, e);
                        for (var o = 0, r = this._objects.length; o < r; o++) {
                            var a = this._objects[o]
                              , s = a.borderScaleFactor
                              , l = a.hasRotatingPoint;
                            a.visible && (a.borderScaleFactor = i,
                            a.hasRotatingPoint = !1,
                            a.render(e),
                            a.borderScaleFactor = s,
                            a.hasRotatingPoint = l)
                        }
                        this.clipTo && e.restore(),
                        !n && this.active && (this.drawBorders(e),
                        this.drawControls(e)),
                        e.restore(),
                        this.setCoords()
                    }
                },
                _restoreObjectsState: function() {
                    return this._objects.forEach(this._restoreObjectState, this),
                    this
                },
                _restoreObjectState: function(e) {
                    var t = this.get("left")
                      , n = this.get("top")
                      , i = this.getAngle() * (Math.PI / 180)
                      , o = Math.cos(i) * e.get("top") * this.get("scaleY") + Math.sin(i) * e.get("left") * this.get("scaleX")
                      , r = -Math.sin(i) * e.get("top") * this.get("scaleY") + Math.cos(i) * e.get("left") * this.get("scaleX");
                    return e.setAngle(e.getAngle() + this.getAngle()),
                    e.set("left", t + r),
                    e.set("top", n + o),
                    e.set("scaleX", e.get("scaleX") * this.get("scaleX")),
                    e.set("scaleY", e.get("scaleY") * this.get("scaleY")),
                    e.setCoords(),
                    e.hasControls = e.__origHasControls,
                    delete e.__origHasControls,
                    e.set("active", !1),
                    e.setCoords(),
                    delete e.group,
                    this
                },
                destroy: function() {
                    return this._restoreObjectsState()
                },
                saveCoords: function() {
                    return this._originalLeft = this.get("left"),
                    this._originalTop = this.get("top"),
                    this
                },
                hasMoved: function() {
                    return this._originalLeft !== this.get("left") || this._originalTop !== this.get("top")
                },
                setObjectsCoords: function() {
                    return this.forEachObject(function(e) {
                        e.setCoords()
                    }),
                    this
                },
                _setOpacityIfSame: function() {
                    var e = this.getObjects()
                      , t = e[0] ? e[0].get("opacity") : 1;
                    e.every(function(e) {
                        return e.get("opacity") === t
                    }) && (this.opacity = t)
                },
                _calcBounds: function() {
                    for (var e, t, n, r, a, s, l = [], c = [], u = 0, d = this._objects.length; u < d; ++u)
                        for (var h in (r = this._objects[u]).setCoords(),
                        r.oCoords)
                            l.push(r.oCoords[h].x),
                            c.push(r.oCoords[h].y);
                    e = i(l),
                    n = o(l),
                    t = i(c),
                    a = n - e || 0,
                    s = o(c) - t || 0,
                    this.width = a,
                    this.height = s,
                    this.left = e + a / 2 || 0,
                    this.top = t + s / 2 || 0
                },
                toSVG: function() {
                    for (var e = [], t = this._objects.length; t--; )
                        e.push(this._objects[t].toSVG());
                    return '<g transform="' + this.getSvgTransform() + '">' + e.join("") + "</g>"
                },
                get: function(e) {
                    if (e in a) {
                        if (this[e])
                            return this[e];
                        for (var t = 0, n = this._objects.length; t < n; t++)
                            if (this._objects[t][e])
                                return !0;
                        return !1
                    }
                    return e in this.delegatedProperties ? this._objects[0] && this._objects[0].get(e) : this[e]
                }
            }),
            t.Group.fromObject = function(e, n) {
                t.util.enlivenObjects(e.objects, function(i) {
                    delete e.objects,
                    n && n(new t.Group(i,e))
                })
            }
            ,
            t.Group.async = !0
        }
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = fabric.util.object.extend;
        e.fabric || (e.fabric = {}),
        e.fabric.Image ? fabric.warn("fabric.Image is already defined.") : (fabric.Image = fabric.util.createClass(fabric.Object, {
            type: "image",
            initialize: function(e, t) {
                t || (t = {}),
                this.filters = [],
                this.callSuper("initialize", t),
                this._initElement(e),
                this._initConfig(t),
                t.filters && (this.filters = t.filters,
                this.applyFilters()),
                t.is_still && (this._is_still = !0)
            },
            syncAnimationDataOnUpdate: function(e) {
                if (this._animated && (e.anim_loop && (this._element.loop = this._model.get("anim_loop"),
                this._element.paused && this._element.loop && -1 === this._model.get("anim_paused_at") && this.restartAnimation(!0)),
                e.anim_paused_at)) {
                    const e = this._model.get("anim_paused_at");
                    e >= 0 ? (this._element.pause(),
                    this._element.currentTime = e) : this._element.play()
                }
            },
            getElement: function() {
                return this._element
            },
            setElement: function(e) {
                return this._element = e,
                this._originalElement = e,
                this
            },
            restartAnimation: function(e) {
                return this._element.currentTime = 0,
                e && (this.isPaused = !1),
                this
            },
            togglePause: function() {
                return this._element.paused ? (this._element.play(),
                this._element.loop || -1 !== this._model.get("anim_paused_at") ? this._model.save({
                    anim_paused_at: -1
                }) : d20.textchat.sendShout({
                    type: "play_anim_once",
                    id: this._model.get("id"),
                    time: Date.now()
                })) : (this._element.pause(),
                this._model.save({
                    anim_paused_at: this._element.currentTime
                })),
                this._element.paused
            },
            getOriginalSize: function() {
                var e = this.getElement();
                return {
                    width: e.width,
                    height: e.height
                }
            },
            render: function(e, t) {
                if (this.visible) {
                    e.save(),
                    e.globalCompositeOperation = "source-over";
                    var n = this.transformMatrix;
                    this.group && "group" !== this.group.type && e.translate(-this.group.width / 2 + this.width / 2, -this.group.height / 2 + this.height / 2),
                    n && e.transform(n[0], n[1], n[2], n[3], n[4], n[5]),
                    t || this.transform(e),
                    e.save(),
                    this._setShadow(e),
                    this.clipTo && fabric.util.clipContext(this, e),
                    this._canvasPoolActive ? this._splitRender(e) : this._render(e),
                    this.shadow && !this.shadow.affectStroke && this._removeShadow(e),
                    this._renderStroke(e),
                    this.clipTo && e.restore(),
                    e.restore(),
                    this._drawModelStatus(e),
                    this.active && !t && (this.drawBorders(e),
                    this.drawControls(e)),
                    e.restore()
                }
            },
            swap: function(e) {
                const t = {
                    element_only: !0,
                    usecors: !0,
                    video: d20.utils.isVideo(e) && {
                        seamless: !0
                    }
                };
                console.log("Executing swap, new source: ", e),
                t.video && this._animated && !this._element.paused && (t.video.start_time = this._element.currentTime);
                const n = this
                  , i = e=>{
                    n.setElement(e),
                    n.applyFilters(d20.engine.redrawScreenNextTick)
                }
                ;
                fabric.Image.fromURL(e, i, t)
            },
            _initializeAnimationData: function() {
                const e = this._model.get("anim_paused_at");
                return e >= 0 ? (this._element.pause(),
                this._element.currentTime = e) : this.restartAnimation(this._model.get("anim_autoplay")),
                this._element.loop = this._model.get("anim_loop"),
                this._has_play_pause_listeners || (this._has_play_pause_listeners = !0,
                this._element.addEventListener("play", this.trigger.bind(this, "play/pause", {
                    paused: !1
                })),
                this._element.addEventListener("pause", this.trigger.bind(this, "play/pause", {
                    paused: !0
                }))),
                this
            },
            _splitRender: function(e) {
                for (var t = -Math.floor(this.width / 2), n = -Math.floor(this.height / 2), i = this.width / this._element.width, o = this.height / this._element.height, r = 0; r < this._canvasPool.length; r++)
                    !0 === this._canvasPool[r].active && e.drawImage(this._canvasPool[r].canvas, t + Math.floor(this._canvasPool[r]._x * i), n + Math.floor(this._canvasPool[r]._y * o), Math.ceil(1024 * i), Math.ceil(1024 * o))
            },
            updateImageCache: function() {
                if (this._canvasPool)
                    for (var e = 0; e < this._canvasPool.length; e++)
                        this._canvasPool[e].active = !1;
                this._canvasPool || (this._canvasPool = []);
                var t = (new Date).getTime()
                  , n = 1024;
                if (!(this._element.width <= n && this._element.height <= n)) {
                    d20.engine.cachectx;
                    this._splitCache = [];
                    var i = Math.ceil(this._element.width / n)
                      , o = Math.ceil(this._element.height / n);
                    console.log("Cols: " + i + " Rows: " + o);
                    var r = 0;
                    for (e = 0; e < i; e++)
                        for (var a = 0; a < o; a++) {
                            this._canvasPool[r] || (this._canvasPool[r] = {
                                canvas: document.createElement("canvas")
                            },
                            this._canvasPool[r].canvas.width = n,
                            this._canvasPool[r].canvas.height = n,
                            this._canvasPool[r].canvas.style.display = "none",
                            this._canvasPool[r].ctx = this._canvasPool[r].canvas.getContext("2d")),
                            this._canvasPool[r].ctx.clearRect(0, 0, n, n);
                            var s = e == i - 1 ? this._element.width % n : n
                              , l = a == o - 1 ? this._element.height % n : n;
                            0 === s && (s = n),
                            0 === l && (l = n),
                            this._canvasPool[r].ctx.drawImage(this._element, n * e, n * a, s, l, 0, 0, s, l),
                            this._canvasPool[r]._x = e * n,
                            this._canvasPool[r]._y = a * n,
                            this._canvasPool[r].active = !0,
                            r++
                        }
                    console.log("Took " + ((new Date).getTime() - t) + "ms to generate cache.")
                }
            },
            _bar_defaults: {
                position: [3, 15],
                horizontal_margin: 3,
                vertical_padding: 2,
                height: 12,
                text_padding: 1,
                border_size: 1,
                stroke: "rgba(0,0,0,0.65)",
                text_stroke_size: 2,
                text_fill: "white",
                text_stroke: "black",
                font: "Arial"
            },
            renderPre: function(e, t) {
                if (t && t.should_update && this._model) {
                    this._controlled = this._model.currentPlayerControls(),
                    this._bar_data = _.defaults({
                        to_render: []
                    }, this._bar_defaults),
                    this._bar_data.width = this.width - 2 * this._bar_data.horizontal_margin;
                    const e = /\([^\)]*\)/g
                      , t = /\-?\d+/;
                    "compact" === this._model.attributes.compact_bar && (this._bar_data.height = this._bar_data.height / 2,
                    this._bar_data.vertical_padding = this._bar_data.vertical_padding / 2);
                    for (let n = 3; n > 0; --n) {
                        const i = {
                            actual_current: String(this._model.get(`bar${n}_value`)),
                            actual_max: String(this._model.get(`bar${n}_max`)),
                            show: this._model.get(`showplayers_bar${n}`),
                            edit: this._model.get(`playersedit_bar${n}`),
                            fill: `rgba(${d20.Campaign.tokendisplay[`bar${n}_rgb`]},0.75)`,
                            number: n
                        };
                        if ("compact" === this._model.attributes.compact_bar)
                            i.show_vals = !1;
                        else {
                            const e = this._model.get(`bar${n}_num_permission`);
                            i.show_vals = "editors" === e ? window.is_gm || this._controlled : "everyone" === e
                        }
                        let o = t.exec(i.actual_max.replace(e, " "))
                          , r = t.exec(i.actual_current.replace(e, " "));
                        o = o && o[0],
                        r = r && r[0],
                        o && r && (window.is_gm || i.show || this._controlled && i.edit) && (i.max = +o,
                        i.current = +r,
                        this._bar_data.to_render.push(i)),
                        "above" == this._model.attributes.bar_location ? (this._bar_data.position = [3, 1],
                        this._bar_data.position = d20.math.add(this._bar_data.position, [this.width / -2, this.height / -2], [0, -(this._bar_data.height + this._bar_data.vertical_padding)])) : "overlap_top" == this._model.attributes.bar_location ? (this._bar_data.position = [3, 15],
                        "compact" === this._model.attributes.compact_bar ? this._bar_data.position = d20.math.add(this._bar_data.position, [this.width / -2, this.height / -2], [0, -(2.2 * this._bar_data.height + this._bar_data.vertical_padding)]) : this._bar_data.position = d20.math.add(this._bar_data.position, [this.width / -2, this.height / -2], [0, -(this._bar_data.height + this._bar_data.vertical_padding)])) : "overlap_bottom" == this._model.attributes.bar_location ? (this._bar_data.position = [3, 1 + this.height],
                        this._bar_data.position = d20.math.add(this._bar_data.position, [this.width / -2, this.height / -2], [0, -(this._bar_data.height + this._bar_data.vertical_padding)])) : "below" == this._model.attributes.bar_location && (this._bar_data.position = [3, this.height + (this._bar_data.height + this._bar_data.vertical_padding) * this._bar_data.to_render.length],
                        this._bar_data.position = d20.math.add(this._bar_data.position, [this.width / -2, this.height / -2], [0, -(this._bar_data.height + this._bar_data.vertical_padding)]))
                    }
                    const n = {
                        name: this._model.get("name")
                    };
                    n.name && this._model.get("showname") && (window.is_gm || this._model.get("showplayers_name") || this._controlled && this.model.get("playersedit_name")) ? this._nameplate_data = _.defaults(n, this._nameplate_defaults) : delete this._nameplate_data
                }
                if (!t || !t.noTransform) {
                    e.save();
                    const t = this.getCenterPoint();
                    this.renderingInGroup ? (this.renderingInGroup.transform(e),
                    e.translate(t.x, t.y)) : e.translate(t.x - d20.engine.currentCanvasOffset[0], t.y - d20.engine.currentCanvasOffset[1]);
                    const n = this.transformMatrix;
                    n && e.transform(n[0], n[1], n[2], n[3], n[4], n[5])
                }
                this._drawAuras(e),
                (!t || !t.noTransform) && e.restore()
            },
            _drawAuras: function(e) {
                const t = this._model.collection.page;
                let n = t.get("snapping_increment") || 1;
                const i = {
                    scale_number: +t.get("scale_number"),
                    snapping_increment: 70 * +n
                };
                for (let t = 1; t <= 2; ++t) {
                    const n = {
                        has_radius: "" !== this._model.get(`aura${t}_radius`),
                        radius: (+this._model.get(`aura${t}_radius`) || 0) * i.snapping_increment / i.scale_number,
                        show: this._model.get(`showplayers_aura${t}`),
                        edit: this._model.get(`playersedit_aura${t}`),
                        color: this._model.get(`aura${t}_color`),
                        isRect: this._model.get(`aura${t}_square`)
                    };
                    if ("transparent" !== n.color && n.has_radius && (n.show || window.is_gm || n.edit && this._controlled)) {
                        const t = .5 * Math.max(this.width, this.height) + n.radius;
                        t > 0 && (e.save(),
                        e.fillStyle = n.color,
                        e.globalAlpha *= .35,
                        n.isRect ? e.fillRect(-t, -t, 2 * t, 2 * t) : (e.beginPath(),
                        e.arc(0, 0, t, 0, 2 * Math.PI),
                        e.fill()),
                        e.restore())
                    }
                }
                return this
            },
            _drawModelStatus: function(e) {
                if (!this._model)
                    return this;
                e.save(),
                e.scale(-+this.flipX || 1, -+this.flipY || 1);
                const t = this.angle || 0;
                return t % 360 != 0 && e.rotate(d20.math.radians(-t)),
                this._drawStatusIcons(e),
                (this._bar_data && this._bar_data.to_render.length || this._nameplate_data) && /^(?:objects|gmlayer)$/.test(this._model.get("layer")) && (this._bar_data.to_render.length && this._drawBars(e),
                this._nameplate_data && this._drawNameplate(e)),
                e.restore(),
                this
            },
            _positionAndScaleStatusIcons: function(e, t) {
                const n = this.width / 2
                  , i = this.height / 2;
                switch (e.padded_icon_size = d20.math.add(e.icon_size, e.padding),
                e.full_size = _.clone(e.padded_icon_size),
                e.side) {
                case "bottom":
                    e.full_size[0] *= t,
                    e.position = d20.math.sub([n, i], e.full_size);
                    break;
                case "left":
                    e.vertical = !0,
                    e.full_size[1] *= t,
                    e.position = [-n, -i];
                    break;
                case "right":
                    e.vertical = !0,
                    e.full_size[1] *= t,
                    e.position = [n - e.full_size[0], -i];
                    break;
                default:
                case "top":
                    e.full_size[0] *= t,
                    this._bar_data.to_render.length > 0 && "overlap_top" == this._model.attributes.bar_location ? e.position = [n - e.full_size[0], -i + this._bar_data.height + this._bar_data.vertical_padding] : e.position = [n - e.full_size[0], -i]
                }
                let o, r;
                if ((o = e.full_size[0]) > (r = this.width) || (o = e.full_size[1]) > (r = this.height)) {
                    const n = r / o;
                    e.icon_size = d20.math.mul(e.icon_size, n),
                    e.padding *= n,
                    e.color_radius *= n,
                    e.font_size *= n,
                    e.stroke_width *= n,
                    this._positionAndScaleStatusIcons(e, t)
                } else
                    e.offset = d20.math.Matrix.scale([+!e.vertical, +e.vertical]).mul(e.padded_icon_size)
            },
            _icon_defaults: {
                icon_size: [21, 21],
                padding: 3,
                color_radius: 10,
                font_size: 14,
                stroke_width: 3,
                vertical: !1,
                padded_icon_size: null,
                position: null,
                full_size: null,
                offset: null
            },
            _drawStatusIcons: function(e) {
                const t = this._model.get("statusmarkers").split(",")
                  , n = [];
                for (const i of t) {
                    const t = d20.utils.parseStatus(i);
                    t && (t.dead ? this._drawDeadOverlay(e) : n.push(t))
                }
                if (!d20.token_editor.statussheet_ready || !n.length)
                    return this;
                const i = _.defaults({
                    side: d20.Campaign.get("markers_position")
                }, this._icon_defaults);
                this._positionAndScaleStatusIcons(i, n.length),
                e.save(),
                e.globalCompositeOperation = "source-over";
                let o = 0;
                for (const t of n) {
                    const n = d20.math.add(i.position, d20.math.mul(i.offset, o), i.padding / 2);
                    if (t.color) {
                        const o = d20.math.add(n, d20.math.div(i.icon_size, 2));
                        e.fillStyle = t.color,
                        e.beginPath(),
                        e.arc(...o, i.color_radius, 0, 2 * Math.PI),
                        e.fill()
                    } else
                        e.drawImage(d20.token_editor.statussheet, t.icon, 0, 24, 24, ...n, ...i.icon_size);
                    if (t.number) {
                        const o = d20.math.add(n, d20.math.div(i.icon_size, 2));
                        e.fillStyle = "rgb(222,31,31)",
                        e.strokeStyle = "white",
                        e.lineWidth = i.stroke_width,
                        e.font = `bold ${i.font_size}px Arial`,
                        e.textAlign = "center",
                        e.textBaseline = "top",
                        e.strokeText(t.number, ...o),
                        e.fillText(t.number, ...o)
                    }
                    ++o
                }
                return e.restore(),
                this
            },
            _drawDeadOverlay: function(e) {
                const t = this.width / 2
                  , n = this.height / 2
                  , i = 5;
                return e.save(),
                e.globalCompositeOperation = "source-over",
                e.strokeStyle = "rgba(189,13,13,0.6)",
                e.lineWidth = 10,
                e.beginPath(),
                e.moveTo(-t + i, -n + i),
                e.lineTo(t - i, n - i),
                e.moveTo(t - i, -n + i),
                e.lineTo(-t + i, n - i),
                e.stroke(),
                e.restore(),
                this
            },
            _drawBars: function(e) {
                e.save(),
                e.globalCompositeOperation = "source-over";
                let t = 0;
                const n = this._bar_data.to_render.length;
                for (; t < n; ) {
                    const n = this._bar_data.to_render[t];
                    let i = d20.math.sub(this._bar_data.position, [0, (this._bar_data.height + this._bar_data.vertical_padding) * t]);
                    const o = d20.math.clamp(n.current / n.max, 0, 1);
                    "below" === this._model.attributes.bar_location ? i = "compact" === this._model.attributes.compact_bar ? [i[0], i[1] + 1] : [i[0], i[1] + 1.5] : "above" === this._model.attributes.bar_location && (i = [i[0], i[1] - 1]),
                    e.strokeStyle = this._bar_data.stroke,
                    e.lineWidth = this._bar_data.border_size,
                    e.fillStyle = n.fill,
                    e.fillRect(...i, this._bar_data.width * o, this._bar_data.height),
                    "compact" !== this._model.attributes.compact_bar && (e.beginPath(),
                    e.rect(...i, this._bar_data.width, this._bar_data.height),
                    e.stroke());
                    const r = this._bar_data.height - this._bar_data.border_size;
                    let a = this._bar_data.width - this._bar_data.border_size - 2 * this._bar_data.text_padding
                      , s = 0;
                    if (e.strokeStyle = this._bar_data.text_stroke,
                    e.fillStyle = this._bar_data.text_fill,
                    e.lineWidth = this._bar_data.text_stroke_size,
                    e.font = `${r}px ${this._bar_data.font}`,
                    n.current < 0 || n.current > n.max) {
                        const t = e.measureText("+").width / r
                          , o = r / t;
                        if (a -= this._bar_data.text_padding,
                        e.font = `${o}px ${this._bar_data.font}`,
                        e.textBaseline = "top",
                        n.current < 0) {
                            e.textAlign = "left",
                            a -= s = Math.min(e.measureText("-").width + this._bar_data.text_padding, .2 * a);
                            const n = d20.math.add(i, [this._bar_data.text_padding + this._bar_data.border_size / 2, t * r / -2]);
                            "compact" === this._model.attributes.compact_bar ? (e.fillStyle = "black",
                            e.strokeStyle = "white",
                            e.lineWidth = this._bar_data.text_stroke_size - 1,
                            e.strokeText("-", ...n, s),
                            e.fillText("-", ...n, s)) : (e.strokeText("-", ...n, s),
                            e.fillText("-", ...n, s))
                        } else if (n.current > n.max) {
                            e.textAlign = "right",
                            a -= s = Math.min(e.measureText("+").width + this._bar_data.text_padding, .2 * a);
                            const n = d20.math.add(i, [this._bar_data.width - this._bar_data.border_size / 2 - this._bar_data.text_padding, (-t * r + this._bar_data.border_size) / 2]);
                            this._model.attributes.compact_bar,
                            e.strokeText("", ...n, s),
                            e.fillText("+", ...n, s),
                            s = -s
                        }
                        e.font = `${r}px ${this._bar_data.font}`
                    }
                    if (n.show_vals) {
                        const t = d20.math.div([this._bar_data.width + s, 0], 2)
                          , o = d20.math.add(i, t, [0, 1.3 * this._bar_data.border_size]);
                        let r = `${n.actual_current}/${n.actual_max}`
                          , l = e.measureText(r).width;
                        const c = 1.2 * a;
                        if (l > c && (r = `${n.current}/${n.max}`,
                        (l = e.measureText(r).width) > c && (r = new String(n.current),
                        (l = e.measureText(r).width) > c))) {
                            const e = l / a
                              , t = Math.floor(r.length / e);
                            r = `${r.substring(0, t)}...`
                        }
                        e.textAlign = "center",
                        e.textBaseline = "top",
                        e.strokeText(r, ...o, a),
                        e.fillText(r, ...o, a)
                    }
                    ++t
                }
                return e.restore(),
                this
            },
            _nameplate_defaults: {
                padding: 4,
                font_size: 14,
                vertical_offset: 8
            },
            _drawNameplate: function(e) {
                const t = this.height / 2;
                e.save(),
                e.font = `bold ${this._nameplate_data.font_size}px Arial`;
                const n = e.measureText("M").width
                  , i = e.measureText(this._nameplate_data.name).width;
                return "below" === this._model.attributes.bar_location ? this._nameplate_data.position = [-i / 2 - this._nameplate_data.padding, t + (this._nameplate_data.vertical_offset - this.height - 28)] : this._nameplate_data.position = [-i / 2 - this._nameplate_data.padding, t + this._nameplate_data.vertical_offset],
                this._nameplate_data.size = [i + 2 * this._nameplate_data.padding, n + 2 * this._nameplate_data.padding],
                e.textAlign = "center",
                e.textBaseline = "bottom",
                e.globalCompositeOperation = "source-over",
                e.fillStyle = "rgba(255,255,255,0.5)",
                e.fillRect(...this._nameplate_data.position, ...this._nameplate_data.size),
                e.fillStyle = "rgb(0,0,0)",
                e.fillText(this._nameplate_data.name, 0, this._nameplate_data.position[1] + n + this._nameplate_data.padding),
                e.restore(),
                this
            },
            _stroke: function(e) {
                e.save(),
                e.lineWidth = this.strokeWidth,
                e.lineCap = this.strokeLineCap,
                e.lineJoin = this.strokeLineJoin,
                e.miterLimit = this.strokeMiterLimit,
                e.strokeStyle = this.stroke.toLive ? this.stroke.toLive(e) : this.stroke,
                e.beginPath(),
                e.strokeRect(-this.width / 2, -this.height / 2, this.width, this.height),
                e.closePath(),
                e.restore()
            },
            _renderDashedStroke: function(e) {
                var t = -this.width / 2
                  , n = -this.height / 2
                  , i = this.width
                  , o = this.height;
                e.save(),
                e.lineWidth = this.strokeWidth,
                e.lineCap = this.strokeLineCap,
                e.lineJoin = this.strokeLineJoin,
                e.miterLimit = this.strokeMiterLimit,
                e.strokeStyle = this.stroke.toLive ? this.stroke.toLive(e) : this.stroke,
                e.beginPath(),
                fabric.util.drawDashedLine(e, t, n, t + i, n, this.strokeDashArray),
                fabric.util.drawDashedLine(e, t + i, n, t + i, n + o, this.strokeDashArray),
                fabric.util.drawDashedLine(e, t + i, n + o, t, n + o, this.strokeDashArray),
                fabric.util.drawDashedLine(e, t, n + o, t, n, this.strokeDashArray),
                e.closePath(),
                e.restore()
            },
            toObject: function(e) {
                return t(this.callSuper("toObject", e), {
                    src: this._originalElement.src || this._originalElement._src
                })
            },
            getCurrentBarValue: function(e) {
                const t = +e;
                if (t === NaN)
                    return undefined;
                const n = _.filter(this._bar_data.to_render, e=>e.number === t)[0];
                return n ? +n.current !== NaN ? n.current : n.actual_current : this._model ? this._model.get(`bar${t}_value`) : undefined
            },
            toSVG: function() {
                var e = [];
                if (e.push('<g transform="', this.getSvgTransform(), '">', '<image xlink:href="', this.getSvgSrc(), '" style="', this.getSvgStyles(), '" transform="translate(' + -this.width / 2 + " " + -this.height / 2 + ")", '" width="', this.width, '" height="', this.height, '"></image>'),
                this.stroke || this.strokeDashArray) {
                    var t = this.fill;
                    this.fill = null,
                    e.push("<rect ", 'x="', -1 * this.width / 2, '" y="', -1 * this.height / 2, '" width="', this.width, '" height="', this.height, '" style="', this.getSvgStyles(), '"/>'),
                    this.fill = t
                }
                return e.push("</g>"),
                e.join("")
            },
            getSrc: function() {
                return this.getElement().src || this.getElement()._src
            },
            toString: function() {
                return '#<fabric.Image: { src: "' + this.getSrc() + '" }>'
            },
            clone: function(e, t) {
                this.constructor.fromObject(this.toObject(t), e)
            },
            applyFilters: function(e) {
                if (0 === this.filters.length)
                    return this._element = this._originalElement,
                    void (e && e());
                var t = this._originalElement
                  , n = fabric.util.createCanvasElement()
                  , i = fabric.util.createImage()
                  , o = this;
                try {
                    if (n.width = t.width,
                    n.height = t.height,
                    n.getContext("2d").drawImage(t, 0, 0, t.width, t.height),
                    this.filters.forEach(function(e) {
                        e && e.applyTo(n)
                    }),
                    i.width = t.width,
                    i.height = t.height,
                    fabric.isLikelyNode) {
                        var r = n.toDataURL("image/png").substring(22);
                        i.src = new Buffer(r,"base64"),
                        o._element = i,
                        e && e()
                    } else
                        i.onload = function() {
                            o._element = i,
                            e && e(),
                            i.onload = n = t = null
                        }
                        ,
                        i.src = n.toDataURL("image/png")
                } catch (a) {
                    console.log("Error applying filters..."),
                    console.log(a)
                }
                return this
            },
            _render: function(e) {
                e.drawImage(this._animated && (!d20.engine.animations_enabled || this._element.readyState < 2) ? this._placeholder : this._element, this.width / -2, this.height / -2, this.width, this.height)
            },
            _resetWidthHeight: function() {
                var e = this.getElement();
                this.set("width", e.width),
                this.set("height", e.height)
            },
            _initElement: function(e) {
                this.setElement(fabric.util.getById(e)),
                fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS)
            },
            _initConfig: function(e) {
                e || (e = {}),
                this.setOptions(e),
                this._setWidthHeight(e)
            },
            _initFilters: function(e, t) {
                e.filters && e.filters.length ? fabric.util.enlivenObjects(e.filters, function(e) {
                    t && t(e)
                }, "fabric.Image.filters") : t && t()
            },
            _setWidthHeight: function(e) {
                this.width = "width"in e ? e.width : this.getElement().width || 0,
                this.height = "height"in e ? e.height : this.getElement().height || 0
            },
            complexity: function() {
                return 1
            }
        }),
        Object.defineProperties(fabric.Image.prototype, {
            model: {
                set: function(e) {
                    this._model = e,
                    this._animated && this._initializeAnimationData()
                },
                get: function() {
                    return this._model
                }
            },
            isAnimated: {
                get: function() {
                    return !!this._animated
                }
            },
            isAnimatedOrVideoStill: {
                get: function() {
                    return !(!this._animated && !this._is_still)
                }
            },
            isPaused: {
                get: function() {
                    return this._element.paused
                },
                set: function(e) {
                    e !== this._element.paused && this.togglePause()
                }
            }
        }),
        fabric.Image.CSS_CANVAS = "canvas-img",
        fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc,
        fabric.Image.fromObject = function(e, t) {
            var n = fabric.document.createElement("img")
              , i = e.src;
            n.onload = function() {
                fabric.Image.prototype._initFilters.call(e, e, function(i) {
                    e.filters = i || [];
                    var o = new fabric.Image(n,e);
                    t && t(o),
                    n = n.onload = n.onerror = null
                })
            }
            ,
            n.onerror = function() {
                fabric.log("Error loading " + n.src),
                t && t(null, !0),
                n = n.onload = n.onerror = null
            }
            ,
            n.src = i
        }
        ,
        fabric.Image.fromURL = function(e, t, n={}) {
            const i = `Could not load image from ${e}`
              , o = n && n.video ? "video" : "img"
              , r = _.clone(e)
              , a = n.video ? n.video.seamless ? "canplaythrough" : "loadeddata" : "load";
            let s, l = fabric.document.createElement(o);
            !0 === n.usecors && (l.crossOrigin = "anonymous",
            -1 !== e.indexOf("d20cors.herokuapp.com") && (e = e.replace("d20cors.herokuapp.com", "imgsrv.roll20.net:5100")),
            -1 == e.indexOf(".d20.io") && -1 === e.indexOf("d20cors.herokuapp.com") && -1 === e.indexOf("imgsrv.roll20.net") && (e = "http://imgsrv.roll20.net:5100/?src=" + escape(e.replace(/http[s]*:\/\//, "")) + "&cb="),
            e.indexOf("files.d20.io") > -1 && -1 === e.indexOf("?") && (e += "?"),
            "development" == d20.environment ? e += "3" : "staging" == d20.environment ? e += "4" : e += "5");
            const c = function() {
                if (l.removeEventListener(a, c),
                l.removeEventListener("error", s),
                n.video && (l.width = l.videoWidth,
                l.height = l.videoHeight,
                l.muted = !0,
                "object" == typeof n.video && "start_time"in n.video && (l.currentTime = n.video.start_time)),
                n.element_only)
                    t(l);
                else {
                    const e = new fabric.Image(l,n.config);
                    if (n.video_sample) {
                        const n = n=>{
                            e.setElement(n),
                            t(e)
                        }
                        ;
                        e._animated = !0,
                        e._placeholder = l,
                        fabric.Image.fromURL(l.src.replace("sample.png", "med.webm"), n, {
                            usecors: !0,
                            video: !0,
                            element_only: !0
                        })
                    } else
                        t(e)
                }
            };
            s = n.usecors ? function() {
                l.removeEventListener(a, c),
                l.removeEventListener("error", s),
                s = function() {
                    l.removeEventListener(a, c),
                    l.removeEventListener("error", s),
                    console.error(i)
                }
                ,
                console.warn("Error loading graphic, probably due to CORS. Trying once without CORS for " + r),
                n.usecors = !1,
                (l = fabric.document.createElement(o)).addEventListener(a, c),
                l.addEventListener("error", s),
                n.video && (l.preload = "auto"),
                l.src = r
            }
            : ()=>console.error(i),
            l.addEventListener(a, c),
            l.addEventListener("error", s),
            n.video && (l.preload = "auto"),
            l.src = e
        }
        ,
        fabric.Image.async = !0,
        fabric.Image.pngCompression = 1)
    }(void 0 !== exports ? exports : this),
    fabric.Image.filters = fabric.Image.filters || {},
    fabric.Image.filters.BaseFilter = fabric.util.createClass({
        type: "BaseFilter",
        toObject: function() {
            return {
                type: this.type
            }
        },
        toJSON: function() {
            return this.toObject()
        }
    }),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = t.util.object.extend;
        t.Image.filters.Brightness = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Brightness",
            initialize: function(e) {
                e = e || {},
                this.brightness = e.brightness || 100
            },
            applyTo: function(e) {
                for (var t = e.getContext("2d"), n = t.getImageData(0, 0, e.width, e.height), i = n.data, o = this.brightness, r = 0, a = i.length; r < a; r += 4)
                    i[r] += o,
                    i[r + 1] += o,
                    i[r + 2] += o;
                t.putImageData(n, 0, 0)
            },
            toObject: function() {
                return n(this.callSuper("toObject"), {
                    brightness: this.brightness
                })
            }
        }),
        t.Image.filters.Brightness.fromObject = function(e) {
            return new t.Image.filters.Brightness(e)
        }
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = t.util.object.extend;
        t.Image.filters.Convolute = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Convolute",
            initialize: function(e) {
                e = e || {},
                this.opaque = e.opaque,
                this.matrix = e.matrix || [0, 0, 0, 0, 1, 0, 0, 0, 0];
                var n = t.util.createCanvasElement();
                this.tmpCtx = n.getContext("2d")
            },
            _createImageData: function(e, t) {
                return this.tmpCtx.createImageData(e, t)
            },
            applyTo: function(e) {
                for (var t = this.matrix, n = e.getContext("2d"), i = n.getImageData(0, 0, e.width, e.height), o = Math.round(Math.sqrt(t.length)), r = Math.floor(o / 2), a = i.data, s = i.width, l = i.height, c = s, u = l, d = this._createImageData(c, u), h = d.data, p = this.opaque ? 1 : 0, f = 0; f < u; f++)
                    for (var g = 0; g < c; g++) {
                        for (var m = f, y = g, v = 4 * (f * c + g), b = 0, w = 0, _ = 0, x = 0, k = 0; k < o; k++)
                            for (var E = 0; E < o; E++) {
                                var S = m + k - r
                                  , C = y + E - r;
                                if (S >= 0 && S < l && C >= 0 && C < s) {
                                    var T = 4 * (S * s + C)
                                      , A = t[k * o + E];
                                    b += a[T] * A,
                                    w += a[T + 1] * A,
                                    _ += a[T + 2] * A,
                                    x += a[T + 3] * A
                                }
                            }
                        h[v] = b,
                        h[v + 1] = w,
                        h[v + 2] = _,
                        h[v + 3] = x + p * (255 - x)
                    }
                n.putImageData(d, 0, 0)
            },
            toObject: function() {
                return n(this.callSuper("toObject"), {
                    opaque: this.opaque,
                    matrix: this.matrix
                })
            }
        }),
        t.Image.filters.Convolute.fromObject = function(e) {
            return new t.Image.filters.Convolute(e)
        }
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = t.util.object.extend;
        t.Image.filters.GradientTransparency = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "GradientTransparency",
            initialize: function(e) {
                e = e || {},
                this.threshold = e.threshold || 100
            },
            applyTo: function(e) {
                for (var t = e.getContext("2d"), n = t.getImageData(0, 0, e.width, e.height), i = n.data, o = this.threshold, r = i.length, a = 0, s = i.length; a < s; a += 4)
                    i[a + 3] = o + 255 * (r - a) / r;
                t.putImageData(n, 0, 0)
            },
            toObject: function() {
                return n(this.callSuper("toObject"), {
                    threshold: this.threshold
                })
            }
        }),
        t.Image.filters.GradientTransparency.fromObject = function(e) {
            return new t.Image.filters.GradientTransparency(e)
        }
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {});
        t.Image.filters.Grayscale = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Grayscale",
            applyTo: function(e) {
                for (var t, n = e.getContext("2d"), i = n.getImageData(0, 0, e.width, e.height), o = i.data, r = i.width * i.height * 4, a = 0; a < r; )
                    t = (o[a] + o[a + 1] + o[a + 2]) / 3,
                    o[a] = t,
                    o[a + 1] = t,
                    o[a + 2] = t,
                    a += 4;
                n.putImageData(i, 0, 0)
            }
        }),
        t.Image.filters.Grayscale.fromObject = function() {
            return new t.Image.filters.Grayscale
        }
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {});
        t.Image.filters.Invert = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Invert",
            applyTo: function(e) {
                var t, n = e.getContext("2d"), i = n.getImageData(0, 0, e.width, e.height), o = i.data, r = o.length;
                for (t = 0; t < r; t += 4)
                    o[t] = 255 - o[t],
                    o[t + 1] = 255 - o[t + 1],
                    o[t + 2] = 255 - o[t + 2];
                n.putImageData(i, 0, 0)
            }
        }),
        t.Image.filters.Invert.fromObject = function() {
            return new t.Image.filters.Invert
        }
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = t.util.object.extend;
        t.Image.filters.Mask = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Mask",
            initialize: function(e) {
                e = e || {},
                this.mask = e.mask,
                this.channel = [0, 1, 2, 3].indexOf(e.channel) > -1 ? e.channel : 0
            },
            applyTo: function(e) {
                if (this.mask) {
                    var n, i = e.getContext("2d"), o = i.getImageData(0, 0, e.width, e.height), r = o.data, a = this.mask.getElement(), s = t.util.createCanvasElement(), l = this.channel, c = o.width * o.height * 4;
                    s.width = a.width,
                    s.height = a.height,
                    s.getContext("2d").drawImage(a, 0, 0, a.width, a.height);
                    var u = s.getContext("2d").getImageData(0, 0, a.width, a.height).data;
                    for (n = 0; n < c; n += 4)
                        r[n + 3] = u[n + l];
                    i.putImageData(o, 0, 0)
                }
            },
            toObject: function() {
                return n(this.callSuper("toObject"), {
                    mask: this.mask.toObject(),
                    channel: this.channel
                })
            }
        }),
        t.Image.filters.Mask.fromObject = function(e, n) {
            var i = t.document.createElement("img")
              , o = e.mask.src;
            i.onload = function() {
                e.mask = new t.Image(i,e.mask),
                n && n(new t.Image.filters.Mask(e)),
                i = i.onload = i.onerror = null
            }
            ,
            i.onerror = function() {
                t.log("Error loading " + i.src),
                n && n(null, !0),
                i = i.onload = i.onerror = null
            }
            ,
            i.src = o
        }
        ,
        t.Image.filters.Mask.async = !0
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = t.util.object.extend;
        t.Image.filters.Noise = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Noise",
            initialize: function(e) {
                e = e || {},
                this.noise = e.noise || 100
            },
            applyTo: function(e) {
                for (var t, n = e.getContext("2d"), i = n.getImageData(0, 0, e.width, e.height), o = i.data, r = this.noise, a = 0, s = o.length; a < s; a += 4)
                    t = (.5 - Math.random()) * r,
                    o[a] += t,
                    o[a + 1] += t,
                    o[a + 2] += t;
                n.putImageData(i, 0, 0)
            },
            toObject: function() {
                return n(this.callSuper("toObject"), {
                    noise: this.noise
                })
            }
        }),
        t.Image.filters.Noise.fromObject = function(e) {
            return new t.Image.filters.Noise(e)
        }
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = t.util.object.extend;
        t.Image.filters.Pixelate = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Pixelate",
            initialize: function(e) {
                e = e || {},
                this.blocksize = e.blocksize || 4
            },
            applyTo: function(e) {
                var t, n, i, o, r, a, s, l = e.getContext("2d"), c = l.getImageData(0, 0, e.width, e.height), u = c.data, d = c.height, h = c.width;
                for (n = 0; n < d; n += this.blocksize)
                    for (i = 0; i < h; i += this.blocksize) {
                        o = u[t = 4 * n * h + 4 * i],
                        r = u[t + 1],
                        a = u[t + 2],
                        s = u[t + 3];
                        for (var p = n, f = n + this.blocksize; p < f; p++)
                            for (var g = i, m = i + this.blocksize; g < m; g++)
                                u[t = 4 * p * h + 4 * g] = o,
                                u[t + 1] = r,
                                u[t + 2] = a,
                                u[t + 3] = s
                    }
                l.putImageData(c, 0, 0)
            },
            toObject: function() {
                return n(this.callSuper("toObject"), {
                    blocksize: this.blocksize
                })
            }
        }),
        t.Image.filters.Pixelate.fromObject = function(e) {
            return new t.Image.filters.Pixelate(e)
        }
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = t.util.object.extend;
        t.Image.filters.RemoveWhite = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "RemoveWhite",
            initialize: function(e) {
                e = e || {},
                this.threshold = e.threshold || 30,
                this.distance = e.distance || 20
            },
            applyTo: function(e) {
                for (var t, n, i, o = e.getContext("2d"), r = o.getImageData(0, 0, e.width, e.height), a = r.data, s = this.threshold, l = this.distance, c = 255 - s, u = Math.abs, d = 0, h = a.length; d < h; d += 4)
                    t = a[d],
                    n = a[d + 1],
                    i = a[d + 2],
                    t > c && n > c && i > c && u(t - n) < l && u(t - i) < l && u(n - i) < l && (a[d + 3] = 1);
                o.putImageData(r, 0, 0)
            },
            toObject: function() {
                return n(this.callSuper("toObject"), {
                    threshold: this.threshold,
                    distance: this.distance
                })
            }
        }),
        t.Image.filters.RemoveWhite.fromObject = function(e) {
            return new t.Image.filters.RemoveWhite(e)
        }
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {});
        t.Image.filters.Sepia = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Sepia",
            applyTo: function(e) {
                var t, n, i = e.getContext("2d"), o = i.getImageData(0, 0, e.width, e.height), r = o.data, a = r.length;
                for (t = 0; t < a; t += 4)
                    n = .3 * r[t] + .59 * r[t + 1] + .11 * r[t + 2],
                    r[t] = n + 100,
                    r[t + 1] = n + 50,
                    r[t + 2] = n + 255;
                i.putImageData(o, 0, 0)
            }
        }),
        t.Image.filters.Sepia.fromObject = function() {
            return new t.Image.filters.Sepia
        }
    }(void 0 !== exports ? exports : this),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {});
        t.Image.filters.Sepia2 = t.util.createClass(t.Image.filters.BaseFilter, {
            type: "Sepia2",
            applyTo: function(e) {
                var t, n, i, o, r = e.getContext("2d"), a = r.getImageData(0, 0, e.width, e.height), s = a.data, l = s.length;
                for (t = 0; t < l; t += 4)
                    n = s[t],
                    i = s[t + 1],
                    o = s[t + 2],
                    s[t] = (.393 * n + .769 * i + .189 * o) / 1.351,
                    s[t + 1] = (.349 * n + .686 * i + .168 * o) / 1.203,
                    s[t + 2] = (.272 * n + .534 * i + .131 * o) / 2.14;
                r.putImageData(a, 0, 0)
            }
        }),
        t.Image.filters.Sepia2.fromObject = function() {
            return new t.Image.filters.Sepia2
        }
    }(void 0 !== exports ? exports : this),
    fabric.Image.filters.Tint = fabric.util.createClass({
        type: "Tint",
        initialize: function(e) {
            e || (e = {}),
            this.color = e.color || fabric.Color.fromHex("#FFFFFF"),
            this.strength = e.strength || .5
        },
        applyTo: function(e) {
            var t, n = this.color._source[0], i = this.color._source[1], o = this.color._source[2], r = this.strength, a = e.getContext("2d"), s = a.getImageData(0, 0, e.width, e.height), l = s.data, c = l.length;
            for (t = 0; t < c; )
                l[t] = l[t] * (1 - r) + n * r,
                l[++t] = l[t] * (1 - r) + i * r,
                l[++t] = l[t] * (1 - r) + o * r,
                t++,
                t++;
            a.putImageData(s, 0, 0)
        },
        toJSON: function() {
            return {
                color: this.color,
                type: this.type,
                stength: this.strength
            }
        }
    }),
    function(e) {
        "use strict";
        var t = e.fabric || (e.fabric = {})
          , n = t.util.object.extend
          , i = t.util.object.clone
          , o = t.util.toFixed
          , r = t.StaticCanvas.supports("setLineDash");
        if (t.Text)
            t.warn("fabric.Text is already defined");
        else {
            var a = t.Object.prototype.stateProperties.concat();
            a.push("fontFamily", "fontWeight", "fontSize", "text", "textDecoration", "textAlign", "fontStyle", "lineHeight", "backgroundColor", "textBackgroundColor", "useNative", "path"),
            t.Text = t.util.createClass(t.Object, {
                _dimensionAffectingProps: {
                    fontSize: !0,
                    fontWeight: !0,
                    fontFamily: !0,
                    textDecoration: !0,
                    fontStyle: !0,
                    lineHeight: !0,
                    stroke: !0,
                    strokeWidth: !0,
                    text: !0
                },
                type: "text",
                fontSize: 40,
                fontWeight: "normal",
                fontFamily: "Times New Roman",
                textDecoration: "",
                textAlign: "left",
                fontStyle: "",
                lineHeight: 1.3,
                backgroundColor: "",
                textBackgroundColor: "",
                path: null,
                useNative: !0,
                stateProperties: a,
                stroke: null,
                shadow: null,
                initialize: function(e, t) {
                    t = t || {},
                    this.text = e,
                    this.__skipDimension = !0,
                    this.setOptions(t),
                    this.__skipDimension = !1,
                    this._initDimensions(),
                    this.setCoords()
                },
                _initDimensions: function() {
                    if (!this.__skipDimension) {
                        var e = t.util.createCanvasElement();
                        this._render(e.getContext("2d"))
                    }
                },
                toString: function() {
                    return "#<fabric.Text (" + this.complexity() + '): { "text": "' + this.text + '", "fontFamily": "' + this.fontFamily + '" }>'
                },
                _render: function(e) {
                    var t = this.group && "group" !== this.group.type;
                    t && !this.transformMatrix ? e.translate(-this.group.width / 2 + this.left, -this.group.height / 2 + this.top) : t && this.transformMatrix && e.translate(-this.group.width / 2, -this.group.height / 2),
                    "undefined" == typeof Cufon || !0 === this.useNative ? this._renderViaNative(e) : this._renderViaCufon(e)
                },
                _renderViaNative: function(e) {
                    this.transform(e, t.isLikelyNode),
                    this._setTextStyles(e);
                    var n = this.text.split(/\r?\n/);
                    this.width = this._getTextWidth(e, n),
                    this.height = this._getTextHeight(e, n),
                    this.clipTo && t.util.clipContext(this, e),
                    this._renderTextBackground(e, n),
                    "left" !== this.textAlign && "justify" !== this.textAlign && (e.save(),
                    e.translate("center" === this.textAlign ? this.width / 2 : this.width, 0)),
                    e.save(),
                    this._setShadow(e),
                    this._renderTextFill(e, n),
                    this._renderTextStroke(e, n),
                    this._removeShadow(e),
                    e.restore(),
                    "left" !== this.textAlign && "justify" !== this.textAlign && e.restore(),
                    this._renderTextDecoration(e, n),
                    this.clipTo && e.restore(),
                    this._setBoundaries(e, n),
                    this._totalLineHeight = 0
                },
                _setBoundaries: function(e, t) {
                    this._boundaries = [];
                    for (var n = 0, i = t.length; n < i; n++) {
                        var o = this._getLineWidth(e, t[n])
                          , r = this._getLineLeftOffset(o);
                        this._boundaries.push({
                            height: this.fontSize * this.lineHeight,
                            width: o,
                            left: r
                        })
                    }
                },
                _setTextStyles: function(e) {
                    this.fill && (e.fillStyle = this.fill.toLive ? this.fill.toLive(e) : this.fill),
                    this.stroke && (e.lineWidth = this.strokeWidth,
                    e.lineCap = this.strokeLineCap,
                    e.lineJoin = this.strokeLineJoin,
                    e.miterLimit = this.strokeMiterLimit,
                    e.strokeStyle = this.stroke.toLive ? this.stroke.toLive(e) : this.stroke),
                    e.textBaseline = "alphabetic",
                    e.textAlign = this.textAlign,
                    e.font = this._getFontDeclaration()
                },
                _getTextHeight: function(e, t) {
                    return this.fontSize * t.length * this.lineHeight
                },
                _getTextWidth: function(e, t) {
                    for (var n = e.measureText(t[0]).width, i = 1, o = t.length; i < o; i++) {
                        var r = e.measureText(t[i]).width;
                        r > n && (n = r)
                    }
                    return n
                },
                _drawChars: function(e, t, n, i, o) {
                    t[e](n, i, o)
                },
                _drawTextLine: function(e, t, n, i, o, r) {
                    if ("justify" === this.textAlign) {
                        var a = t.measureText(n).width
                          , s = this.width;
                        if (s > a)
                            for (var l = n.split(/\s+/), c = (s - t.measureText(n.replace(/\s+/g, "")).width) / (l.length - 1), u = 0, d = 0, h = l.length; d < h; d++)
                                this._drawChars(e, t, l[d], i + u, o, r),
                                u += t.measureText(l[d]).width + c;
                        else
                            this._drawChars(e, t, n, i, o, r)
                    } else
                        this._drawChars(e, t, n, i, o, r)
                },
                _getLeftOffset: function() {
                    return !t.isLikelyNode || "left" !== this.originX && "center" !== this.originX ? -this.width / 2 : 0
                },
                _getTopOffset: function() {
                    return t.isLikelyNode ? "center" === this.originY ? -this.height / 2 : "bottom" === this.originY ? -this.height : 0 : -this.height / 2
                },
                _renderTextFill: function(e, t) {
                    if (this.fill || this.skipFillStrokeCheck) {
                        this._boundaries = [];
                        for (var n = 0, i = 0, o = t.length; i < o; i++) {
                            n += this._getHeightOfLine(e, i, t),
                            this._drawTextLine("fillText", e, t[i], this._getLeftOffset(), this._getTopOffset() + n - Math.floor(this.fontSize / 2), i)
                        }
                    }
                },
                _renderTextStroke: function(e, t) {
                    if (this.stroke || this.skipFillStrokeCheck) {
                        var n = 0;
                        e.save(),
                        this.strokeDashArray && (1 & this.strokeDashArray.length && this.strokeDashArray.push.apply(this.strokeDashArray, this.strokeDashArray),
                        r && e.setLineDash(this.strokeDashArray)),
                        e.beginPath();
                        for (var i = 0, o = t.length; i < o; i++) {
                            n += this._getHeightOfLine(e, i, t),
                            this._drawTextLine("strokeText", e, t[i], this._getLeftOffset(), this._getTopOffset() + n, i)
                        }
                        e.closePath(),
                        e.restore()
                    }
                },
                _getHeightOfLine: function() {
                    return this.fontSize * this.lineHeight
                },
                _renderTextBackground: function(e, t) {
                    this._renderTextBoxBackground(e),
                    this._renderTextLinesBackground(e, t)
                },
                _renderTextBoxBackground: function(e) {
                    this.backgroundColor && (e.save(),
                    e.fillStyle = this.backgroundColor,
                    e.fillRect(this._getLeftOffset(), this._getTopOffset(), this.width, this.height),
                    e.restore())
                },
                _renderTextLinesBackground: function(e, t) {
                    if (this.textBackgroundColor) {
                        e.save(),
                        e.fillStyle = this.textBackgroundColor;
                        for (var n = 0, i = t.length; n < i; n++)
                            if ("" !== t[n]) {
                                var o = this._getLineWidth(e, t[n])
                                  , r = this._getLineLeftOffset(o);
                                e.fillRect(this._getLeftOffset() + r, this._getTopOffset() + n * this.fontSize * this.lineHeight, o, this.fontSize * this.lineHeight)
                            }
                        e.restore()
                    }
                },
                _getLineLeftOffset: function(e) {
                    return "center" === this.textAlign ? (this.width - e) / 2 : "right" === this.textAlign ? this.width - e : 0
                },
                _getLineWidth: function(e, t) {
                    return "justify" === this.textAlign ? this.width : e.measureText(t).width
                },
                _renderTextDecoration: function(e, t) {
                    function n(n) {
                        for (var r = 0, a = t.length; r < a; r++) {
                            var s = o._getLineWidth(e, t[r])
                              , l = o._getLineLeftOffset(s);
                            e.fillRect(o._getLeftOffset() + l, n + r * o._getHeightOfLine(e, r, t) - i, s, 1)
                        }
                    }
                    if (this.textDecoration) {
                        var i = this._getTextHeight(e, t) / 2
                          , o = this
                          , r = this.fontSize / 4;
                        this.textDecoration.indexOf("underline") > -1 && n(this.fontSize * this.lineHeight),
                        this.textDecoration.indexOf("line-through") > -1 && n(this.fontSize * this.lineHeight - r),
                        this.textDecoration.indexOf("overline") > -1 && n(r)
                    }
                },
                _getFontDeclaration: function() {
                    return [t.isLikelyNode ? this.fontWeight : this.fontStyle, t.isLikelyNode ? this.fontStyle : this.fontWeight, this.fontSize + "px", t.isLikelyNode ? '"' + this.fontFamily + '"' : this.fontFamily].join(" ")
                },
                render: function(e, t) {
                    this.visible && (e.save(),
                    this._render(e),
                    !t && this.active && (this.drawBorders(e),
                    this.drawControls(e)),
                    e.restore())
                },
                toObject: function(e) {
                    return n(this.callSuper("toObject", e), {
                        text: this.text,
                        fontSize: this.fontSize,
                        fontWeight: this.fontWeight,
                        fontFamily: this.fontFamily,
                        fontStyle: this.fontStyle,
                        lineHeight: this.lineHeight,
                        textDecoration: this.textDecoration,
                        textAlign: this.textAlign,
                        path: this.path,
                        backgroundColor: this.backgroundColor,
                        textBackgroundColor: this.textBackgroundColor,
                        useNative: this.useNative
                    })
                },
                toSVG: function() {
                    var e = this.text.split(/\r?\n/)
                      , t = this.useNative ? this.fontSize * this.lineHeight : -this._fontAscent - this._fontAscent / 5 * this.lineHeight
                      , n = -this.width / 2
                      , i = this.useNative ? this.fontSize - 1 : this.height / 2 - e.length * this.fontSize - this._totalLineHeight
                      , r = this._getSVGTextAndBg(t, n, e)
                      , a = this._getSVGShadows(t, e);
                    return i += this._fontAscent ? this._fontAscent / 5 * this.lineHeight : 0,
                    ['<g transform="', this.getSvgTransform(), '">', r.textBgRects.join(""), "<text ", this.fontFamily ? 'font-family="' + this.fontFamily.replace(/"/g, "'") + '" ' : "", this.fontSize ? 'font-size="' + this.fontSize + '" ' : "", this.fontStyle ? 'font-style="' + this.fontStyle + '" ' : "", this.fontWeight ? 'font-weight="' + this.fontWeight + '" ' : "", this.textDecoration ? 'text-decoration="' + this.textDecoration + '" ' : "", 'style="', this.getSvgStyles(), '" ', 'transform="translate(', o(n, 2), " ", o(i, 2), ')">', a.join(""), r.textSpans.join(""), "</text>", "</g>"].join("")
                },
                _getSVGShadows: function(e, n) {
                    var i, r, a = [], s = 1;
                    if (!this.shadow || !this._boundaries)
                        return a;
                    for (i = 0,
                    r = n.length; i < r; i++)
                        if ("" !== n[i]) {
                            var l = this._boundaries && this._boundaries[i] ? this._boundaries[i].left : 0;
                            a.push('<tspan x="', o(l + s + this.shadow.offsetX, 2), 0 === i || this.useNative ? '" y' : '" dy', '="', o(this.useNative ? e * i - this.height / 2 + this.shadow.offsetY : e + (0 === i ? this.shadow.offsetY : 0), 2), '" ', this._getFillAttributes(this.shadow.color), ">", t.util.string.escapeXml(n[i]), "</tspan>"),
                            s = 1
                        } else
                            s++;
                    return a
                },
                _getSVGTextAndBg: function(e, n, i) {
                    var r, a, s, l = [], c = [], u = 1;
                    for (this.backgroundColor && this._boundaries && c.push("<rect ", this._getFillAttributes(this.backgroundColor), ' x="', o(-this.width / 2, 2), '" y="', o(-this.height / 2, 2), '" width="', o(this.width, 2), '" height="', o(this.height, 2), '"></rect>'),
                    r = 0,
                    s = i.length; r < s; r++)
                        "" !== i[r] ? (a = this._boundaries && this._boundaries[r] ? o(this._boundaries[r].left, 2) : 0,
                        l.push('<tspan x="', a, '" ', 0 === r || this.useNative ? "y" : "dy", '="', o(this.useNative ? e * r - this.height / 2 : e * u, 2), '" ', this._getFillAttributes(this.fill), ">", t.util.string.escapeXml(i[r]), "</tspan>"),
                        u = 1) : u++,
                        this.textBackgroundColor && this._boundaries && c.push("<rect ", this._getFillAttributes(this.textBackgroundColor), ' x="', o(n + this._boundaries[r].left, 2), '" y="', o(e * r - this.height / 2, 2), '" width="', o(this._boundaries[r].width, 2), '" height="', o(this._boundaries[r].height, 2), '"></rect>');
                    return {
                        textSpans: l,
                        textBgRects: c
                    }
                },
                _getFillAttributes: function(e) {
                    var n = e && "string" == typeof e ? new t.Color(e) : "";
                    return n && n.getSource() && 1 !== n.getAlpha() ? 'opacity="' + n.getAlpha() + '" fill="' + n.setAlpha(1).toRgb() + '"' : 'fill="' + e + '"'
                },
                _set: function(e, t) {
                    "fontFamily" === e && this.path && (this.path = this.path.replace(/(.*?)([^\/]*)(\.font\.js)/, "$1" + t + "$3")),
                    this.callSuper("_set", e, t),
                    e in this._dimensionAffectingProps && (this._initDimensions(),
                    this.setCoords())
                },
                complexity: function() {
                    return 1
                }
            }),
            t.Text.fromObject = function(e) {
                return new t.Text(e.text,i(e))
            }
            ,
            t.util.createAccessors(t.Text)
        }
    }(void 0 !== exports ? exports : this);
    var Vector = {
        create: function(e, t) {
            return {
                x: e || -1,
                y: t || -1
            }
        },
        multiply: function(e, t) {
            return e.x *= t,
            e.y *= t,
            e
        },
        add: function(e, t) {
            return e.x += t.x,
            e.y += t.y,
            e
        }
    }, editor, raphael, svgeditor, canvas_overlay, a, b;
    if (window.zoomLevel = 1,
    window.dpi = 70,
    console.log(window.dpi),
    $.ajaxSetup({
        timeout: 6e4
    }),
    fabric.isTouchSupported = fabric.isTouchSupported && window.is_mobile,
    getUrlVars().forcetouch && "true" == getUrlVars().forcetouch && (fabric.isTouchSupported = !0),
    window.clicktype = "click",
    window.mousedowntype = "mousedown",
    fabric.isTouchSupported) {
        window.clicktype = "touchend",
        window.mousedowntype = "touchstart";
        var ismobilesafari = function() {
            return navigator.userAgent.match(/(iPod|iPhone|iPad)/)
        };
        $("#finalcanvas").on("touchstart", function() {
            $("#floatingtoolbar").trigger("blur")
        })
    }
    $(function() {
        $("#sidebarcontrol").on(clicktype, function() {
            $("body").toggleClass("sidebarhidden"),
            $(this).removeClass("alertify"),
            $(window).trigger("resize")
        })
    }),
    generateUUID = (a = 0,
    b = [],
    function() {
        var e = (new Date).getTime() + 0
          , t = e === a;
        a = e;
        for (var n = Array(8), i = 7; 0 <= i; i--)
            n[i] = "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(e % 64),
            e = Math.floor(e / 64);
        if (e = n.join(""),
        t) {
            for (i = 11; 0 <= i && 63 === b[i]; i--)
                b[i] = 0;
            b[i]++
        } else
            for (i = 0; 12 > i; i++)
                b[i] = Math.floor(64 * Math.random());
        for (i = 0; 12 > i; i++)
            e += "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(b[i]);
        return e
    }
    );
    var firebasePing = function() {
        var e = new Firebase(window.FIREBASE_ROOT + "/.info/connected")
          , t = new Firebase(window.FIREBASE_ROOT + window.campaign_storage_path + "/players/" + window.currentPlayer.id + "/online")
          , n = new Firebase(window.FIREBASE_ROOT + window.campaign_storage_path + "/webrtcConnected")
          , i = new Firebase(window.FIREBASE_ROOT + window.campaign_storage_path + "/webrtc/online")
          , o = !1;
        "roll20" === d20ext.videotype && n.on("value", function(e) {
            if (null === e.val()) {
                var t = {};
                t[window.currentPlayer.id] = !1,
                n.set(t)
            }
        }),
        "roll20-fm" === d20ext.videotype && i.on("value", function(e) {
            if (null === e.val()) {
                var t = {};
                t[window.currentPlayer.id] = !1,
                i.set(t)
            }
        }),
        e.on("value", function(e) {
            !0 === e.val() ? (console.log("Firebase Online"),
            !0,
            t.onDisconnect().set(!1),
            "roll20" === d20ext.videotype && n.child(window.currentPlayer.id).onDisconnect().set(!1),
            t.set(!0),
            o && (clearTimeout(o),
            o = !1),
            $("#connectionerror").hide()) : (console.log("Firebase Offline"),
            !1,
            o = setTimeout(function() {
                $("#connectionerror").show()
            }, 2e4))
        }),
        t.on("value", function(e) {
            !1 === e.val() && t.set(!0)
        });
        var r, a = new Firebase(window.FIREBASE_ROOT + window.campaign_storage_path + "/players/" + window.currentPlayer.id + "/lastActive");
        $connerror = $("#connectionerror");
        var s = function() {
            console.log("Timeout ref showed error!"),
            !0,
            $connerror.show()
        }
          , l = function() {
            r = setTimeout(s, 2e4);
            var e = (new Date).getTime();
            a.set((new Date).getTime(), function() {
                window.firebaseLastPing = (new Date).getTime() - e,
                clearTimeout(r),
                "none" != $connerror[0].style.display && $connerror.hide(),
                r = !1,
                !1,
                setTimeout(l, 6e4)
            })
        };
        l()
    }
      , roll20Ping = function() {
        $.get("/editor/ping/5/" + (window.firebaseLastPing ? window.firebaseLastPing : "0") + "/" + d20.textchat.globalrolled),
        d20.textchat.globalrolled = 0,
        setTimeout(roll20Ping, 3e5)
    };
    d20.bootstrap = {},
    $(function() {
        new Firebase(window.FIREBASE_ROOT + "/.info/connected");
        setTimeout(roll20Ping, 3e5),
        $.get("/editor/startping/false"),
        editor = $("#editor"),
        canvas_overlay = $("#canvas-overlay"),
        setMode("select"),
        raphael = $("body > svg"),
        d20.bootstrap.returnStruct = function() {
            var e = d20.Campaign.toJSON();
            return e.pages = [],
            d20.Campaign.pages.each(function(t) {
                var n = t.toJSON()
                  , i = [];
                t.thegraphics.each(function(e) {
                    i.push(e.toJSON())
                }),
                t.thetexts.each(function(e) {
                    i.push(e.toJSON())
                }),
                n.items = _.sortBy(i, function(e) {
                    return parseInt(e.z_index)
                }),
                e.pages.push(n)
            }),
            e.pages = _.sortBy(e.pages, function(e) {
                return parseInt(e.placement)
            }),
            JSON.stringify(e)
        }
        ,
        d20.bootstrap.addDroppedImage = function(e, t, n, i, o, r, a) {
            var s = {
                x: i - ruleroffset,
                y: o - toolbaroffset - ruleroffset,
                width: t,
                height: n,
                imgsrc: e,
                imgwidth: t,
                imgheight: n
            };
            "none" == a ? d20.Campaign.activePage().addImage(s, !1, !1, r) : d20.Campaign.activePage().addImage(s, !1, a, r)
        }
    }),
    d20.canvas_overlay = {
        drawBackground: function(e, t) {
            if (e.save(),
            t && t.invalid_rects) {
                "transparent" === d20.engine.backgroundColor ? (e.fillStyle = "rgb(0,0,0)",
                e.globalCompositeOperation = "destination-out",
                e.globalAlpha = 1) : (e.fillStyle = d20.engine.backgroundColor,
                e.globalCompositeOperation = "source-over"),
                e.beginPath();
                for (const n of t.invalid_rects) {
                    e.moveTo(...d20.math.sub(n.points[0], d20.engine.currentCanvasOffset));
                    for (let t = 1; t < 4; ++t)
                        e.lineTo(...d20.math.sub(n.points[t], d20.engine.currentCanvasOffset));
                    e.closePath()
                }
                e.fill()
            } else
                e.fillStyle = d20.engine.backgroundColor,
                e.globalCompositeOperation = "copy",
                e.fillRect(0, 0, Math.ceil(d20.engine.canvasWidth / d20.engine.canvasZoom), Math.ceil(d20.engine.canvasHeight / d20.engine.canvasZoom));
            e.restore()
        },
        copyCanvas: function(e, t, n) {
            if (e.save(),
            e.setTransform(1, 0, 0, 1, 0, 0),
            e.globalCompositeOperation = "source-over",
            n && n.draw_settings)
                for (const t in n.draw_settings)
                    e[t] = n.draw_settings[t];
            if (n && n.regions) {
                e.beginPath();
                for (const t of n.regions) {
                    e.moveTo(...d20.math.mul(d20.math.sub(t.points[0], d20.engine.currentCanvasOffset), d20.engine.canvasZoom));
                    for (let n = 1; n < 4; ++n)
                        e.lineTo(...d20.math.mul(d20.math.sub(t.points[n], d20.engine.currentCanvasOffset), d20.engine.canvasZoom));
                    e.closePath()
                }
                e.clip()
            }
            e.drawImage(t, 0, 0),
            e.restore()
        },
        drawAFoW: function(e, t) {
            let n, i = {};
            (n = d20.engine.listeners.afow ? d20.engine.listeners.afow : {}).update && (i.begin = performance.now());
            const o = d20.Campaign.activePage()
              , r = o.get("showgrid") ? 1 : 1 / (+o.get("adv_fow_grid_size") || 1)
              , a = d20.engine.snapTo || 70 / r
              , s = window.is_gm && !d20.engine.lightOnlySelected ? +o.get("fog_opacity") : 1
              , l = o.get("showlighting");
            if (e.save(),
            e.globalCompositeOperation = "copy",
            l ? (e.filter = `brightness(${Number.isNaN(+s) ? 80 : 100 * s}%) grayscale(100%)`,
            e.globalAlpha = 1) : (e.filter = "brightness(80%) grayscale(100%)",
            e.globalAlpha = Math.sqrt(s)),
            "transparent" === o.get("background_color") && (e.fillStyle = "rgb(255, 255, 255)",
            e.fillRect(0, 0, Math.ceil(d20.engine.advfowcanvas.width / d20.engine.canvasZoom), Math.ceil(d20.engine.advfowcanvas.height / d20.engine.canvasZoom)),
            e.globalCompositeOperation = "source-over"),
            e.drawImage(d20.engine.canvas.lowerCanvasEl, 0, 0, Math.ceil(d20.engine.advfowcanvas.width / d20.engine.canvasZoom), Math.ceil(d20.engine.advfowcanvas.height / d20.engine.canvasZoom)),
            !l) {
                const t = d20.engine.advanced_fog.getVisibleCells();
                e.globalCompositeOperation = "destination-out",
                e.fillStyle = "rgb(0,0,0)",
                e.filter = "blur(" + Math.floor(15 * d20.engine.canvasZoom) + "px)",
                e.globalAlpha = 1,
                e.beginPath();
                for (const n of t) {
                    let t = _.map(n.split(","), e=>+e);
                    t = d20.math.sub(d20.math.mul(t, a), d20.engine.currentCanvasOffset),
                    e.rect(...t, a, a)
                }
                e.fill()
            }
            e.restore();
            const c = d20.engine.advanced_fog.getRevealedCells();
            t.save(),
            t.beginPath();
            for (let e = Math.floor(d20.engine.currentCanvasOffset[0] / a); e < Math.ceil((d20.engine.advfowcanvas.width / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0]) / a); e++)
                for (let n = Math.floor(d20.engine.currentCanvasOffset[1] / a); n < Math.ceil((d20.engine.advfowcanvas.height / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1]) / a); n++) {
                    const i = e + "," + n;
                    if (!c.has(i)) {
                        const i = d20.math.sub(d20.math.mul([e, n], a), d20.engine.currentCanvasOffset);
                        t.rect(...i, a, a)
                    }
                }
            if (t.fillStyle = "rgb(0,0,0)",
            t.globalAlpha = l ? 1 : s,
            t.globalCompositeOperation = "copy",
            t.fill(),
            t.restore(),
            n.update) {
                i.end = performance.now();
                for (let e of n.update)
                    e({
                        time: i.end - i.begin,
                        webgl: !1
                    })
            }
        },
        mergeLighting: function(e, t) {
            e.save();
            const n = Math.floor(4 * d20.engine.canvasZoom);
            e.globalAlpha = 1,
            e.filter = `drop-shadow(0px 0px ${2 * n}px black) blur(${n}px)`,
            e.globalCompositeOperation = "source-atop",
            e.drawImage(t, 0, 0, Math.ceil(t.width / d20.engine.canvasZoom), Math.ceil(t.height / d20.engine.canvasZoom));
            const i = 15 * d20.engine.canvasZoom;
            e.filter = "none",
            e.drawImage(t, 0, 0, t.width, i, 0, 0, Math.ceil(t.width / d20.engine.canvasZoom), i),
            e.drawImage(t, 0, t.height - i, t.width, i, 0, Math.ceil(t.height / d20.engine.canvasZoom) - i, Math.ceil(t.width / d20.engine.canvasZoom), i),
            e.drawImage(t, 0, 0, i, t.height, 0, 0, i, Math.ceil(t.height / d20.engine.canvasZoom)),
            e.drawImage(t, t.width - i, 0, i, t.height, Math.ceil(t.width / d20.engine.canvasZoom) - i, 0, i, Math.ceil(t.height / d20.engine.canvasZoom)),
            e.restore()
        },
        clearCanvas: function(e, t) {
            if (t && t.invalid_rects) {
                e.save(),
                e.fillStyle = "rgb(0,0,0)",
                e.globalCompositeOperation = "destination-out",
                e.globalAlpha = 1,
                e.beginPath();
                for (const n of t.invalid_rects) {
                    e.moveTo(...d20.math.sub(n.points[0], d20.engine.currentCanvasOffset));
                    for (let t = 1; t < 4; ++t)
                        e.lineTo(...d20.math.sub(n.points[t], d20.engine.currentCanvasOffset));
                    e.closePath()
                }
                e.fill(),
                e.restore()
            } else
                e.clearRect(0, 0, Math.ceil(d20.engine.canvasWidth / d20.engine.canvasZoom), Math.ceil(d20.engine.canvasHeight / d20.engine.canvasZoom))
        },
        compositeCanvases: function(e, t) {
            if (t.length) {
                e.save();
                for (const n of t) {
                    let t = !1;
                    if (n.options) {
                        e.save(),
                        t = !0;
                        for (const t in n.options)
                            e[t] = n.options[t]
                    }
                    e.drawImage(n.canvas, 0, 0, Math.ceil(n.canvas.width / d20.engine.canvasZoom), Math.ceil(n.canvas.height / d20.engine.canvasZoom)),
                    t && e.restore()
                }
                e.restore()
            }
        },
        drawFog: function(e) {
            const t = d20.Campaign.activePage();
            if (!t.get("showdarkness"))
                return;
            e.save();
            const n = {
                minx: d20.engine.currentCanvasOffset[0],
                miny: d20.engine.currentCanvasOffset[1],
                maxx: d20.engine.currentCanvasOffset[0] + d20.engine.fowcanvas.width / d20.engine.canvasZoom,
                maxy: d20.engine.currentCanvasOffset[1] + d20.engine.fowcanvas.height / d20.engine.canvasZoom,
                w: d20.engine.fowcanvas.width,
                h: d20.engine.fowcanvas.height
            }
              , i = 1 / d20.engine.canvasZoom
              , o = -d20.engine.currentCanvasOffset[0]
              , r = -d20.engine.currentCanvasOffset[1]
              , a = "rgb(0,0,0)";
            e.fillStyle = a,
            e.globalCompositeOperation = "copy",
            e.beginPath(),
            e.rect(0, 0, Math.ceil(d20.engine.canvasWidth / d20.engine.canvasZoom), Math.ceil(d20.engine.canvasHeight / d20.engine.canvasZoom)),
            e.fill();
            let s = t.get("revealedAreas");
            _.isArray(s) || (s = JSON.parse(s)),
            _.each(s, function(t) {
                if ("hide" == t.type)
                    e.save(),
                    e.scale(i, i),
                    e.globalCompositeOperation = "source-over",
                    e.fillStyle = a,
                    e.fillRect(Math.floor((t.x + o) * d20.engine.canvasZoom), Math.floor((t.y + r) * d20.engine.canvasZoom), Math.ceil(t.width * d20.engine.canvasZoom), Math.ceil(t.height * d20.engine.canvasZoom)),
                    e.restore();
                else if (t.points) {
                    if (!t.points.length)
                        return;
                    e.globalCompositeOperation = "destination-out",
                    e.beginPath(),
                    e.moveTo(t.points[0][0] + o, t.points[0][1] + r);
                    for (let n = 1; n < t.points.length; n++)
                        e.lineTo(t.points[n][0] + o, t.points[n][1] + r);
                    e.fillStyle = "rgba(0, 0, 0, 1.0)",
                    e.closePath(),
                    e.fill()
                } else {
                    const i = t.x
                      , a = t.y;
                    if (i + t.width < n.minx || i > n.maxx || a + t.height < n.miny || a > n.maxy)
                        return;
                    const s = 1 / d20.engine.canvasZoom;
                    e.save(),
                    e.scale(s, s),
                    e.clearRect(Math.floor((t.x + o) * d20.engine.canvasZoom), Math.floor((t.y + r) * d20.engine.canvasZoom), Math.ceil(t.width * d20.engine.canvasZoom), Math.ceil(t.height * d20.engine.canvasZoom)),
                    e.restore()
                }
            }),
            e.restore()
        },
        drawFogTools: function(e) {
            const t = -d20.engine.currentCanvasOffset[0]
              , n = -d20.engine.currentCanvasOffset[1];
            if (e.save(),
            e.globalCompositeOperation = "source-over",
            "fog-hide" != d20.engine.mode && "fog-reveal" != d20.engine.mode || 4 != d20.engine.fog.down.length) {
                if ("fog-polygonreveal" == d20.engine.mode && d20.engine.fog.points.length > 0) {
                    if (e.beginPath(),
                    e.moveTo(d20.engine.fog.points[0][0] + t, d20.engine.fog.points[0][1] + n),
                    1 == d20.engine.fog.points.length)
                        e.lineTo(d20.engine.fog.points[0][0] + 2 + t, d20.engine.fog.points[0][1] + 2 + n);
                    else
                        for (let i = 1; i < d20.engine.fog.points.length; i++)
                            e.lineTo(d20.engine.fog.points[i][0] + t, d20.engine.fog.points[i][1] + n);
                    e.lineWidth = 5,
                    e.fillStyle = "rgba(255,255,133,0.50)",
                    e.fill(),
                    e.strokeStyle = "rgba(255,255,133,0.50)",
                    e.stroke()
                }
            } else
                e.beginPath(),
                "fog-hide" == d20.engine.mode ? e.fillStyle = "rgba(0,0,0,0.75)" : e.fillStyle = "rgba(255,255,133,0.50)",
                e.rect(d20.engine.fog.down[0] + t, d20.engine.fog.down[1] + n, d20.engine.fog.down[2] - d20.engine.fog.down[0], d20.engine.fog.down[3] - d20.engine.fog.down[1]),
                e.closePath(),
                e.fill();
            e.restore()
        },
        drawGridAlignBox: function(e) {
            if ("gridalign" == d20.engine.mode && 4 == d20.engine.fog.down.length) {
                const t = d20.engine.fog.down.slice(0, 2)
                  , n = d20.engine.fog.down.slice(2, 4);
                e.save(),
                e.globalCompositeOperation = "source-over",
                e.fillStyle = "rgba(255,255,133,0.50)",
                e.beginPath(),
                e.rect(...d20.math.sub(t, d20.engine.currentCanvasOffset), ...d20.math.sub(n, t)),
                e.fill(),
                e.restore()
            }
        }
    },
    $(function() {
        var e = function(e) {
            var t, n = 305419896;
            for (t = 0; t < e.length; t++)
                n += e.charCodeAt(t) * t;
            return n
        }
          , t = d20.engine.fowcanvas
          , n = d20.engine.lightingcanvas
          , i = d20.engine.shadowcanvas;
        d20.engine.fowctx;
        if (n)
            var o = d20.engine.lightingctx;
        if (i)
            var r = d20.engine.shadowctx;
        var a = function(e, t, n, i, o) {
            var r = o / d20.engine.canvasZoom
              , a = i / d20.engine.canvasZoom
              , s = d20.engine.snapTo
              , l = 0;
            e.beginPath(),
            e.lineWidth = 1;
            for (var c = t % s; c <= a; c += s)
                e.moveTo(.5 + c + l, l),
                e.lineTo(.5 + c + l, r + l);
            for (c = n % s; c <= r; c += s)
                e.moveTo(l, .5 + c + l),
                e.lineTo(a + l, .5 + c + l);
            var u = fabric.Color.sourceFromHex(d20.Campaign.activePage().get("gridcolor"));
            u && (e.strokeStyle = "rgba(" + u[0] + ", " + u[1] + ", " + u[2] + ", " + d20.Campaign.activePage().get("grid_opacity") + ")",
            e.stroke())
        }
          , s = function(e, t, n, i, o, r) {
            var a = .66 * d20.engine.snapTo;
            a < 10 && (a = 10);
            $("#editor");
            if (!d20.canvas_overlay.activeHexGrid || HT.Hexagon.Static.SIDE != a || HT.Hexagon.Static.ORIENTATION != ("cols" == r ? HT.Hexagon.Orientation.Rotated : HT.Hexagon.Orientation.Normal) || d20.engine.pageWidth != HT.Hexagon.Static.LastMaxW || d20.engine.pageHeight != HT.Hexagon.Static.LastMaxH) {
                HT.Hexagon.Static.ORIENTATION = "cols" == r ? HT.Hexagon.Orientation.Rotated : HT.Hexagon.Orientation.Normal;
                var s = "cols" == r ? .85714285714286 : 1.16666666666667
                  , l = Math.pow(s, 2)
                  , c = (1 + l) / l
                  , u = a / l
                  , d = (1 - 4 * l) / (4 * l) * Math.pow(a, 2)
                  , h = (-u + Math.sqrt(Math.pow(u, 2) - 4 * c * d)) / (2 * c)
                  , p = 2 * h + a
                  , f = 2 * ((2 * h + a) / (2 * s));
                HT.Hexagon.Static.WIDTH = p,
                HT.Hexagon.Static.HEIGHT = f,
                HT.Hexagon.Static.SIDE = a,
                HT.Hexagon.Static.LastMaxW = d20.engine.pageWidth / d20.engine.canvasZoom,
                HT.Hexagon.Static.LastMaxH = d20.engine.pageHeight / d20.engine.canvasZoom,
                d20.canvas_overlay.activeHexGrid = new HT.Grid(HT.Hexagon.Static.LastMaxW,HT.Hexagon.Static.LastMaxH)
            }
            var g = fabric.Color.sourceFromHex(d20.Campaign.activePage().get("gridcolor"));
            if (g) {
                e.strokeStyle = "rgba(" + g[0] + ", " + g[1] + ", " + g[2] + ", " + d20.Campaign.activePage().get("grid_opacity") + ")",
                e.lineWidth = 1;
                for (var m = 0; m < d20.canvas_overlay.activeHexGrid.Hexes.length; m++) {
                    var y = d20.canvas_overlay.activeHexGrid.Hexes[m];
                    y.BottomRightPoint.Y < -n || y.BottomRightPoint.X < -t || y.TopLeftPoint.Y > o / d20.engine.canvasZoom - n || y.TopLeftPoint.X > i / d20.engine.canvasZoom - t || (0,
                    y.draw(e, t, n, d20.Campaign.activePage().get("gridlabels")))
                }
            }
        }
          , l = function(e, t) {
            for (var n = 0 != d20.engine.snapTo ? d20.engine.snapTo : 70 * +d20.Campaign.activePage().get("adv_fow_grid_size"), i = e.left, o = e.top, r = Math.floor(i / n) - t, a = Math.ceil((i + e.width) / n) + t, s = Math.floor(o / n) - t, l = Math.floor((o + e.height) / n) + t, c = [], u = r; u < a; u++)
                for (var d = s; d < l; d++)
                    c.push([r + u - r, s + d - s]);
            return c
        }
          , c = function(e, t) {
            for (var n = e[0], i = e[1], o = !1, r = 0, a = t.length - 1; r < t.length; a = r++) {
                var s = t[r][0]
                  , l = t[r][1]
                  , c = t[a][0]
                  , u = t[a][1];
                l > i != u > i && n < (c - s) * (i - l) / (u - l) + s && (o = !o)
            }
            return o
        }
          , u = function(e, t, n) {
            return {
                x: e.x + t * Math.cos(n),
                y: e.y + t * Math.sin(n)
            }
        }
          , d = function(e, t, n, i) {
            var o = 1.5 * t;
            n < 0 && (n = 0),
            n > 360 && (n = 360);
            var r = Math.max(n - 180, 0) / 2
              , a = [];
            if (a.push([[{
                x: e.x,
                y: e.y
            }, u(e, o, .5 * Math.PI + i), u(e, o, 1 * Math.PI - fabric.util.degreesToRadians(r) + i)]], [[{
                x: e.x,
                y: e.y
            }, u(e, o, .5 * Math.PI + i), u(e, o, 2 * Math.PI + fabric.util.degreesToRadians(r) + i)]]),
            n < 180) {
                r = Math.max(180 - n, 0) / 2;
                a.push([[{
                    x: e.x,
                    y: e.y
                }, u(e, o, 1 * Math.PI + i), u(e, o, 1 * Math.PI + fabric.util.degreesToRadians(r) + i)]], [[{
                    x: e.x,
                    y: e.y
                }, u(e, o, 2 * Math.PI + i), u(e, o, 2 * Math.PI - fabric.util.degreesToRadians(r) + i)]])
            }
            return a
        }
          , h = function(i, a, s, l, c) {
            d20.utils.stattracker.lighting || (d20.utils.stattracker.lighting = !0);
            for (var u = illuminated.Lamp, h = (illuminated.RectangleObject,
            illuminated.DiscObject,
            illuminated.PolygonObject), p = illuminated.Vec2, f = illuminated.Lighting, g = (illuminated.DarkMask,
            {
                minx: i,
                miny: a,
                maxx: i + s / d20.engine.canvasZoom,
                maxy: a + l / d20.engine.canvasZoom,
                w: s,
                h: l
            }), m = 1e4, y = o, v = [], b = 0, w = d20.engine.canvas._objects.length; b < w; b++) {
                var x = d20.engine.canvas._objects[b];
                if ("path" == x.type && x.model && "walls" == x.model.get("layer")) {
                    var k = e(x.get("top") + "" + x.get("left") + x.get("width") + x.get("height") + x.get("scaleX") + x.get("scaleY"));
                    if (!x.lightingobjs || x.lightingchecksum !== k) {
                        console.log("new caster!");
                        var E = Math.floor(x.get("left") - Math.floor(x.get("width") * x.scaleX) / 2)
                          , S = Math.floor(x.get("top") - Math.floor(x.get("height") * x.scaleY) / 2);
                        x.lightingobjs = [];
                        for (var C = x.get("path"), T = 0; T < C.length; T++)
                            if (0 != T) {
                                var A = [];
                                A.push(new p(Math.round(C[T][1] * x.scaleX) + E,Math.round(C[T][2] * x.scaleY) + S)),
                                A.push(new p(Math.round(C[T - 1][1] * x.scaleX) + E,Math.round(C[T - 1][2] * x.scaleY) + S)),
                                x.lightingobjs.push(new h({
                                    points: A
                                }))
                            }
                        x.lightingchecksum = k
                    }
                    for (var R = 0; R < x.lightingobjs.length; R++)
                        v.push(x.lightingobjs[R])
                }
            }
            var M = 0
              , P = !(!0 !== d20.Campaign.activePage().get("lightenforcelos") || !1 !== window.is_gm && !d20.engine.lightOnlySelected)
              , I = d20.engine.lightOnlySelected && !P ? d20.engine.lightOnlySelected : d20.engine.canvas._objects
              , O = []
              , D = d20.engine.canvas.getActiveGroup()
              , L = 2 * (g.w > g.h ? g.w : g.h);
            d20.engine.canvasZoom < 1 && (L /= d20.engine.canvasZoom);
            var B = 0;
            if (window.is_gm && !d20.engine.lightOnlySelected && (B = 1),
            _.each(I, function(e) {
                return "image" !== e.type || (!e.model.get("light_hassight") || void ((window.is_gm && d20.engine.lightOnlySelected && -1 !== d20.engine.lightOnlySelected.indexOf(e) || !window.is_gm && e.selectable) && e.model.get("light_multiplier") > B && (B = e.model.get("light_multiplier"))))
            }),
            0 === B && !1 === d20.Campaign.activePage().get("lightenforcelos") && (B = 1),
            _.each(I, function(e) {
                if ("image" != e.type || "gmlayer" == e.model.get("layer"))
                    return;
                const n = !!e.model.get("light_hassight")
                  , i = !(!window.is_gm || !d20.engine.lightOnlySelected)
                  , o = i && -1 !== d20.engine.lightOnlySelected.indexOf(e)
                  , a = !!e.model.get("light_otherplayers")
                  , s = Math.max(+e.model.get("light_radius"), 0) || 0
                  , l = P && n && (o || !window.is_gm && e.selectable);
                let h = s > 0;
                if (h &= i ? a || o && n : window.is_gm || a || e.selectable,
                l || h) {
                    e._didRenderShadows = !0;
                    var b = 0
                      , w = 0;
                    const n = s <= 0 || d20.Campaign.activePage().get("lightingglobalillum");
                    var _;
                    D && D.contains(e) && (b = D.left,
                    w = D.top),
                    _ = 1 == d20.Campaign.activePage().get("lightupdatedrop") ? {
                        top: e.model.get("top"),
                        left: e.model.get("left"),
                        width: e.model.get("width"),
                        height: e.model.get("height")
                    } : {
                        top: e.top + w,
                        left: e.left + b,
                        width: e.width,
                        height: e.height
                    };
                    let i = s * B;
                    const o = d20.engine.snapTo || 70;
                    let a = Math.floor(i / (+d20.Campaign.activePage().get("scale_number") || 1) * o);
                    var x;
                    a += Math.max(_.width, _.height) / 2;
                    const h = e.model.get("light_dimradius");
                    let T = +h;
                    "" === h || Number.isNaN(T) ? x = .75 * a : (T *= B,
                    x = Math.floor(T / (+d20.Campaign.activePage().get("scale_number") || 1) * o),
                    x += Math.max(_.width, _.height) / 2),
                    (a > m || 0 == a) && (a = m),
                    x >= a && (x = .95 * a);
                    var k = l && L > a ? L : a;
                    if (_.left + k < g.minx || _.left - k > g.maxx || _.top + k < g.miny || _.top - k > g.maxy)
                        return;
                    e.lamp && e.lamp.newradius == a && e.lamp.newdim == x || (console.log("new lamp"),
                    e.lamp = new u({
                        position: new p(0,0),
                        distance: 1,
                        radius: 1,
                        samples: 1,
                        diffuse: .2
                    }),
                    e.lamp.newradius = a,
                    e.lamp.newdim = x,
                    e.lamp.infinite = !1);
                    var E, S = new f({
                        light: e.lamp,
                        objects: v
                    });
                    e.lamp.position = new p(_.left,_.top),
                    e.lamp.distance = a,
                    e.lamp.radius = x,
                    e.lamp.distance_shadows = 1.5 * e.lamp.distance,
                    l && (S.light.infinite = !0,
                    S.light.distance_shadows < L && (S.light.distance_shadows = L),
                    O.push(S)),
                    S.shadowpaths = S.compute(),
                    S.maskingpaths = [];
                    for (var C = 0; C < S.shadowpaths.length; C++)
                        S.maskingpaths.push(S.shadowpaths[C]);
                    if (l && "" !== e.model.get("light_losangle") && S.maskingpaths.push.apply(S.maskingpaths, d({
                        x: e.lamp.position.x,
                        y: e.lamp.position.y + 0
                    }, e.lamp.distance_shadows, parseInt(e.model.get("light_losangle"), 10), fabric.util.degreesToRadians(e.angle))),
                    n)
                        return;
                    "" !== e.model.get("light_angle") && S.shadowpaths.push.apply(S.shadowpaths, d({
                        x: e.lamp.position.x,
                        y: e.lamp.position.y + 0
                    }, e.lamp.distance, parseInt(e.model.get("light_angle"), 10), fabric.util.degreesToRadians(e.angle))),
                    d20.canvas_overlay.gl.active ? d20.canvas_overlay.gl.renderLightToGl(S, M + 1) : (0 == M ? (y.globalCompositeOperation = "source-over",
                    y.globalAlpha = c,
                    E = !1) : (1 != y.globalAlpha && (y.globalAlpha = 1),
                    y.globalCompositeOperation = "destination-in",
                    E = !1),
                    r.fillStyle = "rgb(0,0,0)",
                    r.fillRect(0, 0, Math.ceil(t.width / d20.engine.canvasZoom), Math.ceil(t.height / d20.engine.canvasZoom)),
                    r.save(),
                    r.translate(-d20.engine.currentCanvasOffset[0], -d20.engine.currentCanvasOffset[1]),
                    S.light.castlight(S.light.center(), r, E),
                    S.castToCtx(r, S.shadowpaths),
                    r.restore(),
                    y.drawImage(d20.engine.shadowcanvas, 0, 0, Math.ceil(d20.engine.shadowcanvas.width / d20.engine.canvasZoom), Math.ceil(d20.engine.shadowcanvas.height / d20.engine.canvasZoom))),
                    M++
                }
            }),
            P && d20.canvas_overlay.gl.active)
                d20.canvas_overlay.gl.renderLosMask(O);
            else if (P) {
                const e = d20.engine.work_canvases.floater.context
                  , n = d20.engine.work_canvases.floater.canvas;
                e.save(),
                e.globalAlpha = 1,
                r.fillStyle = "rgb(0,0,0)";
                for (var F = O.length, H = 0; H < F; H++)
                    0 == H ? (e.clearRect(0, 0, Math.ceil(t.width / d20.engine.canvasZoom), Math.ceil(t.height / d20.engine.canvasZoom)),
                    e.globalCompositeOperation = "source-over") : e.globalCompositeOperation = "destination-in",
                    r.clearRect(0, 0, Math.ceil(t.width / d20.engine.canvasZoom), Math.ceil(t.height / d20.engine.canvasZoom)),
                    r.save(),
                    r.translate(-d20.engine.currentCanvasOffset[0], -d20.engine.currentCanvasOffset[1]),
                    O[H].castToCtx(r, O[H].maskingpaths),
                    r.restore(),
                    F > 1 && e.drawImage(d20.engine.shadowcanvas, 0, 0, Math.ceil(d20.engine.shadowcanvas.width / d20.engine.canvasZoom), Math.ceil(d20.engine.shadowcanvas.height / d20.engine.canvasZoom));
                e.restore(),
                0 === F && (r.fillStyle = "rgb(0,0,0)",
                r.fillRect(0, 0, Math.ceil(t.width / d20.engine.canvasZoom), Math.ceil(t.height / d20.engine.canvasZoom))),
                y.globalAlpha = 1,
                y.globalCompositeOperation = "source-over",
                y.drawImage(F > 1 ? n : d20.engine.shadowcanvas, 0, 0, Math.ceil(n.width / d20.engine.canvasZoom), Math.ceil(n.height / d20.engine.canvasZoom))
            }
            0 != M || d20.canvas_overlay.gl.active || (window.is_gm && !d20.engine.lightOnlySelected || !0 !== d20.Campaign.activePage().get("lightglobalillum") || (c = 1),
            y.fillStyle = "rgba(0,0,0," + c + ")",
            y.fillRect(0, 0, Math.ceil(n.width / d20.engine.canvasZoom), Math.ceil(n.height / d20.engine.canvasZoom))),
            d20.canvas_overlay.gl.active && (d20.canvas_overlay.gl.finishLightRender(),
            P && 0 === O.length && (window.is_gm && !d20.engine.lightOnlySelected || !0 !== d20.Campaign.activePage().get("lightglobalillum") || (c = 1),
            d20.canvas_overlay.gl.prepareForGlDraw(c))),
            O = null
        };
        d20.canvas_overlay.drawGrid = function(e) {
            if (d20.Campaign && d20.Campaign.activePage() && e) {
                var n = d20.engine.currentCanvasOffset[1]
                  , i = d20.engine.currentCanvasOffset[0]
                  , o = t.width
                  , r = t.height;
                d20.Campaign.activePage().get("showgrid") && d20.engine.snapTo > 0 && ("hex" == d20.Campaign.activePage().get("grid_type") ? s(e, -i, -n, o, r, "cols") : "hexr" == d20.Campaign.activePage().get("grid_type") ? s(e, -i, -n, o, r, "rows") : a(e, -i, -n, o, r))
            }
        }
        ;
        d20.canvas_overlay.redrawLighting = function(e) {
            const i = d20.Campaign.activePage();
            lightingIsActive = i.get("showlighting") && !0 === window.largefeats;
            let r = 1;
            if (window.is_gm && !d20.engine.lightOnlySelected && (r = i.get("fog_opacity")),
            !0 === i.get("lightglobalillum") && (r = 0),
            d20.canvas_overlay.gl.active ? d20.canvas_overlay.gl.prepareForGlDraw(lightingIsActive ? r : 0) : o.clearRect(0, 0, Math.ceil(t.width / d20.engine.canvasZoom), Math.ceil(t.height / d20.engine.canvasZoom)),
            !lightingIsActive)
                return;
            h(...d20.engine.currentCanvasOffset, d20.engine.canvasWidth, d20.engine.canvasHeight, r);
            const a = [0, 0, d20.engine.canvasWidth, d20.engine.canvasHeight];
            e.save(),
            e.setTransform(1, 0, 0, 1, 0, 0),
            e.globalCompositeOperation = i.get("adv_fow_enabled") ? "destination-in" : "copy",
            e.drawImage(n, ...a, ...a),
            e.restore()
        }
        ,
        d20.canvas_overlay.revealOrHideArea = function(e) {
            if (d20.Campaign.activePage().get("showdarkness") || d20.Campaign.activePage().get("adv_fow_enabled")) {
                if (e.width + e.height < 20 || e.x < 0 || e.y < 0)
                    return;
                if (d20.Campaign.activePage().get("adv_fow_enabled") && !e.altKey) {
                    var t = []
                      , n = 0 != d20.engine.snapTo ? d20.engine.snapTo : 70 * d20.Campaign.activePage().get("adv_fow_grid_size");
                    if (e.points && e.points.length > 0) {
                        var i, o, r, a, s = [], u = [], d = e.points;
                        d.each(function(e) {
                            s.push(e[0]),
                            u.push(e[1])
                        }),
                        i = Math.min.apply(null, s),
                        o = Math.max.apply(null, s),
                        r = Math.min.apply(null, u),
                        a = Math.max.apply(null, u),
                        l(h = {
                            top: r,
                            left: i,
                            width: o - i,
                            height: a - r
                        }, 0).each(function(e) {
                            var i = e[0] * n + n / 2
                              , o = e[1] * n + n / 2;
                            c([i, o], d) && t.push(e)
                        }),
                        t = t.map(function(e) {
                            return e[0] + "," + e[1]
                        })
                    } else {
                        var h = {
                            top: e.y,
                            left: e.x,
                            width: e.width,
                            height: e.height
                        };
                        t = (t = l(h, 0)).map(function(e) {
                            return e[0] + "," + e[1]
                        })
                    }
                    const p = d20.Campaign.activePage().get("id");
                    if ("reveal" === e.type)
                        for (const e of d20.Campaign.players.models) {
                            const n = e.get("id");
                            if (d20.engine.advanced_fog.revealed_cells[n])
                                if (d20.engine.advanced_fog.revealed_cells[n][p]) {
                                    const e = t.length;
                                    for (let i = 0; i < e; ++i)
                                        d20.engine.advanced_fog.revealed_cells[n][p].add(t[i])
                                } else
                                    d20.engine.advanced_fog.revealed_cells[n][p] = new Set(t);
                            else
                                d20.engine.advanced_fog.revealed_cells[n] = {
                                    [p]: new Set(t)
                                };
                            const i = {};
                            for (const e in d20.engine.advanced_fog.revealed_cells[n])
                                i[e] = Array.from(d20.engine.advanced_fog.revealed_cells[n][e]);
                            e.save({
                                adv_fow_revealed: JSON.stringify(i)
                            })
                        }
                    else if ("hide" === e.type) {
                        for (const e of d20.Campaign.players.models) {
                            const n = e.get("id")
                              , i = d20.engine.advanced_fog.revealed_cells[n] && d20.engine.advanced_fog.revealed_cells[n][p];
                            if (i) {
                                const o = t.length;
                                for (let e = 0; e < o; ++e)
                                    i["delete"](t[e]);
                                const r = {};
                                for (const e in d20.engine.advanced_fog.revealed_cells[n])
                                    r[e] = Array.from(d20.engine.advanced_fog.revealed_cells[n][e]);
                                e.save({
                                    adv_fow_revealed: JSON.stringify(r)
                                })
                            }
                        }
                        const e = {
                            type: "afow_hide_local",
                            cells: t,
                            page_id: p
                        };
                        d20.textchat.sendShout(e)
                    }
                }
                if (d20.Campaign.activePage().get("showdarkness") && !e.ctrlKey) {
                    var p = d20.Campaign.activePage().get("revealedAreas");
                    if (_.isArray(p) || (p = JSON.parse(p)),
                    e.points)
                        var f = {
                            points: e.points,
                            type: e.type
                        };
                    else
                        f = {
                            width: e.width / window.zoomLevel,
                            height: e.height / window.zoomLevel,
                            x: e.x / window.zoomLevel,
                            y: e.y / window.zoomLevel,
                            type: e.type
                        };
                    p.push(f),
                    d20.Campaign.activePage().save({
                        revealedAreas: JSON.stringify(p)
                    })
                }
            } else {
                var g = $("<div><p>The Fog of War feature isn't currently turned on for this page, so hiding or revealing areas will have no effect. Do you want to turn it on? (You probably do!)</p>");
                if (g.dialog({
                    zIndex: 10800,
                    title: "Enable Fog of War?",
                    buttons: [{
                        text: "Turn On Fog of War",
                        click: function() {
                            d20.Campaign.activePage().save({
                                showdarkness: !0
                            }),
                            g.dialog("destroy").remove()
                        }
                    }, {
                        text: "No Thanks!",
                        click: function() {
                            g.dialog("destroy").remove()
                        }
                    }],
                    beforeClose: function() {
                        g.dialog("destroy").remove()
                    }
                }),
                !0 === window.largefeats) {
                    var m = g.dialog("option", "buttons")
                      , y = {
                        text: "Turn On Advanced Fog of War",
                        click: function() {
                            var e = {
                                adv_fow_enabled: !0
                            };
                            $(".advancedfowenabled").prop("checked", !0),
                            d20.Campaign.activePage().save(e),
                            g.dialog("destroy").remove()
                        }
                    };
                    m.splice(1, 0, y),
                    g.dialog("option", "buttons", m)
                }
            }
        }
    }),
    d20.canvas_overlay.gl = {
        active: !1,
        initialized: !1
    },
    function() {
        var e, t, n, i, o, r, a, s, l, c = [], u = [], d = function() {
            c.length;
            var e = a.createBuffer();
            a.bindBuffer(a.ARRAY_BUFFER, e),
            a.bufferData(a.ARRAY_BUFFER, new Float32Array(c), a.STATIC_DRAW),
            a.vertexAttribPointer(t, 2, a.FLOAT, !1, 0, 0),
            c = []
        }, h = function(e, t) {
            a.drawArrays(a.TRIANGLES, e, t)
        }, p = function(e, t, n) {
            for (var i = (e[0].x - d20.engine.currentCanvasOffset[0]) * d20.engine.canvasZoom, o = (e[0].y - d20.engine.currentCanvasOffset[1]) * d20.engine.canvasZoom, r = e.length - (n ? 2 : 1), a = 1; a < r; a++)
                c.push(i, o, (e[a].x - d20.engine.currentCanvasOffset[0]) * d20.engine.canvasZoom, (e[a].y - d20.engine.currentCanvasOffset[1]) * d20.engine.canvasZoom, (e[a + 1].x - d20.engine.currentCanvasOffset[0]) * d20.engine.canvasZoom, (e[a + 1].y - d20.engine.currentCanvasOffset[1]) * d20.engine.canvasZoom);
            t || d()
        };
        d20.canvas_overlay.gl.updateGlSize = function(e) {
            console.log("UPDATE GL SIZE!"),
            d20.canvas_overlay.gl.initialized || f(),
            e ? (console.log("FORCE RESIZE!"),
            s.viewport(0, 0, d20.engine.lightingcanvas.width + 10, d20.engine.lightingcanvas.height + 10)) : s.viewport(0, 0, d20.engine.lightingcanvas.width, d20.engine.lightingcanvas.height),
            d20.engine.redrawScreenNextTick()
        }
        ,
        d20ext.resizeGl = d20.canvas_overlay.gl.updateGlSize;
        var f = function() {
            if (!d20.canvas_overlay.gl.initialized) {
                a = d20.engine.lightingctx,
                s = d20.engine.lightingctx,
                a.enable(a.BLEND),
                a.blendFunc(a.DST_ALPHA, a.ZERO),
                a.disable(a.DEPTH_TEST);
                var c = createShaderFromScriptElement(a, "2d-vertex-shader")
                  , u = createShaderFromScriptElement(a, "2d-fragment-shader");
                l = createProgram(a, [c, u]),
                e = a.getUniformLocation(l, "u_lightflag"),
                n = a.getUniformLocation(l, "u_resolution"),
                usingAdvFowLocation = a.getUniformLocation(l, "u_usingadvfow"),
                t = a.getAttribLocation(l, "a_position"),
                i = a.getUniformLocation(l, "centerPosition"),
                o = a.getUniformLocation(l, "lightRadius"),
                r = a.getUniformLocation(l, "lightColor"),
                a.enableVertexAttribArray(t),
                a.useProgram(l),
                a.colorMask(!0, !0, !0, !0),
                a.enable(a.STENCIL_TEST),
                a.stencilMask(255),
                d20.canvas_overlay.gl.initialized = !0
            }
        }
          , g = function(e, t, n) {
            for (var i = 2 * Math.PI / n, o = [{
                x: e.x,
                y: e.y
            }], r = 0; r <= 2 * Math.PI - i + 1; r += i)
                o.push({
                    x: Math.sin(r) * t + e.x,
                    y: Math.cos(r) * t + e.y
                });
            p(o, !0, !0)
        };
        d20.canvas_overlay.gl.prepareForGlDraw = function(e) {
            return a.clearColor(0, 0, 0, e),
            a.clear(a.STENCIL_BUFFER_BIT | a.COLOR_BUFFER_BIT),
            a.uniform2f(n, d20.engine.lightingcanvas.width, d20.engine.lightingcanvas.height),
            d20.Campaign.activePage().get("adv_fow_enabled") && !0 === window.largefeats ? a.uniform1f(usingAdvFowLocation, 1) : a.uniform1f(usingAdvFowLocation, 0),
            !0
        }
        ,
        d20.canvas_overlay.gl.renderLightToGl = function(e, t) {
            for (var n = c.length / 2, i = e.shadowpaths.length, o = 0; o < i; o++)
                for (var r = e.shadowpaths[o].length, a = 0; a < r; a++)
                    p(e.shadowpaths[o][a], !0);
            u.push(0, t, n, c.length / 2 - n, 0, 0, 0, 0, 0);
            n = c.length / 2;
            g(e.light.position, e.light.distance, 18),
            u.push(1, t, n, c.length / 2 - n, (e.light.position.x - d20.engine.currentCanvasOffset[0]) * d20.engine.canvasZoom, (e.light.position.y - d20.engine.currentCanvasOffset[1]) * d20.engine.canvasZoom, e.light.distance * d20.engine.canvasZoom, e.light.radius * d20.engine.canvasZoom, 0)
        }
        ,
        d20.canvas_overlay.gl.renderLosMask = function(e) {
            for (var t = e.length, n = 0; n < t; n++) {
                for (var i = c.length / 2, o = e[n].maskingpaths.length, r = 0; r < o; r++)
                    for (var a = e[n].maskingpaths[r].length, s = 0; s < a; s++)
                        p(e[n].maskingpaths[r][s], !0);
                u.push(2, n, i, c.length / 2 - i, t, 0, 0, 0, 0)
            }
        }
        ,
        d20.canvas_overlay.gl.finishLightRender = function() {
            d(),
            a.blendFunc(a.DST_ALPHA, a.ZERO),
            a.enable(a.STENCIL_TEST),
            a.enable(a.BLEND);
            for (var t = 0; t < u.length; t += 9)
                0 === u[t] ? (a.stencilFunc(a.NEVER, u[t + 1], 255),
                a.stencilOp(a.REPLACE, a.KEEP, a.KEEP),
                a.uniform1f(e, 0),
                h(u[t + 2], u[t + 3])) : 1 === u[t] ? (a.stencilFunc(a.NOTEQUAL, u[t + 1], 255),
                a.stencilOp(a.KEEP, a.KEEP, a.KEEP),
                a.uniform2f(i, u[t + 4], u[t + 5]),
                a.uniform2f(o, u[t + 6], u[t + 7]),
                a.uniform1f(e, 1),
                h(u[t + 2], u[t + 3])) : (0 === u[t + 1] ? (a.clear(a.STENCIL_BUFFER_BIT),
                a.stencilFunc(a.NEVER, 1, 255),
                a.stencilOp(a.REPLACE, a.KEEP, a.KEEP),
                a.uniform1f(e, 0)) : (a.stencilFunc(a.EQUAL, u[t + 1], 255),
                a.stencilOp(a.KEEP, a.KEEP, a.INCR)),
                u[t + 1] === u[t + 4] - 1 && (0 === u[t + 1] && a.stencilFunc(a.ALWAYS, 1, 255),
                a.disable(a.BLEND)),
                h(u[t + 2], u[t + 3]));
            u = []
        }
        ,
        d20.canvas_overlay.gl.renderParticle = function(e, t, n, i, o, r) {
            var a = c.length / 2;
            p(e, !0),
            u.push("particle", 0, a, c.length / 2 - a, (t - d20.engine.currentCanvasOffset[0]) * d20.engine.canvasZoom, (n - d20.engine.currentCanvasOffset[1]) * d20.engine.canvasZoom, i, o, r)
        }
        ,
        d20.canvas_overlay.gl.finishParticleRender = function() {
            d(),
            a.uniform1f(e, 5),
            a.disable(a.STENCIL_TEST),
            a.enable(a.BLEND),
            a.blendFuncSeparate(a.SRC_ALPHA, a.ONE, a.ONE, a.ONE);
            for (var t = 0; t < u.length; t += 9)
                a.uniform2f(i, u[t + 4], u[t + 5]),
                a.uniform2f(o, u[t + 6], u[t + 8]),
                a.uniform4f(r, u[t + 7][0], u[t + 7][1], u[t + 7][2], u[t + 7][3]),
                h(u[t + 2], u[t + 3]);
            u = []
        }
        ,
        d20.canvas_overlay.gl.renderLightToGl2 = function(e, t) {
            a.stencilFunc(a.NEVER, t, 255),
            a.stencilOp(a.REPLACE, a.KEEP, a.KEEP),
            _.each(e.compute(), function(e) {
                _.each(e, function(e) {
                    p(e, !0)
                })
            }),
            d(),
            a.stencilFunc(a.NOTEQUAL, t, 255),
            g(e.light.position, e.light.distance, 25),
            d()
        }
    }(),
    _EventDescriptor.prototype.add = function(e, t) {
        let n = Array.isArray(t) ? t : t.split(" ");
        this[e] = this[e] ? this[e].concat(n) : _.clone(n)
    }
    ,
    _EventDescriptor.prototype.absorb = function(e) {
        for (let t in e)
            this.add(t, e[t])
    }
    ,
    _EventDescriptor.prototype.has = function(e, t) {
        return !!this[e] && this[e].indexOf(t) > -1
    }
    ,
    _Listener.prototype._toggle = function(e, t) {
        if (e[this.target_name])
            for (let n of e[this.target_name])
                this.callbacks[n] && this.target[t](n, this.callbacks[n])
    }
    ,
    _Listener.prototype.add = function(e) {
        this._toggle(e, "on")
    }
    ,
    _Listener.prototype.remove = function(e) {
        this._toggle(e, "off")
    }
    ,
    _Listener.prototype.supported = function(e) {
        return e !== undefined ? (e.add(this.target_name, Object.keys(this.callbacks)),
        e) : new _EventDescriptor(this.target_name,Object.keys(this.callbacks))
    }
    ,
    FrameRecorder.prototype._slow_frame_threshold = 62.5,
    FrameRecorder.prototype._supported_event_listeners = [],
    FrameRecorder.prototype._add_event_data = function(e) {
        this._current.events ? this._current.events.push(e) : this._current.events = [e]
    }
    ,
    Object.defineProperty(FrameRecorder.prototype, "supported_event_listeners", {
        get() {
            let e;
            for (let t of FrameRecorder.prototype._supported_event_listeners)
                e = t.supported(e);
            return e
        }
    }),
    Object.defineProperty(FrameRecorder.prototype, "fps", {
        get() {
            let e = {
                avg: 1e3 * this._totals.frames / this._totals.time
            };
            return this._totals.slowest_actual_fps < Number.POSITIVE_INFINITY && (e.min = this._totals.slowest_actual_fps),
            this._totals.fastest_actual_fps > Number.NEGATIVE_INFINITY && (e.max = this._totals.fastest_actual_fps),
            e
        }
    }),
    FrameRecorder.prototype._activate_listeners = function() {
        for (let e of FrameRecorder.prototype._supported_event_listeners)
            e.add(this._event_types)
    }
    ,
    FrameRecorder.prototype._deactivate_listeners = function() {
        for (let e of FrameRecorder.prototype._supported_event_listeners)
            e.remove(this._event_types)
    }
    ,
    FrameRecorder.prototype.register_events = function(e, t) {
        arguments[0]instanceof _EventDescriptor ? this._event_types.absorb(arguments[0]) : "all" === arguments[0] ? this._event_types = this.supported_event_listeners : this._event_types.add(e, t),
        this._active && (this._deactivate_listeners(),
        this._activate_listeners())
    }
    ,
    FrameRecorder.prototype.startup = function(e) {
        if (this._started)
            throw "Cannot start FrameRecorder when it is already running";
        this.clear(),
        this.discard_frame(),
        this._activate_listeners(),
        this._active = !0,
        this._started = !0,
        this._current.frame_number = 0,
        e && (this._current.start = e)
    }
    ,
    FrameRecorder.prototype.startup_on_page_load = function(e) {
        $(document).one("d20:pagechanged", {
            frame_recorder: this,
            params: e
        }, t=>{
            t.data.frame_recorder.startup(),
            e.send_report_after && t.data.frame_recorder.send_report_after(e.send_report_after.time, e.send_report_after.repeat, e.send_report_after.report_params)
        }
        )
    }
    ,
    FrameRecorder.prototype.shutdown = function() {
        if (!this._started)
            throw "Cannot shutdown FrameRecorder when it has not been started";
        this._active = !1,
        this._started = !1,
        this._deactivate_listeners()
    }
    ,
    FrameRecorder.prototype.pause = function(e) {
        if (this._started)
            return !!this._active && (this._active = !1,
            this._current.pause_at = e,
            this._deactivate_listeners(),
            !0);
        throw "Cannot pause FrameRecorder when it has not been started"
    }
    ,
    FrameRecorder.prototype.unpause = function(e) {
        if (this._started)
            return !this._active && (this._active = !0,
            this._current.resume_at = e,
            this._activate_listeners(),
            !0);
        throw "Cannot unpause FrameRecorder when it has not been started"
    }
    ,
    FrameRecorder.prototype.discard_frame = function() {
        this._current = {
            start: null
        }
    }
    ,
    FrameRecorder.prototype.clear = function() {
        this._totals = {
            frames: 0,
            time: 0,
            fastest: Number.POSITIVE_INFINITY,
            slowest: Number.NEGATIVE_INFINITY,
            fastest_actual_fps: Number.NEGATIVE_INFINITY,
            slowest_actual_fps: Number.POSITIVE_INFINITY
        },
        this.slow_frames = [],
        this._fps_timer = 0,
        this._frames_this_second = 0,
        this.all_frames && (this.all_frames = [])
    }
    ,
    FrameRecorder.prototype.update = function(e) {
        if (this._active && null !== this._current.start) {
            let t = e - this._current.start;
            if (this._current.frame_time = t,
            this._current.start = this._totals.time,
            this._totals.time += t,
            ++this._totals.frames,
            this._totals.fastest = Math.min(this._totals.fastest, t),
            this._totals.slowest = Math.max(this._totals.slowest, t),
            this._fps_timer += t,
            ++this._frames_this_second,
            this._fps_timer >= 1e3) {
                let e = 1e3 * this._frames_this_second / this._fps_timer;
                this._frames_this_second = 0,
                this._fps_timer = 0,
                this._totals.fastest_actual_fps = Math.max(this._totals.fastest_actual_fps, e),
                this._totals.slowest_actual_fps = Math.min(this._totals.slowest_actual_fps, e)
            }
            t > FrameRecorder.prototype._slow_frame_threshold && this.slow_frames.push(this._current),
            this._save_all && this.all_frames.push(this._current),
            this._current = {
                start: e,
                frame_number: this._totals.frames,
                frame_time: null
            }
        } else
            this._active && (this._current.start = e,
            this._current.frame_number = this._totals.frames)
    }
    ,
    FrameRecorder.prototype.save_all_frames = function(e) {
        (this._save_all = e) && !this.all_frames && (this.all_frames = [])
    }
    ,
    FrameRecorder.prototype.report_stats = function(e) {
        let t = d20.Campaign.activePage()
          , n = _.clone(this._totals);
        delete n.fastest_actual_fps,
        delete n.slowest_actual_fps,
        n.slow_frames = this.slow_frames.length,
        n.slow_frame_threshold = this._slow_frame_threshold;
        let i = {
            user: window.currentPlayer.get("id"),
            date: (new Date).toISOString().slice(0, 19).replace("T", " "),
            fps: this.fps,
            totals: n,
            objects: {
                graphics: t.thegraphics.models.length,
                my_tokens_with_sight: _.filter(t.thegraphics.models, e=>{
                    let t = e.get("light_hassight")
                      , n = window.is_gm || e.currentPlayerControls();
                    return t && n
                }
                ).length,
                tokens_emitting_light: _.filter(t.thegraphics.models, e=>"" !== e.get("light_radius")).length,
                dynamic_lighting_lines: _.filter(t.thepaths.models, e=>"walls" === e.get("layer")).length
            },
            page_settings: {
                afow_enabled: t.get("adv_fow_enabled"),
                dynamic_lighting_enabled: t.get("showlighting"),
                grid: {
                    enabled: t.get("showgrid"),
                    type: t.get("grid_type"),
                    size: +t.get("snapping_increment") || 1
                },
                page_size: {
                    width: +t.get("width") || 25,
                    height: +t.get("height") || 25
                }
            },
            system: {
                user_agent: window.navigator.userAgent,
                webgl_supported: window.Detector.webgl,
                webgl_active: d20.canvas_overlay.gl.active
            }
        };
        if (i.system.webgl_supported) {
            let e = d20.engine.lightingcanvas.getContext("webgl")
              , t = e.getExtension("WEBGL_debug_renderer_info");
            t && (i.system.unmasked_renderer = e.getParameter(t.UNMASKED_RENDERER_WEBGL))
        }
        if (e && (e.report_slow_frames && (i.slow_frames = this.slow_frames),
        e.report_afow_stats && this.all_frames && this.all_frames.length > 0 && this._event_types.has("engine", "afow:update"))) {
            let e = 0
              , t = {
                min: Number.POSITIVE_INFINITY,
                max: Number.NEGATIVE_INFINITY,
                avg: 0,
                total: 0
            };
            for (let n of this.all_frames)
                _.each(n.events, n=>{
                    "afow:update" === n.type && (t.min = Math.min(t.min, n.time),
                    t.max = Math.max(t.max, n.time),
                    t.total += n.time,
                    ++e)
                }
                );
            t.avg = t.total / e,
            i.afow_stats = t
        }
        return JSON.stringify(i)
    }
    ,
    FrameRecorder.prototype.send_report_after = function() {}
    ,
    d20.engine = {
        currentCanvasOffset: [0, 0],
        paddingOffset: [0, 0],
        padding: 125,
        snapTo: 0,
        canvasHeight: $(window).width(),
        canvasWidth: $(window).height(),
        pageWidth: 200,
        pageHeight: 200,
        altDown: !1,
        shiftDown: !1,
        ctrlDown: !1,
        spaceDown: !1,
        mode: "select",
        canvasZoom: 1,
        fog: {
            down: [],
            points: []
        },
        ruler_snapping: "snap_center",
        measure: {
            down: [],
            waypoints: [],
            sticky: !1,
            flags: 0,
            hide: !1
        },
        ruler_hotkeys: {
            q: {
                down: !1,
                exec: ()=>{
                    if ("measure" !== d20.engine.mode) {
                        let e = !1;
                        _.each(Object.keys(d20.engine.movingShadows), t=>{
                            _.find(d20.engine.selected(), e=>e.model.id === t) && (e = !0)
                        }
                        ),
                        e || $("#measure").trigger(clicktype)
                    }
                }
            },
            q1: {
                exec: ()=>{
                    let e = !1;
                    _.each(Object.keys(d20.engine.movingShadows), t=>{
                        _.find(d20.engine.selected(), e=>e.model.id === t) && (e = !0)
                    }
                    ),
                    e || ($("#measure li:not(.rulervisibility)[mode='snap_center']").trigger(clicktype),
                    d20.engine.measure.waypoints.pop())
                }
            },
            q2: {
                exec: ()=>{
                    let e = !1;
                    _.each(Object.keys(d20.engine.movingShadows), t=>{
                        _.find(d20.engine.selected(), e=>e.model.id === t) && (e = !0)
                    }
                    ),
                    e || ($("#measure li:not(.rulervisibility)[mode='snap_corner']").trigger(clicktype),
                    d20.engine.measure.waypoints.pop())
                }
            },
            q3: {
                exec: ()=>{
                    let e = !1;
                    _.each(Object.keys(d20.engine.movingShadows), t=>{
                        _.find(d20.engine.selected(), e=>e.model.id === t) && (e = !0)
                    }
                    ),
                    e || ($("#measure li:not(.rulervisibility)[mode='no_snap']").trigger(clicktype),
                    d20.engine.measure.waypoints.pop())
                }
            },
            qh: {
                exec: ()=>{
                    let e = !1;
                    _.each(Object.keys(d20.engine.movingShadows), t=>{
                        _.find(d20.engine.selected(), e=>e.model.id === t) && (e = !0)
                    }
                    ),
                    e || ($("#measure li.rulervisibility[mode='hide']").trigger(clicktype),
                    d20.engine.measure.waypoints.pop())
                }
            },
            qs: {
                exec: ()=>{
                    let e = !1;
                    _.each(Object.keys(d20.engine.movingShadows), t=>{
                        _.find(d20.engine.selected(), e=>e.model.id === t) && (e = !0)
                    }
                    ),
                    e || ($("#measure li.rulervisibility[mode='show']").trigger(clicktype),
                    d20.engine.measure.waypoints.pop())
                }
            }
        },
        last_measure: null,
        measurements: {},
        leftMouseIsDown: !1,
        rightMouseIsDown: !1,
        pan: {
            lastPanDist: 0,
            panning: !1
        },
        drawshape: {
            shape: !1
        },
        stats: !1,
        pings: {},
        backgroundColor: "#FFFFFF",
        highlightToken: !1,
        gridaligner: {},
        get lightOnlySelected() {
            return d20.engine._light_only_selected
        },
        set lightOnlySelected(e) {
            d20.engine._light_only_selected = e,
            d20.engine.redrawScreenNextTick()
        },
        lastMousePos: [0, 0],
        mousePos: [0, 0],
        lastTouchStarted: 0,
        zoomStart: !1,
        fx: {
            lastMoveBroadcast: 0,
            MOVE_BROADCAST_FREQ: 150
        },
        frame_recorder: null,
        pauseRender: !1,
        movingShadows: {},
        renderingShadows: {},
        showLastPaths: [],
        nextTargetCallback: !1,
        advanced_fog: {
            players_needing_update: [],
            revealed_cells: {},
            visible_cells: {},
            save_interval: !1
        },
        spacebar_event_fired: 0,
        page_loaded: !1,
        gm_layer_opacity: .55,
        animations_enabled: !0,
        listeners: {},
        work_canvases: {},
        _light_only_selected: !1,
        _redraw_next_tick: !1,
        _redraw_top_only: !0,
        _clear_canvas: {},
        redrawScreenNextTick: function(e=!1) {
            d20.engine._redraw_next_tick = !0,
            d20.engine._redraw_top_only &= e
        },
        clearCanvasOnRedraw: function(e) {
            if (Array.isArray(e))
                for (const t of e)
                    d20.engine.clearCanvasOnRedraw(t);
            else {
                switch (e) {
                case "advfow":
                    d20.engine._clear_canvas.advfow = d20.engine.advfowctx;
                    break;
                case "fow":
                    d20.engine._clear_canvas.fow = d20.engine.fowctx;
                case "upper":
                    return void d20.engine.redrawScreenNextTick(!0);
                case "main":
                    d20.engine._clear_canvas.main = d20.engine.canvas.contextContainer;
                    break;
                case "lighting":
                    d20.canvas_overlay.gl.active ? d20.engine._clear_canvas.gl ? d20.engine._clear_canvas.gl.lighting = d20.canvas_overlay.gl.prepareForGlDraw.bind(this, 0) : d20.engine._clear_canvas.gl = {
                        lighting: d20.canvas_overlay.gl.prepareForGlDraw.bind(this, 0)
                    } : d20.engine._clear_canvas.lighting = d20.engine.lightingctx;
                    break;
                case "controlled":
                    d20.engine._clear_canvas.controlled = d20.engine.work_canvases.controlled.context;
                    break;
                case "floater":
                    d20.engine._clear_canvas.controlled = d20.engine.work_canvases.floater.context;
                    break;
                case "all":
                    for (const e of ["main", "upper", "advfow", "fow", "controlled", "floater"])
                        d20.engine.clearCanvasOnRedraw(e);
                    return;
                default:
                    return
                }
                d20.engine.redrawScreenNextTick()
            }
        },
        renderLoop: function() {
            const e = performance.now()
              , t = d20.engine.canvas.contextContainer
              , n = d20.engine.canvas.contextTop
              , i = d20.engine.fowctx
              , o = d20.engine.work_canvases.floater.context
              , r = d20.engine.work_canvases.controlled.context;
            if (d20.engine.frame_recorder && d20.engine.frame_recorder.update(e),
            d20.fx.update(e),
            d20.engine.page_loaded) {
                const e = !d20.engine._redraw_top_only
                  , a = d20.Campaign.activePage()
                  , s = _.chain(a.thegraphics.getPlayerControlledGraphics(window.currentPlayer.get("id"))).filter(e=>e.get("light_hassight")).sortBy(e=>a.get("zorder").split(",").indexOf(e.get("id"))).map(e=>e.view.graphic).compact().value()
                  , l = {
                    dynamic_lighting: a.get("showlighting"),
                    advanced_fog_of_war: a.get("adv_fow_enabled"),
                    fog_of_war: a.get("showdarkness")
                }
                  , c = [{
                    canvas: t.canvas,
                    options: {
                        globalCompositeOperation: "copy"
                    }
                }, {
                    canvas: d20.engine.advfowctx.canvas
                }, {
                    canvas: i.canvas,
                    options: !(!window.is_gm || d20.engine.lightOnlySelected) && {
                        globalAlpha: +a.get("fog_opacity")
                    }
                }, {
                    canvas: r.canvas
                }, {
                    canvas: n.canvas
                }];
                if (d20.engine._redraw_next_tick) {
                    if (d20.engine._redraw_top_only = !0,
                    d20.engine._redraw_next_tick = !1,
                    d20.canvas_overlay.clearCanvas(n),
                    d20.canvas_overlay.clearCanvas(o),
                    d20.engine._clear_canvas.gl) {
                        for (const e in d20.engine._clear_canvas.gl)
                            d20.engine._clear_canvas.gl[e]();
                        delete d20.engine._clear_canvas.gl
                    }
                    for (const e in d20.engine._clear_canvas)
                        d20.engine._clear_canvas[e] && (d20.canvas_overlay.clearCanvas(d20.engine._clear_canvas[e]),
                        d20.engine._clear_canvas[e] = !1);
                    if (e) {
                        d20.canvas_overlay.drawBackground(t);
                        const e = {
                            grid_before_afow: a.get("adv_fow_show_grid"),
                            owned_with_sight_auras_only: !0
                        };
                        d20.engine.canvas._renderAll(e),
                        d20.engine.drawHighlights(t),
                        d20.canvas_overlay.redrawLighting(d20.engine.advfowctx),
                        l.advanced_fog_of_war && d20.canvas_overlay.mergeLighting(d20.engine.advfowctx, o.canvas),
                        d20.fx.render(t)
                    }
                    d20.canvas_overlay.drawFog(i),
                    d20.canvas_overlay.drawFogTools(n),
                    d20.canvas_overlay.drawGridAlignBox(n),
                    d20.engine.drawMeasurements(n),
                    d20.engine.drawInProgressDrawings(n),
                    d20.engine.drawShadowMovements(n),
                    d20.engine.drawPings(n),
                    d20.engine.canvas.renderSelectionBox(n),
                    d20.canvas_overlay.clearCanvas(r);
                    const u = {
                        disable_afow: !0,
                        disable_grid: !0,
                        context: r,
                        tokens_to_render: s,
                        skip_prerender: !0
                    };
                    d20.engine.canvas._renderAll(u),
                    d20.canvas_overlay.compositeCanvases(d20.engine.final_canvas_ctx, c)
                }
                const u = d20.engine.animations_enabled && d20.engine.canvas.getInvalidatedRectangles();
                if (!e && u.length) {
                    d20.canvas_overlay.drawBackground(o, {
                        invalid_rects: u
                    });
                    let e = {
                        context: o,
                        disable_afow: !0,
                        invalid_rects: u,
                        owned_with_sight_auras_only: !0
                    };
                    d20.engine.canvas._renderAll(e),
                    d20.engine.drawHighlights(o, {
                        invalid_rects: u
                    }),
                    "transparent" === d20.engine.backgroundColor && d20.canvas_overlay.clearCanvas(t, {
                        invalid_rects: u
                    }),
                    d20.canvas_overlay.copyCanvas(t, o.canvas, {
                        regions: u
                    }),
                    d20.canvas_overlay.clearCanvas(r);
                    const n = {
                        disable_afow: !0,
                        disable_grid: !0,
                        context: r,
                        tokens_to_render: s,
                        skip_prerender: !0
                    };
                    d20.engine.canvas._renderAll(n),
                    d20.canvas_overlay.compositeCanvases(d20.engine.final_canvas_ctx, c)
                }
            }
            requestAnimationFrame(d20.engine.renderLoop)
        },
        drawHighlights: function(e, t) {
            if (e.save(),
            d20.engine.highlightToken && d20.engine.highlightToken.collection.page.id == d20.Campaign.activePage().id && d20.engine.highlightToken.view.graphic) {
                if (t && t.invalid_rects) {
                    e.beginPath();
                    for (const n of t.invalid_rects) {
                        e.moveTo(...d20.math.sub(n.points[0], d20.engine.currentCanvasOffset));
                        for (let t = 1; t < 4; ++t)
                            e.lineTo(...d20.math.sub(n.points[t], d20.engine.currentCanvasOffset));
                        e.closePath()
                    }
                    e.clip()
                }
                const n = d20.engine.highlightToken.view.graphic;
                e.globalCompositeOperation = "source-over",
                e.strokeStyle = "#F7F42A",
                e.lineWidth = 5,
                e.beginPath();
                const i = n.getBoundingRect();
                e.rect(i.left - 10 - d20.engine.currentCanvasOffset[0], i.top - 10 - d20.engine.currentCanvasOffset[1], i.width + 20, i.height + 20),
                e.stroke()
            }
            e.restore()
        }
    },
    d20.engine.on = function(e, t) {
        let n = e.split(":")
          , i = d20.engine.listeners;
        for (let e = 0; e < n.length - 1; ++e)
            i[n[e]] || (i[n[e]] = {}),
            i = i[n[e]];
        let o = n.pop();
        i[o] ? i[o].push(t) : i[o] = [t]
    }
    ,
    d20.engine.off = function(e, t) {
        let n = e.split(":")
          , i = d20.engine.listeners;
        for (let e = 0; e < n.length - 1; ++e) {
            if (!i[n[e]])
                return;
            i = i[n[e]]
        }
        let o = n.pop();
        i[o] && (i[o] = _.reject(i[o], e=>e === t))
    }
    ,
    function() {
        for (var e = 0, t = ["ms", "moz", "webkit", "o"], n = 0; n < t.length && !window.requestAnimationFrame; ++n)
            window.requestAnimationFrame = window[t[n] + "RequestAnimationFrame"],
            window.cancelAnimationFrame = window[t[n] + "CancelAnimationFrame"] || window[t[n] + "CancelRequestAnimationFrame"];
        window.requestAnimationFrame || (window.requestAnimationFrame = function(t) {
            var n = (new Date).getTime()
              , i = Math.max(0, 16 - (n - e))
              , o = window.setTimeout(function() {
                t(n + i)
            }, i);
            return e = n + i,
            o
        }
        ),
        window.cancelAnimationFrame || (window.cancelAnimationFrame = function(e) {
            clearTimeout(e)
        }
        )
    }(),
    function() {
        if (!fabric.isTouchSupported && ("staging" == d20.environment || "development" == d20.environment)) {
            var e = new Stats;
            e.setMode(1),
            e.domElement.style.position = "absolute",
            e.domElement.style.right = "250px",
            e.domElement.style.bottom = "0px",
            document.body.appendChild(e.domElement),
            e.domElement.style.zIndex = 1e5,
            d20.engine.stats = e
        }
        console.log("TOUCH SUPPORTED: " + fabric.isTouchSupported);
        const t = $("#editor-wrapper .canvas-container #finalcanvas");
        if (Object.defineProperties(d20.engine, {
            final_canvas: {
                value: t.get(0),
                writable: !1
            },
            final_canvas_ctx: {
                value: t.get(0).getContext("2d"),
                writable: !1
            }
        }),
        d20.engine.work_canvases.lighting = {
            canvas: d20.engine.lightingcanvas = document.createElement("canvas"),
            context: null,
            gl: !1
        },
        !window.disablewebgl && window.Detector.webgl) {
            console.log("USING WEBGL ACCELERATION...");
            var n = "Subscriber"
              , i = "Free Account";
            try {
                const e = d20.engine.lightingcanvas.getContext("webgl", {
                    stencil: !0,
                    antialias: !0,
                    premultipliedAlpha: !0
                }) || d20.engine.lightingcanvas.getContext("experimental-webgl", {
                    stencil: !0,
                    antialias: !0,
                    premultipliedAlpha: !0
                });
                if (!e)
                    throw "Could not get WebGL context";
                d20.engine.work_canvases.lighting.context = d20.engine.lightingctx = e,
                d20.engine.work_canvases.lighting.gl = !0,
                d20.canvas_overlay.gl.active = !0,
                console.log("WEBGL STARTUP SUCCESS"),
                window.largefeats ? ga("send", {
                    hitType: "event",
                    eventCategory: "webGL population measurement",
                    eventAction: "webGL available",
                    eventLabel: n
                }) : ga("send", {
                    hitType: "event",
                    eventCategory: "webGL population measurement",
                    eventAction: "webGL available",
                    eventLabel: i
                })
            } catch (I) {
                console.log("ERROR DURING WEBGL STARTUP"),
                console.log(I),
                d20.canvas_overlay.gl.active = !1,
                window.largefeats ? ga("send", {
                    hitType: "event",
                    eventCategory: "webGL population measurement",
                    eventAction: "webGL not available",
                    eventLabel: n
                }) : ga("send", {
                    hitType: "event",
                    eventCategory: "webGL population measurement",
                    eventAction: "webGL not available",
                    eventLabel: i
                });
                const e = d20.engine.lightingcanvas
                  , t = e.getContext("2d");
                t.imageSmoothingEnabled = !1,
                d20.engine.lightingctx = t,
                d20.engine.work_canvases.lighting = {
                    canvas: e,
                    context: t,
                    gl: !1
                },
                d20.engine.work_canvases.shadow = {
                    canvas: document.createElement("canvas"),
                    context: null,
                    gl: !1
                },
                d20.engine.shadowcanvas = d20.engine.work_canvases.shadow.canvas,
                d20.engine.shadowcanvas.style.display = "none",
                d20.engine.shadowctx = d20.engine.work_canvases.shadow.context = d20.engine.shadowcanvas.getContext("2d"),
                d20.engine.shadowctx.imageSmoothingEnabled = !1
            }
        }
        const o = ["main", "upper", "advfow", "fow", "controlled", "floater"];
        for (const e of o) {
            const t = document.createElement("canvas");
            t.style.display = "none",
            t.tabIndex = -1;
            const n = t.getContext("2d");
            n.imageSmoothingEnabled = !1,
            d20.engine.work_canvases[e] = {
                canvas: t,
                context: n,
                gl: !1
            }
        }
        d20.engine.uppercanvas = d20.engine.work_canvases.upper.canvas,
        d20.engine.fowcanvas = d20.engine.work_canvases.fow.canvas,
        d20.engine.fowctx = d20.engine.work_canvases.fow.context,
        d20.engine.advfowcanvas = d20.engine.work_canvases.advfow.canvas,
        d20.engine.advfowctx = d20.engine.work_canvases.advfow.context,
        d20.engine.lightingcanvas = d20.engine.work_canvases.lighting.canvas;
        const r = d20.engine.canvas = new fabric.Canvas(d20.engine.work_canvases.main.canvas,d20.engine.uppercanvas,{
            controlsAboveOverlay: !0
        });
        r.backgroundColor = "rgb(255,255,255)",
        delete d20.engine.work_canvases.main,
        delete d20.engine.work_canvases.upper;
        const a = $("#editor-wrapper").find(".canvas-container");
        d20.engine.$container = a,
        d20.engine.setCanvasSize = function(e, t) {
            const n = d20.engine.canvasZoom;
            d20.engine.setZoom(1, !0),
            r.setHeight(t),
            r.setWidth(e),
            d20.engine.final_canvas.width = e,
            d20.engine.final_canvas.height = t,
            _.each(d20.engine.work_canvases, n=>{
                n.canvas.width = e,
                n.canvas.height = t
            }
            ),
            d20.canvas_overlay.gl.active && d20.canvas_overlay.gl.updateGlSize(),
            d20.engine.canvasHeight = t,
            d20.engine.canvasWidth = e,
            d20.engine.setZoom(n, !0),
            setTimeout(function() {
                s.trigger("scroll")
            }, 100)
        }
        ,
        d20.engine.snapToIncrement = function(e, t) {
            return t * Math.round(e / t)
        }
        ,
        d20.engine.snapToHexCorner = function(e) {
            let t = d20.canvas_overlay.activeHexGrid.GetHexAt({
                X: e[0],
                Y: e[1]
            })
              , n = {
                vertex: null,
                distance2: -1
            };
            return t && _.each(t.Points, t=>{
                let i = t.X - e[0]
                  , o = t.Y - e[1]
                  , r = i * i + o * o;
                (n.distance2 < 0 || Math.min(n.distance2, r) === r) && (n.vertex = t,
                n.distance2 = r)
            }
            ),
            n.vertex ? [n.vertex.X, n.vertex.Y] : null
        }
        ,
        d20.engine.clearPageFog = function() {
            d20.Campaign.activePage().get("adv_fow_enabled") && d20.engine.advanced_fog.clearPage(),
            d20.Campaign.activePage().get("showdarkness") && d20.Campaign.activePage().save({
                revealedAreas: d20.Campaign.activePage().defaults.revealedAreas
            })
        }
        ;
        var s = $("#editor-wrapper");
        s.on("scroll", function() {
            var e = Math.round(s.scrollTop() / d20.engine.canvasZoom)
              , t = Math.round(s.scrollLeft() / d20.engine.canvasZoom);
            t < d20.engine.padding ? (d20.engine.paddingOffset[0] = d20.engine.padding - t,
            d20.engine.currentCanvasOffset[0] = 0) : d20.engine.pageWidth / d20.engine.canvasZoom - t - d20.engine.canvasWidth / d20.engine.canvasZoom + d20.engine.padding < 0 ? (d20.engine.paddingOffset[0] = d20.engine.pageWidth / d20.engine.canvasZoom - t - d20.engine.canvasWidth / d20.engine.canvasZoom + d20.engine.padding,
            d20.engine.currentCanvasOffset[0] = t - d20.engine.padding + d20.engine.paddingOffset[0]) : (d20.engine.paddingOffset[0] = 0,
            d20.engine.currentCanvasOffset[0] = t - d20.engine.padding),
            e < d20.engine.padding ? (d20.engine.paddingOffset[1] = d20.engine.padding - e,
            d20.engine.currentCanvasOffset[1] = 0) : d20.engine.pageHeight / d20.engine.canvasZoom - e - d20.engine.canvasHeight / d20.engine.canvasZoom + d20.engine.padding < 0 ? (d20.engine.paddingOffset[1] = d20.engine.pageHeight / d20.engine.canvasZoom - e - d20.engine.canvasHeight / d20.engine.canvasZoom + d20.engine.padding,
            d20.engine.currentCanvasOffset[1] = e - d20.engine.padding + d20.engine.paddingOffset[1]) : (d20.engine.paddingOffset[1] = 0,
            d20.engine.currentCanvasOffset[1] = e - d20.engine.padding);
            var n = d20.engine.pageWidth + 2 * d20.engine.padding < d20.engine.canvasWidth ? d20.engine.pageWidth : d20.engine.canvasWidth - d20.engine.paddingOffset[0]
              , i = d20.engine.pageHeight + 2 * d20.engine.padding < d20.engine.canvasHeight ? d20.engine.pageHeight : d20.engine.canvasHeight - d20.engine.paddingOffset[1];
            a.width() == n && a.height() == i || a.css({
                width: n + "px",
                height: i + "px"
            });
            var o = a[0].style.left
              , r = a[0].style.top
              , l = d20.engine.paddingOffset[0] + "px"
              , c = d20.engine.paddingOffset[1] + "px";
            o == l && r == c || (a[0].style.left = l,
            a[0].style.top = c),
            d20.engine.redrawScreenNextTick(),
            _.defer(function() {
                if (1 != d20.engine.canvasZoom && d20.token_editor.$currentRadialMenu) {
                    var e = d20.token_editor.$currentRadialMenu[0];
                    e && "none" != e.style.display && (e.style.display = "none"),
                    d20.token_editor.debounced_updateRadialMenuPos()
                }
                1 != d20.engine.canvasZoom && d20.engine.editingTextarea && d20.engine.editingTextarea.trigger("scrolled")
            })
        });
        var l = !1;
        $(document).bind("keydown", "e alt+e", function() {
            l = !0
        }),
        $(document).bind("keyup", "e alt+e", function() {
            l = !1
        }),
        a[0].addEventListener("mousewheel", function(e) {
            s.stop();
            var t = !1;
            if (l) {
                var n = d20.engine.selected()
                  , i = d20.engine.canvas.getActiveGroup();
                if (n.length > 0) {
                    var o;
                    t = !0,
                    o = e.altKey ? e.wheelDelta / 30 : (e.wheelDelta < 0 ? -1 : 1) * ("square" == d20.Campaign.activePage().get("grid_type") ? 45 : 30);
                    var r = n[0];
                    i && (r = i),
                    r.angle = r.angle + o,
                    r.angle = r.angle % 360,
                    d20.engine.canvas.trigger("object:modified", {
                        target: r,
                        debounce: !0,
                        no_snap: !!e.altKey
                    }),
                    d20.engine.redrawScreenNextTick()
                }
            }
            if (!t && e.altKey) {
                var a = e.wheelDeltaY / 120 * .1;
                d20.engine.slideZoom(g + a)
            } else
                t || (e.shiftKey ? s[0].scrollLeft = s[0].scrollLeft - .75 * e.wheelDeltaY : (e.wheelDeltaX && (s[0].scrollLeft = s[0].scrollLeft - .75 * e.wheelDeltaX),
                e.wheelDeltaY && (s[0].scrollTop = s[0].scrollTop - .75 * e.wheelDeltaY)));
            e.stopPropagation(),
            e.preventDefault()
        }),
        a[0].addEventListener("MozMousePixelScroll", function(e) {
            if (d20.Campaign && d20.Campaign.activePage()) {
                s.stop();
                var t = !1;
                if (l) {
                    var n = d20.engine.selected()
                      , i = d20.engine.canvas.getActiveGroup();
                    if (n.length > 0) {
                        var o;
                        t = !0,
                        o = e.altKey ? e.detail < 0 ? -1 : 1 : (e.detail < 0 ? -1 : 1) * ("square" == d20.Campaign.activePage().get("grid_type") ? 45 : 30);
                        var r = n[0];
                        i && (r = i),
                        r.angle = r.angle + o,
                        r.angle = r.angle % 360,
                        d20.engine.canvas.trigger("object:modified", {
                            target: r,
                            debounce: !0,
                            no_snap: !!e.altKey
                        }),
                        d20.engine.redrawScreenNextTick()
                    }
                }
                if (!t && e.altKey) {
                    if (e.axis == e.VERTICAL_AXIS) {
                        var a = e.detail / 120 * .25 * -1;
                        console.log(a),
                        console.log(d20.engine.canvasZoom + a),
                        d20.engine.slideZoom(g + a)
                    }
                } else
                    t || (e.axis == e.HORIZONTAL_AXIS ? s[0].scrollLeft = s[0].scrollLeft + e.detail : e.axis == e.VERTICAL_AXIS && (s[0].scrollTop = s[0].scrollTop + e.detail));
                e.stopPropagation(),
                e.preventDefault()
            }
        }),
        d20.engine.getSnappedTopLeft = function(e, t, n) {
            var i, o, r = {}, a = e.get("top"), s = e.get("left");
            i = o = 0;
            var l = Math.floor(d20.engine.pageWidth / d20.engine.canvasZoom) - 5
              , c = Math.floor(d20.engine.pageHeight / d20.engine.canvasZoom) - 5;
            if ("square" == d20.Campaign.activePage().get("grid_type")) {
                if (t && t.contains(e))
                    i = t.top - Math.floor(t.height / 2) - d20.engine.snapToIncrement(t.top - Math.floor(t.height / 2), d20.engine.snapTo),
                    o = t.left - Math.floor(t.width / 2) - d20.engine.snapToIncrement(t.left - Math.floor(t.width / 2), d20.engine.snapTo);
                else {
                    if (n)
                        a -= Math.floor(e.get("width") / 2),
                        s -= Math.floor(e.get("height") / 2);
                    else {
                        var u = e.getBoundingRect();
                        a = u.top,
                        s = u.left,
                        e.get("height") == e.get("width") && (a += Math.floor((u.height - e.get("height")) / 2),
                        s += Math.floor((u.width - e.get("width")) / 2))
                    }
                    i = a - d20.engine.snapToIncrement(a, d20.engine.snapTo),
                    o = s - d20.engine.snapToIncrement(s, d20.engine.snapTo)
                }
                r.top = e.get("top") - i,
                r.left = e.get("left") - o
            } else {
                var d;
                if (t && t.contains(e))
                    (d = d20.canvas_overlay.activeHexGrid.GetHexAt({
                        X: t.left,
                        Y: t.top
                    })) && (i = t.top - d.MidPoint.Y,
                    o = t.left - d.MidPoint.X);
                else
                    (d = d20.canvas_overlay.activeHexGrid.GetHexAt({
                        X: s,
                        Y: a
                    })) && (i = a - d.MidPoint.Y,
                    o = s - d.MidPoint.X);
                r.top = a - i,
                r.left = s - o
            }
            return r.top > c && (r.top = c),
            r.left > l && (r.left = l),
            r
        }
        ;
        var c = []
          , u = function() {
            var e = d20.engine.canvas.getActiveGroup()
              , t = [];
            if (e && (_.each(e._objects, function(e) {
                t.push(e)
            }),
            d20.engine.canvas.discardActiveGroup()),
            _.each(c, function(e) {
                e.model && e.model.collection && e.model.view && e.model.view.modified()
            }),
            c = [],
            t.length > 0) {
                var n = new fabric.Group(t);
                d20.engine.canvas.setActiveGroup(n)
            }
        }
          , d = _.debounce(u, 500)
          , h = _.debounce(u, 25);
        r.on("object:modified", function(e) {
            for (var t = e.target._objects || [e.target], n = d20.engine.canvas.getActiveGroup(), i = !1, o = 0; o < t.length; o++) {
                var r = t[o];
                if (!r.model)
                    return;
                if (!d20.engine.altDown && 0 != d20.engine.snapTo && ("path" != r.type && 1 != r.model.get("isdrawing") || i)) {
                    var a = {}
                      , s = r.get("width") * r.get("scaleX")
                      , l = r.get("height") * r.get("scaleY")
                      , u = r.get("angle")
                      , p = r.get("top")
                      , f = r.get("left");
                    if ((r.model.changedAttributes({
                        width: s,
                        height: l
                    }) || e.force_snap) && (console.log("Do width/height snapping"),
                    s = d20.engine.snapToIncrement(s, d20.engine.snapTo),
                    l = d20.engine.snapToIncrement(l, d20.engine.snapTo),
                    s < d20.engine.snapTo && (s = d20.engine.snapTo),
                    l < d20.engine.snapTo && (l = d20.engine.snapTo),
                    a.width = s,
                    a.height = l,
                    a.scaleX = 1,
                    a.scaleY = 1),
                    !r.model.changedAttributes({
                        rotation: u
                    }) && !e.force_snap || e.no_snap || (console.log("Do angle snapping!"),
                    "square" == d20.Campaign.activePage().get("grid_type") ? a.angle = d20.engine.snapToIncrement(u, 45) : a.angle = d20.engine.snapToIncrement(u, 30)),
                    Object.keys(a).length > 0 && (r.set(a),
                    r.setCoords()),
                    (!a.angle || !n) && (r.model.changedAttributes({
                        top: p,
                        left: f
                    }) || a.width || e.force_snap) && !e.no_snap) {
                        var g = d20.engine.getSnappedTopLeft(r, n);
                        3 === d20.engine.checkMovement(r, [g.left, g.top], [f, p]) && (a.top = g.top,
                        a.left = g.left)
                    }
                    r.set(a),
                    r.setCoords()
                }
                if (("objects" === r.model.get("layer") || "gmlayer" === r.model.get("layer")) && "image" === r.model.get("type")) {
                    var m = !1;
                    if (d20.engine.movingShadows[r.model.id] && 0 !== d20.engine.movingShadows[r.model.id].waypoints.length) {
                        for (var y = 0; y < d20.engine.movingShadows[r.model.id].waypoints.length; y++)
                            if (r.model.changedAttributes({
                                left: d20.engine.movingShadows[r.model.id].waypoints[y],
                                top: d20.engine.movingShadows[r.model.id].waypoints[++y]
                            })) {
                                m = !0;
                                break
                            }
                    } else
                        r.model.changedAttributes({
                            top: r.get("top"),
                            left: r.get("left")
                        }) && (m = !0);
                    if (m) {
                        var v = [r.model.get("left"), r.model.get("top")];
                        if (d20.engine.movingShadows[r.model.id])
                            for (y = 0; y < d20.engine.movingShadows[r.model.id].waypoints.length; y++)
                                v.push(d20.engine.movingShadows[r.model.id].waypoints[y]);
                        r.model.set({
                            lastmove: v.join(",")
                        }, {
                            silent: !0
                        })
                    }
                }
                r.model && r.model.view && (r.model.view.ischanging && r.model.view.ischanging(),
                -1 === c.indexOf(r) && c.push(r),
                e.debounce ? d() : h())
            }
            d20.engine.redrawScreenNextTick()
        }),
        r.on("path:created", function(e) {
            var t = 1.25
              , n = e.path.get("path");
            if ("M" == n[0][0] && "L" == n[1][0]) {
                var i, o = [];
                _.map(n, function(e) {
                    "L" == e[0] ? o.push({
                        x: e[1],
                        y: e[2],
                        action: e
                    }) : "M" == e[0] && (i = {
                        action: e
                    })
                });
                var r = simplify(o, t);
                r.unshift(i),
                e.path.set("path", _.pluck(r, "action"))
            }
            d20.Campaign.activePage().addPath(e.path)
        }),
        d20.engine.redrawSightTokens = function(e) {
            if (!window.is_gm || d20.engine.lightOnlySelected) {
                var t, n = d20.engine.canvas._objects.length, i = d20.engine.canvas.getActiveGroup();
                if (i) {
                    t = [],
                    e.save(),
                    e.translate(i.left, i.top);
                    for (var o = i._objects.length, r = 0; r < o; r++)
                        (window.is_gm && -1 !== d20.engine.lightOnlySelected.indexOf(i._objects[r]) || !window.is_gm && i._objects[r].selectable && i._objects[r].model && "image" === i._objects[r].type && "objects" === i._objects[r].model.get("layer") && !0 === i._objects[r].model.get("light_hassight")) && (i._objects[r].render(e),
                        t.push(i._objects[r]));
                    e.restore()
                }
                for (r = 0; r < n; r++)
                    if (window.is_gm && -1 !== d20.engine.lightOnlySelected.indexOf(d20.engine.canvas._objects[r]) || !window.is_gm && d20.engine.canvas._objects[r].selectable && d20.engine.canvas._objects[r].model && "image" === d20.engine.canvas._objects[r].type && "objects" === d20.engine.canvas._objects[r].model.get("layer") && !0 === d20.engine.canvas._objects[r].model.get("light_hassight")) {
                        if (t && -1 !== t.indexOf(d20.engine.canvas._objects[r]))
                            continue;
                        d20.engine.canvas._objects[r].render(e)
                    }
            }
        }
        ,
        d20.engine.handleMetaKeys = function(e) {
            e.altKey ? d20.engine.altDown = !0 : d20.engine.altDown = !1,
            e.shiftKey ? d20.engine.shiftDown = !0 : d20.engine.shiftDown = !1,
            e.ctrlKey ? d20.engine.ctrlDown = !0 : d20.engine.ctrlDown = !1
        }
        ;
        var p = $("#zoomslider")
          , f = !1
          , g = 1
          , m = _.debounce(function() {
            console.log("Debounced init page!"),
            a.css({
                "-webkit-transform": "scale(1.0)",
                "-moz-transform": "scale(1.0)"
            }),
            d20.Campaign.initActivePage(!0),
            s.stop().animate({
                scrollTop: Math.floor(d20.engine.zoomStart[1] * d20.engine.canvasZoom) - Math.floor(d20.engine.canvasHeight / 2) + 125 * d20.engine.canvasZoom,
                scrollLeft: Math.floor(d20.engine.zoomStart[0] * d20.engine.canvasZoom) - Math.floor(d20.engine.canvasWidth / 2) + 125 * d20.engine.canvasZoom
            }, 0),
            d20.engine.zoomStart = !1,
            f = !1,
            g = d20.engine.canvasZoom
        }, 0);
        d20.engine.setZoom = function(e, t, n) {
            if (console.log("Final set zoom!"),
            e < .1 && (e = .1),
            e > 2.5 && (e = 2.5),
            e != d20.engine.canvasZoom || n) {
                d20.engine.zooming = !0,
                !1 === d20.engine.zoomStart && (d20.engine.zoomStart = [$("#editor-wrapper").scrollLeft() / d20.engine.canvasZoom + d20.engine.canvasWidth / 2 / d20.engine.canvasZoom - 125, $("#editor-wrapper").scrollTop() / d20.engine.canvasZoom + d20.engine.canvasHeight / 2 / d20.engine.canvasZoom - 125]),
                console.log(d20.engine.zoomStart);
                var i = e / d20.engine.canvasZoom;
                d20.engine.canvasZoom = e,
                r.contextTop.scale(i, i),
                r.contextContainer.scale(i, i),
                d20.engine.final_canvas_ctx.scale(i, i);
                for (const e in d20.engine.work_canvases) {
                    !d20.engine.work_canvases[e].gl && d20.engine.work_canvases[e].context.scale(i, i)
                }
                d20.canvas_overlay.gl.active && d20.canvas_overlay.gl.updateGlSize(),
                r.forEachObject(function(e) {
                    e.setCoords()
                }),
                d20.Campaign && d20.Campaign.activePage() && m(),
                t || (p.slider("value", parseInt(100 * e, 10)),
                $("#zoompanel").find("select").val(10 * Math.round(parseInt(100 * e, 10) / 10))),
                d20.engine.zooming = !1
            }
        }
        ,
        d20.engine.slideZoom = function(e) {
            e < .1 && (e = .1),
            e > 2.5 && (e = 2.5),
            e != d20.engine.canvasZoom && (!1 === f && (f = d20.engine.canvasZoom),
            g = e,
            a.css({
                "-webkit-transform": "scale(" + e / f + ")",
                "-moz-transform": "scale(" + e / f + ")"
            }),
            d20.engine.debounced_setZoom(e, !1, !0))
        }
        ,
        d20.engine.debounced_setZoom = _.debounce(d20.engine.setZoom, 250),
        r.on("object:selected", function(e) {
            e.target._objects ? $("#editor").trigger("shape_selected", e.target._objects[0]) : (e.e && e.e.altKey || e.target.model.selectGroup(),
            $("#editor").trigger("shape_selected", e.target))
        }),
        r.on("selection:created", function(e) {
            $("#editor").trigger("shape_selected", e.target._objects[0]);
            for (var t = 0; t < e.target._objects.length; t++)
                e.target._objects[t].model.selectGroup()
        }),
        r.on("selection:cleared", function() {
            $("#editor").trigger("nothing_selected");
            for (var e = d20.engine.showLastPaths.length; e--; )
                "selected" == d20.engine.showLastPaths[e].type && d20.engine.showLastPaths.splice(e, 1)
        }),
        r.on("object:moving", function(e) {
            let t;
            t = e.target._objects !== undefined ? e.target._objects : [e.target];
            for (let e = 0; e < t.length; e++) {
                const n = t[e];
                if (n.model && n.model.view.ischanging && n.model.view.ischanging(),
                !n.model || "objects" !== n.model.get("layer") && "gmlayer" !== n.model.get("layer") || "image" !== n.model.get("type") || d20.engine.movingShadows[n.model.id] || (d20.engine.movingShadows[n.model.id] = {
                    obj: n,
                    waypoints: [],
                    alwaysShowRuler: !1
                }),
                !d20.Campaign.activePage().get("lightupdatedrop") && n.model) {
                    let e = {
                        get: e=>e in n ? n[e] : n.model.get(e)
                    };
                    d20.engine.advanced_fog.updateFromToken(e)
                }
            }
        }),
        r.on("object:rotating", function(e) {
            e.target.model && e.target.model.view.ischanging && e.target.model.view.ischanging()
        }),
        r.on("object:scaling", function(e) {
            e.target.model && e.target.model.view.ischanging && e.target.model.view.ischanging()
        });
        var y, v = 0;
        r.on("mouse:up", function(e) {
            var t = (new Date).getTime();
            t - v < 400 && e.target && e.target == y && r.fire("dblclick", {
                target: e.target,
                e: e
            }),
            y = !!e.target && e.target,
            v = t
        }),
        r.on("dblclick", function(e) {
            if (e.target && "text" == e.target.type)
                d20.engine.editText(e.target, e.pageX, e.pageY);
            else if (e.target && "image" == e.target.type && e.target.model)
                if ((e.e.e.shiftKey || e.e.e.altKey) && "" !== e.target.model.get("represents")) {
                    console.log("Show token's character...");
                    var t = d20.Campaign.characters.get(e.target.model.get("represents"));
                    if (t) {
                        var n = t.get("inplayerjournals").split(",");
                        (window.is_gm || -1 !== _.indexOf(n, "all") || window.currentPlayer && -1 !== _.indexOf(n, window.currentPlayer.id)) && t.view.showDialog()
                    }
                    e.e.e.altKey ? d20.journal.useCustomSheets ? $(".dialog[data-characterid=" + e.target.model.get("represents") + "] .characterviewer ul.nav a[data-tab='charsheet']").trigger("click") : $(".dialog[data-characterid=" + e.target.model.get("represents") + "] .characterviewer ul.nav a[data-tab='attributesabilities']").trigger("click") : $(".dialog[data-characterid=" + e.target.model.get("represents") + "] .characterviewer ul.nav a[data-tab='bioinfo']").trigger("click")
                } else
                    e.target.model.trigger("showtokeneditor")
        });
        var b = function() {
            var e = []
              , t = r.getActiveGroup()
              , n = 0
              , i = 0;
            _.each(d20.engine.movingShadows, function(o) {
                var r = o.obj;
                if (t && t.contains(r) ? (n = t.get("left"),
                i = t.get("top")) : (n = 0,
                i = 0),
                d20.engine.altDown)
                    var a = {
                        top: r.get("top"),
                        left: r.get("left")
                    };
                else {
                    r.setCoords();
                    a = d20.engine.getSnappedTopLeft(r, t)
                }
                e.push({
                    id: r.model.id,
                    x: a.left + n,
                    y: a.top + i
                })
            }),
            d20.textchat.sendShout({
                type: "shdw_update",
                playerid: window.currentPlayer.id,
                time: (new Date).getTime(),
                objs: e
            })
        }
          , w = (_.throttle(b, 200),
        {})
          , x = function(e, t, n, i, o, r, a, s) {
            var l, c, u, d, h, p;
            return p = ((u = a - o) * (t - r) - (d = s - r) * (e - o)) / (-u * (c = i - t) + (l = n - e) * d),
            (h = (-c * (e - o) + l * (t - r)) / (-u * c + l * d)) >= 0 && h <= 1 && p >= 0 && p <= 1 ? 1 : 0
        };
        d20.engine.checkMovement = function(e, t, n) {
            if (!0 !== d20.Campaign.activePage().get("lightrestrictmove"))
                return 3;
            var i, o = !1;
            e._objects ? (i = e._objects,
            o = !0) : i = [e];
            for (var r = 0; r < i.length; r++) {
                var a = i[r];
                if (a && a.model && "image" === a.model.get("type") && !0 === a.model.get("light_hassight") && (!window.is_gm || d20.engine.lightOnlySelected && -1 !== d20.engine.lightOnlySelected.indexOf(a)))
                    for (var s, l, c, u, d = t[0] + (o ? a.get("left") : 0), h = t[1] + (o ? a.get("top") : 0), p = n[0] + (o ? a.get("left") : 0), f = n[1] + (o ? a.get("top") : 0), g = 0, m = d20.engine.canvas._objects.length; g < m; g++) {
                        var y = d20.engine.canvas._objects[g];
                        if ("path" == y.type && y.model && "walls" == y.model.get("layer"))
                            for (var v = Math.floor(y.get("left") - Math.floor(y.get("width") * y.scaleX) / 2), b = Math.floor(y.get("top") - Math.floor(y.get("height") * y.scaleY) / 2), w = y.get("path"), _ = 0; _ < w.length; _++)
                                if (0 != _ && (s = Math.round(w[_][1] * y.scaleX) + v,
                                l = Math.round(w[_][2] * y.scaleY) + b,
                                c = Math.round(w[_ - 1][1] * y.scaleX) + v,
                                u = Math.round(w[_ - 1][2] * y.scaleY) + b,
                                x(d, h, p, f, s, l, c, u)))
                                    return 0
                    }
            }
            return 3
        }
        ,
        d20.engine.handleShadows = function(e) {
            e.playerid !== window.currentPlayer.id && ("shdw_update" === e.type ? (w[e.playerid] && clearTimeout(w[e.playerid]),
            d20.engine.renderingShadows[e.playerid] !== undefined ? (d20.engine.renderingShadows[e.playerid].objs = e.objs,
            d20.engine.renderingShadows[e.playerid].firstframe = !0) : d20.engine.renderingShadows[e.playerid] = {
                objs: e.objs,
                firstframe: !0,
                shdws: {}
            },
            w[e.playerid] = setTimeout(function() {
                delete d20.engine.renderingShadows[e.playerid],
                d20.engine.redrawScreenNextTick(!0)
            }, 3e4),
            d20.engine.redrawScreenNextTick(!0)) : (delete d20.engine.renderingShadows[e.playerid],
            w[e.playerid] && clearTimeout(w[e.playerid]),
            d20.engine.redrawScreenNextTick(!0)))
        }
        ,
        d20.engine.drawShadowMovements = function(e) {
            e.save(),
            e.globalAlpha = .75;
            var t, n, i, o = +new Date, r = !1;
            _.each(d20.engine.movingShadows, function(o) {
                t === undefined && (t = d20.engine.canvas.getActiveGroup()),
                t && t.contains(o.obj) ? (n = t.get("left"),
                i = t.get("top")) : n = i = 0;
                for (var r = [o.obj.model.get("left"), o.obj.model.get("top")], a = 0; a < o.waypoints.length; a++)
                    r.push(o.waypoints[a]);
                if (0 == d20.engine.snapTo || d20.engine.altDown)
                    s = {
                        top: o.obj.get("top"),
                        left: o.obj.get("left")
                    };
                else {
                    o.obj.setCoords();
                    var s = d20.engine.getSnappedTopLeft(o.obj, t)
                }
                r.push(s.left + n),
                r.push(s.top + i),
                d20.engine.renderLastPath(e, o.obj, r, !o.alwaysShowRuler && 0 === o.waypoints.length)
            }),
            e.globalAlpha = 1;
            var a, s = d20.engine.showLastPaths.length;
            for (s > 0 && (e.globalAlpha = .75); s--; )
                (a = d20.engine.showLastPaths[s]).obj.model && (window.is_gm && "gmlayer" === a.obj.model.get("layer") || "objects" === a.obj.model.get("layer")) ? (a.fadestart !== undefined ? (r = !0,
                o - a.fadestart > 500 ? (console.log("Remove!"),
                d20.engine.showLastPaths.splice(s, 1),
                e.globalAlpha = 0) : e.globalAlpha = .7 * (1 - (o - a.fadestart) / 500)) : e.globalAlpha = .75,
                d20.engine.renderLastPath(e, a.obj, a.obj.model.get("lastmove") + "," + a.obj.model.get("left") + "," + a.obj.model.get("top"))) : d20.engine.showLastPaths.splice(s, 1);
            e.globalAlpha = 1,
            r && d20.engine.redrawScreenNextTick(),
            e.restore()
        }
        ,
        d20.engine.renderLastPath = function(e, t, n, i) {
            if ("string" == typeof n)
                var o = n.split(",");
            else
                o = n;
            for (var r = {
                scale: 0,
                grid: 0
            }, a = 0, s = 0; s < o.length - 2; s += 2)
                if (0 === s && (e.save(),
                e.translate(o[s] - t.get("left"), o[s + 1] - t.get("top")),
                t.transform(e),
                t._render(e),
                e.restore()),
                !i) {
                    var l = C(e, {
                        x: o[s] - d20.engine.currentCanvasOffset[0],
                        to_x: o[s + 2] - d20.engine.currentCanvasOffset[0],
                        y: o[s + 1] - d20.engine.currentCanvasOffset[1],
                        to_y: o[s + 3] - d20.engine.currentCanvasOffset[1],
                        color: "#F7F42A"
                    }, !0, s === o.length - 4 ? "arrow" : "nub", r, a);
                    r.scale += l.scale_distance,
                    r.grid += l.grid_distance,
                    a = l.diagonals % 2
                }
        }
        ;
        var k = function(e) {
            let t = _.clone(e);
            t.type = "measuring",
            t.time = (new Date).getTime(),
            d20.textchat.sendShout(t)
        }
          , E = _.throttle(k, 200);
        d20.engine.announceMeasure = function(e) {
            E(e),
            d20.tutorial && d20.tutorial.active && $(document.body).trigger("measure"),
            d20.engine.receiveMeasureUpdate(e)
        }
        ,
        d20.engine.receiveMeasureUpdate = function(e) {
            let t = e.type && e.player === window.currentPlayer.id;
            t |= !window.is_gm && "objects" !== e.currentLayer && "map" !== e.currentLayer,
            (t |= !window.is_gm && e.hide && e.player !== window.currentPlayer.id) || (d20.engine.measurements[e.player] && d20.engine.measurements[e.player].clearTimeout && clearTimeout(d20.engine.measurements[e.player].clearTimeout),
            e.player == window.currentPlayer.id || e.sticky || (e.clearTimeout = setTimeout(function() {
                delete d20.engine.measurements[e.player],
                d20.engine.redrawScreenNextTick(!0)
            }, 1e4)),
            d20.engine.measurements[e.player] = e,
            d20.engine.redrawScreenNextTick(!0))
        }
        ,
        d20.engine.endMeasure = function() {
            let e = 0;
            _.each(d20.engine.measure.down, t=>e += t),
            4 !== d20.engine.measure.down.length || Number.isNaN(e) || null === e || (d20.engine.last_measure = _.clone(d20.engine.measure),
            d20.engine.last_measure.page = d20.Campaign.activePage().id,
            d20.engine.last_measure.layer = window.currentEditingLayer),
            d20.engine.measure = {
                down: [],
                waypoints: [],
                sticky: !1,
                flags: 0,
                hide: d20.engine.measure.hide
            },
            d20.engine.receiveEndMeasure({
                player: window.currentPlayer.id
            })
        }
        ,
        d20.engine.announceEndMeasure = function(e) {
            e.type = "endmeasurement",
            setTimeout(function() {
                e.time = (new Date).getTime(),
                d20.textchat.sendShout(e)
            }, 300)
        }
        ,
        d20.engine.receiveEndMeasure = function(e) {
            d20.engine.measurements[e.player] && d20.engine.measurements[e.player].clearTimeout && clearTimeout(d20.engine.measurements[e.player].clearTimeout),
            delete d20.engine.measurements[e.player],
            d20.engine.redrawScreenNextTick(!0)
        }
        ,
        d20.engine.calcAngle = function(e, t) {
            var n = function(e, t) {
                return rat = (t.y - e.y) / (t.x - e.x),
                inradians = Math.atan(rat),
                inradians
            };
            return t.x > e.x ? t.y > e.y ? n(e, t) : t.y == e.y ? 0 : 2 * Math.PI + n(e, t) : t.x == e.x ? t.y == e.y ? 0 : t.y > e.y ? Math.PI / 2 : 1.5 * Math.PI : t.y == e.y ? Math.PI : (t.y,
            e.y,
            Math.PI + n(e, t))
        }
        ,
        d20.engine.getDistanceInScale = function(e, t, n, i) {
            const o = {
                scale_distance: -1,
                diagonals: n || 0,
                grid_distance: -1
            }
              , r = 0 === d20.engine.snapTo ? "pythagorean" : d20.Campaign.activePage().get("diagonaltype")
              , a = d20.Campaign.activePage().get("grid_type")
              , s = +d20.Campaign.activePage().get("scale_number");
            let l, c = t.x - e.x, u = t.y - e.y;
            if ("hex" === a || "hexr" === a)
                if ("pythagorean" === r || i)
                    if (l = d20.math.magnitude([c, u])) {
                        let n = new HT.Hexagon(null,e.x - HT.Hexagon.Static.WIDTH / 2,e.y - HT.Hexagon.Static.HEIGHT / 2)
                          , i = _.map(n.Points, e=>[e.X, e.Y])
                          , r = [t.x, t.y]
                          , a = (e,t)=>{
                            let n = [r[0] - e[0], r[1] - e[1]]
                              , i = [r[0] - t[0], r[1] - t[1]];
                            return d20.math.magnitude2(n) - d20.math.magnitude2(i)
                        }
                        ;
                        i.sort(a);
                        let d = i.slice(0, 2);
                        r = i[0],
                        (i = i.slice(2)).sort(a);
                        let h = [i[0], r]
                          , p = [[e.x, e.y], [t.x, t.y]]
                          , f = d20.math.line_line_intersection(p, d)
                          , g = d20.math.magnitude([e.x - f[0], e.y - f[1]]);
                        o.grid_distance = l / (2 * g);
                        let m = [d20.math.lerp(d[0], d[1], .5), d20.math.lerp(h[0], h[1], .5)]
                          , y = _.map(m, t=>d20.math.sub(t, [e.x, e.y]))
                          , v = _.map(y, e=>Math.atan2(e[1], e[0]))
                          , b = Math.atan2(u, c);
                        Math.abs(v[1] - v[0]) > Math.PI && (v[0] = v[0] < 0 ? v[0] + 2 * Math.PI : v[0],
                        v[1] = v[1] < 0 ? v[1] + 2 * Math.PI : v[1],
                        b = b < 0 ? b + 2 * Math.PI : b);
                        let w = (b - v[0]) / (v[1] - v[0])
                          , x = d20.math.slerp(y[0], y[1], w)
                          , k = d20.math.magnitude(x);
                        o.scale_distance = l / (2 * k) * s
                    } else
                        o.grid_distance = o.scale_distance = 0;
                else {
                    let i = {
                        source: {
                            X: e.x + d20.engine.currentCanvasOffset[0],
                            Y: e.y + d20.engine.currentCanvasOffset[1]
                        },
                        destination: {
                            X: t.x + d20.engine.currentCanvasOffset[0],
                            Y: t.y + d20.engine.currentCanvasOffset[1]
                        }
                    }
                      , r = d20.canvas_overlay.activeHexGrid.GetHexAt(i.source)
                      , a = d20.canvas_overlay.activeHexGrid.GetHexAt(i.destination);
                    if (!r || !a)
                        return d20.engine.getDistanceInScale(e, t, n, !0);
                    o.grid_distance = d20.canvas_overlay.activeHexGrid.GetHexDistance(r, a),
                    o.scale_distance = o.grid_distance * s
                }
            else {
                if ("foure" === r)
                    c = Math.abs(c),
                    u = Math.abs(u),
                    l = Math.max(c, u);
                else if ("threefive" === r) {
                    c = Math.abs(c),
                    u = Math.abs(u);
                    const e = Math.round(parseFloat(d20.Campaign.activePage().get("snapping_increment") || 1) * window.dpi);
                    o.diagonals += Math.floor(Math.min(c, u) / e),
                    l = Math.floor(o.diagonals / 2) * e + Math.max(c, u)
                } else
                    l = "manhattan" === r ? Math.abs(c) + Math.abs(u) : Math.sqrt(c * c + u * u);
                o.grid_distance = l / (d20.engine.snapTo || 70),
                o.scale_distance = o.grid_distance * s
            }
            return o
        }
        ;
        var S = function(e, t) {
            let n = {
                scale: 0,
                grid: 0
            }
              , i = 0
              , o = -1;
            _.each(t.waypoints, r=>{
                let a = {
                    to_x: r[0],
                    to_y: r[1],
                    color: t.color,
                    flags: t.flags,
                    hide: t.hide
                };
                o > -1 ? (a.x = t.waypoints[o][0],
                a.y = t.waypoints[o][1]) : (a.x = t.x,
                a.y = t.y);
                let s = C(e, a, !0, "nub", n, i);
                n.scale += s.scale_distance,
                n.grid += s.grid_distance,
                i = s.diagonals % 2,
                ++o
            }
            );
            let r = {
                to_x: t.to_x,
                to_y: t.to_y,
                color: t.color,
                flags: t.flags,
                hide: t.hide
            };
            -1 === o ? (r.x = t.x,
            r.y = t.y) : (r.x = t.waypoints[o][0],
            r.y = t.waypoints[o][1]),
            C(e, r, !0, "arrow", n, i)
        }
          , C = function(e, t, n, i, o, r) {
            let a = e=>e / d20.engine.canvasZoom
              , s = d20.engine.getDistanceInScale({
                x: t.x,
                y: t.y
            }, {
                x: t.to_x,
                y: t.to_y
            }, r, 15 & t.flags);
            e.save(),
            e.globalCompositeOperation = "source-over",
            e.globalAlpha = 1,
            e.strokeStyle = t.color,
            e.fillStyle = e.strokeStyle,
            e.lineWidth = a(3);
            let l = {
                line: [t.to_x - t.x, t.to_y - t.y],
                arrow: [[-10.16, -24.53], [0, -20.33], [10.16, -24.53]],
                x: [1, 0],
                y: [0, 1]
            };
            if (e.beginPath(),
            e.moveTo(t.x, t.y),
            e.lineTo(t.to_x, t.to_y),
            !0 === i || "arrow" === i) {
                let n = Math.atan2(l.line[1], l.line[0]);
                l.forward = [Math.cos(n), Math.sin(n)],
                l.right = [Math.cos(n + Math.PI / 2), Math.sin(n + Math.PI / 2)],
                l.arrow = _.map(l.arrow, e=>[d20.math.dot(e, l.right), d20.math.dot(e, l.forward)]),
                l.arrow = _.map(l.arrow, e=>[d20.math.dot(e, l.x), d20.math.dot(e, l.y)]),
                e.moveTo(t.to_x, t.to_y),
                _.each(l.arrow, n=>e.lineTo(t.to_x + a(n[0]), t.to_y + a(n[1]))),
                e.closePath(),
                e.fill()
            }
            if (e.closePath(),
            e.stroke(),
            "nub" === i && (e.beginPath(),
            e.arc(t.to_x, t.to_y, a(7), 0, 2 * Math.PI, !0),
            e.closePath(),
            e.fill()),
            n) {
                let n = Math.round(a(16))
                  , i = Math.round(a(14));
                e.font = `${n}px Arial Black`,
                e.textBaseline = "alphabetic",
                e.textAlign = "center";
                let r = {
                    distance: Math.round(10 * (s.scale_distance + (o ? o.scale : 0))) / 10,
                    units: d20.Campaign.activePage().get("scale_units")
                };
                r.text = `${r.distance} ${r.units}`,
                r.text_metrics = e.measureText(r.text);
                let l = {
                    active: d20.Campaign.activePage().get("showgrid") && d20.engine.snapTo > 0 && "sq" !== r.units && "hex" !== r.units,
                    text: ""
                };
                if (l.active) {
                    let t = d20.Campaign.activePage().get("grid_type")
                      , n = "hex" === t || "hexr" === t ? "hex" : "sq";
                    e.font = `${i}px Arial`,
                    l.distance = Math.round(10 * (s.grid_distance + (o ? o.grid : 0))) / 10,
                    l.text = `${l.distance} ${n}`,
                    l.text_metrics = e.measureText(l.text)
                }
                let c = n - Math.round(a(4))
                  , u = i - Math.round(a(3.5))
                  , d = {
                    x: t.to_x - Math.round(a(35)),
                    y: t.to_y - Math.round(a(35)),
                    width: Math.max(r.text_metrics.width, l.active ? l.text_metrics.width : 0),
                    height: c,
                    padding: Math.round(a(5)),
                    scale_baseline_offset: 0,
                    cell_baseline_offset: 0,
                    text_horizontal_offset: 0,
                    line_spacing: Math.ceil(a(4)),
                    image_width: a(20),
                    image_height: a(20),
                    image_padding_left: a(5)
                };
                d.height += 2 * d.padding,
                d.width += 2 * d.padding,
                d.text_horizontal_offset = .5 * d.width,
                d.scale_baseline_offset = d.height - d.padding,
                l.active && (d.height += u + d.line_spacing,
                d.cell_baseline_offset = d.height - d.padding),
                t.hide && (d.width += d.image_width + d.image_padding_left,
                d.height = Math.max(d.height, d.image_height + 2 * d.padding),
                d.text_width = Math.max(r.text_metrics.width, l.active ? l.text_metrics.width : 0)),
                e.fillStyle = "rgba(255,255,255,0.75)",
                e.fillRect(d.x, d.y, d.width, d.height),
                e.fillStyle = "rgba(0,0,0,1)",
                e.font = `${n}px Arial Black`,
                e.fillText(r.text, d.x + d.text_horizontal_offset, d.y + d.scale_baseline_offset),
                e.font = `${i}px Arial`,
                e.fillText(l.text, d.x + d.text_horizontal_offset, d.y + d.cell_baseline_offset),
                t.hide && (d.image_vertical_offset = .5 * d.height - .5 * d.image_height,
                d.image_horizontal_offset = d.padding + d.text_width + d.image_padding_left,
                e.drawImage($("#measure li.rulervisibility[mode='hide'] > img")[0], d.x + d.image_horizontal_offset, d.y + d.image_vertical_offset, d.image_width, d.image_height))
            }
            return e.restore(),
            s
        };
        d20.engine.addWaypoint = function(e) {
            if ("measure" === d20.engine.mode && d20.engine.leftMouseIsDown) {
                let t = d20.Campaign.activePage().get("grid_type")
                  , n = d20.engine.ruler_snapping;
                if ("no_snap" === n && e.altKey ? n = "snap_center" : !e.altKey || "snap_center" !== n && "snap_corner" !== n || (n = "no_snap"),
                "no_snap" === n || 0 === d20.engine.snapTo)
                    d20.engine.measure.waypoints.push(_.clone(d20.engine.mousePos)),
                    d20.engine.measure.flags |= 4;
                else if ("snap_center" === n)
                    if ("square" === t) {
                        let e = Math.floor(.5 * d20.engine.snapTo);
                        d20.engine.measure.waypoints.push(_.map(d20.engine.mousePos, t=>d20.engine.snapToIncrement(t + e, d20.engine.snapTo) - e))
                    } else
                        try {
                            let t = d20.canvas_overlay.activeHexGrid.GetHexAt({
                                X: d20.engine.mousePos[0],
                                Y: d20.engine.mousePos[1]
                            });
                            d20.engine.measure.waypoints.push([t.MidPoint.X, t.MidPoint.Y])
                        } catch (e) {}
                else
                    "square" === t ? d20.engine.measure.waypoints.push(_.map(d20.engine.mousePos, e=>d20.engine.snapToIncrement(e, d20.engine.snapTo))) : d20.engine.measure.waypoints.push(d20.engine.snapToHexCorner(d20.engine.mousePos)),
                    d20.engine.measure.flags |= 8;
                d20.engine.redrawScreenNextTick(!0)
            } else if (Object.keys(d20.engine.movingShadows).length > 0) {
                let t = d20.engine.canvas.getActiveGroup()
                  , n = t ? t.get("left") : 0
                  , i = t ? t.get("top") : 0;
                _.each(d20.engine.movingShadows, function(o) {
                    if (!1 === o.alwaysShowRuler)
                        o.alwaysShowRuler = !0;
                    else if (e.altKey || 0 === d20.engine.snapTo)
                        o.waypoints.push(o.obj.get("left") + n),
                        o.waypoints.push(o.obj.get("top") + i);
                    else {
                        o.obj.setCoords();
                        var r = d20.engine.getSnappedTopLeft(o.obj, t);
                        o.waypoints.push(r.left + n),
                        o.waypoints.push(r.top + i)
                    }
                }),
                d20.engine.redrawScreenNextTick()
            }
        }
        ,
        d20.engine.drawMeasurements = function(e) {
            _.each(d20.engine.measurements, function(t) {
                if (t.pageid !== d20.Campaign.activePage().id)
                    return;
                let n = {
                    color: d20.Campaign.players.get(t.player).get("color"),
                    to_x: t.to_x - d20.engine.currentCanvasOffset[0],
                    to_y: t.to_y - d20.engine.currentCanvasOffset[1],
                    x: t.x - d20.engine.currentCanvasOffset[0],
                    y: t.y - d20.engine.currentCanvasOffset[1],
                    flags: t.flags,
                    hide: t.hide,
                    waypoints: _.map(t.waypoints, e=>[e[0] - d20.engine.currentCanvasOffset[0], e[1] - d20.engine.currentCanvasOffset[1]])
                };
                S(e, n)
            }),
            e.restore()
        }
        ,
        d20.engine.drawPings = function(e) {
            e.save(),
            _.keys(d20.engine.pings).length > 0 && d20.engine.redrawScreenNextTick(!0),
            e.globalCompositeOperation = "source-over";
            var t = (new Date).getTime();
            _.each(d20.engine.pings, function(n, i) {
                if (n.pageid === d20.Campaign.activePage().id) {
                    var o = 2;
                    if (n.radius < 20 ? (o = fabric.isTouchSupported ? .5 : 1,
                    e.lineWidth = 3) : e.lineWidth = 9,
                    n.radius >= 20 && n.player == window.currentPlayer.id && !n.type) {
                        n.type = "mapping";
                        var r = _.clone(n);
                        delete r.lasttick,
                        r.time = (new Date).getTime(),
                        d20.textchat.sendShout(r),
                        d20.tutorial && d20.tutorial.active && $(document).trigger("userSentPing")
                    }
                    if (n.lasttick) {
                        var a = t - n.lasttick;
                        a > 40 && (o = Math.ceil(o + o * ((a - 30) / 30)))
                    }
                    if (n.lasttick = t,
                    n.radius < 10)
                        n.radius = n.radius + o;
                    else {
                        var s = _.clone(n);
                        if (s.top = s.top - d20.engine.currentCanvasOffset[1],
                        s.left = s.left - d20.engine.currentCanvasOffset[0],
                        e.beginPath(),
                        "api" === s.player)
                            e.strokeStyle = "yellow";
                        else {
                            var l = d20.Campaign.players.get(s.player);
                            e.strokeStyle = l.get("color")
                        }
                        e.arc(s.left, s.top, s.radius, 0, 2 * Math.PI, !1),
                        e.closePath(),
                        e.stroke(),
                        n.radius = s.radius + o,
                        n.radius > 110 && delete d20.engine.pings[i]
                    }
                }
            }),
            e.restore()
        }
        ,
        window.getWorldPageCenter = function() {
            var e = $("#editor-wrapper").scrollTop() / d20.engine.canvasZoom + d20.engine.canvasHeight / 2 / d20.engine.canvasZoom - 125
              , t = $("#editor-wrapper").scrollLeft() / d20.engine.canvasZoom + d20.engine.canvasWidth / 2 / d20.engine.canvasZoom - 125;
            console.log(t + "," + e)
        }
        ,
        d20.engine.receiveMapping = function(e) {
            e.visibleTo && !e.visibleTo.includes(window.currentPlayer.id) || e.pageid !== d20.Campaign.activePage().id || "objects" !== e.currentLayer && "map" !== e.currentLayer && !window.is_gm || (e.scrollto && (console.log(e),
            s.animate({
                scrollTop: Math.floor(e.top * d20.engine.canvasZoom) - Math.floor(d20.engine.canvasHeight / 2) + 125 * d20.engine.canvasZoom,
                scrollLeft: Math.floor(e.left * d20.engine.canvasZoom) - Math.floor(d20.engine.canvasWidth / 2) + 125 * d20.engine.canvasZoom
            }, 350)),
            (e.player != window.currentPlayer.id || e.api) && (d20.engine.pings[e.player] = e,
            d20.engine.redrawScreenNextTick()))
        }
        ,
        d20.engine.zoomObject = function(e) {
            const t = d20.Campaign.activePage().thegraphics.get(e);
            if (!t)
                return;
            let n = t.view.graphic._originalElement.src;
            if (-1 !== n.indexOf("files.d20.io") || -1 !== n.indexOf("files.staging.d20.io")) {
                const e = n.split("/")
                  , t = e[e.length - 1].split(".")[0];
                d20.utils.isVideo(n) || "original" == t || (n = n.replace(t, "original"))
            }
            window.fakeLightly(n)
        }
        ,
        d20.engine.finishCurrentPolygon = function() {
            var e = d20.engine.drawshape.shape;
            if (e && "polygon" == e.type) {
                if (e.points.length < 2)
                    return d20.engine.drawshape.shape = !1,
                    void d20.engine.redrawScreenNextTick();
                var t;
                t = "M" + e.points[0][0] + "," + e.points[0][1];
                for (var n = 1; n < e.points.length; n++)
                    t = t + " L" + e.points[n][0] + "," + e.points[n][1];
                var i = d20.engine.convertAbsolutePathStringtoFabric(t);
                i = _.extend(i, {
                    strokeWidth: e.strokewidth,
                    fill: e.fill,
                    stroke: e.stroke,
                    path: JSON.parse(i.path)
                }),
                d20.Campaign.activePage().addPath(i),
                d20.engine.drawshape.shape = !1,
                d20.engine.redrawScreenNextTick()
            }
        }
        ,
        d20.engine.polygonUndoLastPoint = function() {
            var e = d20.engine.drawshape.shape;
            e && "polygon" == e.type && (e.points.length <= 1 ? d20.engine.drawshape.shape = !1 : e.points.pop(),
            d20.engine.redrawScreenNextTick())
        }
        ,
        d20.engine.finishPolygonReveal = function() {
            d20.engine.fog.points.length > 2 && d20.canvas_overlay.revealOrHideArea({
                type: "reveal",
                points: d20.engine.fog.points
            }),
            d20.engine.fog.points = [],
            d20.engine.redrawScreenNextTick(!0)
        }
        ,
        d20.engine.fogUndoLastPoint = function() {
            d20.engine.fog.points.length > 1 && d20.engine.fog.points.pop(),
            d20.engine.redrawScreenNextTick(!0)
        }
        ,
        d20.engine.drawInProgressDrawings = function(e) {
            var t = d20.engine.drawshape.shape;
            if (t) {
                if (e.save(),
                e.lineWidth = t.strokewidth,
                "rect" === t.type)
                    e.beginPath(),
                    e.rect(t.x - d20.engine.currentCanvasOffset[0], t.y - d20.engine.currentCanvasOffset[1], t.width, t.height),
                    e.closePath();
                else if ("circle" === t.type)
                    d20.engine.drawEllipse(t.x - d20.engine.currentCanvasOffset[0] + t.width / 2, t.y - d20.engine.currentCanvasOffset[1] + t.height / 2, t.width, t.height, e);
                else if ("polygon" === t.type) {
                    if (t.points.length < 1)
                        return void e.restore();
                    if (e.translate(-d20.engine.currentCanvasOffset[0], -d20.engine.currentCanvasOffset[1]),
                    e.beginPath(),
                    e.moveTo(t.points[0][0], t.points[0][1]),
                    1 == t.points.length)
                        e.lineTo(t.points[0][0] + 2, t.points[0][1] + 2);
                    else
                        for (var n = 1; n < t.points.length; n++)
                            e.lineTo(t.points[n][0], t.points[n][1])
                }
                e.fillStyle = t.fill,
                e.fill(),
                e.strokeStyle = t.stroke,
                e.stroke(),
                e.restore()
            }
        }
        ;
        var T = !1
          , A = !1
          , R = function(e) {
            var n, i;
            if (d20.tddice && d20.tddice.handleInteraction && d20.tddice.handleInteraction(),
            e.touches) {
                if ("pan" == d20.engine.mode)
                    return;
                e.touches.length > 1 && (T = d20.engine.mode,
                d20.engine.mode = "pan",
                d20.engine.leftMouseIsDown = !0),
                d20.engine.lastTouchStarted = (new Date).getTime(),
                n = e.touches[0].pageX,
                i = e.touches[0].pageY,
                e.preventDefault()
            } else
                n = e.pageX,
                i = e.pageY;
            for (var o = d20.engine.showLastPaths.length; o--; )
                "selected" == d20.engine.showLastPaths[o].type && d20.engine.showLastPaths.splice(o, 1);
            d20.engine.handleMetaKeys(e),
            "select" != d20.engine.mode && "path" != d20.engine.mode || r.__onMouseDown(e),
            (0 === e.button || e.touches && 1 == e.touches.length) && (d20.engine.leftMouseIsDown = !0),
            2 === e.button && (d20.engine.rightMouseIsDown = !0);
            var a = Math.floor(n / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom)
              , l = Math.floor(i / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom);
            if (d20.engine.lastMousePos = [a, l],
            d20.engine.mousePos = [a, l],
            !d20.engine.leftMouseIsDown || "fog-reveal" != d20.engine.mode && "fog-hide" != d20.engine.mode && "gridalign" != d20.engine.mode) {
                if (d20.engine.leftMouseIsDown && "fog-polygonreveal" == d20.engine.mode) {
                    var c = a
                      , u = l;
                    0 != d20.engine.snapTo && (e.shiftKey && !d20.Campaign.activePage().get("adv_fow_enabled") || !e.shiftKey && d20.Campaign.activePage().get("adv_fow_enabled")) && (c = d20.engine.snapToIncrement(c, d20.engine.snapTo),
                    u = d20.engine.snapToIncrement(u, d20.engine.snapTo)),
                    d20.engine.fog.points.length > 0 && Math.abs(d20.engine.fog.points[0][0] - c) + Math.abs(d20.engine.fog.points[0][1] - u) < 15 ? (d20.engine.fog.points.push([d20.engine.fog.points[0][0], d20.engine.fog.points[0][1]]),
                    d20.engine.finishPolygonReveal()) : d20.engine.fog.points.push([c, u]),
                    d20.engine.redrawScreenNextTick(!0)
                } else if (d20.engine.leftMouseIsDown && "measure" == d20.engine.mode)
                    if (2 === e.button)
                        d20.engine.addWaypoint(e);
                    else {
                        d20.engine.measure.sticky && d20.engine.endMeasure(),
                        d20.engine.measure.down[0] = a,
                        d20.engine.measure.down[1] = l,
                        d20.engine.measure.sticky = e.shiftKey;
                        let t = d20.Campaign.activePage().get("grid_type")
                          , n = "snap_center" === d20.engine.ruler_snapping && !e.altKey;
                        if (n |= "no_snap" === d20.engine.ruler_snapping && e.altKey,
                        n &= 0 !== d20.engine.snapTo)
                            if ("square" === t)
                                d20.engine.measure.down[1] = d20.engine.snapToIncrement(d20.engine.measure.down[1] + Math.floor(d20.engine.snapTo / 2), d20.engine.snapTo) - Math.floor(d20.engine.snapTo / 2),
                                d20.engine.measure.down[0] = d20.engine.snapToIncrement(d20.engine.measure.down[0] + Math.floor(d20.engine.snapTo / 2), d20.engine.snapTo) - Math.floor(d20.engine.snapTo / 2);
                            else {
                                let e = d20.canvas_overlay.activeHexGrid.GetHexAt({
                                    X: d20.engine.measure.down[0],
                                    Y: d20.engine.measure.down[1]
                                });
                                e && (d20.engine.measure.down[1] = e.MidPoint.Y,
                                d20.engine.measure.down[0] = e.MidPoint.X)
                            }
                        else if (0 === d20.engine.snapTo || "snap_corner" !== d20.engine.ruler_snapping || e.altKey)
                            d20.engine.measure.flags |= 1;
                        else {
                            if ("square" === t)
                                d20.engine.measure.down[0] = d20.engine.snapToIncrement(d20.engine.measure.down[0], d20.engine.snapTo),
                                d20.engine.measure.down[1] = d20.engine.snapToIncrement(d20.engine.measure.down[1], d20.engine.snapTo);
                            else {
                                let e = d20.engine.snapToHexCorner([d20.engine.measure.down[0], d20.engine.measure.down[1]]);
                                e && (d20.engine.measure.down[0] = e[0],
                                d20.engine.measure.down[1] = e[1])
                            }
                            d20.engine.measure.flags |= 1
                        }
                    }
                else if (d20.engine.leftMouseIsDown && "fxtools" == d20.engine.mode)
                    d20.engine.fx.current || (d20.engine.fx.current = d20.fx.handleClick(a, l));
                else if (d20.engine.leftMouseIsDown && "text" == d20.engine.mode) {
                    var d = {
                        fontFamily: $("#font-family").val(),
                        fontSize: $("#font-size").val(),
                        fill: $("#font-color").val(),
                        text: "",
                        left: a,
                        top: l
                    }
                      , h = d20.Campaign.activePage().addText(d);
                    _.defer(function() {
                        d20.engine.editText(h.view.graphic, d.top, d.left),
                        setTimeout(function() {
                            $(".texteditor").focus()
                        }, 300)
                    })
                } else if (d20.engine.leftMouseIsDown && "rect" == d20.engine.mode) {
                    var p = parseInt($("#path_width").val(), 10)
                      , f = d20.engine.drawshape.shape = {
                        strokewidth: p,
                        x: 0,
                        y: 0,
                        width: 10,
                        height: 10,
                        type: e.altKey ? "circle" : "rect"
                    };
                    c = a,
                    u = l;
                    0 != d20.engine.snapTo && e.shiftKey && (c = d20.engine.snapToIncrement(c, d20.engine.snapTo),
                    u = d20.engine.snapToIncrement(u, d20.engine.snapTo)),
                    f.x = c,
                    f.y = u,
                    f.fill = $("#path_fillcolor").val(),
                    f.stroke = $("#path_strokecolor").val(),
                    d20.engine.drawshape.start = [n + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0], i + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1]],
                    d20.engine.redrawScreenNextTick()
                } else if (d20.engine.leftMouseIsDown && "polygon" == d20.engine.mode) {
                    if (d20.engine.drawshape.shape)
                        f = d20.engine.drawshape.shape;
                    else {
                        p = parseInt($("#path_width").val(), 10);
                        (f = d20.engine.drawshape.shape = {
                            strokewidth: p,
                            points: [],
                            type: "polygon"
                        }).fill = $("#path_fillcolor").val(),
                        f.stroke = $("#path_strokecolor").val()
                    }
                    c = a,
                    u = l;
                    0 != d20.engine.snapTo && e.shiftKey && (c = d20.engine.snapToIncrement(c, d20.engine.snapTo),
                    u = d20.engine.snapToIncrement(u, d20.engine.snapTo)),
                    f.points.length > 0 && Math.abs(f.points[0][0] - c) + Math.abs(f.points[0][1] - u) < 15 ? (f.points.push([f.points[0][0], f.points[0][1]]),
                    d20.engine.finishCurrentPolygon()) : f.points.push([c, u]),
                    d20.engine.redrawScreenNextTick()
                } else if (d20.engine.leftMouseIsDown && "targeting" === d20.engine.mode) {
                    var g = d20.engine.canvas.findTarget(e, !0, !0);
                    return void (g !== undefined && "image" === g.type && g.model && d20.engine.nextTargetCallback(g))
                }
            } else
                d20.engine.fog.down[0] = a,
                d20.engine.fog.down[1] = l,
                0 != d20.engine.snapTo && "square" == d20.Campaign.activePage().get("grid_type") && ("gridalign" == d20.engine.mode ? e.shiftKey && (d20.engine.fog.down[0] = d20.engine.snapToIncrement(d20.engine.fog.down[0], d20.engine.snapTo),
                d20.engine.fog.down[1] = d20.engine.snapToIncrement(d20.engine.fog.down[1], d20.engine.snapTo)) : (e.shiftKey && !d20.Campaign.activePage().get("adv_fow_enabled") || !e.shiftKey && d20.Campaign.activePage().get("adv_fow_enabled")) && (d20.engine.fog.down[0] = d20.engine.snapToIncrement(d20.engine.fog.down[0], d20.engine.snapTo),
                d20.engine.fog.down[1] = d20.engine.snapToIncrement(d20.engine.fog.down[1], d20.engine.snapTo)));
            if (window.currentPlayer && d20.engine.leftMouseIsDown && "select" == d20.engine.mode) {
                if (2 === e.button && d20.engine.addWaypoint(e),
                d20.engine.pings[window.currentPlayer.id] && d20.engine.pings[window.currentPlayer.id].radius > 20)
                    return;
                var m = {
                    left: a,
                    top: l,
                    radius: -5,
                    player: window.currentPlayer.id,
                    pageid: d20.Campaign.activePage().id,
                    currentLayer: window.currentEditingLayer
                };
                window.is_gm && e.shiftKey && (m.scrollto = !0),
                d20.engine.pings[window.currentPlayer.id] = m,
                d20.engine.pinging = {
                    downx: n,
                    downy: i
                },
                d20.engine.redrawScreenNextTick(!0)
            }
            d20.engine.rightMouseIsDown && ("select" == d20.engine.mode || "path" == d20.engine.mode || "text" == d20.engine.mode) || d20.engine.leftMouseIsDown && "pan" == d20.engine.mode ? (d20.engine.pan.beginPos = [s.scrollLeft(), s.scrollTop()],
            d20.engine.pan.panXY = [n, i],
            d20.engine.pan.panning = !0) : d20.engine.pan.panning = !1,
            2 === e.button && !d20.engine.leftMouseIsDown && d20.engine.measurements[window.currentPlayer.id] && d20.engine.measurements[window.currentPlayer.id].sticky && (d20.engine.endMeasure(),
            d20.engine.announceEndMeasure({
                player: window.currentPlayer.id
            })),
            t.hasClass("hasfocus") || t.focus()
        }
          , M = function(e) {
            var t, n;
            if (e.changedTouches ? ((e.changedTouches.length > 1 || "pan" == d20.engine.mode) && (delete d20.engine.pings[window.currentPlayer.id],
            d20.engine.pinging = !1),
            e.preventDefault(),
            t = e.changedTouches[0].pageX,
            n = e.changedTouches[0].pageY) : (t = e.pageX,
            n = e.pageY),
            "select" != d20.engine.mode && "path" != d20.engine.mode && "targeting" != d20.engine.mode || r.__onMouseMove(e),
            d20.engine.leftMouseIsDown || d20.engine.rightMouseIsDown) {
                var i = Math.floor(t / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom)
                  , o = Math.floor(n / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom);
                if (d20.engine.mousePos = [i, o],
                !d20.engine.leftMouseIsDown || "fog-reveal" != d20.engine.mode && "fog-hide" != d20.engine.mode && "gridalign" != d20.engine.mode) {
                    if (d20.engine.leftMouseIsDown && "measure" == d20.engine.mode && d20.engine.measure.down[0] !== undefined && d20.engine.measure.down[1] !== undefined) {
                        d20.engine.measure.down[2] = i,
                        d20.engine.measure.down[3] = o,
                        d20.engine.measure.sticky |= e.shiftKey;
                        let t = d20.Campaign.activePage().get("grid_type")
                          , n = "snap_corner" === d20.engine.ruler_snapping && !e.altKey && 0 !== d20.engine.snapTo
                          , r = "snap_center" === d20.engine.ruler_snapping && !e.altKey;
                        if (r |= "no_snap" === d20.engine.ruler_snapping && e.altKey,
                        r &= 0 !== d20.engine.snapTo) {
                            if ("square" === t)
                                d20.engine.measure.down[2] = d20.engine.snapToIncrement(d20.engine.measure.down[2] + Math.floor(d20.engine.snapTo / 2), d20.engine.snapTo) - Math.floor(d20.engine.snapTo / 2),
                                d20.engine.measure.down[3] = d20.engine.snapToIncrement(d20.engine.measure.down[3] + Math.floor(d20.engine.snapTo / 2), d20.engine.snapTo) - Math.floor(d20.engine.snapTo / 2);
                            else {
                                let e = d20.canvas_overlay.activeHexGrid.GetHexAt({
                                    X: d20.engine.measure.down[2],
                                    Y: d20.engine.measure.down[3]
                                });
                                e && (d20.engine.measure.down[3] = e.MidPoint.Y,
                                d20.engine.measure.down[2] = e.MidPoint.X)
                            }
                            d20.engine.measure.flags &= -3
                        } else if (n) {
                            if ("square" === t)
                                d20.engine.measure.down[2] = d20.engine.snapToIncrement(d20.engine.measure.down[2], d20.engine.snapTo),
                                d20.engine.measure.down[3] = d20.engine.snapToIncrement(d20.engine.measure.down[3], d20.engine.snapTo);
                            else {
                                let e = d20.engine.snapToHexCorner([d20.engine.measure.down[2], d20.engine.measure.down[3]]);
                                e && (d20.engine.measure.down[2] = e[0],
                                d20.engine.measure.down[3] = e[1])
                            }
                            d20.engine.measure.flags |= 2
                        } else
                            d20.engine.measure.flags |= 2;
                        var a = {
                            x: d20.engine.measure.down[0],
                            y: d20.engine.measure.down[1],
                            to_x: d20.engine.measure.down[2],
                            to_y: d20.engine.measure.down[3],
                            player: window.currentPlayer.id,
                            pageid: d20.Campaign.activePage().id,
                            currentLayer: window.currentEditingLayer,
                            waypoints: d20.engine.measure.waypoints,
                            sticky: d20.engine.measure.sticky,
                            flags: d20.engine.measure.flags,
                            hide: d20.engine.measure.hide
                        };
                        d20.engine.announceMeasure(a)
                    } else if (d20.engine.leftMouseIsDown && "fxtools" == d20.engine.mode) {
                        if (d20.engine.fx.current) {
                            var l = (new Date).getTime();
                            l - d20.engine.fx.lastMoveBroadcast > d20.engine.fx.MOVE_BROADCAST_FREQ ? (d20.fx.moveFx(d20.engine.fx.current, i, o),
                            d20.engine.fx.lastMoveBroadcast = l) : d20.fx.moveFx(d20.engine.fx.current, i, o, !0)
                        }
                    } else if (d20.engine.leftMouseIsDown && "rect" == d20.engine.mode) {
                        var c = (t + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] - d20.engine.drawshape.start[0]) / d20.engine.canvasZoom
                          , u = (n + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] - d20.engine.drawshape.start[1]) / d20.engine.canvasZoom;
                        0 != d20.engine.snapTo && e.shiftKey && (c = d20.engine.snapToIncrement(c, d20.engine.snapTo),
                        u = d20.engine.snapToIncrement(u, d20.engine.snapTo));
                        var d = d20.engine.drawshape.shape;
                        d.width = c,
                        d.height = u,
                        d20.engine.redrawScreenNextTick()
                    }
                } else
                    d20.engine.fog.down[2] = i,
                    d20.engine.fog.down[3] = o,
                    0 != d20.engine.snapTo && "square" == d20.Campaign.activePage().get("grid_type") && ("gridalign" == d20.engine.mode ? e.shiftKey && (d20.engine.fog.down[2] = d20.engine.snapToIncrement(d20.engine.fog.down[2], d20.engine.snapTo),
                    d20.engine.fog.down[3] = d20.engine.snapToIncrement(d20.engine.fog.down[3], d20.engine.snapTo)) : (e.shiftKey && !d20.Campaign.activePage().get("adv_fow_enabled") || !e.shiftKey && d20.Campaign.activePage().get("adv_fow_enabled")) && (d20.engine.fog.down[2] = d20.engine.snapToIncrement(d20.engine.fog.down[2], d20.engine.snapTo),
                    d20.engine.fog.down[3] = d20.engine.snapToIncrement(d20.engine.fog.down[3], d20.engine.snapTo))),
                    d20.Campaign.activePage().get("showdarkness") ? d20.engine.redrawScreenNextTick(!0) : d20.engine.clearCanvasOnRedraw("fog");
                if (d20.engine.pinging)
                    (c = Math.abs(d20.engine.pinging.downx - t)) + (u = Math.abs(d20.engine.pinging.downy - n)) > 10 && (delete d20.engine.pings[window.currentPlayer.id],
                    d20.engine.pinging = !1);
                if (d20.engine.pan.panning) {
                    c = 2 * (t - d20.engine.pan.panXY[0]),
                    u = 2 * (n - d20.engine.pan.panXY[1]);
                    if (d20.engine.pan.lastPanDist += Math.abs(c) + Math.abs(u),
                    d20.engine.pan.lastPanDist < 10)
                        return;
                    var h = d20.engine.pan.beginPos[0] - c
                      , p = d20.engine.pan.beginPos[1] - u;
                    s.stop().animate({
                        scrollLeft: h,
                        scrollTop: p
                    }, {
                        duration: 1500,
                        easing: "easeOutExpo",
                        queue: !1
                    })
                }
            }
        }
          , P = function(e) {
            var t, n;
            d20.engine.handleMetaKeys(e),
            e.changedTouches && e.changedTouches.length > 0 ? (t = e.changedTouches[0].pageX,
            n = e.changedTouches[0].pageY) : (t = e.pageX,
            n = e.pageY),
            "path" != d20.engine.mode && ("select" != d20.engine.mode || Object.keys(d20.engine.movingShadows).length > 0 && 2 === e.button) || r.__onMouseUp(e);
            var i = Math.floor(t / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom)
              , o = Math.floor(n / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom)
              , a = 0;
            if (e.changedTouches && e.changedTouches.length > 0 && (a = Math.abs(i - d20.engine.lastMousePos[0]) + Math.abs(o - d20.engine.lastMousePos[1])),
            0 === e.button && Object.keys(d20.engine.movingShadows).length > 0 && (d20.engine.movingShadows = {}),
            "fog-reveal" == d20.engine.mode || "fog-hide" == d20.engine.mode) {
                var s = {
                    x: d20.engine.fog.down[0] < d20.engine.fog.down[2] ? d20.engine.fog.down[0] : d20.engine.fog.down[2],
                    y: d20.engine.fog.down[1] < d20.engine.fog.down[3] ? d20.engine.fog.down[1] : d20.engine.fog.down[3],
                    width: Math.abs(d20.engine.fog.down[2] - d20.engine.fog.down[0]),
                    height: Math.abs(d20.engine.fog.down[3] - d20.engine.fog.down[1]),
                    type: d20.engine.mode.replace("fog-", ""),
                    ctrlKey: e.ctrlKey,
                    altKey: e.altKey
                };
                s.x !== undefined && s.y !== undefined && (d20.canvas_overlay.revealOrHideArea(s),
                d20.tutorial && d20.tutorial.active && ("fog-reveal" == d20.engine.mode ? $(document).trigger("fogReveal") : "fog-hide" == d20.engine.mode && $(document).trigger("fogHide"))),
                !d20.Campaign.activePage().get("showdarkness") && d20.engine.clearCanvasOnRedraw("fog")
            } else if (0 !== e.button || "measure" != d20.engine.mode || d20.engine.measure.sticky) {
                if ("fxtools" == d20.engine.mode)
                    d20.engine.fx.current && (d20.fx.killFx(d20.engine.fx.current),
                    delete d20.engine.fx.current);
                else if ("rect" == d20.engine.mode && d20.engine.drawshape.shape) {
                    var l = d20.engine.drawshape.shape;
                    if (l.width < 0 && (l.x = l.x + l.width,
                    l.width = -l.width),
                    l.height < 0 && (l.y = l.y + l.height,
                    l.height = -l.height),
                    l.width > 5 || l.height > 5) {
                        var c;
                        if ("rect" == l.type)
                            c = "M0,0 L" + l.width + ",0 L" + l.width + "," + l.height + " L0," + l.height + " L0,0";
                        else {
                            var u = .5522848
                              , d = Math.floor(l.width / 2)
                              , h = Math.floor(l.height / 2)
                              , p = d * u
                              , f = h * u
                              , g = d + d
                              , m = h + h;
                            c = "M" + (d - d) + "," + h + " C" + (d - d) + "," + (h - f) + " " + (d - p) + "," + (h - h) + " " + d + "," + (h - h) + " C" + (d + p) + "," + (h - h) + " " + g + "," + (h - f) + " " + g + "," + h + " C" + g + "," + (h + f) + " " + (d + p) + "," + m + " " + d + "," + m + " C" + (d - p) + "," + m + " " + (d - d) + "," + (h + f) + " " + (d - d) + "," + h
                        }
                        var y = new fabric.Path(c,{
                            strokeWidth: l.strokewidth
                        });
                        y.set({
                            top: Math.floor(l.y + l.height / 2),
                            left: Math.floor(l.x + l.width / 2),
                            fill: l.fill,
                            stroke: l.stroke
                        }),
                        d20.Campaign.activePage().addPath(y)
                    }
                } else if (window.currentPlayer && "select" == d20.engine.mode && d20.engine.pings[window.currentPlayer.id] && d20.engine.pings[window.currentPlayer.id].radius < 20)
                    delete d20.engine.pings[window.currentPlayer.id];
                else if ("gridalign" == d20.engine.mode) {
                    d20.engine.clearCanvasOnRedraw("fog");
                    var v = {
                        width: Math.abs(d20.engine.fog.down[2] - d20.engine.fog.down[0]) / 3,
                        height: Math.abs(d20.engine.fog.down[3] - d20.engine.fog.down[1]) / 3,
                        x: d20.engine.fog.down[0],
                        y: d20.engine.fog.down[1]
                    }
                      , b = $("<div class='gridalignconfirmation'>Okay, it looks like your grid cells are: <br /> <input class='resultwidth' value='" + Math.round(v.width) + "' /> x <input class='resultheight' value='" + Math.round(v.height) + "' /> pixels <br /> We'll resize the map image so that it matches your page's current grid size. Proceed?</div>");
                    b.dialog({
                        zIndex: 10800,
                        buttons: {
                            "Align to Grid!": function() {
                                var e = d20.Campaign.activePage().get("snapping_increment") * window.dpi
                                  , t = d20.Campaign.activePage().get("snapping_increment") * window.dpi
                                  , n = e / parseInt(b.find(".resultwidth").val(), 10)
                                  , i = t / parseInt(b.find(".resultheight").val(), 10);
                                d20.engine.gridaligner.target.model.save({
                                    width: d20.engine.gridaligner.target.get("width") * n,
                                    height: d20.engine.gridaligner.target.get("height") * i
                                }),
                                _.defer(function() {
                                    d20.engine.canvas.fire("object:modified", {
                                        target: d20.engine.gridaligner.target,
                                        force_snap: !0
                                    })
                                }),
                                b.dialog("destroy")
                            },
                            "Try Again": function() {
                                setMode("gridalign"),
                                b.dialog("destroy")
                            },
                            Cancel: function() {
                                b.dialog("destroy")
                            }
                        },
                        beforeClose: function() {
                            b.dialog("destroy")
                        },
                        title: "Proceed with Alignment?",
                        modal: !0,
                        width: 400
                    }),
                    setMode("select")
                }
            } else
                d20.engine.endMeasure(),
                d20.engine.announceEndMeasure({
                    player: window.currentPlayer.id
                });
            if ((d20.engine.rightMouseIsDown || fabric.isTouchSupported && d20.engine.leftMouseIsDown && (new Date).getTime() - d20.engine.lastTouchStarted > 500 && a < 25) && (!d20.engine.pan.panning || d20.engine.pan.lastPanDist < 10)) {
                let t = !1;
                if ("polygon" == d20.engine.mode)
                    d20.engine.finishCurrentPolygon();
                else if ("fog-polygonreveal" == d20.engine.mode)
                    d20.engine.finishPolygonReveal();
                else if (t |= "measure" === d20.engine.mode,
                t |= "select" === d20.engine.mode && d20.engine.leftMouseIsDown && d20.engine.selected().length > 0,
                d20.engine.pinging && (d20.engine.pings[window.currentPlayer.id] && d20.engine.pings[window.currentPlayer.id].radius > 20 ? t = !0 : (delete d20.engine.pings[window.currentPlayer.id],
                d20.engine.pinging = !1)),
                !t) {
                    var w = d20.engine.canvas.findTarget(e);
                    w && d20.engine.canvas.setActiveObject(w, e),
                    d20.token_editor.showContextMenu(e)
                }
            }
            (0 === e.button || e.changedTouches && 1 !== e.touches.length) && (d20.engine.leftMouseIsDown = !1),
            2 === e.button && (d20.engine.rightMouseIsDown = !1),
            d20.engine.pinging = !1,
            d20.engine.fog.down = [],
            d20.engine.pan.panning = !1,
            d20.engine.pan.lastPanDist = 0,
            "polygon" != d20.engine.mode && (d20.engine.drawshape.shape = !1),
            T && (A && clearTimeout(A),
            A = setTimeout(function() {
                d20.engine.mode = T,
                T = !1,
                A = !1
            }, 500))
        };
        d20.engine.final_canvas.addEventListener(fabric.isTouchSupported ? "touchstart" : "mousedown", R),
        d20.engine.final_canvas.addEventListener(fabric.isTouchSupported ? "touchmove" : "mousemove", M),
        d20.engine.final_canvas.addEventListener(fabric.isTouchSupported ? "touchend" : "mouseup", P),
        $("body").on(fabric.isTouchSupported ? "touchend" : "mouseup", function(e) {
            d20.engine.leftMouseIsDown && P(e)
        }),
        d20.engine.selected = function() {
            var e = d20.engine.canvas.getActiveGroup()
              , t = [];
            if (e)
                t = e.getObjects();
            else {
                var n = d20.engine.canvas.getActiveObject();
                n && t.push(n)
            }
            return t
        }
        ,
        d20.engine.unselect = function(e) {
            e || (d20.engine.canvas.deactivateAllWithDispatch(),
            d20.engine.redrawScreenNextTick())
        }
        ,
        d20.engine.selectAll = function(e) {
            var t = [];
            if (d20.engine.canvas.forEachObject(function(n) {
                if (1 == n.selectable) {
                    if (e && "image" == n.type && n.model && 1 != n.model.get("isdrawing"))
                        return !0;
                    t.push(n)
                }
            }),
            0 != t.length)
                if (1 != t.length) {
                    var n = new fabric.Group(t);
                    d20.engine.canvas.setActiveGroup(n),
                    n.saveCoords(),
                    d20.engine.canvas.fire("selection:created", {
                        target: n
                    }),
                    d20.engine.redrawScreenNextTick()
                } else
                    d20.engine.select(t[0])
        }
        ,
        d20.engine.select = function(e) {
            d20.engine.canvas.getActiveObject() || d20.engine.canvas.getActiveGroup() ? d20.engine.selectAdd(e) : d20.engine.canvas.setActiveObject(e)
        }
        ,
        d20.engine.selectAdd = function(e) {
            -1 == _.indexOf(d20.engine.selected(), e) && (d20.engine.canvas._handleGroupLogic({}, e),
            d20.engine.canvas._currentTransform && (d20.engine.canvas._currentTransform = null)),
            d20.engine.redrawScreenNextTick()
        }
        ,
        d20.engine.drawEllipse = function(e, t, n, i, o) {
            var r = (n /= 2) / 2
              , a = (i /= 2) / 2
              , s = .551784
              , l = n / 8 * s
              , c = i / 8 * s;
            o.beginPath(),
            o.moveTo(e, t - i),
            o.bezierCurveTo(e + r + l, t - i, e + n, t - a - c, e + n, t),
            o.bezierCurveTo(e + n, t + a + c, e + r + l, t + i, e, t + i),
            o.bezierCurveTo(e - r - l, t + i, e - n, t + a + c, e - n, t),
            o.bezierCurveTo(e - n, t - a - c, e - r - l, t - i, e, t - i),
            o.closePath()
        }
        ,
        d20.engine.editText = function(e, t) {
            var n, i, o;
            $("body").trigger("click.textarea");
            var r = parseInt(e.get("fontSize"), 10)
              , a = e.get("fontFamily").replace(/'/g, "")
              , s = e.get("fill");
            $("#font-size").val(r).trigger("keyup"),
            $("#font-color").val(s).trigger("change-silent"),
            $("#font-family").val(a);
            var l, c, u = 1.5, d = $("<textarea class='texteditor' style='line-height: " + u + "em;'></textarea>").css("font-size", r * d20.engine.canvasZoom).css("color", s).css("font-family", a), h = $("<div class='texteditor_ghost'></div>").css("font-size", r).css("line-height", u), p = $("<div class='texteditor_outline'></div>");
            d20.engine.editingTextarea = d,
            d.bind("click touchstart", function(e) {
                e.stopPropagation()
            }),
            $("#editor-wrapper").append(d),
            $("#editor-wrapper").append(h),
            $("#editor-wrapper").append(p);
            var f = function() {
                n = {
                    x: Math.floor((e.oCoords.tl.x - d20.engine.currentCanvasOffset[0]) * d20.engine.canvasZoom) - 125 + d20.engine.paddingOffset[0] + $("#editor-wrapper").scrollLeft(),
                    y: Math.floor((e.oCoords.tl.y - d20.engine.currentCanvasOffset[1]) * d20.engine.canvasZoom) - 125 + d20.engine.paddingOffset[1] + $("#editor-wrapper").scrollTop(),
                    width: Math.floor(e.get("width") * d20.engine.canvasZoom),
                    height: Math.floor(e.get("height") * d20.engine.canvasZoom)
                },
                d.css("top", toolbaroffset + ruleroffset + n.y + "px").css("left", ruleroffset + n.x + "px").css("width", n.width + "px").css("height", n.height + "px"),
                p.css("top", d.offset().top + $("#editor-wrapper").scrollTop() - 3 + "px").css("left", d.offset().left + $("#editor-wrapper").scrollLeft() - 3 + "px")
            }
              , g = function() {
                console.log("Finish editing"),
                e.model.save({
                    font_size: parseInt($("#font-size").val(), 10),
                    left: e.get("left") + Math.round((d.width() - l) / 2),
                    top: e.get("top") + Math.round((d.height() - c) / 2),
                    text: d.val(),
                    color: d.css("color"),
                    font_family: d.css("font-family").replace(/'/g, "")
                }),
                d20.engine.canvas.add(e),
                d20.Campaign.activePage().debounced_reorderByZ(),
                d.remove(),
                h.remove(),
                p.remove(),
                $("body").unbind("click.textarea"),
                $("#editor").trigger("nothing_selected"),
                setTimeout(function() {
                    $(document).trigger("forceresize")
                }, 100),
                d20.engine.editingTextarea = !1
            };
            d.bind("keyup", function() {
                var e = d.val();
                "" == e && (e = " "),
                h.text(e),
                h.css("font-size", d.css("font-size")),
                h.css("font-family", d.css("font-family")),
                $(this).css("width", h.width() + r * u + "px").css("height", h.height() + "px"),
                p.css("width", h.width() + r * u + 4 + "px").css("height", $(this).height() + 4 + "px"),
                l || (l = $(this).width(),
                c = $(this).height())
            }),
            d.bind("scrolled", function() {
                f(e)
            }),
            d.bind("keydown", "esc", function() {
                return g(),
                !1
            }),
            d.bind("keydown", "ctrl+d meta+d", function() {
                return g(),
                setMode("drawselect"),
                !1
            }),
            d.bind("keydown", "ctrl+s meta+s", function() {
                return g(),
                setMode("select"),
                !1
            }),
            d.bind("keydown", "ctrl+f meta+f", function() {
                return g(),
                setMode("path"),
                !1
            }),
            d.bind("mousedown mousemove mouseup touchstart touchmove touchend", function(e) {
                e.stopPropagation()
            }),
            function(r) {
                f(e = r),
                i = (t - n.x) / n.width,
                o = e.model.get("text"),
                d.val(o);
                var a = Math.floor(i * o.length);
                a > o.length && (a = o.length),
                a > 0 && d.setCursorPosition(a),
                d20.engine.canvas.remove(e),
                d20.engine.redrawScreenNextTick(),
                "Placeholder" == o && d.val(""),
                d.focus().keyup(),
                $("#editor").trigger("shape_selected", [e, !1])
            }(e),
            _.defer(function() {
                $("body").bind("click.textarea", function() {
                    g()
                })
            })
        }
        ,
        d20.engine.convertAbsolutePathStringtoFabric = function(e) {
            try {
                var t = new fabric.Path(e)
                  , n = {
                    width: t.width,
                    height: t.height,
                    top: t.top,
                    left: t.left
                };
                0 == t.height && "A" == t.path[1][0] && (n.height = 2 * t.path[1][2],
                n.width = n.height,
                n.top = n.top - n.height / 2);
                for (var i = {}, o = t.path, r = 0; r < o.length; r++) {
                    var a = o[r];
                    "M" == a[0] || "L" == a[0] ? (a[1] = a[1] - n.left + n.width / 2,
                    a[2] = a[2] - n.top + n.height / 2,
                    o[r] = a) : "A" == a[0] && (a[6] = a[6] - n.left + n.width / 2,
                    a[7] = a[7] - n.top + n.height / 2,
                    o[r] = a)
                }
                return (n = _.extend(n, i)).path = JSON.stringify(o),
                n
            } catch (I) {
                return console.log("ERROR converting path!"),
                console.log(I),
                {
                    path: "[]"
                }
            }
        }
        ,
        $(document).on("d20:new_page_fully_loaded", ()=>{
            const e = d20.Campaign.activePage().get("id")
              , t = _.pluck(d20.Campaign.players.models, "id");
            for (player of (t.push("gm"),
            d20.engine.page_loaded = !0,
            d20.engine.advanced_fog.visible_cells = {},
            t))
                d20.engine.advanced_fog.revealed_cells[player] || (d20.engine.advanced_fog.revealed_cells[player] = {}),
                d20.engine.advanced_fog.revealed_cells[player][e] || (d20.engine.advanced_fog.revealed_cells[player][e] = new Set);
            d20.engine.advanced_fog.updateAllVision(),
            d20.engine.advanced_fog.players_needing_update = [],
            d20.engine.advanced_fog.save_interval = setInterval(d20.engine.advanced_fog.save, 200),
            d20.fx.reset(),
            d20.engine.clearCanvasOnRedraw("all")
        }
        ),
        d20.engine.canvas.renderAll = d20.engine.redrawScreenNextTick,
        requestAnimationFrame(d20.engine.renderLoop)
    }(),
    new function(e) {
        e.fn.setCursorPosition = function(t) {
            if (e(this).get(0).setSelectionRange)
                e(this).get(0).setSelectionRange(t, t);
            else if (e(this).get(0).createTextRange) {
                var n = e(this).get(0).createTextRange();
                n.collapse(!0),
                n.moveEnd("character", t),
                n.moveStart("character", t),
                n.select()
            }
        }
    }
    (jQuery),
    d20.utils = {
        stattracker: {},
        _hex_color_regex: /^#[0-9a-f]{6}$/i,
        _video_url_regex: /[\w\-]+\.webm/i,
        isVideo: e=>d20.utils._video_url_regex.test(e),
        _status_regex: /^(?:(dead)|([^@]+)(?:@(\d))?)$/,
        parseStatus: e=>{
            const t = d20.utils._status_regex.exec(e)
              , n = {
                dead: t && t[1] || null,
                icon: null,
                color: null,
                number: t && t[3] || null
            };
            if (t && t[2]) {
                const e = d20.token_editor.statusmarkers[t[2]]
                  , i = d20.utils._hex_color_regex.test(e);
                n.color = i ? e : null,
                n.icon = i ? null : +e
            }
            return t && n
        }
        ,
        Semaphore: class {
            constructor(e) {
                this._value = e,
                this._queue = []
            }
            incr() {
                ++this._value;
                const e = this._queue.shift();
                e && e()
            }
            decr() {
                if (--this._value < 0) {
                    const e = this._queue;
                    return new Promise(t=>{
                        e.push(t)
                    }
                    )
                }
                return Promise.resolve()
            }
        }
    },
    window.d20ext = window.d20ext || {},
    window.d20ext.utils = d20.utils,
    String.prototype.tranSub = function() {
        var e = arguments;
        return this.replace(/{{[0-9]+}}/g, function(t) {
            return e[parseInt(t.substring(2, t.length - 2))]
        })
    }
    ,
    d20.math = {
        add: function(e) {
            const t = _.clone(e);
            for (let e = 1; e < arguments.length; ++e)
                if (arguments[e].length)
                    for (let n = 0; n < t.length; ++n)
                        t[n] += arguments[e][n];
                else
                    for (let n = 0; n < t.length; ++n)
                        t[n] += arguments[e];
            return t
        },
        sub: function(e) {
            const t = _.clone(e);
            for (let e = 1; e < arguments.length; ++e)
                if (arguments[e].length)
                    for (let n = 0; n < t.length; ++n)
                        t[n] -= arguments[e][n];
                else
                    for (let n = 0; n < t.length; ++n)
                        t[n] -= arguments[e];
            return t
        },
        mul: function(e) {
            const t = _.clone(e);
            for (let e = 1; e < arguments.length; ++e)
                for (let n = 0; n < t.length; ++n)
                    t[n] *= arguments[e];
            return t
        },
        div: function(e) {
            const t = _.clone(e);
            for (let e = 1; e < arguments.length; ++e)
                for (let n = 0; n < t.length; ++n)
                    t[n] /= arguments[e];
            return t
        },
        dot: function(e, t) {
            if (!e.length || e.length !== t.length)
                return NaN;
            let n = 0;
            for (let i = 0; i < e.length; ++i)
                n += e[i] * t[i];
            return n
        },
        line_line_intersection: (e,t)=>{
            let n = (e,t,n,i)=>e * i - t * n
              , i = {
                x: e[0][0],
                y: e[0][1]
            }
              , o = {
                x: e[1][0],
                y: e[1][1]
            }
              , r = {
                x: t[0][0],
                y: t[0][1]
            }
              , a = {
                x: t[1][0],
                y: t[1][1]
            }
              , s = n(i.x - o.x, i.y - o.y, r.x - a.x, r.y - a.y);
            if (0 === s)
                return NaN;
            {
                let e = n(i.x, i.y, o.x, o.y)
                  , t = n(r.x, r.y, a.x, a.y);
                return [n(e, i.x - o.x, t, r.x - a.x) / s, n(e, i.y - o.y, t, r.y - a.y) / s]
            }
        }
        ,
        lerp: (e,t,n)=>e.length !== t.length ? NaN : e.length ? d20.math.add(e, d20.math.mul(d20.math.sub(t, e), n)) : e + n * (t - e),
        slerp: (e,t,n)=>{
            if (!e.length > 1 || e.length !== t.length)
                return NaN;
            let i = Math.acos(d20.math.dot(d20.math.normalize(e), d20.math.normalize(t)))
              , o = Math.sin(i);
            return d20.math.add(d20.math.mul(e, Math.sin((1 - n) * i) / o), d20.math.mul(t, Math.sin(n * i) / o))
        }
        ,
        clamp: (e,t,n)=>Math.max(t, Math.min(e, n)),
        degrees: e=>e / Math.PI * 180,
        radians: e=>e / 180 * Math.PI,
        normalize: e=>d20.math.div(e, Math.sqrt(d20.math.dot(e, e))),
        magnitude: e=>Math.sqrt(d20.math.dot(e, e)),
        magnitude2: e=>d20.math.dot(e, e),
        Matrix: class {
            static scale(e) {
                const t = new Array(e.length * e.length);
                for (let n = 0; n < t.length; ++n)
                    t[n] = +(n % e.length == 0) * e[~~(n / e.length)];
                return new d20.math.Matrix(t,e.length,e.length)
            }
            constructor(e, t, n) {
                this.m = this.rows = t,
                this.n = this.cols = n,
                this.data = _.clone(e)
            }
            getRows() {
                let e = new Array(this.rows)
                  , t = 0;
                for (; t < this.cols; )
                    e[t] = this.data.slice(t * this.cols, ++t * this.cols);
                return e
            }
            getCols() {
                let e = new Array(this.cols);
                for (let t = 0; t < this.cols; ++t) {
                    e[t] = new Array(this.rows);
                    for (let n = 0; n < this.rows; ++n)
                        e[t][n] = this.data[n * this.cols + t]
                }
                return e
            }
            transpose() {
                return new d20.math.Matrix(_.flatten(this.getCols()),this.cols,this.rows)
            }
            mul(e) {
                if (this.cols === e.rows) {
                    let t = this.getRows()
                      , n = e.getCols()
                      , i = new Array(this.rows * e.cols);
                    for (let o = 0; o < this.rows; ++o)
                        for (let r = 0; r < e.cols; ++r)
                            i[o * e.cols + r] = d20.math.dot(t[o], n[r]);
                    return new d20.math.Matrix(i,e.cols,this.rows)
                }
                if (this.cols === e.length) {
                    let t = this.getRows()
                      , n = new Array(this.rows);
                    for (let i = 0; i < this.rows; ++i)
                        n[i] = d20.math.dot(t[i], e);
                    return n
                }
                if (this.rows === e.length) {
                    let t = this.getCols()
                      , n = new Array(this.cols);
                    for (let i = 0; i < this.cols; ++i)
                        n[i] = d20.math.dot(t[i], e);
                    return n
                }
                return NaN
            }
        }
        ,
        Rectangle: class {
            constructor(e, t, n, i, o) {
                this.midpoint = [e, t],
                this.width = n,
                this.height = i,
                this.theta = o % (2 * Math.PI);
                const r = .5 * i
                  , a = .5 * n;
                if (this.points = [[-a, -r], [-a, r], [a, r], [a, -r]],
                0 !== this.theta) {
                    const e = Math.sin(o)
                      , t = Math.cos(o);
                    this.rotation = new d20.math.Matrix([t, -e, e, t],2,2),
                    this.rotation_inverse = this.rotation.transpose(),
                    this.points = _.map(this.points, e=>this.rotation.mul(e))
                }
                this.points = _.map(this.points, e=>d20.math.add(e, this.midpoint))
            }
            resize(e) {
                const t = e.left || 0
                  , n = e.right || 0
                  , i = e.up || 0
                  , o = e.down || 0;
                let r = [[-t, 0], [n, 0], [0, -i], [0, o]];
                return this.rotation && (r = _.map(r, e=>this.rotation.mul(e))),
                this.points[0] = d20.math.add(this.points[0], r[0], r[2]),
                this.points[1] = d20.math.add(this.points[1], r[0], r[3]),
                this.points[2] = d20.math.add(this.points[2], r[1], r[3]),
                this.points[3] = d20.math.add(this.points[3], r[1], r[2]),
                this.width += t + n,
                this.height += i + o,
                this.midpoint = d20.math.div(d20.math.sub(this.points[2], this.points[0]), 2),
                this
            }
            translate(e) {
                return this.midpoint = d20.math.add(this.midpoint, e),
                this.points = _.map(this.points, t=>d20.math.add(t, e)),
                this
            }
            scale(e) {
                const t = d20.math.Matrix.scale(e);
                return this.points = _.map(this.points, e=>d20.math.add(t.mul(d20.math.sub(e, this.midpoint)), this.midpoint)),
                this
            }
            rectangleIntersection(e) {
                const t = e=>{
                    let t = [[1, 0], [0, 1]];
                    return e.rotation ? _.map(t, t=>e.rotation.mul(t)) : t
                }
                  , n = (e,t)=>{
                    let n = Number.POSITIVE_INFINITY
                      , i = Number.NEGATIVE_INFINITY;
                    for (const o of e) {
                        const e = d20.math.dot(o, t);
                        n = Math.min(n, e),
                        i = Math.max(i, e)
                    }
                    return {
                        min: n,
                        max: i
                    }
                }
                  , i = [...t(this), ...t(e)];
                let o = !0;
                for (const t of i) {
                    const i = n(this.points, t)
                      , r = n(e.points, t);
                    if (i.max < r.min || r.max < i.min) {
                        o = !1;
                        break
                    }
                }
                return o
            }
        }
    },
    function() {
        window.customcharsheet_translation !== undefined && (i18n.translator.add(JSON.parse(BASE64.decode(window.customcharsheet_translation))),
        console.log("Custom Sheet Translation")),
        "undefined" != typeof JS_TRANSLATIONS && i18n.translator.add({
            values: JS_TRANSLATIONS
        });
        var e = {};
        for (var t in d20.utils.htmlTranslator = function(t, n) {
            if ("" === t)
                return "";
            void 0 === n && (n = !1);
            var i = "jQuery";
            "string" == typeof t ? (i = "string",
            t = $(t)) : t instanceof jQuery || (i = "html",
            t = $(t));
            var o = "[data-i18n],[data-i18n-placeholder],[data-i18n-title],[data-i18n-alt],[data-i18n-aria-label],[data-i18n-label]";
            n && (o += ",[data-i18n-dynamic]");
            var r = function(e) {
                var t = [];
                return "error" === e && t.push("Missing list key."),
                "" === e && t.push("Empty list entry."),
                t.length > 0 && t.join(" ")
            };
            switch (t.find(o).each(function() {
                var t = $(this)
                  , i = ["-placeholder", "-title", "-alt", "-aria-label", "-label", ""];
                n && i.push("-dynamic"),
                $.each(i, function() {
                    try {
                        if (void 0 === t.attr("data-i18n" + this))
                            return;
                        var i = "" !== this && this.substr(1)
                          , o = n && "dynamic" === i
                          , r = o ? t.text() : t.attr("data-i18n" + this)
                          , a = (t.attr("data-i18n-vars") || "").split("|")
                          , s = i18n(r, i ? "[" + r + "]" : '<span style="color: red;">[' + r + "]</span>");
                        if (e[r] = i ? t.attr(i) : t.html(),
                        s = 0 === a.length ? s : s.replace(/{{([0-9]+)}}/g, function(e, t) {
                            return a[t] ? a[t] : "{{" + t + "}}"
                        }),
                        !i || o)
                            return t.html(s),
                            !1;
                        t.attr(i, s)
                    } catch (l) {
                        console.log("Translation Error:", l),
                        console.log(t)
                    }
                })
            }),
            t.find("[data-i18n-list]").each(function() {
                var e = $(this)
                  , t = e.attr("data-i18n-list")
                  , n = i18n(t, "error");
                if (a = r(n))
                    e.attr("data-i18n-error", a);
                else {
                    var i = $.map(n.split(","), function(e) {
                        return $.trim(e)
                    })
                      , o = (e.find("[data-i18n-list-item]").length,
                    e.clone())
                      , a = !1;
                    e.find("[data-i18n-list-item-num]").length > 0 ? $.each(i, function(t, n) {
                        if (0 === e.find('[data-i18n-list-item="' + i[t] + '"]').length)
                            return e.attr("data-i18n-error", "List does not contain the key: " + i[t] + "."),
                            void (a = !0);
                        o.find('[data-i18n-list-item-num="' + (t + 1) + '"]').replaceWith(e.find('[data-i18n-list-item="' + n + '"]').clone().removeAttr("data-i18n-list-item-num"))
                    }) : o.find("[data-i18n-list-item]").each(function(t) {
                        if (0 === e.find('[data-i18n-list-item="' + i[t] + '"]').length)
                            return e.attr("data-i18n-error", "List does not contain the key: " + i[t] + "."),
                            void (a = !0);
                        $(this).replaceWith(e.find('[data-i18n-list-item="' + i[t] + '"]').clone().removeAttr("data-i18n-list-item"))
                    }),
                    a || e.replaceWith(o)
                }
            }),
            window.i18nOutput = JSON.stringify(e),
            i) {
            case "string":
                return t.prop("outerHTML");
            case "html":
                return t[0];
            default:
                return t
            }
        }
        ,
        d20.utils.handleURL = function(e) {
            if (!($(this).hasClass("lightly") || $(this).parents(".note-editable").length > 0)) {
                var t = $(this).attr("href");
                if (void 0 === t)
                    return !1;
                if (-1 !== t.indexOf("journal.roll20.net") || -1 !== t.indexOf("wiki.roll20.net")) {
                    var n = t.split("/")[3]
                      , i = t.split("/")[4]
                      , o = d20.Campaign[n + "s"].get(i);
                    if (o) {
                        var r = o.get("inplayerjournals").split(",");
                        (window.is_gm || -1 !== _.indexOf(r, "all") || window.currentPlayer && -1 !== _.indexOf(r, window.currentPlayer.id)) && o.view.showDialog()
                    }
                    return $("#existing" + n + "s").find("tr[data-" + n + "id=" + i + "]").trigger("click"),
                    !1
                }
                var a = /(?:(?:http(?:s?):\/\/(?:app\.)?roll20(?:staging)?\.(?:net|local:5000)\/|^\/?)compendium\/)([^\/]+)\/([^\/#?]+)/i
                  , s = t.match(a);
                if (s)
                    return d20.utils.openCompendiumPage(s[1], s[2]),
                    e.stopPropagation(),
                    void e.preventDefault();
                if (-1 !== t.indexOf("javascript:"))
                    return !1;
                if ("`" === t.substring(0, 1))
                    return d20.textchat.doChatInput(t.substring(1)),
                    !1;
                if ("!" === t.substring(0, 1))
                    return d20.textchat.doChatInput(t),
                    !1;
                if ("~" === t.substring(0, 1))
                    return d20.textchat.doChatInput("%{" + t.substring(1, t.length) + "}"),
                    !1;
                if (t !== undefined && ("external" === $(this).attr("rel") || -1 === t.indexOf("javascript:") && -1 !== t.indexOf("://")))
                    e.stopPropagation(),
                    e.preventDefault(),
                    $('<div class="dialog dialog-danger">' + t + "<br /><br />This link will open up a new window (or tab) to an external site. Just close the new window/tab to return to the editor.</div>").dialog({
                        modal: !0,
                        title: "Confirm External Link",
                        buttons: {
                            Continue: function() {
                                $(this).dialog("destroy").remove(),
                                window.open(t)
                            },
                            Cancel: function() {
                                $(this).dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            $(this).dialog("destroy").remove()
                        }
                    })
            }
        }
        ,
        d20.utils.openCompendiumPage = function(e, t, n) {
            void 0 === n && (n = null),
            console.log("Opening compendium window for " + n),
            console.log("compendiumPageName", t);
            var i = t
              , o = "";
            if (n) {
                var r = n.split("#");
                i = r[0],
                o = r[1] ? "#" + r[1] : ""
            }
            var a = 750
              , s = 800
              , l = $(window).height() - 100;
            l > s && (l = s);
            var c = $(window).width() - 50;
            c > a && (c = a);
            var u = $("<div class='compendiumpopup'><iframe src=\"" + d20.compendium.compendiumBase + "compendium/" + e + "/" + i + "?sharedCompendium=" + campaign_id + o + "\" style='width: 100%; height: calc(100% - 5px);' frameborder='0'></iframe></div>");
            u.dialog({
                modal: !1,
                title: "<button class='showpopout btn pictos' style='margin-right: 15px;'>|</button>" + t.split(":")[0],
                beforeClose: function() {
                    u.dialog("destroy").remove()
                },
                width: c + 40,
                height: l,
                zIndex: 11e3
            });
            var d = function() {
                var e = u
                  , i = 900
                  , o = 750;
                i = e.width(),
                o = e.height(),
                e.dialog("close");
                var r = window.open("/editor/popout", "Popout" + (n || t), "menubar=0,location=0,toolbar=0,status=0,scrollbars=1,width=" + i + ",height=" + o);
                window.allChildWindows.push(r),
                r.onload = function() {
                    e.appendTo(r.document.getElementById("containerdiv")),
                    e.show(),
                    r.document.title = t
                }
                ,
                r.onbeforeunload = function() {
                    window.allChildWindows = _.without(window.allChildWindows, othis.childWindow),
                    r = null,
                    e.html(""),
                    e = null
                }
            };
            u.parent().on("click", ".showpopout", function() {
                d()
            })
        }
        ,
        d20.utils.playerZoneHeight = function() {
            var e = $("#playerzone .player").height() + 65;
            return $("#macrobar").is(":visible") && (e += $("#macrobar").height()),
            console.log(e),
            e
        }
        ,
        d20.utils.strip_tags = function(e, t, n) {
            n || t === undefined || (e = html_sanitize(e, function(e, t, n, i) {
                var o = e.toString();
                if (i && "a" === i.XML_TAG)
                    return o;
                var r = "https://s3.amazonaws.com/files.d20.io"
                  , a = "http://imgsrv.roll20.net"
                  , s = "https://imgsrv.roll20.net";
                return o.substring(0, r.length) === r || o.substring(0, a.length) === a || o.substring(0, s.length) === s ? o : /^https?:\/\//.test(o) ? "http://imgsrv.roll20.net/?src=" + escape(o.replace("http://", "").replace("https://", "")) : ""
            }, function(e) {
                var t = e.split(" ");
                return _.each(t, function(e, n) {
                    "userscript-" === e.substring(0, 11) || "sheet-" === e.substring(0, 6) ? t[n] = e : t[n] = "userscript-" + e
                }),
                t.join(" ")
            })),
            t = (((t || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join("");
            var i = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi
              , o = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
            return e.replace(o, "").replace(i, function(e, n) {
                return t.indexOf("<" + n.toLowerCase() + ">") > -1 ? e : ""
            })
        }
        ,
        d20.utils.htmlAllowed = "<code><span><div><label><a><br><br /><p><b><i><del><strike><u><img><video><audio><param><blockquote><mark><cite><small><ul><ol><li><hr><dl><dt><dd><sup><sub><big><pre><code><figure><figcaption><strong><em><table><tr><td><th><tbody><thead><tfoot><caption><h1><h2><h3><h4><h5><h6>",
        d20.utils.handleHTMLInput = function(e) {
            return escape(d20.utils.strip_tags(d20.utils.autoLink(e), d20.utils.htmlAllowed))
        }
        ,
        d20.utils.handleHTMLOutput = function(e) {
            return d20.utils.strip_tags(unescape(e), d20.utils.htmlAllowed)
        }
        ,
        d20.utils.showOverQuota = function() {
            var e = $("<div><p>We're sorry, but it looks like you've uploaded more than your allotted quota of storage space on Roll20. You can increase your quota by <a href='/account/supporter/?quotainapp' target='_blank'>becoming a Plus user</a> (or upgrading your Plus account if you already have one), or by <a href='http://help.roll20.net/sidebar-art-library/' target='_blank'>deleting items from your Art Library</a>.</div>");
            e.dialog({
                modal: !0,
                title: "Quota Exceeded",
                buttons: {
                    "Upgrade Account": function() {
                        window.open("/account/supporter/?quotainapp"),
                        e.dialog("destroy")
                    },
                    "No Thanks": function() {
                        e.dialog("destroy")
                    }
                },
                beforeClose: function() {
                    e.dialog("destroy")
                }
            })
        }
        ,
        d20.utils.showBadConvert = function() {
            var e = $("<div><p>There was an error trying to convert the PDF. Be sure you didn't specify an invalid page number. It's also possible the PDF is corrupted or isn't supported by our conversion software.</div>");
            e.dialog({
                modal: !0,
                title: "PDF Conversion Error",
                buttons: {
                    "Drat!": function() {
                        e.dialog("destroy")
                    }
                },
                beforeClose: function() {
                    e.dialog("destroy")
                }
            })
        }
        ,
        d20.utils.setupAvatar = function(e, t) {
            e.bind("uploadcomplete", function(e, n) {
                if (e.stopPropagation(),
                "overquota" == n)
                    return d20.utils.showOverQuota(),
                    !1;
                t.updateModel(),
                t.model.save({
                    avatar: n.base.replace("/original.", "/med.") + (-1 === n.base.indexOf("?") ? "?" + Math.floor((new Date).getTime() / 1e3) : "")
                })
            }),
            e.dndUploader({
                url: "/image_library/newupload",
                method: "POST",
                allowMultiple: !1
            }),
            e.bind("removeimage", function() {
                t.updateModel(),
                t.model.save({
                    avatar: ""
                })
            }),
            e.on("click", ".remove", function() {
                e.trigger("removeimage")
            }),
            e.droppable({
                drop: function(t, n) {
                    console.log("Dropped onto avatar!"),
                    t.originalEvent.dropHandled = !0,
                    e.trigger("uploadcomplete", [{
                        base: n.draggable.attr("data-fullsizeurl")
                    }, !0]),
                    t.preventDefault(),
                    t.stopPropagation()
                },
                hoverClass: "drop-highlight",
                tolerance: "touch",
                greedy: !0,
                accept: ".resultimage, .library-item"
            })
        }
        ,
        d20.utils.summernoteInit = function() {
            let e = $(this)
              , t = $('<div class="loader"></div>')
              , n = e.hasClass("code-view")
              , i = e.hasClass("in-app-editor")
              , o = {}
              , r = [["style", ["style"]], ["font", ["bold", "italic", "underline", "strikethrough", "clear"]], ["size", ["superscript", "subscript"]], ["para", ["ol", "ul", "paragraph"]]];
            i ? (r.push(["insert", ["link", "unlink"]]),
            r.push(["hr", ["hr"]]),
            r.push(["color", ["color"]]),
            r.push(["tableAdd", ["table", "tableHeaders", "addRowUp", "addRowDown", "addColLeft", "addColRight"]]),
            r.push(["tableDelete", ["deleteRow", "deleteCol", "deleteTable"]])) : (r.push(["insert", ["table", "link", "picture", "hr"]]),
            o = {
                onImageUpload: function(e) {
                    let n = $(this);
                    t.show();
                    for (let i = 0; i < e.length; i++) {
                        let o = e[i].name.split(".")[0]
                          , r = new FormData;
                        r.append("file", e[i]),
                        $.ajax({
                            data: r,
                            dataType: "JSON",
                            type: "POST",
                            url: "/forum/upload",
                            cache: !1,
                            contentType: !1,
                            processData: !1,
                            success: function(e) {
                                "undefined" != typeof e.error ? (alert(e.error),
                                t.hide()) : n.summernote("insertImage", e.filelink, o).done(function() {
                                    t.hide()
                                })
                            },
                            error: function() {
                                alert("There was an error uploading your image. This was probably caused by either connection issues, or the file being too large."),
                                t.hide()
                            }
                        })
                    }
                },
                onImageUploadError: function() {
                    console.error("Image Upload Error")
                }
            }),
            n && r.push(["code", ["codeview"]]);
            let a = {
                toolbar: r,
                disableDragAndDrop: i,
                callbacks: o,
                maxHeight: 300,
                dialogsInBody: i,
                onCreateLink: function(e) {
                    return "`" !== e[0] && "!" !== e[0] && "~" !== e[0] || (e = e.replace(/:/g, "&#58;")),
                    e
                }
            };
            a.popover = i ? {
                table: [],
                link: []
            } : {
                table: [["add", ["tableHeaders", "addRowDown", "addRowUp", "addColLeft", "addColRight"]], ["delete", ["deleteRow", "deleteCol", "deleteTable"]]]
            },
            e.summernote(a),
            t.hide(),
            e.siblings(".note-editor").append(t)
        }
        ,
        d20.utils.makeContentEditable = function(e, t, n) {
            let i = $(t);
            e.html("<textarea class='summernote" + (n ? " code-view" : "") + "'></textarea>"),
            e.find("textarea.summernote").each(d20.utils.summernoteInit),
            e.find("textarea.summernote").summernote("focus"),
            i.find(".lightly").each(function() {
                let e = $(this)
                  , t = $(e.html());
                e.after(t),
                e.remove()
            }),
            e.find(".note-editable").html(i.html()),
            e.find("textarea.summernote").trigger("summernote.change")
        }
        ,
        d20.utils.addCSSRules = function(e) {
            var t = document.createElement("style");
            document.getElementsByTagName("head")[0].appendChild(t),
            window.createPopup || t.appendChild(document.createTextNode(""));
            var n = document.styleSheets[document.styleSheets.length - 1];
            for (selector in e)
                if (n.insertRule)
                    try {
                        n.insertRule(selector + e[selector], n.cssRules.length)
                    } catch (i) {}
                else
                    try {
                        n.addRule(selector, e[selector])
                    } catch (i) {
                        console.log("Error addding rule!"),
                        console.log(i)
                    }
        }
        ,
        d20.utils.defaultDiceTokens = {
            d4: ["https://s3.amazonaws.com/files.d20.io/images/779542/DEYaBdP8w9B1CUSK26im0A/thumb.png?1363050056", "https://s3.amazonaws.com/files.d20.io/images/779540/P7yKde5fyGZCB1ud70UOzA/thumb.png?1363050056", "https://s3.amazonaws.com/files.d20.io/images/779539/AO4m-45bGw5yOcnZXUAn9g/thumb.png?1363050056", "https://s3.amazonaws.com/files.d20.io/images/779541/oWA-hmBAHNAijceHr8k-3A/thumb.png?1363050056"],
            d6: ["https://s3.amazonaws.com/files.d20.io/images/779533/-gS85HUaXIvmE5SjGpoH4w/thumb.png?1363049998", "https://s3.amazonaws.com/files.d20.io/images/779535/vkc_PT4z-d_ON1MvfHaCiA/thumb.png?1363049999", "https://s3.amazonaws.com/files.d20.io/images/779534/mHDadFirie4L12_ii-HYqQ/thumb.png?1363049998", "https://s3.amazonaws.com/files.d20.io/images/779531/nXqp2BhdwVsQn7cDR3cMlg/thumb.png?1363049998", "https://s3.amazonaws.com/files.d20.io/images/779532/nQD5_IXYLWN7YCjnd5zugA/thumb.png?1363049998", "https://s3.amazonaws.com/files.d20.io/images/779536/ttiwwiWE2PVkhD2d7fV3GA/thumb.png?1363049999"],
            d8: ["https://s3.amazonaws.com/files.d20.io/images/779514/GPCh5vqdSwvt_ANka3yhaw/thumb.png?1363049802", "https://s3.amazonaws.com/files.d20.io/images/779517/nnuf1Pe2Fq70BIs9FGI7mQ/thumb.png?1363049802", "https://s3.amazonaws.com/files.d20.io/images/779516/WnwuwT7yb5VM3-KiJY3GOg/thumb.png?1363049802", "https://s3.amazonaws.com/files.d20.io/images/779515/Gx21buVd6d6onPsALrGFWQ/thumb.png?1363049802", "https://s3.amazonaws.com/files.d20.io/images/779518/4LqfUGiX8sBXrX9b5gUnLw/thumb.png?1363049803", "https://s3.amazonaws.com/files.d20.io/images/779519/YOR5Wav0-3-L1fm4vD-LFQ/thumb.png?1363049803", "https://s3.amazonaws.com/files.d20.io/images/779522/dGFXXsEJz0EPA8dRpZvOzA/thumb.png?1363049804", "https://s3.amazonaws.com/files.d20.io/images/779521/QXm6GcIhK6zTdMvJZVS8Og/thumb.png?1363049804"],
            d10: ["https://s3.amazonaws.com/files.d20.io/images/779498/fjup5Fz4iV-TFKxV9z1Qtg/thumb.png?1363049717", "https://s3.amazonaws.com/files.d20.io/images/779500/ug7m7g1rII05ZFzyTrkRmw/thumb.png?1363049717", "https://s3.amazonaws.com/files.d20.io/images/779499/QNZR5kGieM1x00yQvSYYbg/thumb.png?1363049717", "https://s3.amazonaws.com/files.d20.io/images/779497/tkz2552-MqV8a_woAD8S4A/thumb.png?1363049717", "https://s3.amazonaws.com/files.d20.io/images/779501/xKjqIxXzibpcx3Lp7UH6qg/thumb.png?1363049718", "https://s3.amazonaws.com/files.d20.io/images/779502/Bpc1QATzO293LvGS3neBsQ/thumb.png?1363049718", "https://s3.amazonaws.com/files.d20.io/images/779504/Bpw24T8na0nJNFdTKZX5aw/thumb.png?1363049718", "https://s3.amazonaws.com/files.d20.io/images/779503/ukQbc7uDKfl62ng2EO6h6g/thumb.png?1363049719", "https://s3.amazonaws.com/files.d20.io/images/779505/23948Y6_O0Bc0RuIve3BbA/thumb.png?1363049719", "https://s3.amazonaws.com/files.d20.io/images/779506/VhwbFVDm2KOte5h2p97n7w/thumb.png?1363049719"],
            d12: ["https://s3.amazonaws.com/files.d20.io/images/779476/FRkaR6XvyzUuZb0ZB7ysCA/thumb.png?1363049489", "https://s3.amazonaws.com/files.d20.io/images/779474/UyTKDHxf-fU1zC3w6udl0w/thumb.png?1363049489", "https://s3.amazonaws.com/files.d20.io/images/779475/kUK2UmBaD2No00Gp4Q_OCQ/thumb.png?1363049489", "https://s3.amazonaws.com/files.d20.io/images/779477/OVnJDjAkMPLk29hjpFjUvw/thumb.png?1363049489", "https://s3.amazonaws.com/files.d20.io/images/779478/2la9taZk_vqdKItYZ6JEfA/thumb.png?1363049490", "https://s3.amazonaws.com/files.d20.io/images/779479/fa8f9OVIBt79oETji8C8Lg/thumb.png?1363049490", "https://s3.amazonaws.com/files.d20.io/images/779480/CTuw9Yiijq24ra3G9YMuPA/thumb.png?1363049490", "https://s3.amazonaws.com/files.d20.io/images/779481/d4onnc7NOAbNG5JbiL9mbg/thumb.png?1363049491", "https://s3.amazonaws.com/files.d20.io/images/779482/Oy2dTkB3-NlxiMsTRj78nw/thumb.png?1363049491", "https://s3.amazonaws.com/files.d20.io/images/779483/mO_KU8nlO7GDQKc2J_aNeg/thumb.png?1363049491", "https://s3.amazonaws.com/files.d20.io/images/779484/3MYG5dYJhiKXsRZtSUpHZw/thumb.png?1363049491", "https://s3.amazonaws.com/files.d20.io/images/779485/VxA3umVDmYrH5A_VBecUIQ/thumb.png?1363049492"],
            d20: ["https://s3.amazonaws.com/files.d20.io/images/779445/OfLXGnbkNr2qKg1Qqk4cPg/thumb.png?1363049314", "https://s3.amazonaws.com/files.d20.io/images/779447/br4TdShbuMIZ-D-lyeXsKA/thumb.png?1363049315", "https://s3.amazonaws.com/files.d20.io/images/779454/2ARsJLoP4tExbCWrRaaxQg/thumb.png?1363049318", "https://s3.amazonaws.com/files.d20.io/images/779444/3pryVOKRxMCBisEHpH3LWg/thumb.png?1363049314", "https://s3.amazonaws.com/files.d20.io/images/779446/Yk4sSF3eWfnpeJd4DQpV2A/thumb.png?1363049314", "https://s3.amazonaws.com/files.d20.io/images/779450/tdvjVviFHhM_KxjFRQomhA/thumb.png?1363049316", "https://s3.amazonaws.com/files.d20.io/images/779456/twbHlPq0CFjFCpAyS59CTQ/thumb.png?1363049319", "https://s3.amazonaws.com/files.d20.io/images/779449/PPHDirZfEowhjBHxQdxJiw/thumb.png?1363049315", "https://s3.amazonaws.com/files.d20.io/images/779448/1SpNrrunpHwrNbsKcqpCzQ/thumb.png?1363049315", "https://s3.amazonaws.com/files.d20.io/images/779458/VsueBYqaDlvp9BjlXl9wMQ/thumb.png?1363049320", "https://s3.amazonaws.com/files.d20.io/images/779451/nWqhH9iMimUAJh_9jOFEog/thumb.png?1363049316", "https://s3.amazonaws.com/files.d20.io/images/779452/TvksvU6AZm2wmpEQ2HkBlQ/thumb.png?1363049317", "https://s3.amazonaws.com/files.d20.io/images/779459/L4pwmqIbQk0TfaCMExrYxQ/thumb.png?1363049320", "https://s3.amazonaws.com/files.d20.io/images/779453/MDmeMWOQ_lARfvFoT1n3KQ/thumb.png?1363049317", "https://s3.amazonaws.com/files.d20.io/images/779460/my8VEGyYcJIHZN2uXP6QXQ/thumb.png?1363049321", "https://s3.amazonaws.com/files.d20.io/images/779455/nuz5AefdQSB6H4mvUXoqhw/thumb.png?1363049318", "https://s3.amazonaws.com/files.d20.io/images/779457/kQBunq7iXGmHNqZQCa5MCA/thumb.png?1363049319", "https://s3.amazonaws.com/files.d20.io/images/779463/6n_z7Gwd7eacm3-HC-f-mg/thumb.png?1363049322", "https://s3.amazonaws.com/files.d20.io/images/779462/aVz3qCe2QM2nWhn3BoT9rg/thumb.png?1363049321", "https://s3.amazonaws.com/files.d20.io/images/779461/4PuFJYddJWJjj4uL5S3mxQ/thumb.png?1363049321"]
        },
        d20.utils.defaultDiceTokens)
            d20.utils.defaultDiceTokens[t] = _.map(d20.utils.defaultDiceTokens[t], function(e) {
                return escape(e + "")
            });
        d20.utils.hexToRgb = function(e) {
            return e[4] || (e = e.replace(/./g, "$&$&").slice(1)),
            ["0x" + e[1] + e[2] | 0, "0x" + e[3] + e[4] | 0, "0x" + e[5] + e[6] | 0]
        }
        ;
        var n = {}
          , i = function() {
            console.log("Do refresh link cache!");
            var e = {};
            d20.Campaign.characters.each(function(t) {
                var n = t.get("inplayerjournals").split(",");
                (window.is_gm || -1 !== _.indexOf(n, "all") || window.currentPlayer && -1 !== _.indexOf(n, window.currentPlayer.id)) && (e[t.get("name").toLowerCase()] = {
                    type: "character",
                    id: t.id
                })
            }),
            d20.Campaign.handouts.each(function(t) {
                var n = t.get("inplayerjournals").split(",");
                (window.is_gm || -1 !== _.indexOf(n, "all") || window.currentPlayer && -1 !== _.indexOf(n, window.currentPlayer.id)) && (e[t.get("name").toLowerCase()] = {
                    type: "handout",
                    id: t.id
                })
            }),
            n = e
        };
        d20.utils.refreshLinkCache = _.debounce(i, 100),
        d20.utils.autoLink = function(e) {
            var t = /\[[^\]]+\]/g;
            return e = e.replace(t, function(e) {
                e = e.substring(1, e.length - 1);
                var t = n[e.toLowerCase()];
                return t ? "<a href='http://journal.roll20.net/" + t.type + "/" + t.id + "'>" + e + "</a>" : "[" + e + "]"
            })
        }
        ;
        var o = $("#textchat-notifier")
          , r = !1;
        d20.utils.textchatNotify = function(e, t) {
            !0 === r && !0 !== t || (!1 === e ? o.hide() : o.show().text(e),
            !0 === t && (r = !1 !== e))
        }
        ,
        d20.utils.getParentsUntil = function(e, t, n) {
            var i = [];
            if (n)
                var o = n.charAt(0);
            for (; e && e !== document && (!t || t !== e); e = e.parentNode)
                n ? ("." === o && e.classList.contains(n.substr(1)) && i.push(e),
                "#" === o && e.id === n.substr(1) && i.push(e),
                "[" === o && e.hasAttribute(n.substr(1, n.length - 1)) && i.push(e),
                e.tagName.toLowerCase() === n && i.push(e)) : i.push(e);
            return i
        }
    }(),
    window.ucfirst = function(e) {
        return e.charAt(0).toUpperCase() + e.slice(1)
    }
    ,
    function(e, t, n) {
        function i(t, n) {
            this.element = t,
            this.options = e.extend({}, r, n),
            this._defaults = r,
            this._name = o,
            this.init()
        }
        var o = "addClear"
          , r = {
            closeSymbol: "&#10006;",
            color: "#CCC",
            top: -1,
            right: 8,
            returnFocus: !0,
            showOnLoad: !1,
            onClear: null,
            hideOnBlur: !1,
            tabbable: !0
        };
        i.prototype = {
            init: function() {
                var t, i = e(this.element), o = this, r = this.options;
                i.wrap("<span style='position:relative;' class='add-clear-span'></span>");
                var a = r.tabbable ? "" : " tabindex='-1'";
                t = e("<a href='#clear' style='display: none;'" + a + ">" + r.closeSymbol + "</a>"),
                i.after(t),
                i.next().css({
                    color: r.color,
                    "text-decoration": "none",
                    display: "none",
                    "line-height": 1,
                    overflow: "hidden",
                    position: "absolute",
                    right: r.right,
                    top: r.top
                }, this),
                i.val().length >= 1 && !0 === r.showOnLoad && t.css({
                    display: "block"
                }),
                i.focus(function() {
                    e(this).val().length >= 1 && t.css({
                        display: "block"
                    })
                }),
                i.blur(function(e) {
                    r.hideOnBlur && setTimeout(function() {
                        (e.relatedTarget || e.explicitOriginalTarget || n.activeElement) !== t[0] && t.css({
                            display: "none"
                        })
                    }, 0)
                });
                var s = function() {
                    e(this).val().length >= 1 ? t.css({
                        display: "block"
                    }) : t.css({
                        display: "none"
                    })
                }
                  , l = function() {
                    i.off("keyup", s),
                    i.off("cut", s),
                    l = s,
                    s.call(this)
                };
                i.on("keyup", s),
                i.on("cut", function() {
                    var e = this;
                    setTimeout(function() {
                        s.call(e)
                    }, 0)
                }),
                i.on("input", function() {
                    l.call(this)
                }),
                r.hideOnBlur && t.blur(function() {
                    t.css({
                        display: "none"
                    })
                }),
                t.click(function(t) {
                    var n = e(o.element);
                    n.val("").trigger("keyup"),
                    e(this).css({
                        display: "none"
                    }),
                    !0 === r.returnFocus && n.focus(),
                    r.onClear && r.onClear(n),
                    t.preventDefault()
                })
            }
        },
        e.fn[o] = function(t) {
            return this.each(function() {
                e.data(this, "plugin_" + o) || e.data(this, "plugin_" + o, new i(this,t))
            })
        }
    }(jQuery, window, document),
    d20.models = {},
    d20.undo = {
        stack: [],
        currentGroup: {}
    },
    $(function() {
        function e(e) {
            return (e - (e %= 60)) / 60 + (9 < e ? ":" : ":0") + e
        }
        function t(e, t) {
            return e = Math.ceil(e),
            t = Math.floor(t),
            Math.floor(Math.random() * (t - e + 1)) + e
        }
        var n = function(e, t) {
            return !(t.left > e.right || t.right < e.left || t.top > e.bottom || t.bottom < e.top)
        }
          , i = function() {
            if (this.view._animsinprogress[this.animkey] = !1,
            !this.view._animsinprogress.top && !this.view._animsinprogress.left) {
                var e = this.view.model.get("lastmove").split(",");
                if (e.length > 2 * this.step - 1)
                    this.view._animsinprogress.top = !0,
                    this.view._animsinprogress.left = !0,
                    this.view.graphic.animate("left", e.length > 2 * this.step ? e[2 * this.step] : this.view.model.get("left"), {
                        duration: 350,
                        onChange: d20.engine.redrawScreenNextTick,
                        onComplete: _.bind(i, {
                            view: this.view,
                            animkey: "left",
                            step: this.step + 1
                        })
                    }),
                    this.view.graphic.animate("top", e.length > 2 * this.step ? e[2 * this.step + 1] : this.view.model.get("top"), {
                        duration: 350,
                        onChange: d20.engine.redrawScreenNextTick,
                        onComplete: _.bind(i, {
                            view: this.view,
                            animkey: "top",
                            step: this.step + 1
                        })
                    });
                else {
                    "image" != this.view.model.get("type") || "objects" != this.view.model.get("layer") && "gmlayer" != this.view.model.get("layer") || !this.view.graphic.active || d20.token_editor.showRadialMenu(this.view.graphic, !0, !0);
                    var t = this;
                    _.each(d20.engine.showLastPaths, function(e) {
                        "modified" === e.type && e.obj === t.view.graphic && (e.fadestart = +new Date)
                    })
                }
            }
        }
          , o = function(e, t, n, o) {
            if (e.graphic && !e.model.collection.page != d20.Campaign.activePage()) {
                var r = {}
                  , a = o && o.changes || {};
                a.width && "image" == e.model.get("type") && (n.scaleX = 1),
                a.height && "image" == e.model.get("type") && (n.scaleY = 1);
                for (var s = 0; s < t.length; s++) {
                    var l = t[s]
                      , c = l;
                    o && o.changes[l] && e.graphic.get(l) != n[c] && (r[l] = n[c],
                    delete n[l],
                    delete a[l])
                }
                if (!a.left && !a.top || "image" != e.model.get("type") || "objects" != e.model.get("layer") && "gmlayer" != e.model.get("layer") || !e.graphic.active || d20.token_editor.showRadialMenu(e.graphic, !0, !0),
                e.graphic.set(n),
                e.graphic.setCoords(),
                r.top || r.left) {
                    var u = e.model.get("lastmove").split(",");
                    u.length > 2 && (r.left = u[0],
                    r.top = u[1],
                    d20.engine.showLastPaths.push({
                        obj: e.graphic,
                        type: "modified"
                    }))
                }
                _.each(r, function(t, n) {
                    e._animsinprogress === undefined && (e._animsinprogress = {}),
                    e._animsinprogress[n] = !0,
                    e.graphic.animate(n, t, {
                        duration: 350,
                        onChange: d20.engine.redrawScreenNextTick,
                        onComplete: ("top" == n || "left" == n) && _.bind(i, {
                            view: e,
                            animkey: n,
                            step: u && u.length > 2 ? 1 : 2
                        })
                    })
                }),
                d20.engine.redrawScreenNextTick()
            }
        }
          , r = Backbone.Model.extend({
            defaults: {
                top: 0,
                left: 0,
                width: 0,
                height: 0,
                z_index: 0,
                text: "",
                font_size: 16,
                rotation: 0,
                color: "#000000",
                page_id: 0,
                type: "text",
                font_family: "unset",
                layer: "",
                controlledby: "",
                groupwith: ""
            },
            initialize: function() {
                if (_.bindAll(this, "toJSON"),
                this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                ("" === this.get("layer") && this.set({
                    layer: window.currentEditingLayer,
                    controlledby: window.currentPlayer.id
                }, {
                    silent: !0
                }),
                "unset" == this.get("font_family")) && ($("#font-family").length > 0 ? this.set({
                    font_family: $("#font-family").val()
                }) : this.set({
                    font_family: "Arial"
                }));
                this.view = new s({
                    model: this
                }),
                this.allowDelays = {
                    update: !0,
                    "delete": !0
                }
            },
            isNew: function() {
                return !this.persisted
            },
            toJSON: function() {
                var e = _.clone(this.attributes);
                return 0 == e.page_id && this.collection && (e.page_id = this.collection.page.id),
                e
            },
            currentPlayerControls: function() {
                if (window.is_gm)
                    return !0;
                var e = this.get("controlledby").split(",");
                return -1 != _.indexOf(e, window.currentPlayer.id) || -1 != _.indexOf(e, "all")
            },
            addToGroup: function(e) {
                var t;
                _.isArray(e) || (e = [e]),
                e = _.without(e, this.id);
                var n = this.get("groupwith");
                t = "" == n ? [] : n.split(","),
                this.save({
                    groupwith: _.union(t, e).join(",")
                })
            },
            clearGroup: function() {
                this.save({
                    groupwith: ""
                })
            },
            selectGroup: function() {
                var e = this
                  , t = this.get("groupwith");
                if ("" != t) {
                    var n = t.split(",");
                    _.each(n, function(t) {
                        var n = e.collection.page.thepaths.get(t);
                        n || (n = e.collection.page.thegraphics.get(t)),
                        n || (n = e.collection.page.thetexts.get(t)),
                        n && n.view && n.view.graphic && d20.engine.selectAdd(n.view.graphic)
                    })
                }
            }
        })
          , a = Backbone.Collection.extend({
            model: r
        })
          , s = Backbone.View.extend({
            initialize: function() {
                _.bindAll(this, "modified", "deleted", "bindToGraphic");
                var e = this;
                if (this.model.get("existing_shape"))
                    this.graphic = this.model.get("existing_shape"),
                    this.graphic.model = this.model,
                    this.graphic.hasRotatingPoint = !0,
                    this.graphic.lineHeight = 1.6,
                    this.model.unset("existing_shape"),
                    this.trackShapeIfNecessary();
                else {
                    var t = new fabric.Text(this.model.get("text"),{
                        fontFamily: this.model.get("font-family")
                    });
                    this.graphic = t,
                    this.graphic.model = this.model,
                    this.graphic.hasRotatingPoint = !0,
                    this.graphic.lineHeight = 1.6,
                    this.model.collection.page.id == d20.Campaign.activePage().id && (this.syncToEditor(),
                    d20.engine.canvas.add(t),
                    this.trackShapeIfNecessary())
                }
                this.graphic.textAlign = "left",
                this.model.bind("change", function(t, n) {
                    t.collection.page.id == d20.Campaign.activePage().id && e.syncToEditor(n)
                }),
                this.model.bind("remote_update", function() {
                    var t = d20.engine.canvas.getActiveGroup();
                    t && t.contains(e.graphic) && d20.engine.canvas.deactivateAllWithDispatch()
                }),
                this.model.bind("change:layer", function(e) {
                    if ("" != e.previous("layer")) {
                        this.view.trackShapeIfNecessary(),
                        d20.Campaign.activePage().debounced_reorderByZ();
                        var t = this;
                        _.defer(function() {
                            -1 !== _.indexOf(d20.engine.selected(), t.view.graphic) && d20.engine.unselect()
                        })
                    }
                }),
                this.model.bind("remove", function() {
                    this.collection.page.id === d20.Campaign.activePage().id && (d20.engine.canvas.remove(e.graphic),
                    d20.engine.redrawScreenNextTick()),
                    !this.collection.massdelete && window.is_gm && e.deleted(!0)
                }),
                this.debounced_modified = _.debounce(this.modified, 1e3)
            },
            syncToEditor: function(e) {
                var t, n;
                this.model.get("top") ? (t = this.model.get("top"),
                n = this.model.get("left")) : (t = this.model.get("y") + Math.floor(this.model.get("height") / 2),
                n = this.model.get("x") + Math.floor(this.model.get("width") / 2));
                var i = {
                    fontSize: parseFloat(this.model.get("font_size")),
                    fill: this.model.get("color"),
                    top: t,
                    left: n,
                    fontFamily: this.model.get("font_family"),
                    text: this.model.get("text"),
                    angle: this.model.get("rotation"),
                    textAlign: "left"
                };
                o(this, [], i, e)
            },
            modified: function(e, t) {
                if (!e) {
                    var n = this.model.toJSON();
                    d20.undo.newAction(n.id, function(e) {
                        var t = d20.Campaign.pages.get(n.page_id).thetexts.get(e);
                        t && (delete n.id,
                        delete n.page_id,
                        delete n.containingButtonId,
                        t.save(n),
                        t.view.syncToEditor(),
                        t.view.modified(!0))
                    })
                }
                newvals = {
                    top: this.graphic.get("top"),
                    left: this.graphic.get("left"),
                    width: this.graphic.get("width"),
                    height: this.graphic.get("height"),
                    font_size: parseInt(this.graphic.get("fontSize"), 10),
                    rotation: this.graphic.get("angle"),
                    color: this.graphic.get("fill"),
                    text: this.graphic.get("text"),
                    font_family: this.graphic.get("fontFamily").replace(/'/g, "")
                },
                t || this.model.save(newvals)
            },
            deleted: function(e) {
                var t = this.model.toJSON();
                d20.undo.newAction(t.id, function() {
                    var e = d20.Campaign.pages.get(t.page_id)
                      , n = t.id;
                    delete t.containingButtonId,
                    delete t.page_id,
                    delete t.id;
                    var i = e.addText({
                        text: t.text,
                        top: t.top,
                        left: t.left,
                        fontSize: t.font_size,
                        fontFamily: t.font_family,
                        color: t.color
                    });
                    i.save({
                        color: t.color,
                        text: t.text,
                        font_size: t.font_size,
                        font_family: t.font_family
                    }),
                    i.view.syncToEditor(),
                    i.view.modified(!0),
                    d20.undo.updateStack(n, i.id)
                }),
                !0 !== e && this.model.destroy()
            },
            trackShapeIfNecessary: function() {
                if (this.graphic) {
                    var e = this.model.get("controlledby").split(",");
                    window.currentPlayer && this.model.get("layer") == window.currentEditingLayer && (window.is_gm || -1 !== _.indexOf(e, "all") || -1 !== _.indexOf(e, window.currentPlayer.id)) ? this.graphic.selectable = !0 : this.graphic.selectable = !1
                }
            },
            getCurrentZIndex: function() {
                return d20.engine.canvas.getObjects().indexOf(this.graphic)
            }
        })
          , l = Backbone.Model.extend({
            defaults: {
                path: "",
                z_index: 0,
                fill: "transparent",
                stroke: "#000000",
                page_id: 0,
                type: "path",
                rotation: 0,
                layer: "",
                stroke_width: 5,
                controlledby: "",
                groupwith: "",
                width: 0,
                height: 0,
                top: 0,
                left: 0,
                scaleX: 1,
                scaleY: 1
            },
            initialize: function() {
                if (_.bindAll(this, "toJSON"),
                this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                "" === this.get("layer") && this.set({
                    layer: window.currentEditingLayer,
                    controlledby: window.currentPlayer.id
                }, {
                    silent: !0
                }),
                this.checkForUpgrade(),
                this.view = new u({
                    model: this
                }),
                this.allowDelays = {
                    update: !0,
                    "delete": !0
                }
            },
            isNew: function() {
                return !this.persisted
            },
            toJSON: function() {
                var e = _.clone(this.attributes);
                return 0 == e.page_id && this.collection && (e.page_id = this.collection.page.id),
                e
            },
            currentPlayerControls: function() {
                if (window.is_gm)
                    return !0;
                var e = this.get("controlledby").split(",");
                return -1 != _.indexOf(e, window.currentPlayer.id) || -1 != _.indexOf(e, "all")
            },
            addToGroup: function(e) {
                var t;
                _.isArray(e) || (e = [e]),
                e = _.without(e, this.id);
                var n = this.get("groupwith");
                t = "" == n ? [] : n.split(","),
                this.save({
                    groupwith: _.union(t, e).join(",")
                })
            },
            clearGroup: function() {
                this.save({
                    groupwith: ""
                })
            },
            selectGroup: function() {
                var e = this
                  , t = this.get("groupwith");
                if ("" != t) {
                    var n = t.split(",");
                    _.each(n, function(t) {
                        var n = e.collection.page.thepaths.get(t);
                        n || (n = e.collection.page.thegraphics.get(t)),
                        n || (n = e.collection.page.thetexts.get(t)),
                        n && n.view && n.view.graphic && d20.engine.selectAdd(n.view.graphic)
                    })
                }
            },
            checkForUpgrade: function() {
                if ("[" != this.get("path")[0]) {
                    console.log("Old style path!");
                    var e = d20.engine.convertAbsolutePathStringtoFabric(this.get("path"));
                    this.set(e)
                }
            }
        })
          , c = Backbone.Collection.extend({
            model: l
        })
          , u = Backbone.View.extend({
            initialize: function() {
                _.bindAll(this, "modified", "deleted", "trackShapeIfNecessary", "bindToGraphic");
                var e = this;
                if (this.model.get("existing_shape"))
                    this.graphic = this.model.get("existing_shape"),
                    this.graphic.model = this.model,
                    this.graphic.hasRotatingPoint = !0,
                    this.graphic.perPixelTargetFind = !0,
                    this.trackShapeIfNecessary(),
                    this.model.unset("existing_shape");
                else {
                    var t = new fabric.Path(JSON.parse(this.model.get("path")));
                    e.graphic = t,
                    e.graphic.model = e.model,
                    e.graphic.hasRotatingPoint = !0,
                    e.graphic.perPixelTargetFind = !0,
                    e.model.collection.page.id == d20.Campaign.activePage().id && (e.syncToEditor(),
                    d20.engine.canvas.add(t),
                    e.trackShapeIfNecessary(),
                    d20.Campaign.activePage().debounced_reorderByZ())
                }
                this.model.bind("change", function(t, n) {
                    t.collection.page.id == d20.Campaign.activePage().id && e.syncToEditor(n)
                }),
                this.model.bind("remote_update", function() {
                    var t = d20.engine.canvas.getActiveGroup();
                    t && t.contains(e.graphic) && d20.engine.canvas.deactivateAllWithDispatch()
                }),
                this.model.bind("change:layer", function(e) {
                    if ("" != e.previous("layer")) {
                        this.view.trackShapeIfNecessary(),
                        d20.Campaign.activePage().debounced_reorderByZ();
                        var t = this;
                        _.defer(function() {
                            -1 !== _.indexOf(d20.engine.selected(), t.view.graphic) && d20.engine.unselect()
                        })
                    }
                }),
                this.model.bind("remove", function() {
                    this.collection.page.id === d20.Campaign.activePage().id && (d20.engine.canvas.remove(e.graphic),
                    d20.engine.redrawScreenNextTick()),
                    !this.collection.massdelete && window.is_gm && e.deleted(!0)
                }),
                this.debounced_modified = _.debounce(this.modified, 1e3)
            },
            trackShapeIfNecessary: function() {
                if (this.graphic) {
                    var e = this.model.get("controlledby").split(",");
                    window.currentPlayer && this.model.get("layer") == window.currentEditingLayer && (window.is_gm || -1 !== _.indexOf(e, "all") || -1 !== _.indexOf(e, window.currentPlayer.id)) ? this.graphic.selectable = !0 : this.graphic.selectable = !1,
                    this.graphic.hasRotatingPoint = "walls" != this.model.get("layer")
                }
            },
            syncToEditor: function(e) {
                var t = {
                    strokeWidth: this.model.get("stroke_width"),
                    stroke: this.model.get("stroke"),
                    angle: this.model.get("rotation"),
                    width: this.model.get("width"),
                    height: this.model.get("height"),
                    fill: this.model.get("fill"),
                    top: this.model.get("top"),
                    left: this.model.get("left"),
                    scaleX: this.model.get("scaleX"),
                    scaleY: this.model.get("scaleY")
                };
                o(this, [], t, e)
            },
            modified: function(e, t) {
                if (!e) {
                    var n = this.model.toJSON();
                    d20.undo.newAction(n.id, function(e) {
                        var t = d20.Campaign.pages.get(n.page_id).thepaths.get(e);
                        t && (delete n.id,
                        delete n.page_id,
                        t.save(n))
                    })
                }
                newvals = {
                    fill: this.graphic.get("fill"),
                    path: JSON.stringify(this.graphic.get("path")),
                    stroke: this.graphic.get("stroke"),
                    rotation: this.graphic.get("angle"),
                    stroke_width: this.graphic.get("strokeWidth"),
                    left: this.graphic.get("left"),
                    top: this.graphic.get("top"),
                    width: this.graphic.get("width"),
                    height: this.graphic.get("height"),
                    scaleX: this.graphic.get("scaleX"),
                    scaleY: this.graphic.get("scaleY")
                },
                t || this.model.save(newvals)
            },
            deleted: function(e) {
                var t = this.model.toJSON();
                t.path = this.graphic.get("path"),
                d20.undo.newAction(t.id, function() {
                    var e = d20.Campaign.pages.get(t.page_id)
                      , n = t.id;
                    delete t.page_id,
                    delete t.id;
                    var i = e.addPath({
                        stroke: t.stroke,
                        fill: t.fill,
                        stroke_width: t.stroke_width,
                        path: t.path,
                        top: t.top,
                        left: t.left,
                        scaleX: t.scaleX,
                        scaleY: t.scaleY,
                        width: t.width,
                        height: t.height
                    });
                    d20.undo.updateStack(n, i.id)
                }),
                !0 !== e && this.model.destroy()
            },
            getCurrentZIndex: function() {
                return d20.engine.canvas.getObjects().indexOf(this.graphic)
            }
        })
          , d = d20.models.Graphic = Backbone.Model.extend({
            defaults: {
                left: 0,
                top: 0,
                width: 0,
                height: 0,
                z_index: 0,
                imgsrc: "",
                rotation: 0,
                type: "image",
                page_id: 0,
                layer: "",
                isdrawing: !1,
                locked: !1,
                cardid: "",
                flipv: !1,
                fliph: !1,
                anim_loop: !0,
                anim_paused_at: -1,
                anim_autoplay: !0,
                name: "",
                gmnotes: "",
                controlledby: "",
                represents: "",
                bar1_value: "",
                bar1_max: "",
                bar1_num_permission: "editors",
                bar1_link: "",
                bar2_value: "",
                bar2_max: "",
                bar2_num_permission: "editors",
                bar2_link: "",
                bar3_value: "",
                bar3_max: "",
                bar3_num_permission: "editors",
                bar3_link: "",
                bar_location: "above",
                compact_bar: "standard",
                aura1_radius: "",
                aura1_color: "#FFFF99",
                aura1_square: !1,
                aura2_radius: "",
                aura2_color: "#59E594",
                aura2_square: !1,
                tint_color: "transparent",
                status_dead: !1,
                statusmarkers: "",
                showname: !1,
                showplayers_name: !1,
                showplayers_bar1: !1,
                showplayers_bar2: !1,
                showplayers_bar3: !1,
                showplayers_aura1: !1,
                showplayers_aura2: !1,
                playersedit_name: !0,
                playersedit_bar1: !0,
                playersedit_bar2: !0,
                playersedit_bar3: !0,
                playersedit_aura1: !0,
                playersedit_aura2: !0,
                light_radius: "",
                light_dimradius: "",
                light_otherplayers: !1,
                light_hassight: !1,
                light_angle: "",
                light_losangle: "",
                light_multiplier: 1,
                adv_fow_view_distance: "",
                groupwith: "",
                sides: "",
                currentSide: 0,
                lastmove: ""
            },
            initialize: function() {
                if (_.bindAll(this, "toJSON", "mapRepresentsToPlayer", "toggleSettings", "clearMarkers", "findCorrespondingCharacter"),
                this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                if (this.findCorrespondingCharacter(),
                "" === this.get("layer")) {
                    var t = window.currentPlayer.id;
                    "" !== this.get("cardid") ? t = "all" : window.is_gm && (t = ""),
                    this.set({
                        layer: window.currentEditingLayer,
                        controlledby: t
                    }, {
                        silent: !0
                    })
                }
                this.view = new p({
                    model: this
                });
                var n = this;
                this.bind("showtokeneditor", function() {
                    n.tokensettingsview || (n.tokensettingsview = new y({
                        model: n
                    })),
                    n.tokensettingsview.showDialog()
                }),
                this.bind("change:controlledby", function() {
                    window.is_gm || this.view.trackShapeIfNecessary()
                }),
                this.bind("change:represents", function() {
                    this.findCorrespondingCharacter(),
                    this.view.trackShapeIfNecessary()
                }),
                this.bind("change:imgsrc", e=>{
                    if (e.get("page_id") === d20.Campaign.activePage().get("id") && e.view.graphic) {
                        d20.engine.canvas.remove(e.view.graphic);
                        const t = ["anim_loop", "anim_paused_at", "anim_autoplay"]
                          , n = {};
                        for (const i of t)
                            n[i] = e.defaults[i];
                        e.save(n),
                        e.view.fullyActive = !1,
                        e.view.fullyActivateView()
                    }
                }
                );
                let i = _.map(["top", "left", "width", "height", "rotation", "type", "pageid", "layer", "controlledby", "represents", "light_radius", "light_dimradius", "light_hassight", "light_multiplier", "adv_fow_view_distance"], e=>"change:" + e).join(" ");
                this.on(i, d20.engine.advanced_fog.updateFromToken);
                for (let e = 1; e <= 3; ++e) {
                    const t = "change:" + `bar${e}_link`;
                    this.on(t, (t,n)=>t.pullLinkedBar(e, n)),
                    this.trigger(t, this)
                }
            },
            pullLinkedBar: function(e) {
                let t, n;
                if (this.character) {
                    {
                        const i = this.character.attribs.get(this.get(`bar${e}_link`));
                        if (!i)
                            return;
                        t = i.get("current"),
                        n = i.get("max")
                    }
                    this.save({
                        [`bar${e}_value`]: t,
                        [`bar${e}_max`]: n
                    })
                }
            },
            isNew: function() {
                return !this.persisted
            },
            toJSON: function() {
                var e = _.clone(this.attributes);
                return 0 == e.page_id && this.collection && (e.page_id = this.collection.page.id),
                e
            },
            toggleSettings: function(e) {
                var t = {};
                this.get(e) ? t[e] = !1 : t[e] = !0,
                this.save(t)
            },
            clearMarkers: function() {
                this.save({
                    statusmarkers: ""
                })
            },
            currentPlayerControls: function() {
                if (window.is_gm)
                    return !0;
                var e = this.getOverriddenValue("controlledby").split(",");
                return -1 != _.indexOf(e, window.currentPlayer.id) || -1 != _.indexOf(e, "all")
            },
            addToGroup: function(e) {
                var t;
                _.isArray(e) || (e = [e]),
                e = _.without(e, this.id);
                var n = this.get("groupwith");
                t = "" == n ? [] : n.split(","),
                this.save({
                    groupwith: _.union(t, e).join(",")
                })
            },
            clearGroup: function() {
                this.save({
                    groupwith: ""
                })
            },
            selectGroup: function() {
                var e = this
                  , t = this.get("groupwith");
                if ("" != t) {
                    var n = t.split(",");
                    _.each(n, function(t) {
                        var n = e.collection.page.thepaths.get(t);
                        n || (n = e.collection.page.thegraphics.get(t)),
                        n || (n = e.collection.page.thetexts.get(t)),
                        n && n.view && n.view.graphic && d20.engine.selectAdd(n.view.graphic)
                    })
                }
            },
            findCorrespondingCharacter: function() {
                var e = this;
                if (this.character && (this.character.off("change:represents"),
                this.character.attribs.off("change")),
                this.character = !1,
                "" !== this.get("represents")) {
                    var t = d20.Campaign.characters.get(this.get("represents"));
                    t && (this.character = t,
                    this.character.on("change:controlledby", function() {
                        console.log("char cb changed"),
                        e.view.trackShapeIfNecessary()
                    }),
                    this.character.attribs.on("change", function() {
                        if ("undefined" != typeof e.collection && e.collection.page.id === d20.Campaign.activePage().id) {
                            var t = d20.engine.selected();
                            "image" === e.get("type") && 1 === t.length && t[0] === e.view.graphic && d20.token_editor.showRadialMenu(e.view.graphic, !0, !0)
                        }
                    }))
                }
            },
            getOverriddenValue: function(e) {
                var t = this.get(e);
                if (this.character)
                    if (-1 !== e.indexOf("bar")) {
                        var n = e.split("_")[0]
                          , i = this.get(n + "_link");
                        if ("" !== i) {
                            "sheetattr_" === i.substring(0, 10) && (i = i.substring(10, i.length));
                            try {
                                t = this.character.autoCalcFormula("@{" + i + (-1 !== e.indexOf("_max") ? "|max" : "") + "}")
                            } catch (o) {
                                t = ""
                            }
                        }
                    } else
                        "controlledby" == e && (t = this.character.get("controlledby"));
                return t
            },
            refreshTokenLinks: function(e) {
                if (this.character) {
                    var t = this
                      , n = function(e) {
                        if ("" !== t.get("bar" + e + "_link"))
                            if ("sheetattr_" === t.get("bar" + e + "_link").substring(0, 10))
                                t.character.updateTokensByName(t.get("bar" + e + "_link").substring(10, t.get("bar" + e + "_link").length));
                            else {
                                var n = t.character.attribs.get(t.get("bar" + e + "_link"));
                                n && t.character.updateTokensByName(n.get("name"), n.id)
                            }
                    };
                    e !== undefined ? n(e) : (n(1),
                    n(2),
                    n(3))
                }
            },
            controlledByPlayer: function(e) {
                if ("objects" !== this.get("layer"))
                    return !1;
                if (e === window.currentPlayer.get("id") && window.is_gm && d20.engine.lightOnlySelected) {
                    const e = this.get("id");
                    return _.some(d20.engine.lightOnlySelected, t=>t.model.get("id") === e)
                }
                const t = this.get("controlledby").split(",")
                  , n = d20.Campaign.characters.get(this.get("represents"));
                return n && t.push(...n.get("controlledby").split(",")),
                _.some(t, t=>t === e || "all" === t)
            }
        })
          , h = d20.models.GraphicCollection = Backbone.Collection.extend({
            model: d,
            getPlayerControlledGraphics: function(e) {
                return this.filter(t=>t.controlledByPlayer(e))
            },
            getGraphicsExcludingController: function(e) {
                const t = new h;
                return t.add(this.filter(t=>!t.controlledByPlayer(e))),
                t
            }
        })
          , p = Backbone.View.extend({
            initialize: function() {
                _.bindAll(this, "modified", "deleted", "showcontextmenu", "ischanging", "trackShapeIfNecessary", "bindToGraphic");
                var e = this;
                this.fullyActive = !1,
                _.defer(function() {
                    e.upgradeMarkers()
                }),
                this.debounced_modified = _.debounce(this.modified, 500),
                d20.Campaign.gameFullyLoaded && this.model.collection.page.id === d20.Campaign.activePage().id && this.fullyActivateView()
            },
            fullyActivateView: function() {
                var e = this
                  , t = this.model.get("type");
                if (!e.fullyActive) {
                    if (e.fullyActive = !0,
                    "image" == t) {
                        let t = this.model.get("imgsrc");
                        const n = d20.utils.isVideo(t);
                        -1 === t.indexOf("files.d20.io") && -1 === t.indexOf("files.staging.d20.io") || (t = t.replace(/(?:med|max|original)\./, "thumb.")),
                        n && (t = t.replace(/[\w\-]+\.webm/gi, "sample.png")),
                        fabric.Image.fromURL(t, function(t) {
                            e.graphic = t,
                            e.graphic.model = e.model,
                            t.hasRotatingPoint = !0,
                            e.model.collection.page.id == d20.Campaign.activePage().id && (e.syncToEditor(),
                            d20.engine.canvas.add(t),
                            e.trackShapeIfNecessary(),
                            e.model.afterImageLoad && (e.model.afterImageLoad(),
                            delete e.model.afterImageLoad),
                            e.model.collection.page.debounced_reorderByZ())
                        }, {
                            usecors: !0,
                            video_sample: n && d20.engine.animations_enabled,
                            config: {
                                is_still: n && !d20.engine.animations_enabled
                            }
                        })
                    }
                    this.model.bind("change", function(t, n) {
                        this.collection.page.id == d20.Campaign.activePage().id && e.syncToEditor(n)
                    }),
                    this.model.bind("remote_update", function() {
                        var t = d20.engine.canvas.getActiveGroup();
                        t && t.contains(e.graphic) && d20.engine.canvas.deactivateAllWithDispatch()
                    }),
                    this.model.bind("remove", function() {
                        this.collection.page.id === d20.Campaign.activePage().id && (d20.engine.canvas.remove(e.graphic),
                        d20.engine.redrawScreenNextTick()),
                        !this.collection.massdelete && window.is_gm && e.deleted(!0)
                    }),
                    this.model.bind("change:layer", function(e) {
                        if (this.collection.page.id === d20.Campaign.activePage().id) {
                            var t = this;
                            "" != e.previous("layer") && (this.view.trackShapeIfNecessary(),
                            d20.Campaign.activePage().debounced_reorderByZ(),
                            _.defer(function() {
                                -1 !== _.indexOf(d20.engine.selected(), t.view.graphic) && (d20.token_editor.removeRadialMenu(),
                                d20.engine.unselect())
                            }))
                        }
                    }),
                    this.model.bind("change:isdrawing", function() {
                        this.view.trackShapeIfNecessary()
                    }),
                    this.model.bind("change:bar1_value change:bar2_value change:bar3_value", function() {
                        var e = d20.engine.selected();
                        "image" == this.get("type") && 1 == e.length && e[0] == this.view.graphic && d20.token_editor.showRadialMenu(this.view.graphic, !0, !0)
                    })
                }
            },
            trackShapeIfNecessary: function() {
                if (this.graphic) {
                    var e = this.model.getOverriddenValue("controlledby").split(",");
                    window.currentPlayer && this.model.get("layer") == window.currentEditingLayer && (window.is_gm || -1 !== _.indexOf(e, "all") || -1 !== _.indexOf(e, window.currentPlayer.id)) ? this.graphic.selectable = !0 : this.graphic.selectable = !1
                }
            },
            syncToEditor: function(e) {
                var t, n, i = this, r = ["top", "left", "angle"];
                0 == this.model.get("top") && 0 == this.model.get("left") && this.model.get("y") !== undefined ? (t = this.model.get("y") + Math.floor(this.model.get("height") / 2),
                n = this.model.get("x") + Math.floor(this.model.get("width") / 2)) : (t = this.model.get("top"),
                n = this.model.get("left"));
                var a = {
                    top: t,
                    left: n,
                    width: this.model.get("width"),
                    height: this.model.get("height"),
                    angle: this.model.get("rotation"),
                    flipX: this.model.get("fliph"),
                    flipY: this.model.get("flipv")
                };
                o(this, r, a, e),
                this.graphic && ("transparent" != this.model.get("tint_color") ? 0 != this.graphic.filters.length && this.graphic.filters[0].hexcolor == this.model.get("tint_color") || (console.log("Applying filter"),
                this.graphic.filters[0] = new fabric.Image.filters.Tint({
                    color: fabric.Color.fromHex(this.model.get("tint_color")),
                    strength: .4
                }),
                this.graphic.filters[0].hexcolor = this.model.get("tint_color"),
                i.graphic.applyFilters(d20.engine.redrawScreenNextTick)) : this.graphic.filters[0] && (this.graphic.filters.pop(),
                this.graphic.applyFilters(d20.engine.redrawScreenNextTick)),
                i.checkImageSizing(),
                this.graphic.isAnimated && e && this.graphic.syncAnimationDataOnUpdate(e.changes))
            },
            checkImageSizing: function() {
                if (!this.graphic)
                    return;
                const e = this.graphic._originalElement
                  , t = this.imageResolve(e)
                  , n = /(?:\?\d+$)/g
                  , i = e=>{
                    let t = e.replace(n, "");
                    return "/" === t.substring(0, 1) && (t = window.location.href.replace(/\/editor\/$/i, t)),
                    t
                }
                ;
                e && i(e.src) !== i(t) && (console.log("Swapping " + e.src + " to " + t),
                this.graphic.swap(t));
                var o = this.graphic._placeholder;
                o && (framesrc = o.src.replace("sample.png", "frame.png"),
                i(o.src) !== i(framesrc) && (console.log("Swapping sample.png placeholder to frame.png"),
                fabric.Image.fromURL(framesrc, e=>{
                    e && (this.graphic._placeholder = e)
                }
                , {
                    usecors: !0,
                    element_only: !0
                })))
            },
            imageResolve: function(e) {
                var t = this.model.get("width") * d20.engine.canvasZoom
                  , n = this.model.get("height") * d20.engine.canvasZoom
                  , i = this.model.get("imgsrc");
                const o = d20.utils.isVideo(i);
                if (-1 !== i.indexOf("d20cors.herokuapp.com") && (i = i.replace("d20cors.herokuapp.com", "imgsrv.roll20.net")),
                e === undefined || "anonymous" != e.crossOrigin && -1 === e.src.indexOf("imgsrv.roll20.net") || (-1 === i.indexOf(".d20.io") && -1 === i.indexOf("d20cors.herokuapp.com") && -1 === i.indexOf("imgsrv.roll20.net") && (i = d20ext.imgsrv + escape(i.replace(/http[s]*:\/\//, "")) + "&cb="),
                i.indexOf("files.d20.io") > -1 && -1 === i.indexOf("?") && (i += "?"),
                "development" == d20.environment ? i += "3" : "staging" == d20.environment ? i += "4" : i += "5"),
                !o && (-1 !== i.indexOf("files.d20.io") || -1 !== i.indexOf("files.staging.d20.io"))) {
                    var r = i.split("/")
                      , a = r[r.length - 1].split(".")[0];
                    if (t > 2048 || n > 2048) {
                        if ("original" != a)
                            var s = i.replace(a + ".", "original.")
                    } else if (t > 512 || n > 512) {
                        if ("max" != a)
                            s = i.replace(a + ".", "max.")
                    } else if (t > 200 || n > 200) {
                        if ("med" != a)
                            s = i.replace(a + ".", "med.")
                    } else if ("thumb" != a)
                        s = i.replace(a + ".", "thumb.");
                    if (s)
                        return s
                }
                return i
            },
            modified: function(e, t) {
                var n = {
                    top: this.graphic.get("top"),
                    left: this.graphic.get("left"),
                    width: this.graphic.getWidth(),
                    height: this.graphic.getHeight(),
                    rotation: this.graphic.getAngle()
                };
                if (!e) {
                    var i = this.model.toJSON();
                    d20.undo.newAction(i.id, function(e) {
                        var t = d20.Campaign.pages.get(i.page_id).thegraphics.get(e);
                        t && t.view ? (delete i.id,
                        delete i.page_id,
                        console.log(i),
                        t.save(i)) : console.log("Unable to find graphic!")
                    })
                }
                0 != this.graphic.get("width") && 0 != this.graphic.get("height") ? t || (this.model.save(n),
                d20.Campaign.activePage().get("lightupdatedrop") && d20.engine.advanced_fog.updateFromToken(this.graphic.model)) : this.model.destroy()
            },
            getCurrentZIndex: function() {
                return d20.engine.canvas.getObjects().indexOf(this.graphic)
            },
            ischanging: function() {
                d20.engine.selected()[0] == this.graphic && d20.token_editor.removeRadialMenu()
            },
            deleted: function(e) {
                var t = this.model.toJSON();
                d20.undo.newAction(t.id, function() {
                    if ("image" == t.type) {
                        var e = t.id
                          , n = d20.Campaign.pages.get(t.page_id);
                        delete t.id,
                        delete t.page_id,
                        delete t.containingButtonId;
                        var i = n.addImage(t, !0, "none")
                          , o = {};
                        _.each(d20.token_editor.tokenkeys, function(e) {
                            t.hasOwnProperty(e) && (o[e] = t[e])
                        }),
                        i.save(o),
                        d20.undo.updateStack(e, i.id)
                    }
                }),
                d20.token_editor.removeRadialMenu(),
                !0 !== e && this.model.destroy()
            },
            upgradeMarkers: function() {
                var e = {
                    redmarker: "#C91010",
                    bluemarker: "#1076C9",
                    greenmarker: "#2FC910",
                    brownmarker: "#C97310",
                    purplemarker: "#9510C9"
                }
                  , t = {
                    statusmarkers: this.model.get("statusmarkers")
                }
                  , n = !1;
                for (var i in e)
                    !0 === this.model.get("status_" + i) && (t["status_" + i] = null,
                    t.statusmarkers = "" === t.statusmarkers ? i.replace("marker", "") : t.statusmarkers + "," + i.replace("marker", ""),
                    n = !0);
                !0 === this.model.get("status_dead") && (t.status_dead = null,
                t.statusmarkers = "" === t.statusmarkers ? "dead" : t.statusmarkers + ",dead",
                n = !0),
                n && (console.log("Upgrading old status markers!"),
                this.model.save(t))
            }
        })
          , f = Backbone.View.extend({
            _template: $.jqotec("#tmpl_pagesettings"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog", "gridEnabledToggle", "updatePageSettings"),
                this.model.bind("change", function() {
                    e.render()
                }),
                this.model.bind("change:name change:thumbnail change:archived change:placement", function() {
                    d20.pagetoolbar && d20.pagetoolbar.refreshPageListing && d20.pagetoolbar.refreshPageListing()
                }),
                $(this.el).on("click", ".gridenabled", this.gridEnabledToggle),
                $(this.el).addClass("dialog"),
                $(this.el).on("change", "#gridtype", t=>{
                    let n = {
                        grid_type: t.target.value
                    }
                      , i = e.model.get("diagonaltype");
                    i = i || "foure";
                    let o = ["hex"]
                      , r = ["foure", "threefive", "manhattan"]
                      , a = "square" === t.target.value && o.indexOf(i) > -1;
                    (a |= "hex" === t.target.value && r.indexOf(i) > -1) && (n.diagonaltype = i),
                    "hexr" === t.target.value ? $(this.el).find("#cell_measurement").html(i18n("page_settings_cell_height", "Cell Height")) : $(this.el).find("#cell_measurement").html(i18n("page_settings_cell_width", "Cell Width")),
                    this.model.save(n)
                }
                ),
                $(this.el).on("change", ".scale_units", e=>{
                    "custom" === e.target.value ? $(e.target).siblings("#custom_scale_units.hidden").removeClass("hidden") : $(e.target).siblings("#custom_scale_units:not(.hidden)").addClass("hidden")
                }
                ),
                $(this.el).on("change", "#diagonaltype", e=>{
                    this.model.save({
                        diagonaltype: e.target.value
                    })
                }
                ),
                $(this.el).on("click", ".archive", function() {
                    e.model.id != d20.Campaign.get("playerpageid") ? (e.model.save({
                        archived: !e.model.get("archived")
                    }),
                    $(e.el).dialog("destroy")) : alert("Please move your players to a different page before archiving it.")
                }),
                this.$el.on("click", ".delete", function() {
                    if (2 == $("#page-toolbar .pages").find(".availablepage").length)
                        $("<div>You must have at least one page per campaign. Create another page first, then you can delete this one.</div>").dialog({
                            modal: !0,
                            title: "Cannot Delete",
                            beforeClose: function() {
                                $(this).dialog("destroy").remove()
                            },
                            buttons: {
                                OK: function() {
                                    $(this).dialog("destroy").remove()
                                }
                            }
                        });
                    else {
                        var t = e.model;
                        if (t && t.id == d20.Campaign.get("playerpageid"))
                            return alert("Please move your players to a different page before deleting the page."),
                            !1;
                        if (t && t.id == d20.Campaign.activePage().id)
                            return alert("You can't delete the page you're currently on. Please switch to a different page before deleting this one."),
                            !1;
                        $("<div>Are you sure you want to delete the page <strong>" + t.get("name") + "</strong> (including all tokens, maps, and drawings on the page)? This cannot be undone.</div>").dialog({
                            title: "Confirm Deletion",
                            buttons: {
                                Delete: function() {
                                    if ($("#page-toolbar .availablepage[data-pageid=" + t.id + "]").remove(),
                                    t) {
                                        var n = d20.Campaign.getPageIndex(t.id);
                                        t.thegraphics.massdelete = !0,
                                        t.thetexts.massdelete = !0,
                                        t.thepaths.massdelete = !0,
                                        t.thegraphics.backboneFirebase.reference.set(null),
                                        t.thetexts.backboneFirebase.reference.set(null),
                                        t.thepaths.backboneFirebase.reference.set(null);
                                        var i = d20.Campaign.get("playerspecificpages")
                                          , o = !1;
                                        _.each(i, function(e, n) {
                                            e === t.id && (delete i[n],
                                            o = !0)
                                        }),
                                        o && d20.Campaign.save({
                                            playerspecificpages: i
                                        }),
                                        t.destroy(),
                                        d20.Campaign.activePageIndex > n && (d20.Campaign.activePageIndex -= 1)
                                    }
                                    e.$el.dialog("destroy"),
                                    $(this).dialog("destroy").remove()
                                },
                                Cancel: function() {
                                    $(this).dialog("destroy").remove()
                                }
                            },
                            modal: !0,
                            beforeClose: function() {
                                $(this).dialog("destroy").remove()
                            }
                        })
                    }
                }),
                $(this.el).on("change", ".width", e=>{
                    isNaN(e.target.value) ? $(this.el).find($(".px_width")).val(0) : $(this.el).find($(".px_width")).val(70 * e.target.value)
                }
                ),
                $(this.el).on("change", ".px_width", e=>{
                    isNaN(e.target.value) ? $(this.el).find($(".width")).val(0) : $(this.el).find($(".width")).val(e.target.value / 70)
                }
                ),
                $(this.el).on("change", ".height", e=>{
                    isNaN(e.target.value) ? $(this.el).find($(".px_height")).val(0) : $(this.el).find($(".px_height")).val(70 * e.target.value)
                }
                ),
                $(this.el).on("change", ".px_height", e=>{
                    isNaN(e.target.value) ? $(this.el).find($(".height")).val(0) : $(this.el).find($(".height")).val(e.target.value / 70)
                }
                ),
                $(this.el).on("change", ".snappingincrement", e=>{
                    isNaN(e.target.value) ? $(this.el).find($(".px_snappingincrement")).val(0) : $(this.el).find($(".px_snappingincrement")).val(70 * e.target.value)
                }
                ),
                $(this.el).on("change", ".px_snappingincrement", e=>{
                    isNaN(e.target.value) ? $(this.el).find($(".snappingincrement")).val(0) : $(this.el).find($(".snappingincrement")).val(e.target.value / 70)
                }
                ),
                $(this.el).on("change", ".advancedfowgridsize", e=>{
                    isNaN(e.target.value) ? $(this.el).find($(".px_advancedfowgridsize")).val(0) : $(this.el).find($(".px_advancedfowgridsize")).val(70 * e.target.value)
                }
                ),
                $(this.el).on("change", ".px_advancedfowgridsize", e=>{
                    isNaN(e.target.value) ? $(this.el).find($(".advancedfowgridsize")).val(0) : $(this.el).find($(".advancedfowgridsize")).val(e.target.value / 70)
                }
                ),
                this.render()
            },
            render: function() {
                const e = this;
                $(this.el).html(this._template()),
                0 != this.model.get("snapping_increment") ? $(this.el).find(".gridenabled").prop("checked", !0) : ($(this.el).find(".snappingincrement").prop("disabled", !0),
                $(this.el).find("#scale_label").html(i18n("page_settings_dimensions_70_pixels", "70 pixels ="))),
                this.model.get("showdarkness") && $(this.el).find(".darknessenabled").prop("checked", !0),
                this.model.get("showlighting") && $(this.el).find(".lightingenabled").prop("checked", !0),
                this.model.get("lightupdatedrop") && $(this.el).find(".lightingupdate").prop("checked", !0),
                this.model.get("lightenforcelos") && $(this.el).find(".lightenforcelos").prop("checked", !0),
                this.model.get("lightrestrictmove") && $(this.el).find(".lightrestrictmove").prop("checked", !0),
                this.model.get("lightglobalillum") && $(this.el).find(".lightglobalillum").prop("checked", !0),
                this.model.get("adv_fow_enabled") && $(this.el).find(".advancedfowenabled").prop("checked", !0),
                this.$el.find(".advancedfowgridsize").val(this.model.get("adv_fow_grid_size")),
                this.model.get("adv_fow_show_grid") && $(this.el).find(".advancedfowshowgrid").prop("checked", !0),
                this.model.get("adv_fow_dim_reveals") && $(this.el).find(".dimlightreveals").prop("checked", !0),
                this.model.get("adv_fow_gm_see_all") && $(this.el).find("#afow_gm_see_all").prop("checked", !0),
                $(this.el).find(".pagebackground, .gridcolor").colorPicker(),
                $(this.el).find(".pagebackground").val(this.model.get("background_color")).trigger("change-silent"),
                $(this.el).find(".gridcolor").val(this.model.get("gridcolor")).trigger("change-silent"),
                $(this.el).find(".gridopacity").slider({
                    value: 100 * this.model.get("grid_opacity")
                });
                let t = this.model.get("grid_type");
                t = t || "square",
                this.$el.find("#gridtype option").each((e,n)=>{
                    n.selected = n.value === t
                }
                ),
                "square" === t ? (this.$el.find(".gridlabels").prop("style", "display: none;"),
                this.$el.find("#hexlabels").prop("style", "display: none;"),
                this.$el.find("#diagonaltype option.squareonly").prop("style", ""),
                this.$el.find("#diagonaltype option.hexonly").prop("style", "display: none")) : (this.$el.find("#diagonaltype option.squareonly").prop("style", "display: none"),
                this.$el.find("#diagonaltype option.hexonly").prop("style", "")),
                "hexr" === t && this.$el.find("#cell_measurement").html(i18n("page_settings_cell_height", "Cell Height"));
                let n = this.model.get("diagonaltype");
                n = n || "foure",
                this.$el.find("#diagonaltype option").each((e,t)=>{
                    t.selected = t.value === n
                }
                ),
                this.model.get("gridlabels") && this.$el.find(".gridlabels").prop("checked", !0),
                $(this.el).find(".fogopacity").slider({
                    value: 100 * this.model.get("fog_opacity")
                });
                let i = this.model.get("scale_units")
                  , o = this.$el.find(".scale_units")
                  , r = o.children("option:not([value='custom'])").filter((e,t)=>t.value === i);
                if (r.length > 0 ? o.val(r.val()) : (o.val("custom"),
                $(this.el).find("#custom_scale_units").removeClass("hidden").children("input").val(i)),
                this.$el.find("div[data-feature_enabled]").each((t,n)=>{
                    const i = $(n);
                    i.attr("data-feature_enabled", e.model.get(i.attr("data-feature_enabled")))
                }
                ),
                this.$el.find("#grid_settings input.gridenabled").change(e=>{
                    const t = $(e.target);
                    t.parents("#grid_settings").attr("data-feature_enabled", t.prop("checked"))
                }
                ),
                this.$el.find(".lighting_feature input.feature_enabled").change(e=>{
                    const t = $(e.target);
                    t.parents(".lighting_feature").attr("data-feature_enabled", t.prop("checked"))
                }
                ),
                d20.jukebox) {
                    var a = "<option value=''>None</option>";
                    a += "<option value='nonestopall'>None, But Stop All Tracks</option>",
                    a += "<optgroup label='Playlists'>",
                    _.each(d20.jukebox.lastFolderStructure, function(e) {
                        "object" == typeof e && (a += "<option value='" + e.id + "'>" + e.n + "</option>")
                    }),
                    a += "</optgroup><optgroup label='Tracks'>",
                    window.Jukebox.playlist.each(function(e) {
                        a += "<option value='" + e.id + "'>" + e.get("title") + "</option>"
                    }),
                    a += "</optgroup>",
                    this.$el.find(".pagejukeboxtrigger").html(a).val(this.model.get("jukeboxtrigger"))
                } else
                    this.$el.find(".pagejukeboxtrigger").hide()
            },
            updatePageSettings: function() {
                let e = this.$el.find(".advancedfowgridsize").val() == undefined ? 0 : this.$el.find(".advancedfowgridsize").val()
                  , t = this.$el.find(".scale_units").val();
                "custom" === t && (t = this.$el.find("#custom_scale_units > input").val()),
                this.model.save({
                    width: "" == $(this.el).find(".width").val() ? 25 : parseFloat($(this.el).find(".width").val()),
                    height: "" == $(this.el).find(".height").val() ? 25 : parseFloat($(this.el).find(".height").val()),
                    snapping_increment: "" == $(this.el).find(".snappingincrement").val() ? 1 : parseFloat($(this.el).find(".snappingincrement").val()),
                    showgrid: $(this.el).find(".gridenabled").is(":checked"),
                    showdarkness: $(this.el).find(".darknessenabled").is(":checked"),
                    showlighting: $(this.el).find(".lightingenabled").length > 0 && $(this.el).find(".lightingenabled").is(":checked"),
                    lightupdatedrop: $(this.el).find(".lightingupdate").length > 0 && $(this.el).find(".lightingupdate").is(":checked"),
                    lightenforcelos: $(this.el).find(".lightenforcelos").length > 0 && $(this.el).find(".lightenforcelos").is(":checked"),
                    lightrestrictmove: $(this.el).find(".lightrestrictmove").length > 0 && $(this.el).find(".lightrestrictmove").is(":checked"),
                    lightglobalillum: $(this.el).find(".lightglobalillum").length > 0 && $(this.el).find(".lightglobalillum").is(":checked"),
                    grid_opacity: Math.round(this.$el.find(".gridopacity").slider("value")) / 100,
                    gridlabels: this.$el.find(".gridlabels").is(":checked"),
                    fog_opacity: Math.round(this.$el.find(".fogopacity").slider("value")) / 100,
                    background_color: this.$el.find(".pagebackground").val(),
                    gridcolor: this.$el.find(".gridcolor").val(),
                    grid_type: this.$el.find("#gridtype").val(),
                    diagonaltype: this.$el.find("#diagonaltype").val(),
                    scale_number: "" == $(this.el).find(".scale_number").val() ? 5 : parseFloat(this.$el.find(".scale_number").val()),
                    scale_units: t,
                    jukeboxtrigger: this.$el.find(".pagejukeboxtrigger").val(),
                    adv_fow_enabled: $(this.el).find(".advancedfowenabled").length > 0 && $(this.el).find(".advancedfowenabled").is(":checked"),
                    adv_fow_show_grid: $(this.el).find(".advancedfowshowgrid").length > 0 && $(this.el).find(".advancedfowshowgrid").is(":checked"),
                    adv_fow_grid_size: "" == e ? 1 : Math.max(Math.floor(parseFloat(e)), .5),
                    adv_fow_dim_reveals: $(this.el).find(".dimlightreveals").length > 0 && $(this.el).find(".dimlightreveals").is(":checked"),
                    adv_fow_gm_see_all: $(this.el).find("#afow_gm_see_all").length > 0 && $(this.el).find("#afow_gm_see_all").is(":checked")
                })
            },
            gridEnabledToggle: function() {
                $(this.el).find(".gridenabled").is(":checked") ? ($(this.el).find(".snappingincrement").val("1.0").prop("disabled", !1),
                $(this.el).find(".px_snappingincrement").val("70"),
                $(this.el).find("#scale_label").html(i18n("page_settings_dimensions_1_cell", "1 grid cell ="))) : ($(this.el).find(".snappingincrement").val("0").prop("disabled", !0),
                $(this.el).find(".px_snappingincrement").val("0"),
                $(this.el).find("#scale_label").html(i18n("page_settings_dimensions_70_pixels", "70 pixels ="))),
                this.updatePageSettings()
            },
            showDialog: function() {
                var e = 725;
                this.render();
                var t = $(window).height() - d20.utils.playerZoneHeight();
                t > e && (t = e);
                var n = this;
                $(this.el).dialog({
                    modal: !0,
                    width: 350,
                    height: t,
                    position: ["center", 30],
                    title: "Page Settings",
                    zIndex: 10800,
                    buttons: {
                        OK: function() {
                            var e = 0 != n.model.get("snapping_increment") ? n.model.get("snapping_increment") : n.model.get("adv_fow_grid_size")
                              , t = 0 != parseFloat($(this).find(".snappingincrement").val()) ? parseFloat($(this).find(".snappingincrement").val()) : parseFloat($(this).find(".advancedfowgridsize").val())
                              , i = n.model.get("height") / t * (n.model.get("width") / t);
                            if ($(this).find(".advancedfowenabled").is(":checked") && i > 5e4) {
                                if (!confirm("The number of units is too great to work with the Advanced Fog of War. Do you wish to continue without Advanced Fog of War?"))
                                    return;
                                $(this).find(".advancedfowenabled").attr("checked", !1)
                            }
                            $(this).find(".advancedfowenabled").is(":checked") && t != e && !confirm("Changing the grid size will reset all revealed Advanced Fog of War. Do you wish to continue?") || (parseFloat($(this).find(".width").val()) > 99 || parseFloat($(this).find(".height").val()) > 99) && !confirm("Maps with very large dimentions may load slowly or not at all. Do you wish to continue?") || ($(this).dialog("destroy"),
                            n.updatePageSettings())
                        },
                        Cancel: function() {
                            $(this).dialog("destroy")
                        }
                    }
                })
            }
        })
          , g = d20.models.Page = Backbone.Model.extend({
            defaults: {
                name: "",
                version: 0,
                showgrid: !0,
                showdarkness: !1,
                showlighting: !1,
                lightupdatedrop: !1,
                lightenforcelos: !1,
                lightrestrictmove: !1,
                lightglobalillum: !1,
                width: 25,
                height: 25,
                snapping_increment: 1,
                revealedAreas: "[]",
                grid_opacity: .5,
                fog_opacity: .35,
                background_color: "#ffffff",
                gridcolor: "#C0C0C0",
                grid_type: "square",
                thumbnail: "/images/blankcampaign.jpg",
                scale_number: 5,
                scale_units: "ft",
                gridlabels: !1,
                diagonaltype: "foure",
                zorder: !1,
                archived: !1,
                jukeboxtrigger: "",
                adv_fow_enabled: !1,
                adv_fow_show_grid: !1,
                adv_fow_grid_size: 1,
                adv_fow_dim_reveals: !0,
                adv_fow_gm_see_all: !1
            },
            fullyLoaded: !1,
            initialize: function() {
                var e = this;
                if (this.id)
                    this.persisted = !0;
                else {
                    var t = generateUUID();
                    this.set({
                        id: t
                    }),
                    this.url = this.collection.url + t
                }
                this.path_semaphore = new d20.utils.Semaphore(0),
                this.bind("change", function(t) {
                    var n = t.changedAttributes()
                      , i = _.keys(n);
                    if (1 == i.length && ("placement" == i[0] || "name" == i[0] || "thumbnail" == i[0] || "revealedAreas" == i[0] || "zorder" == i[0]))
                        return;
                    -1 !== i.indexOf("archived") && !1 === e.get("archived") && e.fullyLoadPage(),
                    d20.Campaign.activePage() === e ? d20.Campaign.initActivePage(!0) : e.updatePage();
                    const o = ["snapping_increment", "adv_fow_grid_size"];
                    _.intersection(i, o).length && d20.engine.advanced_fog.clearPage(e.get("id"))
                }),
                this.on("change:grid_type", t=>{
                    let n = t.attributes.grid_type
                      , i = t.attributes.diagonaltype
                      , o = ["foure", "threefive", "manhattan"];
                    "square" === n && ["hex"].indexOf(i) > -1 ? e.save({
                        diagonaltype: "foure"
                    }) : ("hex" === n || "hexr" === n) && o.indexOf(i) > -1 && e.save({
                        diagonaltype: "hex"
                    })
                }
                ),
                this.on("change:adv_fow_enabled", (e,t)=>{
                    if (d20.Campaign.activePage() === e)
                        if (t) {
                            d20.engine.advanced_fog.revealed_cells = {},
                            d20.engine.advanced_fog.visible_cells = {};
                            for (let t of d20.Campaign.players.models)
                                t.trigger("change:adv_fow_revealed", t, t.get("adv_fow_revealed")),
                                d20.engine.advanced_fog.revealed_cells[t.get("id")] || (d20.engine.advanced_fog.revealed_cells[t.get("id")] = {}),
                                d20.engine.advanced_fog.revealed_cells[t.get("id")][e.get("id")] || (d20.engine.advanced_fog.revealed_cells[t.get("id")][e.get("id")] = new Set);
                            d20.engine.advanced_fog.updateAllVision(),
                            d20.engine.advanced_fog.save_interval = setInterval(d20.engine.advanced_fog.save, 200)
                        } else
                            clearInterval(d20.engine.advanced_fog.save_interval),
                            d20.engine.advanced_fog.save_interval = !1,
                            d20.engine.clearCanvasOnRedraw("afow")
                }
                ),
                this.on("change:showdarkness", (e,t)=>{
                    d20.Campaign.activePage() === e && (t ? d20.engine.redrawScreenNextTick(!0) : d20.engine.clearCanvasOnRedraw("fog"))
                }
                ),
                this.on("change:adv_fow_gm_see_all", e=>{
                    d20.Campaign.activePage() === e && (d20.engine.advanced_fog.revealed_cells.gm = {},
                    window.is_gm && e.get("adv_fow_enabled") && d20.engine.advanced_fog.updateAllVision(),
                    d20.engine.redrawScreenNextTick())
                }
                ),
                this.on("change:lightglobalillum change:showlighting", e=>{
                    if (e.get("adv_fow_enabled")) {
                        const t = e.get("showlighting") && e.get("lightglobalillum");
                        d20.engine.advanced_fog.updateAllVision({
                            vision_only: !t
                        })
                    }
                    d20.engine.clearCanvasOnRedraw("afow")
                }
                ),
                this.view = new f({
                    model: this
                }),
                this.buttons = [],
                this.serverVersion = this.get("version"),
                _.bindAll(this, "activate", "reorderByZ", "updateVersion", "updatePage", "loadPageIntoDOM", "unloadPageFromDOM", "getThumbnail"),
                this.debounced_reorderByZ = _.debounce(this.reorderByZ, 100),
                this.debounced_updateVersion = _.debounce(this.updateVersion, 1e3),
                this.debounced_recordZIndexes = _.debounce(this.recordZIndexes, 0),
                1 != this.get("archived") && this.fullyLoadPage(),
                _.defer(function() {
                    $(window).trigger("d20:pageInitialized")
                })
            },
            fullyLoadPage: function() {
                if (!this.fullyLoaded) {
                    console.log("Full load page!"),
                    this.fullyLoaded = !0;
                    var e = this;
                    this.thegraphics = new h,
                    this.thegraphics.page = this,
                    this.thegraphics.url = "/graphics/page/" + this.id + "/",
                    this.thegraphics.on("add", d20.engine.advanced_fog.updateFromToken),
                    _.defer(function() {
                        e.thegraphics.backboneFirebase = new BackboneFirebase(e.thegraphics)
                    }),
                    this.thetexts = new a,
                    this.thetexts.page = this,
                    this.thetexts.url = "/texts/page/" + this.id + "/",
                    _.defer(function() {
                        e.thetexts.backboneFirebase = new BackboneFirebase(e.thetexts)
                    }),
                    this.thepaths = new c,
                    this.thepaths.page = this,
                    this.thepaths.url = "/paths/page/" + this.id + "/",
                    _.defer(function() {
                        e.thepaths.backboneFirebase = new BackboneFirebase(e.thepaths),
                        e.thepaths.fetch({
                            success: ()=>e.path_semaphore.incr()
                        })
                    }),
                    this.thegraphics.bind("add change remove", function() {
                        e.debounced_updateVersion()
                    }),
                    this.thegraphics.bind("add remove change:playersedit_name change:showplayers_name change:imgsrc change:controlledby change:name change:layer", function() {
                        d20.Campaign.initiativewindow && e == d20.Campaign.activePage() && d20.Campaign.initiativewindow.rebuildInitiativeList()
                    }),
                    this.thepaths.bind("remove", (e,t)=>{
                        t.page.get("id") === d20.Campaign.activePage().get("id") && t.page.get("showlighting") && "walls" === e.get("layer") && d20.engine.advanced_fog.updateAllVision()
                    }
                    ),
                    setTimeout(function() {
                        !1 === e.get("zorder") && (console.log("NEED TO UPGRADE ZORDER!"),
                        e.upgradeToNewZOrder())
                    }, 1e3),
                    this.on("change:zorder", function() {
                        d20.Campaign.activePage() == e && e.debounced_reorderByZ()
                    }),
                    this.bind("change:revealedAreas", function() {
                        d20.Campaign.activePage() == e && d20.engine.redrawScreenNextTick(!0)
                    })
                }
            },
            loadPageIntoDOM: function() {
                var e = this;
                this.fullyLoadPage(),
                _.defer(function() {
                    console.log("Graphics: " + e.thegraphics.models.length),
                    e.thegraphics.each(function(e) {
                        e.view.graphic && (d20.engine.canvas.add(e.view.graphic),
                        e.view.syncToEditor(),
                        e.view.trackShapeIfNecessary())
                    }),
                    console.log("Paths: " + e.thepaths.models.length),
                    e.thepaths.each(function(e) {
                        e.view.graphic && (d20.engine.canvas.add(e.view.graphic),
                        e.view.syncToEditor(),
                        e.view.trackShapeIfNecessary())
                    }),
                    e.thetexts.each(function(e) {
                        e.view.graphic && (d20.engine.canvas.add(e.view.graphic),
                        e.view.syncToEditor(),
                        e.view.trackShapeIfNecessary())
                    }),
                    _.defer(function() {
                        e.reorderByZ()
                    })
                })
            },
            unloadPageFromDOM: function() {
                d20.engine.canvas.forEachObject(function(e) {
                    "path" == e.type && e.cachedPath && (console.log("Clearing off-screen canvas!"),
                    e.cachedPath.width = 0,
                    e.cachedPath.height = 0,
                    delete e.cachedPath)
                }),
                d20.engine.canvas.clear()
            },
            activate: function() {
                console.log("activate page!"),
                d20.token_editor.removeRadialMenu(),
                d20.engine.unselect(),
                this.thepaths.each(function(e) {
                    e.view && e.view.trackShapeIfNecessary()
                }),
                this.thetexts.each(function(e) {
                    e.view && e.view.trackShapeIfNecessary()
                }),
                console.log("FULLY ACTIVATE VIEWS FOR PAGE."),
                this.thegraphics.each(function(e) {
                    e.view && (e.view.fullyActivateView(),
                    e.view.trackShapeIfNecessary())
                }),
                d20.engine.redrawScreenNextTick()
            },
            addText: function(e) {
                var t = this;
                if (e.attr)
                    ;
                else {
                    e.fontSize || (e.fontSize = 16),
                    e.fill || (e.fill = "#000"),
                    e.fontFamily || (e.fontFamily = "Arial");
                    var n = this.thetexts.create({
                        top: e.top,
                        left: e.left,
                        font_size: e.fontSize,
                        color: e.fill,
                        text: e.text,
                        font_family: e.fontFamily
                    }, {
                        success: function(e) {
                            t.addObjectToFront(e.id),
                            e.view.modified(!0)
                        }
                    })
                }
                return n
            },
            addPath: function(e) {
                var t = this;
                if (e.oCoords)
                    var n = this.thepaths.create({
                        path: JSON.stringify(e.get("path")),
                        fill: e.get("fill") || "transparent",
                        stroke: e.get("stroke"),
                        stroke_width: e.get("strokeWidth") / window.zoomLevel,
                        existing_shape: e,
                        width: e.get("width"),
                        height: e.get("height"),
                        top: e.get("top"),
                        left: e.get("left"),
                        scaleX: e.get("scaleX"),
                        scaleY: e.get("scaleY")
                    }, {
                        success: function() {
                            t.addObjectToFront(n.id),
                            n.view.modified(!0)
                        }
                    });
                else
                    n = this.thepaths.create({
                        fill: e.fill,
                        stroke: e.stroke,
                        path: JSON.stringify(e.path),
                        stroke_width: e.stroke_width || e.strokeWidth,
                        width: e.width,
                        height: e.height,
                        top: e.top,
                        left: e.left,
                        scaleX: e.scaleX || 1,
                        scaleY: e.scaleY || 1
                    }, {
                        success: function() {
                            t.addObjectToFront(n.id),
                            n.view.modified(!0)
                        }
                    });
                var i = n.toJSON();
                return d20.undo.newAction(i.id, function(e) {
                    var t = d20.Campaign.pages.get(i.page_id).thepaths.get(e);
                    t && t.view ? (delete i.id,
                    delete i.page_id,
                    t.destroy()) : console.log("Unable to find graphic!")
                }),
                n
            },
            addImage: function(e, t, n, i, o, r) {
                var a = this
                  , s = this
                  , l = e.left || Math.floor(e.x + e.width / 2)
                  , c = e.top || Math.floor(e.y + e.height / 2);
                let u = -1;
                e.anim_paused_at !== undefined && (u = e.anim_paused_at);
                var d = a.thegraphics.create({
                    imgsrc: e.imgsrc || e.src,
                    left: l,
                    top: c,
                    width: e.width,
                    height: e.height,
                    type: "image",
                    cardid: e.cardid || "",
                    isdrawing: e.isdrawing || !1,
                    sides: e.sides || "",
                    currentSide: e.currentSide || 0,
                    represents: e.represents || "",
                    tint_color: e.tint || "transparent",
                    anim_loop: e.anim_loop || !0,
                    anim_paused_at: u
                });
                return r && s.addObjectToFront(d.id),
                d.afterImageLoad = function() {
                    d20.engine.canvas.fire("object:modified", {
                        target: d.view.graphic,
                        force_snap: !t
                    }),
                    r || s.addObjectToFront(d.id)
                }
                ,
                d
            },
            isNew: function() {
                return !this.persisted
            },
            addObjectToFront: function(e) {
                this.save({
                    zorder: this.get("zorder") + "," + e
                })
            },
            upgradeToNewZOrder: function() {
                console.log("Upgrading to new ZORDER");
                var e = [];
                this.thegraphics.each(function(t) {
                    e.push(t)
                }),
                this.thetexts.each(function(t) {
                    e.push(t)
                }),
                this.thepaths.each(function(t) {
                    e.push(t)
                }),
                e = _.sortBy(e, function(e) {
                    var t = 0;
                    return parseInt(e.get("z_index"), 10) + t
                }),
                console.log(e);
                var t = _.map(e, function(e) {
                    return e.id
                });
                console.log(t),
                this.save("zorder", t.join(","))
            },
            reorderByZ: function() {
                if (!1 !== this.get("zorder")) {
                    console.log("Reorder by ZORDER");
                    var e = this.get("zorder").split(",")
                      , t = [];
                    this.thegraphics.each(function(e) {
                        e.view && e.view.graphic && t.push(e.view.graphic)
                    }),
                    this.thetexts.each(function(e) {
                        e.view && e.view.graphic && t.push(e.view.graphic)
                    }),
                    this.thepaths.each(function(e) {
                        e.view && e.view.graphic && t.push(e.view.graphic)
                    }),
                    t = _.sortBy(t, function(t) {
                        return e.indexOf(t.model.id)
                    }),
                    d20.engine.canvas._objects = t,
                    t = null,
                    e = null,
                    d20.engine.redrawScreenNextTick()
                } else
                    console.log("Wnated to reorder, but still old, wati for uprade...")
            },
            recordZIndexes: function() {
                if (console.log("Record ZIndexes!"),
                window.is_gm) {
                    for (var e = [], t = 0; t < d20.engine.canvas._objects.length; t++)
                        d20.engine.canvas._objects[t].model && e.push(d20.engine.canvas._objects[t].model.id);
                    this.save({
                        zorder: e.join(",")
                    })
                }
            },
            updateVersion: function() {
                if (window.is_gm) {
                    var e = this.getThumbnail();
                    e != this.get("thumbnail") && this.save({
                        thumbnail: e
                    })
                }
            },
            updatePage: function() {
                const e = this.get("height") * window.dpi
                  , t = this.get("width") * window.dpi;
                $(this.container).css({
                    width: t + "px",
                    height: e + "px",
                    "background-color": this.get("background_color")
                }),
                d20.Campaign.activePage() === this && (d20.engine.snapTo = this.get("snapping_increment") * window.dpi)
            },
            getThumbnail: function() {
                var e = ""
                  , t = 0;
                this.thegraphics.each(function(n) {
                    if ("image" != n.get("type"))
                        return !0;
                    var i = n.get("width") + n.get("height");
                    i > t && (t = i,
                    e = n.get("imgsrc"))
                });
                var n = e;
                if (-1 !== n.indexOf("files.d20.io") || -1 !== n.indexOf("files.staging.d20.io")) {
                    var i = n.split("/")
                      , o = i[i.length - 1].split(".")[0];
                    "thumb" != o && (e = n.replace(o, "thumb"))
                }
                return e.replace(/[\w\-]+\.webm/i, "sample.png")
            }
        })
          , m = Backbone.Collection.extend({
            model: g,
            url: "/pages/",
            initialize: function() {
                window.is_gm && this.on("change:name change:thumbnail change:placement", function() {
                    d20.pagetoolbar.refreshPageListing()
                })
            }
        })
          , y = Backbone.View.extend({
            initialize: function() {
                window.is_gm ? this._template = $("#tmpl_tokeneditor") : this._template = $("#tmpl_tokeneditor_player"),
                _.bindAll(this, "render", "updateModel", "showDialog"),
                this.$el = $(this.el),
                this.$el.addClass("dialog");
                var e = this;
                this.$el.on("click", ".delete", function() {
                    $("<div class='dialog'>Are you sure you want to delete this token? This cannot be undone.</div>").dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            "Delete Character": function() {
                                e.model.destroy(),
                                $(this).dialog("destroy").remove()
                            },
                            Cancel: function() {
                                $(this).dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            $(this).dialog("destroy").remove()
                        }
                    })
                }),
                this.$el.on("change", "select.bar1_link, select.bar2_link, select.bar3_link", function() {
                    e.updateModel(),
                    e.render(),
                    e.$el.find(".chosen").chosen()
                }),
                this.$el.on("change", "select.represents", function() {
                    e.updateModel(),
                    e.model.character && e.model.save({
                        name: e.model.character.get("name")
                    }),
                    e.render(),
                    e.$el.find(".controlledby").selectize({
                        plugins: ["remove_button"]
                    })
                }),
                this.$el.on("click", ".nav li a", function() {
                    e.$el.find(".nav li").removeClass("active"),
                    e.$el.find(".tab-pane").hide(),
                    e.$el.find(".tab-pane." + $(this).attr("data-tab")).show(),
                    $(this).parents("li").addClass("active")
                }),
                this.$el.on("keydown", function(e) {
                    13 == e.which && $(this).find("input").trigger("blur")
                })
            },
            availAttribs: function() {
                var e = []
                  , t = {};
                return this.model.character.attribs.each(function(n) {
                    -1 === n.get("name").indexOf("repeating_") && (e.push({
                        id: n.id,
                        name: n.get("name")
                    }),
                    t[n.get("name").toLowerCase()] = !0)
                }),
                d20.journal.customSheets && d20.journal.customSheets.availableAttributes && _.each(d20.journal.customSheets.availableAttributes, function(n, i) {
                    return -1 !== i.toLowerCase().indexOf("_max") || (-1 !== i.toLowerCase().indexOf("repeating_") || void (t[i.toLowerCase()] === undefined && e.push({
                        id: "sheetattr_" + i,
                        name: i
                    })))
                }),
                e = _.sortBy(e, function(e) {
                    return e.name
                }),
                t = null,
                e
            },
            render: function() {
                var e = this
                  , t = ((new Date).getTime(),
                this.$el.find(".nav li.active a"));
                if (t = t.length > 0 && t.attr("data-tab"),
                this.$el.html(this._template.jqote(this.model)),
                this.$el.attr("data-tokenid", this.model.id),
                window.is_gm) {
                    let e = d20.utils.handleHTMLOutput(this.model.get("gmnotes"));
                    "SINGLESPACED!!" == e.substring(0, 14) && (e = e.substring(14, e.length));
                    let t = this.$el.find(".gmnotes");
                    t.addClass("summernote in-app-editor"),
                    t.val(e),
                    t.each(d20.utils.summernoteInit)
                }
                this.model.character && (this.$el.find(".bar1_link").val(this.model.get("bar1_link")),
                this.$el.find(".bar2_link").val(this.model.get("bar2_link")),
                this.$el.find(".bar3_link").val(this.model.get("bar3_link"))),
                this.$el.find(".name").val(this.model.get("name")).focus(),
                this.$el.find(".represents").val(this.model.get("represents")),
                this.model.get("showname") && this.$el.find(".showname").prop("checked", !0),
                this.model.get("showplayers_name") && this.$el.find(".showplayers_name").prop("checked", !0),
                this.model.get("showplayers_aura1") && this.$el.find(".showplayers_aura1").prop("checked", !0),
                this.model.get("showplayers_aura2") && this.$el.find(".showplayers_aura2").prop("checked", !0),
                this.model.get("playersedit_name") && this.$el.find(".playersedit_name").prop("checked", !0),
                this.model.get("playersedit_aura1") && this.$el.find(".playersedit_aura1").prop("checked", !0),
                this.model.get("playersedit_aura2") && this.$el.find(".playersedit_aura2").prop("checked", !0),
                this.model.get("aura1_square") && this.$el.find(".aura1_square").prop("checked", !0),
                this.model.get("aura2_square") && this.$el.find(".aura2_square").prop("checked", !0),
                this.model.get("light_otherplayers") && this.$el.find(".light_otherplayers").prop("checked", !0),
                this.model.get("light_hassight") && this.$el.find(".light_hassight").prop("checked", !0);
                const n = this.model.get("compact_bar");
                for (let e = 1; e <= 3; ++e) {
                    this.model.get(`showplayers_bar${e}`) && this.$el.find(`.showplayers_bar${e}`).prop("checked", !0),
                    this.model.get(`playersedit_bar${e}`) && this.$el.find(`.playersedit_bar${e}`).prop("checked", !0);
                    const t = this.model.get(`bar${e}_num_permission`);
                    this.$el.find(`.bar${e} .bar_val_permission select option[value=${t}]`).prop("selected", !0),
                    "compact" === n && (this.$el.find(".compact_bar input[name='barStyle']:checked").val(),
                    this.$el.find(`.bar${e} .bar_val_permission select`).val("hidden"),
                    this.model.attributes[`bar${e}_num_permission`] = "hidden");
                    const i = this.model.get("bar_location");
                    this.$el.find(`.barLocation .movable_token_bar select option[value=${i}]`).prop("selected", !0),
                    this.$el.find(`.bar${e}_value`).val(this.model.get(`bar${e}_value`)),
                    this.$el.find(`.bar${e}_max`).val(this.model.get(`bar${e}_max`))
                }
                this.$el.find(".aura1_radius").val(this.model.get("aura1_radius")),
                this.$el.find(".aura2_radius").val(this.model.get("aura2_radius")),
                this.$el.find(".aura1_color").val(this.model.get("aura1_color")),
                this.$el.find(".aura2_color").val(this.model.get("aura2_color")),
                this.$el.find(".tint_color").val(this.model.get("tint_color")),
                this.$el.find(".light_radius").val(this.model.get("light_radius")),
                this.$el.find(".light_dimradius").val(this.model.get("light_dimradius")),
                this.$el.find(".light_angle").val(this.model.get("light_angle")),
                this.$el.find(".light_losangle").val(this.model.get("light_losangle")),
                this.$el.find(".light_multiplier").val(this.model.get("light_multiplier")),
                this.$el.find(".colorpicker").colorPicker(),
                this.$el.find(".advfow_viewdistance").val(this.model.get("adv_fow_view_distance"));
                var i = this.model.get("controlledby").split(",");
                _.each(i, function(t) {
                    e.$el.find(".controlledby option[value=" + t + "]").prop("selected", !0)
                }),
                t ? this.$el.find(".nav li a[data-tab=" + t + "]").trigger("click") : this.$el.find(".nav li:first-child a").trigger("click"),
                "compact" === n ? (e.$el.find(".bar1options").attr("disabled", !0),
                e.$el.find(".bar2options").attr("disabled", !0),
                e.$el.find(".bar3options").attr("disabled", !0),
                e.$el.find(".compact_bar input[value='compact']").attr("checked", "checked")) : (e.$el.find(".bar1options").attr("disabled", !1),
                e.$el.find(".bar2options").attr("disabled", !1),
                e.$el.find(".bar3options").attr("disabled", !1),
                e.$el.find(".compact_bar input[value='standard']").attr("checked", "checked")),
                this.$el.on("change", "input[type='radio']", function() {
                    "compact" === $("input[name='barStyle']:checked").val() ? ($(".bar1options").val("hidden").attr("disabled", !0),
                    $(".bar2options").val("hidden").attr("disabled", !0),
                    $(".bar3options").val("hidden").attr("disabled", !0)) : ($(".bar1options").val("editors").attr("disabled", !1),
                    $(".bar2options").val("editors").attr("disabled", !1),
                    $(".bar3options").val("editors").attr("disabled", !1))
                })
            },
            updateModel: function() {
                var e = [];
                if (this.$el.find(".controlledby option:selected").each(function() {
                    e.push($(this).val())
                }),
                window.is_gm) {
                    var t = {
                        gmnotes: d20.utils.handleHTMLInput(this.$el.find("textarea.gmnotes").val()),
                        controlledby: this.$el.find(".controlledby").length > 0 ? e.join(",") : this.model.get("controlledby"),
                        represents: this.$el.find(".represents").val(),
                        showname: this.$el.find(".showname").is(":checked"),
                        showplayers_name: this.$el.find(".showplayers_name").is(":checked"),
                        playersedit_name: this.$el.find(".playersedit_name").is(":checked"),
                        aura1_radius: this.$el.find(".aura1_radius").val(),
                        aura1_color: this.$el.find(".aura1_color").val(),
                        aura2_radius: this.$el.find(".aura2_radius").val(),
                        aura2_color: this.$el.find(".aura2_color").val(),
                        tint_color: this.$el.find(".tint_color").val(),
                        light_radius: this.$el.find(".light_radius").length > 0 ? this.$el.find(".light_radius").val() : "",
                        light_dimradius: this.$el.find(".light_dimradius").length > 0 ? this.$el.find(".light_dimradius").val() : "",
                        light_otherplayers: this.$el.find(".light_otherplayers").length > 0 && this.$el.find(".light_otherplayers").is(":checked"),
                        light_hassight: this.$el.find(".light_hassight").length > 0 && this.$el.find(".light_hassight").is(":checked"),
                        light_angle: this.$el.find(".light_angle").length > 0 ? this.$el.find(".light_angle").val() : "",
                        light_losangle: this.$el.find(".light_losangle").length > 0 ? this.$el.find(".light_losangle").val() : "",
                        light_multiplier: this.$el.find(".light_multiplier").length > 0 ? parseFloat(this.$el.find(".light_multiplier").val()) : 1,
                        adv_fow_view_distance: this.$el.find(".advfow_viewdistance").length > 0 ? this.$el.find(".advfow_viewdistance").val() : "",
                        showplayers_aura1: this.$el.find(".showplayers_aura1").is(":checked"),
                        showplayers_aura2: this.$el.find(".showplayers_aura2").is(":checked"),
                        playersedit_aura1: this.$el.find(".playersedit_aura1").is(":checked"),
                        playersedit_aura2: this.$el.find(".playersedit_aura2").is(":checked"),
                        aura1_square: this.$el.find(".aura1_square").is(":checked"),
                        aura2_square: this.$el.find(".aura2_square").is(":checked"),
                        name: d20.utils.strip_tags(this.$el.find(".name").val())
                    };
                    for (let e = 1; e <= 3; ++e) {
                        t[`showplayers_bar${e}`] = this.$el.find(`.showplayers_bar${e}`).is(":checked"),
                        t[`playersedit_bar${e}`] = this.$el.find(`.playersedit_bar${e}`).is(":checked"),
                        t[`bar${e}_num_permission`] = this.$el.find(`.bar${e} .bar_val_permission select`).val(),
                        t.bar_location = this.$el.find(".barLocation .movable_token_bar select").val(),
                        t.compact_bar = this.$el.find(".barLocation .compact_bar input[name='barStyle']:checked").val(),
                        t[`bar${e}_value`] = this.$el.find(`.bar${e}_value`).val(),
                        t[`bar${e}_max`] = this.$el.find(`.bar${e}_max`).val();
                        const n = this.$el.find(`.bar${e}_link`);
                        n.size() > 0 && (t[`bar${e}_link`] = n.val())
                    }
                } else {
                    t = {
                        aura1_radius: this.$el.find(".aura1_radius").val(),
                        aura1_color: this.$el.find(".aura1_color").val(),
                        aura2_radius: this.$el.find(".aura2_radius").val(),
                        aura2_color: this.$el.find(".aura2_color").val(),
                        aura1_square: this.$el.find(".aura1_square").length > 0 ? this.$el.find(".aura1_square").is(":checked") : undefined,
                        aura2_square: this.$el.find(".aura2_square").length > 0 ? this.$el.find(".aura2_square").is(":checked") : undefined,
                        name: this.$el.find("input.name").val()
                    };
                    for (let e = 1; e <= 3; ++e)
                        t[`bar${e}_num_permission`] = this.$el.find(`.bar${e} .bar_val_permission select`).val(),
                        t[`bar${e}_value`] = this.$el.find(`.bar${e}_value`).val(),
                        t[`bar${e}_max`] = this.$el.find(`.bar${e}_max`).val();
                    _.each(t, function(e, n) {
                        e == undefined && delete t[n]
                    })
                }
                if (this.model.character) {
                    var n = this
                      , i = function(e) {
                        var i;
                        if ("" !== (i = window.is_gm ? t["bar" + e + "_link"] : n.model.get("bar" + e + "_link")) && n.model.get("bar" + e + "_link") == i) {
                            var o, r = {};
                            if (r.current = t["bar" + e + "_value"],
                            r.max = t["bar" + e + "_max"],
                            "sheetattr_" === i.substring(0, 10)) {
                                var a = i.substring(10, i.length);
                                if (n.model.character.attribs.each(function(e) {
                                    if (e.get("name").toLowerCase() === a.toLowerCase())
                                        return o = e,
                                        !1
                                }),
                                d20.journal.customSheets && d20.journal.customSheets.reservedAttributes[a.toLowerCase()] && delete r.current,
                                d20.journal.customSheets && d20.journal.customSheets.reservedAttributes[a.toLowerCase() + "_max"] && delete r.max,
                                !o && _.keys(r).length > 0 && (r.current !== undefined && "" !== r.current || r.max !== undefined && "" !== r.max)) {
                                    console.log("No existing attribute found, creating..."),
                                    r.name = a;
                                    var s = n.model.character.attribs.create(r);
                                    delete r.name,
                                    o = s
                                }
                            } else {
                                a = (o = n.model.character.attribs.get(i)).get("name");
                                d20.journal.customSheets && d20.journal.customSheets.reservedAttributes[a.toLowerCase()] && delete r.current,
                                d20.journal.customSheets && d20.journal.customSheets.reservedAttributes[a.toLowerCase() + "_max"] && delete r.max
                            }
                            o && (o.syncedSave(r),
                            delete t["bar" + e + "_value"],
                            delete t["bar" + e + "_max"],
                            window.is_gm && "sheetattr_" === i.substring(0, 10) && (t["bar" + e + "_link"] = o.id))
                        } else
                            _.defer(function() {
                                n.model.refreshTokenLinks(e),
                                n.render()
                            })
                    };
                    i(1),
                    i(2),
                    i(3)
                }
                return this.model.save(t),
                !0
            },
            showDialog: function() {
                var e = this;
                if (this.render(),
                0 != this.$el.find("input").length) {
                    var t = 500;
                    window.is_gm && (t = 675);
                    var n = $(window).height() - d20.utils.playerZoneHeight();
                    n > t && (n = t);
                    var i = 350;
                    window.is_gm && (i = 675),
                    this.$el.dialog({
                        modal: !1,
                        width: i,
                        height: n,
                        position: ["center", 30],
                        title: "Edit Token",
                        zIndex: 10500,
                        buttons: {
                            "Save Changes": function() {
                                e.updateModel() && $(this).dialog("destroy")
                            },
                            Cancel: function() {
                                $(this).dialog("destroy")
                            }
                        }
                    }),
                    this.$el.find(".controlledby").selectize({
                        plugins: ["remove_button"]
                    })
                }
            }
        })
          , v = Backbone.View.extend({
            _template: $("#tmpl_custfxeditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "updateModel", "showDialog"),
                this.$el = $(this.el),
                this.$el.on("click", ".delete", function() {
                    $("<div class='dialog'>Are you sure you want to delete this FX? This cannot be undone.</div>").dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            "Delete FX": function() {
                                e.model.destroy(),
                                $(this).dialog("destroy").remove(),
                                e.$el.dialog("destroy"),
                                d20.fx.changeFx()
                            },
                            Cancel: function() {
                                $(this).dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            $(this).dialog("destroy").remove()
                        }
                    })
                }),
                this.$el.on("keyup", ".name", function(e) {
                    if (32 == e.which || 189 == e.which) {
                        var t = $(this).val();
                        $(this).val(t.replace(/ |-/g, ""))
                    }
                }),
                this.$el.on("click", ".testcustfx", function() {
                    e.updateModel()
                })
            },
            render: function() {
                this.$el.html(this._template.jqote(this.model)),
                this.$el.addClass("dialog").addClass("largedialog"),
                this.$el.attr("data-custfxid", this.model.id),
                this.$el.find(".name").val(this.model.get("name")),
                this.$el.find(".definition").html(this.formatJSON(this.model.get("definition")))
            },
            updateModel: function() {
                var e = this.validateJSON(this.$el.find(".definition").val());
                if (e) {
                    var t = {
                        name: d20.utils.strip_tags(this.$el.find(".name").val()),
                        definition: e
                    };
                    return this.model.save(t),
                    d20.fx.refreshCustFxList(),
                    !0
                }
                return this.showError(),
                !1
            },
            validateJSON: function(e) {
                try {
                    var t = JSON.parse(e);
                    return -1 === t.angle && -1 === t.duration && (t.duration = 25),
                    t
                } catch (n) {
                    return !1
                }
            },
            formatJSON: function(e) {
                var t = [];
                return _.each(e, function(e, n) {
                    "array" == typeof (e = "string" == typeof e ? '"' + e + '"' : e) || "object" == typeof e ? t.push('\t"' + n + '": ' + JSON.stringify(e).replace(/,/g, ", ")) : t.push('\t"' + n + '": ' + e)
                }),
                "{\n" + t.join(",\n") + "\n}"
            },
            showError: function() {
                this.$el.find(".definition").addClass("has-error").one("focus", function() {
                    $(this).removeClass("has-error")
                })
            },
            showDialog: function() {
                var e = this;
                this.render();
                var t = 500
                  , n = $(window).height() - d20.utils.playerZoneHeight();
                n > t && (n = t),
                this.$el.dialog({
                    modal: !1,
                    width: 425,
                    height: n,
                    position: ["center", 30],
                    title: "Edit FX",
                    zIndex: 10500,
                    buttons: {
                        "Save Changes": function() {
                            e.updateModel() && $(this).dialog("destroy")
                        },
                        Cancel: function() {
                            $(this).dialog("destroy")
                        }
                    }
                }),
                this.$el.find(".chosen").chosen()
            }
        })
          , b = Backbone.Model.extend({
            defaults: {
                name: "",
                definition: {
                    maxParticles: 100,
                    emissionRate: 3,
                    size: 35,
                    sizeRandom: 15,
                    lifeSpan: 10,
                    lifeSpanRandom: 3,
                    speed: 3,
                    speedRandom: 1.5,
                    gravity: {
                        x: .01,
                        y: .01
                    },
                    angle: 0,
                    angleRandom: 180,
                    duration: -1,
                    startColour: [220, 35, 0, 1],
                    startColourRandom: [62, 0, 0, .25],
                    endColour: [220, 35, 0, 0],
                    endColourRandom: [60, 60, 60, 0]
                }
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                this.view = new v({
                    model: this
                })
            },
            isNew: function() {
                return !this.persisted
            }
        })
          , w = Backbone.Collection.extend({
            model: b,
            url: "/custfxs/",
            initialize: function() {
                console.log(window.Campaign),
                this.on("add remove change:name", function() {
                    window.currentPlayer && d20.fx.refreshCustFxList()
                })
            }
        })
          , x = Backbone.View.extend({
            _template: $("#tmpl_macroeditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "updateModel", "showDialog"),
                this.$el = $(this.el);
                e = this;
                this.$el.on("click", ".delete", function() {
                    $("<div class='dialog'>Are you sure you want to delete this macro? This cannot be undone.</div>").dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            "Delete Macro": function() {
                                e.model.destroy(),
                                $(this).dialog("destroy").remove(),
                                e.$el.dialog("destroy")
                            },
                            Cancel: function() {
                                $(this).dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            $(this).dialog("destroy").remove()
                        }
                    })
                }),
                this.$el.on("keyup", ".name", function(e) {
                    if (32 == e.which) {
                        var t = $(this).val();
                        $(this).val(t.substring(0, t.length - 1).replace(" ", "") + "-")
                    }
                }),
                this.$el.on("click", ".testmacro", function() {
                    var t = d20.utils.strip_tags(e.convertFromTokenizer(e.$el.find(".macro")));
                    d20.textchat.doChatInput(t)
                })
            },
            render: function() {
                var e = this;
                this.$el.html(this._template.jqote(this.model)),
                this.$el.addClass("dialog").addClass("largedialog"),
                this.$el.attr("data-macroid", this.model.id),
                this.$el.find(".name").val(this.model.get("name")),
                this.$el.find(".macro").html(this.convertForTokenizer(d20.utils.strip_tags(this.model.get("action")))),
                !0 === this.model.get("istokenaction") && this.$el.find(".istokenaction").prop("checked", !0);
                var t = this.model.get("visibleto").split(",");
                _.each(t, function(t) {
                    e.$el.find(".visibleto option[value=" + t + "]").prop("selected", !0)
                })
            },
            updateModel: function() {
                var e = {
                    name: d20.utils.strip_tags(this.$el.find(".name").val()),
                    action: d20.utils.strip_tags(this.convertFromTokenizer(this.$el.find(".macro"))),
                    istokenaction: this.$el.find(".istokenaction").is(":checked")
                };
                if (window.is_gm) {
                    var t = [];
                    this.$el.find(".visibleto option:selected").each(function() {
                        t.push($(this).val())
                    }),
                    e.visibleto = t.join(",")
                }
                this.model.save(e)
            },
            showDialog: function() {
                var e = this;
                this.render();
                var t = 500
                  , n = $(window).height() - d20.utils.playerZoneHeight();
                n > t && (n = t),
                this.$el.dialog({
                    modal: !1,
                    width: 425,
                    height: n,
                    position: ["center", 30],
                    title: "Edit Macro",
                    zIndex: 10500,
                    buttons: {
                        "Save Changes": function() {
                            $(this).dialog("destroy"),
                            e.updateModel()
                        },
                        Cancel: function() {
                            $(this).dialog("destroy")
                        }
                    }
                }),
                this.$el.find(".chosen").chosen(),
                this.$el.find(".macro").atwho("@", {
                    cache: !1,
                    tpl: "<li data-value='{${charname}|${name}}'>${name} <small>${charname}</small></li>",
                    callbacks: {
                        filter: function(e) {
                            var t = []
                              , n = -1 !== e.indexOf("|");
                            if (d20.Campaign.characters.each(function(i) {
                                if (1 == i.get("archived"))
                                    return !0;
                                var o = i.get("inplayerjournals").split(",")
                                  , r = {};
                                (window.is_gm || -1 !== _.indexOf(o, "all") || window.currentPlayer && -1 !== _.indexOf(o, window.currentPlayer.id)) && (i.attribs.each(function(o) {
                                    if ("repeating_" === o.get("name").substring(0, 10))
                                        return !0;
                                    var a = ((n ? i.get("name") + "|" : "") + o.get("name")).score(e);
                                    a > 0 && (t.push({
                                        name: o.get("name").replace("'", "&apos;"),
                                        charname: i.get("name").replace("'", "&apos;"),
                                        score: a
                                    }),
                                    r[o.get("name").toLowerCase()] = !0)
                                }),
                                d20.journal.customSheets && d20.journal.availableAttributes && _.each(d20.journal.customSheets.availableAttributes, function(o, a) {
                                    if (r[a.toLowerCase()] !== undefined)
                                        return !0;
                                    var s = ((n ? i.get("name") + "|" : "") + a).score(e);
                                    s > 0 && t.push({
                                        name: a.replace("'", "&apos;"),
                                        charname: i.get("name").replace("'", "&apos;"),
                                        score: s
                                    })
                                }),
                                r = null)
                            }),
                            d20.journal.customSheets && d20.journal.availableAttributes) {
                                var i = ["selected", "target"];
                                _.each(i, function(i) {
                                    _.each(d20.journal.customSheets.availableAttributes, function(o, r) {
                                        var a = ((n ? i + "|" : "") + r).score(e);
                                        a > 0 && t.push({
                                            name: r.replace("'", "&apos;"),
                                            charname: i,
                                            score: a
                                        })
                                    })
                                })
                            }
                            return t = _.sortBy(t, function(e) {
                                return -e.score
                            })
                        },
                        sorter: function(e, t) {
                            return t
                        }
                    }
                }),
                this.$el.find(".macro").atwho("%", {
                    cache: !1,
                    tpl: "<li data-value='{${charname}|${name}}'>${name} <small>${charname}</small></li>",
                    callbacks: {
                        filter: function(e) {
                            var t = []
                              , n = -1 !== e.indexOf("|");
                            if (d20.Campaign.characters.each(function(i) {
                                if (1 == i.get("archived"))
                                    return !0;
                                var o = i.get("inplayerjournals").split(",")
                                  , r = {};
                                (window.is_gm || -1 !== _.indexOf(o, "all") || window.currentPlayer && -1 !== _.indexOf(o, window.currentPlayer.id)) && (i.abilities.each(function(o) {
                                    var a = ((n ? i.get("name") + "|" : "") + o.get("name")).score(e);
                                    a > 0 && (t.push({
                                        name: o.get("name").replace("'", "&apos;"),
                                        charname: i.get("name").replace("'", "&apos;"),
                                        score: a
                                    }),
                                    r[o.get("name").toLowerCase()] = !0)
                                }),
                                d20.journal.customSheets && d20.journal.availableRolls && _.each(d20.journal.customSheets.availableRolls, function(o, a) {
                                    if (r[a.toLowerCase()] !== undefined)
                                        return !0;
                                    var s = ((n ? i.get("name") + "|" : "") + a).score(e);
                                    s > 0 && t.push({
                                        name: a.replace("'", "&apos;"),
                                        charname: i.get("name").replace("'", "&apos;"),
                                        score: s
                                    })
                                }),
                                r = null)
                            }),
                            d20.journal.customSheets && d20.journal.availableRolls) {
                                var i = ["selected", "target"];
                                _.each(i, function(i) {
                                    _.each(d20.journal.customSheets.availableRolls, function(o, r) {
                                        var a = ((n ? i + "|" : "") + r).score(e);
                                        a > 0 && t.push({
                                            name: r.replace("'", "&apos;"),
                                            charname: i,
                                            score: a
                                        })
                                    })
                                })
                            }
                            return t = _.sortBy(t, function(e) {
                                return -e.score
                            })
                        },
                        sorter: function(e, t) {
                            return t
                        }
                    }
                }),
                this.$el.find(".macro").atwho("#", {
                    cache: !1,
                    callbacks: {
                        filter: function(e) {
                            var t = [];
                            return d20.Campaign.players.each(function(n) {
                                n.macros.each(function(i) {
                                    if ("" == i.get("name"))
                                        return !0;
                                    (n.id == window.currentPlayer.id || i.visibleToCurrentPlayer()) && -1 !== i.get("name").indexOf(e) && t.push({
                                        name: i.get("name"),
                                        val: i.get("name"),
                                        id: i.id
                                    })
                                })
                            }),
                            t
                        }
                    }
                })
            },
            convertFromTokenizer: function(e) {
                return e.val()
            },
            convertForTokenizer: function(e) {
                return console.log(e),
                e
            }
        })
          , k = Backbone.Model.extend({
            defaults: {
                name: "",
                action: "",
                visibleto: "",
                istokenaction: !1
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                this.view = new x({
                    model: this
                })
            },
            isNew: function() {
                return !this.persisted
            },
            visibleToCurrentPlayer: function() {
                if (!window.currentPlayer)
                    return !1;
                var e = this.get("visibleto").split(",");
                return -1 != _.indexOf(e, window.currentPlayer.id) || -1 != _.indexOf(e, "all")
            }
        })
          , E = Backbone.Collection.extend({
            model: k,
            initialize: function() {
                this.on("add remove change:name", function(e) {
                    window.currentPlayer && (this.player.id == window.currentPlayer.id || e.visibleToCurrentPlayer()) && (d20.player_settings.refreshRollsList(),
                    d20.player_settings.refreshMacroBar())
                }),
                this.on("change:visibleto", function() {
                    window.currentPlayer && (d20.player_settings.refreshRollsList(),
                    d20.player_settings.refreshMacroBar())
                })
            }
        })
          , S = Backbone.View.extend({
            _template: $("#tmpl_player_view"),
            initialize: function() {
                var e = this;
                this.model.bind("change", function() {
                    e.render()
                }),
                this.removeTimeout = !1,
                this.wasonline = !1,
                this.render()
            },
            render: function() {
                var e = this
                  , t = this.model;
                if ("" !== this.model.get("d20userid") || "" !== this.model.get("displayname"))
                    if (this.$el.hasClass("player") || (this.$el.addClass("player"),
                    this.$el.attr("id", "player_" + this.model.id),
                    this.$el.html(this._template.jqote(this.model))),
                    this.model.get("online")) {
                        this.wasonline = !0,
                        this.removeTimeout && (clearTimeout(this.removeTimeout),
                        this.removeTimeout = !1);
                        var n = $("#playerzone");
                        if (!this.appended && n.length > 0) {
                            if (playercount = n[0].children.length,
                            playerappendid = $(this.$el).attr("id").split(/_(.+)/)[1],
                            1 == n[0].children.length)
                                n.prepend(this.$el);
                            else {
                                playerlist = [];
                                for (var i = 0; i < playercount; i++)
                                    playerlist.push(n[0].children[i].id.substring(7, n[0].children[i].id.length));
                                var o = !1;
                                for (i = 0; i < playerlist.length; i++)
                                    if (playerappendid < playerlist[i]) {
                                        console.log("Adding myself before " + playerlist[i]),
                                        beforeplayer = "#player_" + playerlist[i];
                                        var r = n.find(beforeplayer);
                                        if (r.length > 0) {
                                            r.before(this.$el),
                                            o = !0;
                                            break
                                        }
                                    }
                                o || n.find("#macrobar").before(this.$el)
                            }
                            this.$el.find(".colorpicker").colorPicker(),
                            this.$el.find(".colorpicker").bind("change", function() {
                                e.model.set({
                                    color: $(this).val()
                                }).save()
                            }),
                            this.$el.droppable({
                                accept: ".draggablecard, .cardinhand, .handout, .character",
                                hoverClass: "dropping",
                                tolerance: "pointer",
                                greedy: !0,
                                drop: function(e, n) {
                                    var i = n.draggable
                                      , o = $(i);
                                    if (console.log("Card dropped onto player!"),
                                    e.originalEvent.dropHandled = !0,
                                    o.hasClass("handout") || o.hasClass("character")) {
                                        if (!window.is_gm)
                                            return;
                                        var r = "handout";
                                        o.hasClass("character") && (r = "character");
                                        var a = d20.Campaign[r + "s"].get(o.attr("data-itemid"));
                                        if (!a)
                                            return void console.log("Can't find handout/character!");
                                        if ("character" === r)
                                            return;
                                        var s = a.get("inplayerjournals").split(",");
                                        -1 === s.indexOf(t.id) && (s.push(t.id),
                                        a.save({
                                            inplayerjournals: s.join(",")
                                        })),
                                        d20.textchat.sendShout({
                                            type: "showhandout",
                                            jid: a.id,
                                            jtype: r,
                                            time: (new Date).getTime(),
                                            playerid: t.id
                                        })
                                    } else {
                                        var l = o.parents(".deckstack")
                                          , c = o.parents(".deckpile");
                                        if (l.length > 0 || c.length > 0) {
                                            var u = d20.Campaign.decks.get((l.length > 0 ? l : c).attr("data-deckid"));
                                            if (!u)
                                                return void console.log("Unable to find deck!");
                                            var d = o.attr("data-cardid");
                                            if ("nextcard" == d) {
                                                $(".tipsy").remove();
                                                var h = u.drawCard();
                                                d = u.cardAtIndex(h).id,
                                                l.on("currentCardRemoved.nextcard", function() {
                                                    u.finishDrawingCard(h, !0)
                                                })
                                            }
                                            if ("true" === o.attr("data-resetdeckstack") && u.save({
                                                currentCardShown: !1
                                            }),
                                            !(p = u.cards.get(d)))
                                                return void console.log("Unable to find card!");
                                            if (f = $(e.target).hasClass("player") ? $(e.target).attr("id").replace("player_", "") : $(e.target).parents(".player").attr("id").replace("player_", ""),
                                            !(g = d20.Campaign.players.get(f)))
                                                return void console.log("Unable to find player!");
                                            d20.Campaign.hands.addCardToHandForPlayer(p, g),
                                            l.trigger("currentCardRemoved"),
                                            c.trigger("chosenCardPlayed", i),
                                            o.remove(),
                                            d20.decks.lastDragCard = !1
                                        } else if (o.parents(".handcontainer").length > 0) {
                                            var p, f, g, m = d20.Campaign.hands.get(o.parents(".handcontainer").attr("data-handid"));
                                            if (!m)
                                                return void console.log("Unable to find hand!");
                                            if (!(p = d20.decks.cardByID(o.attr("data-cardid"))))
                                                return void console.log("Unable to find card!");
                                            if (f = $(e.target).hasClass("player") ? $(e.target).attr("id").replace("player_", "") : $(e.target).parents(".player").attr("id").replace("player_", ""),
                                            (g = d20.Campaign.players.get(f)).id == m.get("parentid"))
                                                return;
                                            var y = !1;
                                            if (d20.Campaign.cardtrades.each(function(e) {
                                                (e.isInitOrRec() || e.isInitOrRec(f)) && (y = !0)
                                            }),
                                            y)
                                                return void alert("There is already a trade pending that involves either you or the target player. Please wait for that trade to be concluded before beginning another trade.");
                                            d20.Campaign.cardtrades.create({
                                                initiated_by: window.currentPlayer.id,
                                                received_by: f,
                                                initiator_cards: p.id
                                            }),
                                            o.addClass("trading"),
                                            d20.decks.lastDragCard = !1
                                        }
                                    }
                                }
                            }),
                            this.$el.find(".playername, .video").addClass("player-bookmark"),
                            this.$el.find(".playername, .video").draggable({
                                revert: !0,
                                revertDuration: 0,
                                helper: function() {
                                    return $("<div class='playerdrag'><img class='avatar' src='/users/avatar/" + e.model.get("d20userid") + "/150' /> " + e.model.get("displayname") + "</div>")
                                },
                                appendTo: "body",
                                scroll: !1
                            }).addTouch(),
                            "roll20" === d20ext.videotype.substring(0, 6) && d20.webrtc.updateDraggable(),
                            this.appended = !0
                        }
                        this.$el.find(".playername .name").text(this.model.get("displayname")),
                        this.$el.find(".colorpicker").length > 0 ? this.$el.find(".colorpicker").val(this.model.get("color")).trigger("change-silent") : this.$el.find("div.playercolor").css({
                            "background-color": this.model.get("color")
                        }),
                        "roll20" === d20ext.videotype.substring(0, 6) && (d20.webrtc.postLargeGroupWarning(),
                        d20.webrtc.connect())
                    } else {
                        if (console.log("Player " + this.model.id + " is offline..."),
                        window.currentPlayer == this.model)
                            return;
                        !this.removeTimeout && this.wasonline && (this.removeTimeout = setTimeout(function() {
                            e.appended && (e.$el.attr("style", ""),
                            e.$el.remove(),
                            e.appended = !1),
                            e.removeTimeout = !1,
                            "roll20" === d20ext.videotype.substring(0, 6) && 0 === d20.Campaign.players.filter(function(e) {
                                return e.get("online") && e !== window.currentPlayer
                            }).length && d20.webrtc.disconnect()
                        }, 5e3))
                    }
                else
                    console.log("invalid 20 user id and display name")
            },
            showPopout: function() {
                var e = this
                  , t = e.$el.find("video")[0].videoWidth
                  , n = e.$el.find("video")[0].videoHeight
                  , i = n / 200;
                t /= i,
                n = n / i + 24;
                var o = e.$el[0].id.substr(7);
                this.childWindow = window.open("/editor/popoutvideo", "Popout " + e.model.get("displayname"), "menubar=0,location=0,toolbar=0,status=0,scrollbars=1,width=" + t + ",height=" + n),
                window.allChildWindows.push(this.childWindow);
                var r = $("#player_" + o);
                r.addClass("popped-out");
                var a = e.$el.find(".video")
                  , s = e.$el.find(".pause-video-icon")
                  , l = e.$el.find(".muted-self-icon")
                  , c = e.$el.find(".muted-other-icon")
                  , u = e.$el.find(".playername");
                this.childWindow.onload = function() {
                    var t = $(e.childWindow.document).find(".player");
                    t.attr("id", "player_" + o),
                    a.appendTo(t),
                    s.appendTo(t),
                    l.appendTo(t),
                    c.appendTo(t),
                    u.clone(!0).appendTo(t),
                    e.childWindow.document.title = e.model.get("displayname"),
                    e.$el.show()
                }
                ,
                this.childWindow.onbeforeunload = function() {
                    r.removeClass("popped-out"),
                    r.find(".deckhands").after(a),
                    r.append(l),
                    r.append(c),
                    r.append(s),
                    window.allChildWindows = _.without(window.allChildWindows, e.childWindow),
                    e.childWindow = null,
                    u.one("dblclick", function() {
                        e.showPopout()
                    })
                }
            }
        })
          , C = Backbone.Model.extend({
            defaults: {
                d20username: "",
                d20userid: "",
                displayname: "",
                speakingas: "",
                online: !1,
                color: "#13B9F0",
                macrobar: "",
                showmacrobar: !1,
                videoplayersize: fabric.isTouchSupported ? "small" : "regular",
                videoplayerlocation: "bottom",
                videobroadcasttype: "both",
                videoreceivetype: "both",
                tddiceenabled: !1,
                apptddiceenabled: !0,
                disableagency: !1,
                diceiconsenabled: !0,
                chatavatarsenabled: !0,
                chattimestampsenabled: !1,
                chatbeepenabled: !0,
                lastActive: 0,
                advShortcuts: !1,
                usePopouts: !1,
                journalfolderstatus: "",
                jukeboxfolderstatus: "",
                globalvolume: 100,
                alphatokenactions: !0,
                lastpage: "",
                librarytab: "marketplace",
                recentuploadsfilter: !1,
                bigsearchstyle: !1,
                adv_fow_revealed: "{}",
                animations_enabled: !0
            },
            initialize: function() {
                var e = this;
                if (this.id)
                    this.persisted = !0;
                else {
                    var t = generateUUID();
                    this.set({
                        id: t
                    }),
                    this.url = this.collection.url + t
                }
                this.macros = new E,
                this.macros.url = "/macros/player/" + this.id + "/",
                this.macros.player = this,
                _.defer(function() {
                    e.macros.backboneFirebase = new BackboneFirebase(e.macros)
                }),
                _.defer(function() {
                    if (e.view = new S({
                        model: e
                    }),
                    d20.Campaign.get("disable_speakingas")) {
                        var t = "";
                        e.updateAvatar(t)
                    } else
                        e.on("change:speakingas", function(e, t) {
                            0 == d20.Campaign.get("disable_speakingas") && e.updateAvatar(t)
                        });
                    e.on("change:adv_fow_revealed", function(e, t) {
                        const n = e.get("id");
                        d20.engine.advanced_fog.revealed_cells[n] || (d20.engine.advanced_fog.revealed_cells[n] = {});
                        const i = d20.engine.advanced_fog.revealed_cells[n]
                          , o = JSON.parse(t)
                          , r = Object.keys(o);
                        for (const e of r) {
                            const t = Array.isArray(o[e]) ? o[e] : [];
                            if (_.has(i, e)) {
                                const n = t.length;
                                for (let o = 0; o < n; ++o)
                                    i[e].add(t[o])
                            } else
                                i[e] = new Set(t)
                        }
                        d20.engine.redrawScreenNextTick()
                    }),
                    window.currentPlayer === e && (e.get("showmacrobar") && ($("#showmacrobar").prop("checked", !0),
                    $("#playerzone").addClass("showmacrobar")),
                    e.get("tddiceenabled") && ($("#enable3ddice").prop("checked", !0),
                    d20.tddice && d20.tddice.canRoll3D() && !d20.tddice.sceneInitialized && d20.tddice.addRenderer()),
                    e.get("disableagency") && $("#autoroll").prop("checked", !0),
                    "library" === e.get("librarytab") ? $("#switchtouserlibrary").trigger("click") : $("#switchtomarketplacelibrary").trigger("click"),
                    !0 === e.get("recentuploadsfilter") ? $("#imagedialog .recentuploadsfilter").addClass("filtered") : $("#imagedialog .recentuploadsfilter").addClass("notfiltered"),
                    !0 === e.get("bigsearchstyle") ? ($("#imagedialog .searchstyle").addClass("filtered"),
                    $("#librarysearchroot").addClass("fullsizesearch")) : ($("#imagedialog .searchstyle").addClass("notfiltered"),
                    $("#librarysearchroot").removeClass("fullsizesearch")),
                    d20.library && (d20.library.buildRecentUploads(),
                    d20.library.validateFolderStructure()),
                    $("#videoplayersize").val(e.get("videoplayersize")).trigger("change"),
                    $("#videobroadcasttype").val(e.get("videobroadcasttype")),
                    $("#videoreceivetype").val(e.get("videoreceivetype")),
                    e.on("change:macrobar", function() {
                        d20.player_settings.refreshRollsList(),
                        d20.player_settings.refreshMacroBar()
                    }),
                    d20.player_settings.refreshMacroBar(),
                    e.on("change:diceiconsenabled", function() {
                        this.get("diceiconsenabled") ? ($("#textchat").removeClass("withouticons"),
                        $("#diceiconsenabled").prop("checked", !0)) : ($("#textchat").addClass("withouticons"),
                        $("#diceiconsenabled").prop("checked", !1))
                    }),
                    e.on("change:chatavatarsenabled", function() {
                        this.get("chatavatarsenabled") ? ($("#textchat").removeClass("withoutavatars"),
                        $("#chatavatarsenabled").prop("checked", !0)) : ($("#textchat").addClass("withoutavatars"),
                        $("#chatavatarsenabled").prop("checked", !1))
                    }),
                    e.on("change:chattimestampsenabled", function() {
                        this.get("chattimestampsenabled") ? ($("#textchat").addClass("withtimestamps"),
                        $("#chattimestampsenabled").prop("checked", !0)) : ($("#textchat").removeClass("withtimestamps"),
                        $("#chattimestampsenabled").prop("checked", !1))
                    }),
                    e.get("alphatokenactions") && $("#alphatokenactionsenabled").prop("checked", !0),
                    e.get("animations_enabled") || $("#animations_enabled").prop("checked", !1),
                    e.on("change:animations_enabled", (e,t)=>{
                        d20.engine.animations_enabled = t,
                        t ? (d20.engine.canvas.stillsToAnimations(),
                        d20.Campaign.players.forEach(function(e) {
                            let t = e.get("speakingas");
                            e.updateAvatar(t)
                        })) : (d20.engine.canvas.animationsToStills(),
                        d20.engine.redrawScreenNextTick(),
                        d20.Campaign.players.forEach(function(e) {
                            let t = e.get("speakingas");
                            e.updateAvatar(t)
                        }));
                        const n = d20.engine.selected();
                        /^(?:objects|gmlayer)$/.test(window.currentEditingLayer) && 1 === n.length && n[0].isAnimatedOrVideoStill && d20.token_editor.showRadialMenu(n[0], !0, !0)
                    }
                    ),
                    e.on("change:chatbeepenabled", function() {
                        this.get("chatbeepenabled") ? $("#chatbeepenabled").prop("checked", !0) : $("#chatbeepenabled").prop("checked", !1)
                    }),
                    e.on("change:advShortcuts", function() {
                        !0 === this.get("advShortcuts") ? (Mousetrap.unpause(),
                        $("#useAdvShortcuts").prop("checked", !0)) : (Mousetrap.pause(),
                        $("#useAdvShortcuts").prop("checked", !1))
                    }),
                    e.on("change:usePopouts", function() {
                        !0 === this.get("usePopouts") ? $("#usePopouts").prop("checked", !0) : $("#usePopouts").prop("checked", !1)
                    }),
                    e.on("change:globalvolume", function() {
                        window.is_playerapp || (d20.jukebox.globalVolume = Math.pow(this.get("globalvolume") / 100, 2),
                        console.log("Global Volume: " + this.get("globalvolume") + "=" + d20.jukebox.globalVolume),
                        window.Jukebox.scanForNewPlays(),
                        $("#globalvolume").slider("value", this.get("globalvolume")))
                    }),
                    e.trigger("change:diceiconsenabled"),
                    e.trigger("change:chatavatarsenabled"),
                    e.trigger("change:chattimestampsenabled"),
                    e.trigger("change:chatbeepenabled"),
                    e.trigger("change:advShortcuts"),
                    e.trigger("change:usePopouts"),
                    e.trigger("change:globalvolume"),
                    d20.engine.animations_enabled = e.get("animations_enabled")),
                    e.trigger("change:adv_fow_revealed", e, e.get("adv_fow_revealed"))
                }),
                this.on("change:color", function() {
                    e.updateCSSRules()
                }),
                this.updateCSSRules()
            },
            isNew: function() {
                return !this.persisted
            },
            addToMacroBar: function(e) {
                var t = this.get("macrobar").split(",");
                t.push(e),
                this.save({
                    macrobar: _.uniq(t).join(",")
                }),
                !1 === this.get("showmacrobar") && (this.save({
                    showmacrobar: !0
                }),
                $("#playerzone").addClass("showmacrobar"),
                $("#showmacrobar").prop("checked", !0))
            },
            removeFromMacroBar: function(e) {
                for (var t = this.get("macrobar").split(","), n = !1, i = 0; i < t.length; i++)
                    -1 !== t[i].indexOf(e) && (n = t[i]);
                n && this.set({
                    macrobar: _.without(t, n).join(",")
                }).save()
            },
            addMacroNickname: function(e, t) {
                for (var n = this.get("macrobar").split(","), i = !1, o = 0; o < n.length; o++)
                    -1 !== n[o].indexOf(e) && (minfo = n[o].split("|"),
                    minfo[2] || (minfo[2] = "#"),
                    minfo[3] = encodeURIComponent(t),
                    i = minfo.join("|"),
                    n[o] = i);
                i && this.set({
                    macrobar: n.join(",")
                }).save()
            },
            changeMacroColor: function(e, t) {
                for (var n = this.get("macrobar").split(","), i = !1, o = 0; o < n.length; o++)
                    -1 !== n[o].indexOf(e) && (minfo = n[o].split("|"),
                    minfo[2] = t,
                    i = minfo.join("|"),
                    n[o] = i);
                i && this.set({
                    macrobar: n.join(",")
                }).save()
            },
            getMacroBar: function() {
                return this.get("macrobar").split(",")
            },
            updateCSSRules: function() {
                var e = {};
                e["#textchat .rollresult.player-" + this.id + " .diceroll .backing"] = "{ color: " + this.get("color") + "; text-shadow: 0px 0px 3px " + this.get("color") + ";}",
                d20.utils.addCSSRules(e)
            },
            updateAvatar: function(e) {
                if ("" != e && e != undefined) {
                    e = e.split("|");
                    let t = $("#player_" + this.id).find(".avatarvideo")
                      , n = $("#player_" + this.id).find(".video");
                    if (t.length && t.remove(),
                    "character" == e[0]) {
                        let t = d20.Campaign.characters.get(e[1]).get("avatar");
                        if ("" == t)
                            n.css("background-image", "url(/users/avatar/" + this.get("d20userid") + "/150)");
                        else if (/.+\.webm(\?.*)?$/i.test(t))
                            if (d20.engine.animations_enabled) {
                                let e = $('<video src="' + t + '" class="avatarvideo" draggable="false" width="150px" style="position:absolute" muted autoplay loop />');
                                n.css("background-image", "none"),
                                n.before(e)
                            } else
                                t = t.replace("med.webm", "frame.png"),
                                n.css("background-image", "url(" + t + ")");
                        else
                            n.css("background-image", "url(" + t + ")")
                    } else
                        n.css("background-image", "url(/users/avatar/" + this.get("d20userid") + "/150)")
                } else {
                    let e = $("#player_" + this.id).find(".avatarvideo")
                      , t = $("#player_" + this.id).find(".video");
                    e.length && e.remove(),
                    t.css("background-image", "url(/users/avatar/" + this.get("d20userid") + "/150)")
                }
            }
        })
          , T = Backbone.Collection.extend({
            model: C,
            url: "/players/",
            initialize: function() {
                this.on("add", e=>{
                    d20.engine.advanced_fog.revealed_cells[e.get("id")] = {},
                    setTimeout(function() {
                        d20.engine.advanced_fog.revealed_cells[e.get("id")][d20.Campaign.activePage().get("id")] = new Set
                    }, 0)
                }
                )
            }
        })
          , A = Backbone.View.extend({
            _template: $.jqotec("#tmpl_campaignsettings"),
            initialize: function() {
                _.bindAll(this, "render"),
                this.model.bind("change", this.render),
                $(this.el).addClass("dialog"),
                this.$el = $(this.el)
            },
            render: function() {
                $(this.el).html(this._template())
            },
            updatecampaignSettings: function() {}
        });
        d20.models.InitiativeWindow = Backbone.View.extend({
            el: $("#initiativewindow"),
            initialize: function() {
                _.bindAll(this, "render", "showWindow", "_rebuildInitiativeList", "endRounds", "recordOrderFromList", "handlePageChange", "cleanList"),
                this.rebuildInitiativeList = _.debounce(this._rebuildInitiativeList, 50);
                var e = this;
                this.windowopen = !1;
                try {
                    this.model.currentOrderArray = JSON.parse(this.model.get("turnorder") || "[]")
                } catch (t) {
                    this.model.currentOrderArray = []
                }
                this.model.bind("change:turnorder", function() {
                    try {
                        e.model.currentOrderArray = JSON.parse(e.model.get("turnorder") || "[]")
                    } catch (t) {
                        e.model.currentOrderArray = []
                    }
                    e.rebuildInitiativeList()
                }),
                this.model.bind("change:initiativepage", function() {
                    e.handlePageChange()
                }),
                $("#startrounds").on(clicktype, function() {
                    this.windowopen || e.model.set({
                        initiativepage: !0
                    }).save()
                }),
                this.handlePageChange(),
                $("#initiativewindow").on(clicktype, ".initiative.editable", function() {
                    if ($(this).find("input").length > 0)
                        $(this).find("input").focus().select();
                    else {
                        var e = $.trim($(this).text());
                        $(this).html("<input type='text' value='" + e + "'/>"),
                        $(this).find("input").focus().select()
                    }
                }),
                $("#initiativewindow").on("keydown", ".initiative.editable", function(t) {
                    if (13 == t.which)
                        return e.recordOrderFromList(),
                        !1;
                    if (9 == t.which && window.is_gm) {
                        var n = $(this).parents("li.token").next();
                        return 0 == n.length && (n = $(this).parents("ul").find("li:first-child")),
                        n.find(".initiative").trigger("click"),
                        !1
                    }
                }),
                this.$el.on("mouseenter", "li", function() {
                    var e = $(this).attr("data-tokenid");
                    if ("-1" !== e) {
                        var t = d20.Campaign.activePage().thegraphics.get(e);
                        t && (d20.engine.highlightToken = t,
                        d20.engine.redrawScreenNextTick())
                    }
                }),
                this.$el.on("mouseleave", "li", function() {
                    d20.engine.highlightToken = !1,
                    d20.engine.redrawScreenNextTick()
                }),
                window.is_gm && (this.$el.on("click", ".remove", function() {
                    var t = parseInt($(this).parents("li").attr("data-currentindex"), 10);
                    d20.engine.highlightToken = !1,
                    d20.engine.redrawScreenNextTick();
                    var n = e.cleanList();
                    n.splice(t, 1),
                    e.model.save({
                        turnorder: JSON.stringify(n)
                    })
                }),
                $("#initiativewindow_settings").on("click", ".sortlist_numeric", function() {
                    e.recordOrderFromList();
                    var t = e.cleanList();
                    t = _.sortBy(t, function(e) {
                        return parseFloat(e.pr)
                    }),
                    e.model.set({
                        turnorder: JSON.stringify(t)
                    }).save(),
                    $("#initiativewindow_settings").dialog("close")
                }),
                $("#initiativewindow_settings").on("click", ".sortlist_numericdesc", function() {
                    e.recordOrderFromList();
                    var t = e.cleanList();
                    (t = _.sortBy(t, function(e) {
                        return parseFloat(e.pr)
                    })).reverse(),
                    e.model.set({
                        turnorder: JSON.stringify(t)
                    }).save(),
                    $("#initiativewindow_settings").dialog("close")
                }),
                $("#initiativewindow_settings").on("click", ".sortlist_alpha", function() {
                    e.recordOrderFromList();
                    var t = e.cleanList();
                    t = _.sortBy(t, function(e) {
                        return e.pr
                    }),
                    e.model.set({
                        turnorder: JSON.stringify(t)
                    }).save(),
                    $("#initiativewindow_settings").dialog("close")
                }),
                $("#initiativewindow_settings").on("click", ".sortlist_alphadesc", function() {
                    e.recordOrderFromList();
                    var t = e.cleanList();
                    (t = _.sortBy(t, function(e) {
                        return e.pr
                    })).reverse(),
                    e.model.set({
                        turnorder: JSON.stringify(t)
                    }).save(),
                    $("#initiativewindow_settings").dialog("close")
                }),
                $("#initiativewindow_settings").on("click", ".sortlist_card", function() {
                    e.recordOrderFromList();
                    var t = e.cleanList();
                    (t = _.sortBy(t, function(e) {
                        e.pr = e.pr + "";
                        var t = window.escape(e.pr.substring(e.pr.length - 1, e.pr.length))
                          , n = e.pr.substring(0, e.pr.length - 1)
                          , i = 0;
                        if ("BJo" == e.pr || "RJo" == e.pr)
                            i = 1500;
                        else if ("%u2666" === t || "%u2665" === t || "%u2660" === t || "%u2663" === t) {
                            switch (n) {
                            case "A":
                                i = 14;
                                break;
                            case "K":
                                i = 13;
                                break;
                            case "Q":
                                i = 12;
                                break;
                            case "Ja":
                                i = 11;
                                break;
                            default:
                                i = parseInt(n, 10)
                            }
                            switch (t) {
                            case "%u2666":
                                i += .2;
                                break;
                            case "%u2665":
                                i += .3;
                                break;
                            case "%u2660":
                                i += .4;
                                break;
                            case "%u2663":
                                i += .1
                            }
                            i *= 100
                        } else
                            i = parseInt(e.pr, 10);
                        return _.isFinite(i) || (i = 0),
                        i
                    })).reverse(),
                    e.model.set({
                        turnorder: JSON.stringify(t)
                    }).save(),
                    $("#initiativewindow_settings").dialog("close")
                }),
                $("#initiativewindow_settings").on("click", ".clearlist", function() {
                    e.clearList()
                }),
                $("#initiativewindow_settings").on("click", ".addcustom", function() {
                    e.recordOrderFromList(),
                    e.addTokenToList("-1", $("#initiativewindow_settings input.customentry").val(), $("#initiativewindow_settings input.customformula").val()),
                    $("#initiativewindow_settings input.customentry").val("")
                }),
                $("#initiativewindow_settings input.customentry").on("keyup", function(e) {
                    if (13 === e.which)
                        return $("#initiativewindow_settings .addcustom").trigger("click"),
                        !1
                }))
            },
            cleanList: function() {
                var e, t = [];
                return e = this.model.currentOrderArray,
                this.windowopen ? (_.each(e, function(e) {
                    if ("-1" === e.id)
                        t.push(e);
                    else {
                        var n;
                        if (d20.Campaign.pages.each(function(t) {
                            if (!0 === t.get("archived"))
                                return !0;
                            t.thegraphics.get(e.id) && (n = t.thegraphics.get(e.id),
                            e._pageid = t.id)
                        }),
                        !n && window.is_gm)
                            return !0;
                        t.push(e)
                    }
                }),
                t) : e
            },
            _rebuildInitiativeList: function() {
                var e = this;
                if (this.windowopen) {
                    var t = this.cleanList();
                    if (0 == t.length)
                        $("#initiativewindow .characterlist").html("<p style='padding: 5px;'>There aren't currently any tokens on this page that take a turn!</p><p style='padding: 5px;'>Right-click a token and choose 'Add a Turn'. You can also use the shortcut Ctrl+U to quickly add groups.</p>");
                    else {
                        var n = -1
                          , i = "";
                        _.each(t, function(e) {
                            n++;
                            var t, o = "", r = !1;
                            if ("-1" === e.id)
                                o = e.custom,
                                r = window.is_gm;
                            else {
                                if (!e._pageid || e._pageid !== d20.Campaign.activePage().id && !window.is_gm)
                                    return !0;
                                if (!(t = d20.Campaign.pages.get(e._pageid).thegraphics.get(e.id)) || "map" == t.get("layer") || !window.is_gm && "gmlayer" == t.get("layer"))
                                    return !0;
                                (window.is_gm || t.get("showplayers_name") || t.currentPlayerControls() && t.get("playersedit_name")) && (o = t.get("name")),
                                (window.is_gm || t.currentPlayerControls()) && (r = !0)
                            }
                            var a = {
                                name: o,
                                pr: e.pr,
                                id: e.id,
                                avatar: t ? t.get("imgsrc") : "",
                                layer: t ? t.get("layer") : "objects",
                                idx: n,
                                iseditable: r
                            };
                            i += $("#tmpl_initiativecharacter").jqote(a)
                        }),
                        $("#initiativewindow .characterlist").html(i)
                    }
                    $("#initiativewindow .initiative.editable").droppable({
                        accept: ".draggablecard, .rolled",
                        tolerance: "pointer",
                        greedy: !0,
                        hoverClass: "dropping",
                        drop: function(t, n) {
                            console.log("Dropped onto initiative window!"),
                            e.recordOrderFromList(),
                            t.originalEvent.dropHandled = !0;
                            var i, o = $(n.draggable);
                            if (o.hasClass("rolled"))
                                i = parseInt(o.text(), 10);
                            else {
                                if (!o.hasClass("draggablecard"))
                                    return;
                                var r = o.attr("data-cardid")
                                  , a = d20.decks.cardByID(r);
                                if (!a)
                                    return void console.log("Couldn't find card!");
                                i = a.getAbbreviation()
                            }
                            var s = parseInt($(this).parents("li").attr("data-currentindex"), 10);
                            e.updateTokenInList(s, {
                                pr: i
                            })
                        }
                    }),
                    window.is_gm && $("#initiativewindow .characterlist").sortable({
                        containment: "parent",
                        axis: "y",
                        helper: "placeholder",
                        forceHelperSize: !0,
                        tolerance: "pointer",
                        stop: function() {
                            e.recordOrderFromList()
                        }
                    }).addTouch()
                }
            },
            updateTokenInList: function(e, t) {
                var n = this.cleanList()
                  , i = 0
                  , o = [];
                for (var r in _.each(n, function(e) {
                    var t, n = !1;
                    "-1" === e.id ? n = window.is_gm : (t = d20.Campaign.pages.get(e._pageid).thegraphics.get(e.id),
                    (window.is_gm || t.currentPlayerControls()) && (n = !0)),
                    o[i] = n,
                    i++
                }),
                t)
                    o[e] && (n[e][r] = t[r]);
                console.log("Saving"),
                this.model.get("turnorder") === JSON.stringify(n) ? this.model.trigger("change:turnorder") : this.model.save({
                    turnorder: JSON.stringify(n)
                })
            },
            addTokenToList: function(e, t, n) {
                if (window.is_gm) {
                    var i = this.cleanList()
                      , o = {
                        id: e,
                        pr: "0",
                        custom: t || ""
                    };
                    n && (o.formula = n),
                    i.push(o),
                    this.model.save({
                        turnorder: JSON.stringify(i)
                    })
                }
            },
            recordOrderFromList: function() {
                var e = this.cleanList();
                if ($("#initiativewindow .characterlist li").each(function() {
                    var t = parseInt($(this).attr("data-currentindex"), 10);
                    $(this).find(".initiative input").length > 0 && (e[t].pr = $(this).find(".initiative input").val())
                }),
                window.is_gm) {
                    var t = -1;
                    e = _.sortBy(e, function() {
                        var e = $("#initiativewindow .characterlist li[data-currentindex=" + ++t + "]");
                        return e.length > 0 ? $("#initiativewindow .characterlist li").index(e) : 1e3
                    })
                }
                this.model.save({
                    turnorder: JSON.stringify(e)
                })
            },
            showWindow: function() {
                var e = this
                  , t = {};
                window.is_gm && (t = [{
                    text: "y",
                    "class": "pictos ui-button ui-widget ui-state-default ui-corner-all",
                    click: function() {
                        $("#initiativewindow_settings").dialog({
                            modal: !1,
                            title: "Turn Order Settings",
                            beforeClose: function() {}
                        })
                    }
                }, {
                    text: "]",
                    "class": "pictos ui-button ui-widget ui-state-default ui-corner-all",
                    click: function() {
                        e.nextTurn()
                    }
                }]),
                this.$el.dialog({
                    modal: !1,
                    width: 160,
                    height: 350,
                    title: "Turn Order",
                    zIndex: 10500,
                    position: [60, $(window).height() - d20.utils.playerZoneHeight() - 400],
                    buttons: t,
                    closeOnEscape: !1,
                    beforeClose: function() {
                        window.is_gm && _.defer(function() {
                            e.windowopen && e.endRounds()
                        }),
                        e.$el.parents(".ui-dialog").removeClass("dialog-collapsed")
                    }
                }),
                window.is_gm || this.$el.parents(".ui-dialog").find(".ui-dialog-titlebar-close").remove(),
                this.$el.parents(".ui-dialog").find(".ui-button").addClass("pictos").addClass("bigbuttonwithicons")
            },
            endRounds: function() {
                this.model.save({
                    initiativepage: !1
                })
            },
            nextTurn: function() {
                this.recordOrderFromList();
                var e = this.cleanList();
                if (!(e.length < 2)) {
                    var t = e.splice(0, 1);
                    e.push(t[0]);
                    var n = e[0];
                    if (n.formula) {
                        console.log("Entering formula loop");
                        try {
                            if (console.log("Doing calc"),
                            n.pr = parseInt(n.pr, 10) + parseInt(n.formula, 10),
                            !_.isFinite(n.pr))
                                throw n.pr = 0,
                                "NaN"
                        } catch (o) {
                            console.log("Caught error");
                            var i = {
                                who: "error",
                                type: "error",
                                content: "The turn order calculation " + n.formula + " is invalid."
                            };
                            d20.textchat.incoming(!1, i)
                        }
                    }
                    console.log("Setting updated turn order"),
                    this.model.set({
                        turnorder: JSON.stringify(e)
                    }).save()
                }
            },
            handlePageChange: function() {
                var e = this.model.get("initiativepage");
                return e && !this.windowopen ? (this.rebuildInitiativeList(),
                this.showWindow(),
                void (this.windowopen = !0)) : !e && this.windowopen ? (this.$el.dialog("close"),
                void (this.windowopen = !1)) : void 0
            },
            clearList: function() {
                var e = this;
                $("<div>Are you sure you want to clear the turns list?</div>").dialog({
                    title: "Confirm",
                    buttons: {
                        Clear: function() {
                            $(this).dialog("destroy").remove(),
                            e.model.set({
                                turnorder: JSON.stringify([])
                            }).save()
                        },
                        Cancel: function() {
                            $(this).dialog("destroy").remove()
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy").remove()
                    },
                    modal: !0
                })
            }
        }),
        d20.models.CompendiumFilters = Backbone.View.extend({
            el: $("#compendiumfilter"),
            initialize: function() {
                _.bindAll(this, "render", "showWindow", "getFilters", "clearFilters", "closeWindow");
                var e = this;
                this.windowopen = !1,
                this.currentFilters = {},
                this.$filterSections = {};
                var t = "";
                _.each(templateCategories, function(n) {
                    t += "#" + n + "_filter,",
                    e.$filterSections[n] = $("#" + n + "_filter")
                }),
                this.$filterSections.all = $(t.slice(0, -1))
            },
            getFilters: function() {
                return this.currentFilters
            },
            clearFilters: function() {
                $("#compendiumfilter form")[0].reset(),
                this.currentFilters = {},
                this.$el.find(".chosen").trigger("chosen:updated"),
                this.$filterSections.all.hide()
            },
            closeWindow: function() {
                this.$el.dialog("destroy"),
                $("#rightsidebar").off("click", "ul.tabmenu, #compendium .searchbox span", this.closeWindow)
            },
            showWindow: function(e) {
                var t = new Event("filter")
                  , n = $(":focus")
                  , i = this
                  , o = {
                    Cancel: function() {
                        $("#compendiumfilter form")[0].reset(),
                        i.$filterSections[e].find(".chosen").trigger("chosen:updated"),
                        i.currentFilters = {},
                        i.$el.dialog("destroy"),
                        window.dispatchEvent(t)
                    },
                    "Apply Filters": function() {
                        i.$el.dialog("destroy");
                        var n = {};
                        i.$filterSections[e].find(".filter-search_filter-value").each(function() {
                            var e = $(this)
                              , t = e.attr("name").replace("[]", "")
                              , i = e.data("filter-num");
                            e.is("select") && null !== e.val() ? e.is("[multiple]") ? n[t] = {
                                value: e.val(),
                                match: e.data("match-type"),
                                num: i,
                                type: "array"
                            } : n[t] = {
                                value: e.val(),
                                match: e.data("match-type"),
                                num: i,
                                type: "text"
                            } : (e.is("input[type='text']") || e.is("input[type='number']")) && "" !== e.val() ? n[t] = {
                                value: e.val().toLowerCase(),
                                match: e.data("match-type"),
                                num: i,
                                type: "text"
                            } : (e.is("input[type='radio']") || e.is("input[type='checkbox']")) && e.is(":checked") && ("undefined" == typeof n[t] && (n[t] = {
                                value: [],
                                match: e.data("match-type"),
                                num: i,
                                type: "array"
                            }),
                            n[t].value.push(e.val()))
                        }),
                        i.currentFilters = n,
                        window.dispatchEvent(t)
                    }
                };
                this.$el.dialog({
                    modal: !1,
                    width: 800,
                    title: "Filter " + e,
                    zIndex: 11500,
                    position: ["default", $(window).height() - d20.utils.playerZoneHeight() - 500],
                    buttons: o,
                    closeOnEscape: !0,
                    beforeClose: function() {
                        n.focus(),
                        i.$el.parents(".ui-dialog").removeClass("dialog-collapsed")
                    }
                }),
                this.$filterSections.all.show(),
                this.$el.find(".chosen").chosen(),
                this.$filterSections.all.hide(),
                this.$filterSections[e].show(),
                $("#rightsidebar").on("click", "ul.tabmenu, #compendium .searchbox span", this.closeWindow)
            }
        });
        var R = Backbone.Model.extend({
            defaults: {
                name: "",
                avatar: "",
                placement: 99
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                this.editor = new M({
                    model: this
                }),
                this.allowDelays = {
                    update: !0
                },
                this.isNew()
            },
            isNew: function() {
                return !this.persisted
            },
            getAbbreviation: function() {
                for (var e = this.get("name").split(" "), t = "", n = 0; n < 3 && n < e.length; n++) {
                    var i;
                    switch (e[n].toLowerCase()) {
                    case "one":
                        i = "1";
                        break;
                    case "two":
                    case "tw":
                        i = "2";
                        break;
                    case "three":
                        i = "3";
                        break;
                    case "four":
                        i = "4";
                        break;
                    case "five":
                        i = "5";
                        break;
                    case "six":
                        i = "6";
                        break;
                    case "seven":
                        i = "7";
                        break;
                    case "eight":
                        i = "8";
                        break;
                    case "nine":
                        i = "9";
                        break;
                    case "ten":
                        i = "10";
                        break;
                    case "jack":
                        i = "Ja";
                        break;
                    case "joker":
                        i = "Jo";
                        break;
                    case "of":
                        i = "";
                        break;
                    case "spades":
                        i = "\u2660";
                        break;
                    case "clubs":
                        i = "\u2663";
                        break;
                    case "diamonds":
                        i = "\u2666";
                        break;
                    case "hearts":
                        i = "\u2665";
                        break;
                    default:
                        i = e[n].toString().substring(0, 1).toUpperCase()
                    }
                    t += i
                }
                return t
            }
        })
          , M = Backbone.View.extend({
            _template: $("#tmpl_cardeditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog", "updateModel"),
                this.model.bind("change", function() {
                    e.$el.is(":visible") && e.render()
                }),
                this.$el.on("click", ".deletecard", function() {
                    var t = $("<div>Are you sure you want to delete this card? This cannot be undone.</div>");
                    t.dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            Delete: function() {
                                e.model.destroy(),
                                e.$el.dialog("destroy"),
                                t.dialog("destroy").remove()
                            },
                            Cancel: function() {
                                t.dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            t.dialog("destroy").remove()
                        }
                    })
                })
            },
            render: function() {
                var e = this;
                this.$el.html(this._template.jqote(this.model)),
                this.$el.find(".name").val(this.model.get("name")),
                d20.utils.setupAvatar(this.$el.find(".avatar"), e)
            },
            showDialog: function() {
                var e = this;
                this.render(),
                this.$el.dialog({
                    title: this.model.get("name"),
                    width: 275,
                    height: 500,
                    buttons: {
                        "Save Changes": function() {
                            e.updateModel(),
                            e.$el.dialog("destroy")
                        },
                        Cancel: function() {
                            e.$el.dialog("destroy")
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy")
                    }
                });
                e = this
            },
            updateModel: function() {
                var e = {};
                e.name = this.$el.find(".name").val(),
                this.model.save(e)
            }
        })
          , P = Backbone.Collection.extend({
            model: R,
            initialize: function() {
                this.on("add", function() {
                    d20.decks.refreshDecksList()
                })
            }
        })
          , I = Backbone.Model.extend({
            defaults: {
                currentHand: "",
                type: "playerhand",
                parentid: "",
                controlledby: "",
                currentView: "bydeck",
                currentMeta: ""
            },
            initialize: function() {
                _.bindAll(this, "currentPlayerVisibleCardBacks");
                var e = this;
                if (this.hasDeckIDs = [],
                this.id)
                    this.persisted = !0;
                else {
                    var t = generateUUID();
                    this.set({
                        id: t
                    }),
                    this.url = this.collection.url + t
                }
                this.rebuildDeckIdList = function() {
                    for (var t = e.currentHandArray(), n = [], i = 0; i < t.length; i++) {
                        var o = e.cardAtIndex(i);
                        o.collection && n.push(o.collection.deck.id)
                    }
                    e.hasDeckIDs = _.uniq(n),
                    e.view && e.view.render()
                }
                ;
                var n = _.debounce(this.rebuildDeckIdList, 100);
                this.bind("change:currentHand", function() {
                    n()
                }),
                n(),
                this.view = new O({
                    model: this
                })
            },
            cardAtIndex: function(e) {
                var t = this.currentHandArray()[e];
                return d20.decks.cardByID(t)
            },
            addCard: function(e, t) {
                var n = this.currentHandArray();
                if (n.push(e),
                t) {
                    var i = this.currentMeta();
                    i[e] = t,
                    this.save({
                        currentHand: n.join(","),
                        currentMeta: JSON.stringify(i)
                    })
                } else
                    this.save({
                        currentHand: n.join(",")
                    })
            },
            allCards: function() {
                for (var e = [], t = this.currentHandArray(), n = 0; n < t.length; n++)
                    e.push(this.cardAtIndex(n));
                return e
            },
            cardsByDeck: function(e) {
                return _.filter(this.allCards(), function(t) {
                    return t.collection && t.collection.deck.id === e
                })
            },
            currentHandArray: function() {
                var e = this.get("currentHand");
                return "" == e ? [] : e.split(",")
            },
            currentMeta: function() {
                var e;
                try {
                    e = JSON.parse(this.get("currentMeta"))
                } catch (t) {
                    e = {}
                }
                return e
            },
            currentPlayerPermissions: function(e) {
                if (0 == this.currentHandArray().length)
                    return {
                        seenum: !1,
                        seefronts: !1
                    };
                if ("playerhand" == this.get("type") && this.get("parentid") == window.currentPlayer.id)
                    return {
                        seenum: !0,
                        seefronts: !0
                    };
                var t = e.collection.deck;
                return window.is_gm ? {
                    seenum: t.get("gm_seenumcards"),
                    seefronts: t.get("gm_seefrontofcards")
                } : {
                    seenum: t.get("players_seenumcards"),
                    seefronts: t.get("players_seefrontofcards")
                }
            },
            removeCardsByID: function(e) {
                for (var t = this.currentHandArray(), n = this.currentMeta(), i = 0; i < e.length; i++) {
                    var o = _.indexOf(t, e[i]);
                    -1 !== o && t.splice(o, 1),
                    delete n[e[i]]
                }
                this.save({
                    currentHand: t.join(","),
                    currentMeta: JSON.stringify(n)
                })
            },
            currentPlayerVisibleCardBacks: function() {
                for (var e = [], t = {}, n = this.allCards(), i = 0; i < n.length; i++)
                    n[i].collection && (t[n[i].collection.deck.id] ? t[n[i].collection.deck.id]++ : t[n[i].collection.deck.id] = 1);
                for (i = 0; i < this.hasDeckIDs.length; i++) {
                    var o = {
                        num: t[this.hasDeckIDs[i]] || 0
                    }
                      , r = d20.Campaign.decks.get(this.hasDeckIDs[i]);
                    "playerhand" == this.get("type") && this.get("parentid") == window.currentPlayer.id && (o.shownum = !0),
                    window.is_gm ? o.shownum = r.get("gm_seenumcards") : o.shownum = r.get("players_seenumcards"),
                    o.avatar = r.get("avatar"),
                    e.push(o)
                }
                return e
            }
        })
          , O = Backbone.View.extend({
            _template: $("#tmpl_hand"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog"),
                this.model.bind("change:currentView", function() {
                    e.$el.is(":visible") && e.render()
                }),
                _.defer(function() {
                    if ("playerhand" == e.model.get("type")) {
                        var t = d20.Campaign.players.get(e.model.get("parentid"));
                        t && t.view && t.view.$el.find(".deckhands").append(e.$el)
                    }
                    e.render()
                }),
                this.$el.on("click", ".cardback", function(t) {
                    e.$el.find(".handcontainer").hasClass("open") ? e.hideDialog() : e.showDialog(),
                    t.stopPropagation()
                }),
                this.$el.on("click", ".bycard", function() {
                    e.model.save({
                        currentView: "bycard"
                    })
                }),
                this.$el.on("click", ".bydeck", function() {
                    e.model.save({
                        currentView: "bydeck"
                    })
                }),
                this.debounced_captureHandFromDom = _.debounce(this.captureHandFromDom, 100),
                this.$el.on("sortupdate", ".cardgroup", function() {
                    console.log("Capture hand from dom!"),
                    e.debounced_captureHandFromDom()
                }),
                this.$el.on("postTabletopPlay", ".cardgroup", function(t, n) {
                    var i = e.model.currentMeta();
                    i[n.get("cardid")] && (console.log("Setting meta for " + n.get("cardid")),
                    n.save(i[n.get("cardid")]))
                })
            },
            render: function() {
                var e = this
                  , t = !1
                  , i = 0
                  , o = 0;
                this.$el.find(".handcontainer").hasClass("open") && (t = !0,
                i = this.$el.find(".handcontainer").scrollTop(),
                o = this.$el.find(".handcontainer").css("left"));
                var r = [];
                this.$el.find(".trading").each(function() {
                    r.push($(this).attr("data-cardid"))
                }),
                this.$el.html(this._template.jqote({
                    model: this.model,
                    showopen: t,
                    oldoffset: o,
                    metaData: this.model.currentMeta()
                })),
                this.$el.find(".handcontainer").scrollTop(i),
                _.defer(function() {
                    if ("playerhand" == e.model.get("type") && e.model.get("parentid") == window.currentPlayer.id) {
                        for (var t = 0; t < r.length; t++)
                            e.$el.find(".cardinhand[data-cardid=" + r[t] + "]").addClass("trading");
                        var i = e.$el.find(".handcontainer");
                        e.$el.find(".handcontainer .cardgroup").sortable({
                            forcePlaceholderSize: !0,
                            appendTo: "body",
                            helper: "clone",
                            beforeStop: function(e, t) {
                                var o = {
                                    left: t.position.left,
                                    top: t.position.top,
                                    right: t.position.left + $(t.item).width(),
                                    bottom: t.position.top + $(t.item).height()
                                }
                                  , r = i.offset()
                                  , a = {
                                    left: r.left,
                                    top: r.top,
                                    right: r.left + i.width(),
                                    bottom: r.top + i.height()
                                };
                                n(o, a) ? (console.log("Card sorted!"),
                                e.originalEvent.dropHandled = !0) : console.log("Card played to tabletop?")
                            },
                            out: function(e, t) {
                                t.item.isOutOfList = !0
                            },
                            over: function(e, t) {
                                t.item.isOutOfList = !1
                            },
                            scroll: !1
                        })
                    }
                })
            },
            showDialog: function() {
                this.$el.parents(".player").find(".handcontainer.open").length;
                this.$el.find(".handcontainer").addClass("open")
            },
            hideDialog: function() {
                this.$el.find(".handcontainer").removeClass("open")
            },
            captureHandFromDom: function() {
                var e = [];
                this.$el.find(".handcontainer .cardinhand").each(function() {
                    e.push($(this).attr("data-cardid"))
                });
                var t = this.model.currentMeta();
                _.each(t, function(n, i) {
                    -1 === e.indexOf(i) && delete t[i]
                }),
                this.model.save({
                    currentHand: e.join(","),
                    currentMeta: JSON.stringify(t)
                })
            }
        })
          , D = Backbone.Collection.extend({
            model: I,
            url: "/hands/",
            initialize: function() {
                this.playerHands = {},
                this.deckHands = {},
                this.on("add", function(e) {
                    if ("playerhand" == e.get("type"))
                        if (this.playerHands[e.get("parentid")]) {
                            console.log("Merging all hands for player together...");
                            var t = this.playerHands[e.get("parentid")][0];
                            t.save({
                                currentHand: _.union(t.currentHandArray(), e.currentHandArray()).join(",")
                            }),
                            e.view && e.view.$el && e.view.$el.hide(),
                            e.destroy()
                        } else
                            this.playerHands[e.get("parentid")] = [],
                            this.playerHands[e.get("parentid")].push(e)
                })
            },
            addCardToHandForPlayer: function(e, t, n) {
                var i = !1;
                (this.playerHands[t.id] && this.playerHands[t.id].length > 0 && (i = this.playerHands[t.id][0]),
                i) ? i.addCard(e.id, n) : d20.Campaign.hands.create({
                    type: "playerhand",
                    parentid: t.id,
                    currentHand: e.id
                }).rebuildDeckIdList();
                d20.decks.refreshDiscardPiles()
            }
        })
          , L = Backbone.Model.extend({
            defaults: {
                initiated_by: "",
                received_by: "",
                initiator_cards: "",
                receiver_cards: "",
                initiator_accepts: !1,
                receiver_accepts: !1
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                console.log("Trade initialized");
                this.isInitOrRec() ? (this.view = new B({
                    model: this
                }),
                this.bind("remove", function() {
                    this.view.$el.dialog("destroy"),
                    this.view.$el.off(),
                    this.view.$el.remove(),
                    console.log("view should be closed."),
                    $(".cardinhand.trading").removeClass("trading")
                }),
                this.bind("change:initiator_accepts change:receiver_accepts", function() {
                    var e = this;
                    if (this.get("initiator_accepts") && this.get("receiver_accepts") && this.isInitOrRec()) {
                        console.log("Performing trade...");
                        var t = this.cardsOf("initiator")
                          , n = this.cardsOf("receiver")
                          , i = [];
                        $("#player_" + window.currentPlayer.id + " .trading").each(function() {
                            var e = $(this).parents(".handcontainer").attr("data-handid");
                            i.push(e),
                            $(this).remove()
                        }),
                        i = _.uniq(i);
                        for (var o = 0; o < i.length; o++) {
                            d20.Campaign.hands.get(i[o]).view.captureHandFromDom()
                        }
                        _.defer(function() {
                            "initiator" == e.isInitOrRec() ? (_.each(n, function(e) {
                                d20.Campaign.hands.addCardToHandForPlayer(e, window.currentPlayer)
                            }),
                            e.save({
                                initiator_done: !0
                            })) : (_.each(t, function(e) {
                                d20.Campaign.hands.addCardToHandForPlayer(e, window.currentPlayer)
                            }),
                            e.save({
                                receiver_done: !0
                            }))
                        })
                    }
                }),
                this.bind("change:initiator_done change:receiver_done", function() {
                    var e = this;
                    this.get("initiator_done") && this.get("receiver_done") && "initiator" == this.isInitOrRec() && _.defer(function() {
                        e.destroy()
                    })
                })) : console.log("I am not involved, ignoring.")
            },
            isInitOrRec: function(e) {
                return e || (e = window.currentPlayer.id),
                e == this.get("initiated_by") ? "initiator" : e == this.get("received_by") && "receiver"
            },
            cardsOf: function(e) {
                for (var t = this, n = [], i = this.get(e + "_cards"), o = "" == i ? [] : i.split(","), r = 0; r < o.length; r++) {
                    var a = d20.decks.cardByID(o[r]);
                    a ? n.push(a) : (console.log("Unable to find card " + o[r]),
                    _.defer(function() {
                        t.destroy()
                    }))
                }
                return n
            },
            addCardToType: function(e, t) {
                var n = this.cardsOf(t)
                  , i = _.pluck(n, "id");
                i.push(e);
                var o = {};
                o[t + "_cards"] = i.join(","),
                o.initiator_accepts = !1,
                o.receiver_accepts = !1,
                this.save(o)
            }
        })
          , B = Backbone.View.extend({
            _template: $("#tmpl_cardtrade"),
            initialize: function() {
                var e = this;
                this.model.bind("change", function() {
                    e.render()
                }),
                this.render(),
                this.showDialog(),
                this.$el.on("click", ".accepttrade", function() {
                    e.acceptTrade()
                }),
                this.$el.on("click", ".declinetrade", function() {
                    e.cancelTrade()
                })
            },
            render: function() {
                var e = this;
                this.$el.html(this._template.jqote({
                    model: this.model,
                    initiator: d20.Campaign.players.get(this.model.get("initiated_by")).toJSON(),
                    receiver: d20.Campaign.players.get(this.model.get("received_by")).toJSON()
                })),
                this.$el.find(".dropzone").droppable({
                    accept: ".cardinhand, .draggablecard",
                    hoverClass: "dropping",
                    drop: function(t, n) {
                        t.originalEvent.dropHandled = !0;
                        var i = $(n.draggable);
                        if (!i.hasClass("trading")) {
                            var o = e.model
                              , r = o.isInitOrRec();
                            r && (o.addCardToType(i.attr("data-cardid"), r),
                            i.addClass("trading"))
                        }
                    }
                })
            },
            showDialog: function() {
                var e = this;
                this.$el.dialog({
                    title: "Trade Cards",
                    modal: !1,
                    width: 700,
                    height: 500,
                    beforeClose: function() {
                        return _.defer(function() {
                            e.cancelTrade()
                        }),
                        !1
                    }
                })
            },
            cancelTrade: function() {
                this.model.destroy()
            },
            acceptTrade: function() {
                "initiator" == this.model.isInitOrRec() ? this.model.save({
                    initiator_accepts: !0
                }) : this.model.save({
                    receiver_accepts: !0
                })
            }
        })
          , F = Backbone.Collection.extend({
            url: "/cardtrades/",
            model: L
        })
          , H = Backbone.Model.extend({
            defaults: {
                name: "",
                currentDeck: "",
                currentIndex: -1,
                currentCardShown: !0,
                showplayers: !0,
                playerscandraw: !0,
                avatar: "",
                shown: !1,
                players_seenumcards: !0,
                players_seefrontofcards: !1,
                gm_seenumcards: !0,
                gm_seefrontofcards: !1,
                infinitecards: !1,
                cardSequencer: -1,
                cardsplayed: "faceup",
                defaultheight: "",
                defaultwidth: "",
                discardpilemode: "none",
                discardPile: "",
                deckpilemode: "none",
                treatasdrawing: !0,
                dealToOffline: !1
            },
            initialize: function() {
                var e = this;
                if (_.bindAll(this, "currentCardImage", "shuffle", "drawCard", "finishDrawingCard", "imageForCardAtIndex"),
                this.updateDiscardPile = _.debounce(this._updateDiscardPile, 100),
                this.id)
                    this.persisted = !0;
                else {
                    var t = generateUUID();
                    this.set({
                        id: t
                    }),
                    this.url = this.collection.url + t
                }
                this.cards = new P,
                this.cards.url = "/decks/" + this.id + "/cards/",
                this.cards.deck = this,
                this.editor = new z({
                    model: this
                }),
                this.stack = new V({
                    model: this
                }),
                this.discardpile = new N({
                    model: this
                }),
                this.deckpile = new j({
                    model: this
                }),
                _.defer(function() {
                    e.cards.backboneFirebase = new BackboneFirebase(e.cards),
                    e.get("shown") && e.stack.showDeck(!0)
                }),
                this.allowDelays = {
                    update: !0
                },
                this.bind("change:players_seenumcards change:players_seefrontofcards change:gm_seenumcards change:gm_seefrontofcards", function() {
                    console.log("deck settings changed!");
                    var e = this.findCardsInPlay()
                      , t = [];
                    _.each(e, function(e) {
                        "hand" == e.type && t.push(e.id)
                    }),
                    _.uniq(t),
                    _.each(t, function(e) {
                        d20.Campaign.hands.get(e).view.render()
                    })
                }),
                this.isNew()
            },
            isNew: function() {
                return !this.persisted
            },
            deckOrder: function() {
                return _.isArray(this.get("currentDeck")) ? this.get("currentDeck") : "" == this.get("currentDeck") ? [] : this.get("currentDeck").split(",")
            },
            imageForCardAtIndex: function(e, t) {
                var n, i = this.deckOrder()[e], o = this.cards.get(i);
                return n = o ? o.get("avatar") : this.get("avatar"),
                t ? n : (-1 !== n.indexOf("files.d20.io") && (n = n.replace("/med", "/thumb")),
                n)
            },
            currentCardImage: function(e) {
                return this.imageForCardAtIndex(this.get("currentIndex"), e)
            },
            cardAtIndex: function(e) {
                var t = this.deckOrder()[e];
                return this.cards.get(t)
            },
            currentCard: function() {
                return this.cardAtIndex(this.get("currentIndex"))
            },
            recallCount: function() {
                var e = this.findCardsInPlay()
                  , t = 0
                  , n = 0;
                _.each(e, function(e) {
                    "hand" == e.type ? t++ : "graphic" == e.type && n++
                });
                var i = this.cards.length - t - n;
                return {
                    inhands: t,
                    ontable: n,
                    unplayed: i = i < 0 ? 0 : i,
                    total: this.cards.length
                }
            },
            findCardsInPlay: function() {
                var e = []
                  , t = _.pluck(this.cards.models, "id")
                  , n = this;
                return d20.Campaign.hands.each(function(i) {
                    if (-1 != _.indexOf(i.hasDeckIDs, n.id))
                        for (var o = i.currentHandArray(), r = 0; r < o.length; r++)
                            -1 != _.indexOf(t, o[r]) && e.push({
                                type: "hand",
                                id: i.id,
                                cardid: o[r],
                                index: r
                            })
                }),
                d20.Campaign.pages.each(function(n) {
                    if (!n.thegraphics)
                        return !0;
                    n.thegraphics.each(function(n) {
                        if ("" !== n.get("cardid")) {
                            if (-1 == _.indexOf(t, n.get("cardid")))
                                return;
                            e.push({
                                type: "graphic",
                                id: n.id,
                                cardid: n.get("cardid"),
                                pageid: n.collection.page.id
                            })
                        }
                    })
                }),
                e
            },
            shuffle: function() {
                var e = []
                  , t = []
                  , n = this.findCardsInPlay()
                  , i = this;
                if (this.cards.each(function(e) {
                    (0 === $.grep(n, function(t) {
                        return t.cardid === e.id
                    }).length || i.get("infinitecards")) && t.push(e.id)
                }),
                0 != t.length) {
                    for (; t.length > 0; ) {
                        var o = Math.floor(Math.random() * t.length)
                          , r = t.splice(o, 1);
                        e.push(r[0])
                    }
                    this.set({
                        currentDeck: e.join(","),
                        discardPile: "",
                        currentIndex: -1,
                        cardSequencer: 0
                    }).save()
                } else
                    alert("All cards for this deck are either in player hands or in play on the table. Recall cards to shuffle the deck.")
            },
            drawCard: function(e) {
                var t = this.findCardsInPlay();
                if (e === undefined && (e = this.get("currentIndex")),
                0 != this.cards.length) {
                    var n = this.deckOrder();
                    if (0 == n.length) {
                        if (0 != t.length)
                            return void alert("It looks like you're at the end of the deck. Shuffle the deck to draw more cards.");
                        console.log("Auto shuffling"),
                        this.shuffle()
                    }
                    var i = e + 1;
                    if (!this.get("infinitecards"))
                        for (; i < n.length && 0 !== $.grep(t, function(e) {
                            return e.cardid === n[i]
                        }).length; )
                            console.log("Skipping card, it's already been played to the tabletop."),
                            i++;
                    return !this.get("infinitecards") || this.get("infinitecardstype") && "random" !== this.get("infinitecardstype") ? this.get("infinitecards") && "cycle" === this.get("infinitecardstype") ? i % this.cards.length == 0 ? (this.shuffle(),
                    0) : i % this.cards.length : i > this.deckOrder().length - 1 ? (console.log("Returning -1!"),
                    -1) : i : Math.floor(Math.random() * this.cards.length)
                }
                alert("Error. This deck doesn't seem to have any cards! Add some cards to the deck before drawing from it.")
            },
            finishDrawingCard: function(e, t) {
                this.set({
                    currentIndex: e,
                    currentCardShown: !t,
                    cardSequencer: this.get("cardSequencer") + 1
                }).save()
            },
            recallCards: function(e) {
                var t = this.findCardsInPlay();
                _.each(t, function(t) {
                    if ("all" == e || e == t.type) {
                        if ("hand" == t.type) {
                            var n = d20.Campaign.hands.get(t.id)
                              , i = n.get("currentHand")
                              , o = new RegExp(t.cardid + "[,]*","g");
                            n.set({
                                currentHand: i.replace(o, "")
                            }).save()
                        }
                        if ("graphic" == t.type)
                            d20.Campaign.pages.get(t.pageid).thegraphics.get(t.id).destroy()
                    }
                })
            },
            _updateDiscardPile: function() {
                var e = this
                  , t = this.getDiscardPile()
                  , n = this.findCardsInPlay()
                  , i = -1
                  , o = !1;
                _.each(this.deckOrder(), function(r) {
                    return ++i >= e.get("currentIndex") && (i != e.get("currentIndex") || 0 != e.get("currentCardShown")) || (0 !== $.grep(n, function(e) {
                        return e.cardid === r
                    }).length ? (-1 !== t.indexOf(r) && (t = _.without(t, r),
                    o = !0),
                    !0) : void (-1 === t.indexOf(r) && (o = !0,
                    t.push(r))))
                }),
                o && this.save({
                    discardPile: t.join(",")
                })
            },
            getDiscardPile: function() {
                return "" === this.get("discardPile") ? [] : this.get("discardPile").split(",")
            },
            toJSON: function() {
                var e = _.clone(this.attributes);
                return delete e.cards,
                _.isArray(e.currentDeck) && (e.currentDeck = e.currentDeck.join(",")),
                e
            }
        })
          , z = Backbone.View.extend({
            _template: $("#tmpl_deckeditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog", "updateModel"),
                this.model.bind("change", function() {
                    e.$el.is(":visible") && e.render()
                }),
                this.model.cards.bind("add remove change", function() {
                    e.$el.is(":visible") && e.render()
                }),
                this.$el.on("click", ".deletedeck", function() {
                    var t = $("<div>Are you sure you want to delete this deck? This cannot be undone.</div>");
                    t.dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            Delete: function() {
                                e.model.destroy(),
                                e.$el.dialog("destroy"),
                                t.dialog("destroy").remove()
                            },
                            Cancel: function() {
                                t.dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            t.dialog("destroy").remove()
                        }
                    })
                }),
                this.$el.on("click", ".dupedeck", function() {
                    var t = e.model.toJSON();
                    delete t.id,
                    delete t.currentDeck,
                    delete t.currentIndex;
                    var n = e.model.collection.create(t);
                    e.model.cards.each(function(e) {
                        delete (t = e.toJSON()).id,
                        n.cards.create(t)
                    })
                }),
                this.$el.on("click", ".card", function() {
                    var t = $(this).attr("data-card-id")
                      , n = e.model.cards.get(t);
                    n && n.editor.showDialog()
                }),
                this.$el.on("click", ".addcard", function() {
                    e.updateModel(),
                    e.model.cards.create({
                        name: "New Card"
                    }).editor.showDialog()
                })
            },
            render: function() {
                var e = this;
                this.$el.html(this._template.jqote(this.model)),
                this.$el.find(".name").val(this.model.get("name")),
                this.model.get("showplayers") && this.$el.find(".showplayers").prop("checked", !0),
                this.model.get("playerscandraw") && this.$el.find(".playerscandraw").prop("checked", !0),
                this.model.get("players_seenumcards") && this.$el.find(".players_seenumcards").prop("checked", !0),
                this.model.get("players_seefrontofcards") && this.$el.find(".players_seefrontofcards").prop("checked", !0),
                this.model.get("gm_seenumcards") && this.$el.find(".gm_seenumcards").prop("checked", !0),
                this.model.get("gm_seefrontofcards") && this.$el.find(".gm_seefrontofcards").prop("checked", !0),
                this.model.get("infinitecards") ? (this.$el.find(".infinitecards").prop("checked", !0),
                this.$el.find(".infinitecardstype input").prop("disabled", !1),
                this.$el.find(".infinitecardstype").removeClass("inputs-disabled"),
                this.model.get("infinitecardstype") ? this.$el.find(".infinitecardstype input[value='" + this.model.get("infinitecardstype") + "']").prop("checked", !0) : this.$el.find(".infinitecardstype input").first().prop("checked", !0)) : (this.$el.find(".infinitecardstype input").prop("disabled", !0),
                this.$el.find(".infinitecardstype").addClass("inputs-disabled"),
                this.$el.find(".infinitecardstype input").first().prop("checked", !0)),
                this.$el.find(".cardsplayed").val(this.model.get("cardsplayed")),
                this.$el.find(".defaultwidth").val(this.model.get("defaultwidth")),
                this.$el.find(".defaultheight").val(this.model.get("defaultheight")),
                this.$el.find(".discardpilemode").val(this.model.get("discardpilemode")),
                this.$el.find(".deckpilemode").val(this.model.get("deckpilemode")),
                this.$el.find(".treatasdrawing").val(this.model.get("treatasdrawing").toString()),
                this.model.cards.each(function(t) {
                    e.$el.find("tbody").append("<tr class='card' data-card-id='" + t.id + "'><td>" + ("" != t.get("avatar") ? "<img src='" + t.get("avatar") + "' />" : "") + "</td><td>" + t.get("name") + "</td></tr>")
                }),
                this.$el.find(".infinitecards").on("change", function() {
                    $(this).is(":checked") ? (e.$el.find(".infinitecardstype input").prop("disabled", !1),
                    e.$el.find(".infinitecardstype").removeClass("inputs-disabled")) : (e.$el.find(".infinitecardstype input").prop("disabled", !0),
                    e.$el.find(".infinitecardstype").addClass("inputs-disabled"))
                }),
                d20.utils.setupAvatar(this.$el.find(".avatar"), e)
            },
            showDialog: function() {
                var e = this;
                this.render();
                var t = 775
                  , n = $(window).height() - d20.utils.playerZoneHeight();
                n > t && (n = t),
                this.$el.dialog({
                    title: this.model.get("name"),
                    width: 400,
                    height: n,
                    position: ["center", 30],
                    buttons: {
                        "Save Changes": function() {
                            e.updateModel(),
                            e.$el.dialog("destroy")
                        },
                        Cancel: function() {
                            e.$el.dialog("destroy")
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy")
                    }
                });
                e = this
            },
            updateModel: function() {
                var e = {};
                e.showplayers = this.$el.find(".showplayers").is(":checked"),
                e.playerscandraw = this.$el.find(".playerscandraw").is(":checked"),
                e.name = d20.utils.strip_tags(this.$el.find(".name").val()),
                e.players_seefrontofcards = this.$el.find(".players_seefrontofcards").is(":checked"),
                e.players_seenumcards = this.$el.find(".players_seenumcards").is(":checked"),
                e.gm_seefrontofcards = this.$el.find(".gm_seefrontofcards").is(":checked"),
                e.gm_seenumcards = this.$el.find(".gm_seenumcards").is(":checked"),
                e.infinitecards = this.$el.find(".infinitecards").is(":checked"),
                e.infinitecardstype = this.$el.find(".infinitecardstype input:checked").val(),
                e.cardsplayed = this.$el.find(".cardsplayed").val(),
                e.defaultwidth = this.$el.find(".defaultwidth").val(),
                e.defaultheight = this.$el.find(".defaultheight").val(),
                e.discardpilemode = this.$el.find(".discardpilemode").val() || "none",
                e.deckpilemode = this.$el.find(".deckpilemode").val() || "none",
                e.treatasdrawing = "false" !== this.$el.find(".treatasdrawing").val(),
                this.model.save(e)
            }
        })
          , V = Backbone.View.extend({
            _template: $("#tmpl_deckstack"),
            initialize: function() {
                _.bindAll(this, "render", "showDeck");
                var e = this;
                this.$el.addClass("adeck"),
                this.model.bind("change:playerscandraw change:currentCardShown change:cardSequencer change:discardpilemode change:name change:deckpilemode", function() {
                    e.$el.is(":visible") && e.render()
                }),
                this.model.bind("change:shown change:showplayers", function() {
                    e.model.get("shown") ? e.showDeck(!0) : e.hideDeck(!0)
                }),
                this.$el.on("currentCardRemoved", function() {
                    e.model.save({
                        currentCardShown: !1
                    })
                }),
                this.model.bind("remove", function() {
                    e.$el.remove()
                })
            },
            render: function() {
                this.$el.html(this._template.jqote(this.model)),
                this.$el.find(".drawable").length > 0 && this.$el.find(".draggablecard").draggable({
                    revert: !0,
                    distance: 10,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body",
                    scroll: !1
                }).addTouch()
            },
            showDeck: function(e) {
                window.is_gm || this.model.get("showplayers") ? (this.render(),
                this.$el.appendTo($("#showndecks")),
                e || this.model.save({
                    shown: !0
                })) : this.$el.is(":visible") && this.$el.remove()
            },
            hideDeck: function(e) {
                this.$el.remove(),
                e || this.model.save({
                    shown: !1
                })
            }
        })
          , N = Backbone.View.extend({
            _template: $("#tmpl_discardhand"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog"),
                this.model.on("change:discardPile", function() {
                    e.$el.is(":visible") && e.render()
                }),
                this.$el.on("click", ".drawnext", function() {
                    var t = e.getPileCards();
                    "drawtop" === e.model.get("discardpilemode") ? d20.Campaign.hands.addCardToHandForPlayer(t[t.length - 1], window.currentPlayer) : d20.Campaign.hands.addCardToHandForPlayer(t[0], window.currentPlayer)
                })
            },
            getPileCards: function() {
                var e = [];
                return _.each(this.model.getDiscardPile(), function(t) {
                    e.push(d20.decks.cardByID(t))
                }),
                e
            },
            render: function() {
                var e = this
                  , t = !1
                  , n = 0
                  , i = 0;
                this.$el.is(":visible") && (n = this.$el.parents(".ui-dialog-content").scrollTop()),
                e.model.updateDiscardPile();
                var o = {};
                o.id = this.model.id,
                o.allCards = this.getPileCards(),
                o.discardmode = this.model.get("discardpilemode"),
                this.$el.html(this._template.jqote({
                    model: o,
                    showopen: t,
                    oldoffset: i
                })),
                this.$el.find(".cardinhand").draggable({
                    revert: !0,
                    distance: 10,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body",
                    scroll: !1
                }).addTouch(),
                this.$el.parents(".ui-dialog-content").scrollTop(n)
            },
            showDialog: function() {
                this.render();
                var e = 165;
                "choosefronts" !== this.model.get("discardpilemode") && "choosebacks" !== this.model.get("discardpilemode") || (e = 400);
                var t = $(window).height() - d20.utils.playerZoneHeight();
                t > e && (t = e),
                this.$el.dialog({
                    model: !1,
                    title: this.model.get("name") + " Discard Pile",
                    height: t,
                    width: 440
                })
            }
        })
          , j = Backbone.View.extend({
            _template: $("#tmpl_discardhand"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog"),
                this.model.on("change:currentDeck change:currentIndex", function() {
                    e.$el.is(":visible") && e.render()
                })
            },
            getPileCards: function() {
                var e = this
                  , t = []
                  , n = this.model.findCardsInPlay()
                  , i = [];
                console.log("getPileCards"),
                this.model.get("discardpilemode") && "none" !== this.model.get("discardpilemode") && (this.model.updateDiscardPile(),
                i = this.model.getDiscardPile()),
                this.model.cards.each(function(o) {
                    (!0 === e.model.get("infinitecards") || 0 === $.grep(n, function(e) {
                        return e.cardid === o.id
                    }).length && -1 === i.indexOf(o.id)) && t.push(d20.decks.cardByID(o.id))
                });
                var o = this.model.deckOrder()
                  , r = this.model.get("currentIndex");
                return t = _.sortBy(t, function(e) {
                    var t = o.indexOf(e.id);
                    return -1 === t ? 1e4 : t < r ? t + 1e3 : t
                })
            },
            render: function() {
                var e = this
                  , t = !1
                  , n = 0
                  , i = 0;
                this.$el.is(":visible") && (n = this.$el.parents(".ui-dialog-content").scrollTop());
                var o = {};
                o.id = this.model.id,
                o.allCards = this.getPileCards(),
                o.discardmode = -1 !== this.model.get("deckpilemode").indexOf("choosebacks") ? "choosebacks" : "choosefronts",
                this.$el.html(this._template.jqote({
                    model: o,
                    showopen: t,
                    oldoffset: i
                })),
                this.$el.parents(".ui-dialog-content").scrollTop(n),
                this.$el.find(".cardinhand").draggable({
                    revert: !0,
                    distance: 10,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body",
                    scroll: !1
                }).addTouch(),
                !0 === e.model.get("infinitecards") ? this.$el.find(".cardinhand").on("dragstop", function() {
                    setTimeout(function() {
                        e.render()
                    }, 0)
                }) : this.$el.on("chosenCardPlayed", function(t, n) {
                    if (!t.chosenHandled) {
                        t.chosenHandled = !0;
                        var i = $(n).attr("data-cardid");
                        if (i) {
                            var o = e.model.deckOrder()
                              , r = o.indexOf(i);
                            if (-1 !== r) {
                                (o = _.without(o, i)).splice(Math.max(e.model.get("currentIndex") - 1, 0), 0, i);
                                var a = e.model.get("currentIndex");
                                r > e.model.get("currentIndex") && (a += 1),
                                setTimeout(function() {
                                    e.model.save({
                                        currentDeck: o.join(","),
                                        currentIndex: a
                                    })
                                }, 100)
                            }
                        }
                    }
                })
            },
            showDialog: function() {
                this.render();
                var e = 400
                  , t = $(window).height() - d20.utils.playerZoneHeight();
                t > e && (t = e),
                this.$el.dialog({
                    model: !1,
                    title: this.model.get("name") + " Available Cards",
                    height: t,
                    width: 440
                })
            }
        })
          , U = Backbone.Collection.extend({
            model: H,
            url: "/decks/",
            initialize: function() {
                this.on("add change remove", function() {
                    d20.decks.refreshDecksList()
                })
            }
        })
          , q = Backbone.Model.extend({
            defaults: {
                name: "New Item",
                avatar: "",
                weight: 1
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                this.editor = new G({
                    model: this
                }),
                this.allowDelays = {
                    update: !0
                }
            }
        })
          , G = Backbone.View.extend({
            _template: $("#tmpl_tableitemeditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog", "updateModel"),
                this.model.bind("change", function() {
                    e.$el.is(":visible") && e.render()
                }),
                this.$el.on("click", ".deleteitem", function() {
                    var t = $("<div>Are you sure you want to delete this item? This cannot be undone.</div>");
                    t.dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            Delete: function() {
                                e.model.destroy(),
                                e.$el.dialog("destroy"),
                                t.dialog("destroy").remove()
                            },
                            Cancel: function() {
                                t.dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            t.dialog("destroy").remove()
                        }
                    })
                })
            },
            render: function() {
                var e = this;
                this.$el.html(this._template.jqote({
                    get: e.model.get.bind(e.model),
                    isVideo: d20.utils.isVideo
                })),
                this.$el.find(".name").val(this.model.get("name")),
                this.$el.find(".weight").val(this.model.get("weight")),
                d20.utils.setupAvatar(this.$el.find(".avatar"), e)
            },
            showDialog: function() {
                var e = this;
                this.render(),
                this.$el.dialog({
                    title: "Edit Table Item",
                    width: 275,
                    height: 500,
                    buttons: {
                        "Save Changes": function() {
                            e.updateModel(),
                            e.$el.dialog("destroy")
                        },
                        Cancel: function() {
                            e.$el.dialog("destroy")
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy")
                    }
                });
                e = this
            },
            updateModel: function() {
                var e = {};
                e.name = this.$el.find(".name").val();
                var t = parseInt(this.$el.find(".weight").val(), 10);
                e.weight = _.isFinite(t) ? t : 0,
                this.model.save(e)
            }
        })
          , W = Backbone.Collection.extend({
            model: q,
            initialize: function() {
                this.on("add", function() {
                    d20.rollabletables.refreshTablesList()
                })
            }
        })
          , J = Backbone.Model.extend({
            defaults: {
                name: "new-table",
                showplayers: !0
            },
            initialize: function() {
                var e = this;
                if (this.id)
                    this.persisted = !0;
                else {
                    var t = generateUUID();
                    this.set({
                        id: t
                    }),
                    this.url = this.collection.url + t
                }
                this.tableitems = new W,
                this.tableitems.url = "/rollabletables/" + this.id + "/items/",
                this.tableitems.rollabletable = this,
                this.editor = new X({
                    model: this
                }),
                _.defer(function() {
                    e.tableitems.backboneFirebase = new BackboneFirebase(e.tableitems)
                }),
                this.allowDelays = {
                    update: !0
                }
            },
            createToken: function(e, t) {
                var n = 70
                  , i = 70
                  , o = [];
                if (this.tableitems.each(function(e) {
                    "" != e.get("avatar") && o.push(escape(e.get("avatar")))
                }),
                0 == o.length)
                    return !1;
                var r = {
                    x: e,
                    y: t,
                    width: n,
                    height: i,
                    imgsrc: unescape(o[0]),
                    imgwidth: n,
                    imgheight: i,
                    isdrawing: !1,
                    sides: o.join("|"),
                    currentSide: 0
                }
                  , a = d20.Campaign.activePage().addImage(r, !1, !1);
                if (window.defaultsettings && window.defaultsettings.game && Object.keys(window.defaultsettings.game).length > 0) {
                    var s = ["bar1_value", "bar1_max", "bar2_value", "bar2_max", "bar3_value", "bar3_max", "aura1_square", "aura1_radius", "aura1_color", "aura2_square", "aura2_radius", "aura2_color", "tint_color", "showname", "showplayers_name", "playersedit_name", "showplayers_bar1", "playersedit_bar1", "showplayers_bar2", "playersedit_bar2", "showplayers_bar3", "playersedit_bar3", "showplayers_aura1", "playersedit_aura1", "showplayers_aura2", "playersedit_aura2", "light_radius", "light_dimradius", "light_angle", "light_otherplayers", "light_hassight", "light_losangle", "light_multiplier", "adv_fow_view_distance", "bar_location", "compact_bar"]
                      , l = {};
                    _.each(s, function(e) {
                        window.defaultsettings.game[e] != undefined && (l[e] = window.defaultsettings.game[e])
                    }),
                    a.set(l).save()
                }
                return a
            },
            getWeightedArray: function() {
                var e = [];
                return this.tableitems.each(function(t) {
                    for (var n = parseInt(t.get("weight"), 10), i = 0; i < n; i++)
                        e.push(t.id)
                }),
                e
            }
        })
          , X = Backbone.View.extend({
            _template: $("#tmpl_rollabletableeditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog", "updateModel"),
                this.model.bind("change", function() {
                    e.$el.is(":visible") && e.render()
                }),
                this.model.tableitems.bind("add remove change", function() {
                    e.$el.is(":visible") && e.renderItems()
                }),
                this.$el.on("click", ".deleterollabletable", function() {
                    var t = $("<div>Are you sure you want to delete this rollable table? This cannot be undone.</div>");
                    t.dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            Delete: function() {
                                e.model.destroy(),
                                e.$el.dialog("destroy"),
                                t.dialog("destroy").remove()
                            },
                            Cancel: function() {
                                t.dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            t.dialog("destroy").remove()
                        }
                    })
                }),
                this.$el.on("click", ".tableitem", function() {
                    var t = $(this).attr("data-tableitem-id")
                      , n = e.model.tableitems.get(t);
                    n && n.editor.showDialog()
                }),
                this.$el.on("click", ".addtableitem", function() {
                    e.updateModel();
                    var t = e.model.tableitems.create();
                    t.editor.showDialog(),
                    t.editor.$el.find(".name").focus().select()
                }),
                this.$el.on("keyup", ".name", function(e) {
                    if (32 == e.which) {
                        console.log("sapce!");
                        var t = $(this).val();
                        $(this).val(t.replace(/[ ]/g, "-"))
                    }
                })
            },
            render: function() {
                var e = this;
                this.$el.html(this._template.jqote(this.model)),
                this.$el.find(".name").val(d20.utils.strip_tags(this.model.get("name"))),
                this.model.get("showplayers") && this.$el.find(".showplayers").prop("checked", !0),
                e.renderItems()
            },
            renderItems: function() {
                var e = this;
                this.$el.find("tbody").html(""),
                this.model.tableitems.each(function(t) {
                    const n = t.get("avatar").replace("/med.webm", "/thumb.webm");
                    let i = "";
                    n && (i = d20.utils.isVideo(n) ? `<video src="${n}" muted autoplay loop />` : `<img src="${n}" />`),
                    i = `<td>${i}</td>`,
                    i += `<td>${d20.utils.strip_tags(t.get("name"))}</td>`,
                    i = `<tr class="tableitem" data-tableitem-id="${t.id}">${i}</tr>`,
                    e.$el.find("tbody").append(i)
                })
            },
            showDialog: function() {
                var e = this;
                this.render();
                var t = 775
                  , n = $(window).height() - d20.utils.playerZoneHeight();
                n > t && (n = t),
                this.$el.dialog({
                    title: d20.utils.strip_tags(this.model.get("name")),
                    width: 400,
                    height: n,
                    position: ["center", 30],
                    buttons: {
                        "Save Changes": function() {
                            e.updateModel(),
                            e.$el.dialog("destroy")
                        },
                        Cancel: function() {
                            e.$el.dialog("destroy")
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy")
                    }
                });
                e = this
            },
            updateModel: function() {
                var e = {};
                e.showplayers = this.$el.find(".showplayers").is(":checked"),
                e.name = d20.utils.strip_tags(this.$el.find(".name").val()),
                this.model.save(e)
            }
        })
          , Y = Backbone.Collection.extend({
            model: J,
            url: "/rollabletables/",
            initialize: function() {
                this.on("add change remove", function() {
                    d20.rollabletables.refreshTablesList()
                })
            },
            findTableByName: function(e) {
                for (var t = 0; t < this.models.length; t++)
                    if (this.models[t].get("name") === e)
                        return this.models[t];
                return null
            }
        })
          , K = d20.models.CampaignModel = Backbone.Model.extend({
            defaults: {
                snapping_increment: 1,
                lastmodified: 0,
                turnorder: "",
                initiativepage: !1,
                playerspecificpages: !1,
                playerpageid: !1,
                bar1_color: "#7CC48A",
                bar2_color: "#7C9BC4",
                bar3_color: "#B31D1D",
                markers_position: "top",
                decksize: 50,
                journalfolder: "",
                jukeboxfolder: "",
                jukeboxplaylistplaying: !1,
                jukeboxplaylistsactive: "[]",
                videobandwidth: "medium",
                videopos: "{}",
                controlsvideopos: "player",
                webrtcOnlinePlayers: "[]",
                disable_speakingas: !1
            },
            url: "/campaign/",
            initialize: function() {
                var e = this;
                if (_.bindAll(this, "activePage", "showSettings", "initActivePage", "switchPageById", "switchPageByIndex", "getPageIndex"),
                this.view = new A({
                    model: this
                }),
                this.activePageIndex = 0,
                this.pages = new m,
                this.players = new T,
                this.bootstrapped = !1,
                this.gameFullyLoaded = !1,
                window.d20ext.loading.showfunnymessage(),
                "tutorial" === window.GNTKN) {
                    var t = {
                        child: function() {
                            return t
                        },
                        on: function(e, t) {
                            if ("value" === e) {
                                var n = {
                                    val: function() {
                                        return null
                                    }
                                };
                                t(n)
                            }
                        },
                        update: function() {},
                        set: function() {}
                    };
                    this.parentRef = t,
                    _.defer(function() {
                        n()
                    })
                } else {
                    t = new Firebase(window.FIREBASE_ROOT + window.campaign_storage_path + "/");
                    this.parentRef = t,
                    _.defer(function() {
                        t.authWithCustomToken(window.GNTKN, function(t, i) {
                            t ? alert("Invalid authentication token. Please reload and try again. If this error persists, please contact support.") : (console.log("Auth'ed."),
                            e.fbauthinfo = i,
                            n())
                        }, function() {
                            alert("Your session has expired. Hit OK to reload the page and resume editing your campaign."),
                            window.location.reload()
                        })
                    })
                }
                var n = function() {
                    console.log("Go post auth!"),
                    t.child("campaign").on("value", function(n) {
                        if (e.bootstrapped)
                            n.val() && e.set(n.val());
                        else {
                            e.bootstrapped = !0,
                            console.log("initial setup"),
                            window.d20ext.loading.showfunnymessage();
                            var i = n.val();
                            i ? e.set(i) : (e.save(e.defaults),
                            i = {}),
                            window.is_gm && $("#decksize").slider({
                                value: e.get("decksize")
                            });
                            var o = !1;
                            t.child("players").on("value", function(t) {
                                if (!o) {
                                    console.log("Got players value..."),
                                    o = !0;
                                    var n = _.toArray(t.val());
                                    e.players.reset(n),
                                    e.players.backboneFirebase = new BackboneFirebase(e.players),
                                    _.defer(function() {
                                        d20.decks.appendAllHands()
                                    }),
                                    e.joinGame() ? e.pages.length > 0 && d20.Campaign.handlePlayerPageChanges() : console.log("No active player, returning...")
                                }
                            }),
                            e.characters = new d20.models.CharacterCollection,
                            e.handouts = new d20.models.HandoutCollection,
                            e.decks = new U,
                            e.rollabletables = new Y,
                            e.hands = new D,
                            e.cardtrades = new F,
                            e.custFx = new w,
                            e.compendiumfilters = new d20.models.CompendiumFilters;
                            var r = !1;
                            t.child("pages").on("value", function(t) {
                                if (!r) {
                                    r = !0;
                                    var n = t.val();
                                    for (var i in n)
                                        n.hasOwnProperty(i) && (pg = n[i],
                                        pg.id || (n[i].id = i));
                                    var o = _.toArray(n);
                                    window.is_gm && 0 == o.length ? (console.log("Creating new page..."),
                                    e.pages.create()) : e.pages.reset(o),
                                    e.pages.backboneFirebase = new BackboneFirebase(e.pages),
                                    console.log("We have " + o.length + " pages");
                                    var a = e.get("playerpageid");
                                    e.pages.get(a) || (console.log("can't find previous page!"),
                                    e.set({
                                        playerpageid: e.pages.at(0).id
                                    }),
                                    window.is_gm && e.save(),
                                    a = !1),
                                    _.defer(function() {
                                        window.currentPlayer && d20.Campaign.handlePlayerPageChanges(),
                                        e.initiativewindow = new d20.models.InitiativeWindow({
                                            model: e
                                        }),
                                        setTimeout(function() {
                                            e.initiativewindow.rebuildInitiativeList()
                                        }, 1e3)
                                    })
                                }
                            })
                        }
                    })
                };
                $(document).bind("d20:editingLayerChanged", function() {
                    e.activePage().activate()
                }),
                this.handlePlayerPageChanges = function(t) {
                    console.log("handle page changes");
                    var n = d20.Campaign.get("playerspecificpages");
                    console.log(n),
                    n && n[window.currentPlayer.id] && d20.Campaign.pages.get(n[window.currentPlayer.id]) !== undefined ? t && d20.Campaign.activePage().id !== n[window.currentPlayer.id] ? e.switchPageById(n[window.currentPlayer.id]) : t || e.switchPageById(n[window.currentPlayer.id]) : window.is_gm && currentPlayer.get("lastpage") && "" != currentPlayer.get("lastpage") && d20.Campaign.pages.get(currentPlayer.get("lastpage")) !== undefined ? e.switchPageById(currentPlayer.get("lastpage")) : e.get("playerpageid") ? t && d20.Campaign.activePage().id !== e.get("playerpageid") ? e.switchPageById(e.get("playerpageid")) : t || e.switchPageById(e.get("playerpageid")) : e.switchPageByIndex(0)
                }
                ,
                this.bind("change:playerpageid", function() {
                    !window.is_gm && window.currentPlayer && e.handlePlayerPageChanges(!0),
                    d20.pagetoolbar && d20.pagetoolbar.refreshPageListing && d20.pagetoolbar.refreshPageListing()
                }),
                this.bind("change:playerspecificpages", function() {
                    console.log("specific changed!"),
                    !window.is_gm && window.currentPlayer && e.handlePlayerPageChanges(!0),
                    d20.pagetoolbar && d20.pagetoolbar.refreshPageListing && d20.pagetoolbar.refreshPageListing()
                }),
                this.tokendisplay = {};
                var i = function() {
                    e.tokendisplay.bar1_rgb = d20.utils.hexToRgb(e.get("bar1_color")),
                    e.tokendisplay.bar2_rgb = d20.utils.hexToRgb(e.get("bar2_color")),
                    e.tokendisplay.bar3_rgb = d20.utils.hexToRgb(e.get("bar3_color")),
                    window.is_gm && ($("#campaignsettings .bar1_color").val(e.get("bar1_color")).trigger("change-silent"),
                    $("#campaignsettings .bar2_color").val(e.get("bar2_color")).trigger("change-silent"),
                    $("#campaignsettings .bar3_color").val(e.get("bar3_color")).trigger("change-silent"),
                    $("#campaignsettings .markers_position").val(e.get("markers_position"))),
                    d20.engine.redrawScreenNextTick()
                };
                this.on("change:bar1_color change:bar2_color change:bar3_color change:markers_position", function() {
                    i()
                }),
                this.on("change:disable_speakingas", function() {
                    var t = e.get("disable_speakingas")
                      , n = $("#campaignsettings .disablespeakingas");
                    1 == t ? (window.is_gm && n.prop("checked", !0),
                    d20.Campaign.players.forEach(function(e) {
                        e.updateAvatar("")
                    })) : (window.is_gm && n.prop("checked", !1),
                    d20.Campaign.players.forEach(function(e) {
                        var t = e.get("speakingas");
                        e.updateAvatar(t),
                        e.on("change:speakingas", function(e, t) {
                            e.updateAvatar(t)
                        })
                    }))
                }),
                this.on("change:journalfolder", function() {
                    d20.journal.refreshJournalList(),
                    d20.tutorial && d20.tutorial.active && $(document).trigger("folderChange")
                }),
                this.on("change:jukeboxfolder", function() {
                    d20.jukebox && d20.jukebox.refreshJukeboxList()
                }),
                i();
                var o = function() {
                    $("#showndecks").css("width", 2 * e.get("decksize") + "px")
                };
                window.is_gm && $("#decksize").on("slidechange", function() {
                    var t = $(this).slider("value");
                    e.save({
                        decksize: t
                    })
                }),
                this.on("change:decksize", function() {
                    o()
                }),
                o(),
                this.on("change:jukeboxplaylistsactive", function() {
                    if (d20.jukebox) {
                        var e = JSON.parse(d20.Campaign.get("jukeboxplaylistsactive")).find(e=>0 == e.playing);
                        e && e.id && (d20.jukebox.sharedPlaylistSeed = e.playlistseed,
                        d20.jukebox.randomizer = Alea(d20.jukebox.sharedPlaylistSeed)),
                        e && e.id && window.Jukebox.setPlaylistPlaying(e.id),
                        d20.jukebox.refreshJukeboxList()
                    }
                }),
                this.on("change:jukeboxplaylistsactive", function() {
                    if (d20.jukebox) {
                        var e = JSON.parse(d20.Campaign.get("jukeboxplaylistsactive")).find(e=>0 == e.playing);
                        e && e.id && (d20.jukebox.sharedPlaylistSeed = e.playlistseed,
                        d20.jukebox.randomizer = Alea(d20.jukebox.sharedPlaylistSeed)),
                        e && e.id && window.Jukebox.setPlaylistPlaying(e.id),
                        d20.jukebox.refreshJukeboxList()
                    }
                }),
                this.currentPlaylistPlayingID = function() {
                    return !1
                }
                ,
                this.getActivePlaylistByID = function(e) {
                    var t = JSON.parse(d20.Campaign.get("jukeboxplaylistsactive")).find(t=>t.id == e);
                    return t || !1
                }
                ,
                this.stopPlaylistByID = function(e) {
                    var t = JSON.parse(d20.Campaign.get("jukeboxplaylistsactive"))
                      , n = this.getActivePlaylistByID(e);
                    n && n.trackids.forEach(e=>{
                        var t = window.Jukebox.playlist.get(e);
                        t && (t.didAlreadyPlay = !1,
                        t.stop())
                    }
                    ),
                    t = t.filter(t=>t.id !== e),
                    d20.Campaign.save({
                        jukeboxplaylistsactive: JSON.stringify(t)
                    })
                }
                ,
                this.updateActivePlaylist = function(e) {
                    var t = JSON.parse(d20.Campaign.get("jukeboxplaylistsactive"));
                    if (e && e.id) {
                        var n = t.findIndex(t=>t.id == e.id);
                        -1 !== n ? (t[n] = e,
                        d20.Campaign.save({
                            jukeboxplaylistsactive: JSON.stringify(t)
                        })) : console.log("Couldn't find playlist to update in active playlists -- has the playlist stopped?")
                    } else
                        console.log("Error processing list: No active list provided.")
                }
            },
            activePage: function() {
                return this.pages.at(this.activePageIndex)
            },
            showSettings: function() {},
            switchPageById: function(e) {
                var t = this.getPageIndex(e);
                this.switchPageByIndex(t)
            },
            getPageIndex: function(e) {
                for (var t = 0; t < this.pages.length; t++)
                    if (this.pages.at(t).id == e)
                        return t;
                console.log("ERROR: Unable to find Page for ID: " + e)
            },
            switchPageByIndex: function(e) {
                var t = this;
                d20.engine.page_loaded = !1,
                d20.engine.advanced_fog.save_interval && (clearInterval(d20.engine.advanced_fog.save_interval),
                d20.engine.advanced_fog.save_interval = !1),
                $(this.activePage().container).css("zIndex", 1),
                window.d20ext.loading.showfunnymessage();
                var n = setInterval(window.d20ext.loading.showfunnymessage, 500);
                $("#loading-overlay").show().animate({
                    opacity: 1,
                    duration: 300
                }, function() {
                    t.activePage() && t.activePage().unloadPageFromDOM(),
                    t.activePageIndex = e,
                    t.initActivePage(),
                    d20.Campaign.initiativewindow && d20.Campaign.initiativewindow.rebuildInitiativeList(),
                    clearInterval(n);
                    const i = t.activePage()
                      , o = ()=>{
                        i.path_semaphore.incr(),
                        $(document).trigger("d20:new_page_fully_loaded"),
                        $("#loading-overlay").animate({
                            opacity: 0,
                            duration: 300
                        }, function() {
                            $("#loading-overlay").hide()
                        })
                    }
                    ;
                    window.d20ext.seenad ? i.path_semaphore.decr().then(o) : ($("#loading-overlay").find("h1").text("You will join the game shortly..."),
                    setTimeout(function() {
                        this.pageSwitchTimeout = !1,
                        $("#loading-overlay").find("h1").text("Loading..."),
                        i.path_semaphore.decr().then(o)
                    }, 6e4))
                })
            },
            nextPage: function() {
                var e = this.activePageIndex + 1;
                e < this.pages.length && this.switchPageByIndex(e)
            },
            prevPage: function() {
                var e = this.activePageIndex - 1;
                e >= 0 && this.switchPageByIndex(e)
            },
            initActivePage: function(e) {
                if (window.dpi = 70,
                console.log("init active page!"),
                this.gameFullyLoaded || (this.gameFullyLoaded = !0),
                this.activePage()) {
                    e ? this.activePage().thegraphics.each(function(e) {
                        e.view.graphic && e.view.checkImageSizing()
                    }) : (this.activePage().loadPageIntoDOM(),
                    this.activePage().activate()),
                    this.activePage().updatePage();
                    var t = Math.round(this.activePage().get("width") * window.dpi * d20.engine.canvasZoom)
                      , n = Math.round(this.activePage().get("height") * window.dpi * d20.engine.canvasZoom);
                    d20.engine.pageWidth = t,
                    d20.engine.pageHeight = n,
                    editor.css({
                        height: Math.round(n + (d20.engine.canvasZoom - 1) * d20.engine.padding * 2) + "px",
                        width: Math.round(t + (d20.engine.canvasZoom - 1) * d20.engine.padding * 2) + "px"
                    }),
                    d20.engine.backgroundColor = this.activePage().get("background_color"),
                    "#FFFFF" == d20.engine.backgroundColor && (d20.engine.backgroundColor = "#ffffff"),
                    d20.engine.redrawScreenNextTick(),
                    $(document).trigger("d20:pagechanged"),
                    setTimeout(function() {
                        $("#editor-wrapper").trigger("scroll")
                    }, 50)
                } else
                    console.log("ERROR when initialize active page: no active page found.")
            },
            joinGame: function() {
                console.log("joining game...");
                var e = function() {
                    d20.textchat.startup(),
                    _.defer(function() {
                        console.log("Deferred finish joining..."),
                        d20.Campaign.characters.backboneFirebase = new BackboneFirebase(d20.Campaign.characters),
                        d20.Campaign.handouts.backboneFirebase = new BackboneFirebase(d20.Campaign.handouts),
                        d20.Campaign.decks.backboneFirebase = new BackboneFirebase(d20.Campaign.decks),
                        d20.Campaign.rollabletables.backboneFirebase = new BackboneFirebase(d20.Campaign.rollabletables),
                        d20.Campaign.hands.backboneFirebase = new BackboneFirebase(d20.Campaign.hands),
                        d20.Campaign.custFx.backboneFirebase = new BackboneFirebase(d20.Campaign.custFx),
                        _.defer(function() {
                            d20.Campaign.cardtrades.backboneFirebase = new BackboneFirebase(d20.Campaign.cardtrades),
                            $(document).trigger("d20:joinedgame")
                        }),
                        firebasePing();
                        var e = window.currentPlayer.get("color");
                        "#13B9F0" == e && (e = "#" + Math.floor(16777215 * Math.random()).toString(16)),
                        window.currentPlayer.save({
                            online: !0,
                            lastActive: (new Date).getTime(),
                            speakingas: "",
                            color: e
                        }),
                        d20.journal.refreshSpeakingAsOptions(),
                        "roll20" === d20ext.videotype.substring(0, 6) && d20.webrtc.connect(),
                        setTimeout(function() {
                            $("#editor-wrapper").scrollLeft(125).scrollTop(125),
                            d20.jukebox && d20.jukebox.refreshJukeboxList()
                        }, 1e3)
                    }),
                    !0 === window.xlfeats && window.hasapiscripts && d20.apiclient.ready()
                };
                if ("tutorial" == window.GNTKN)
                    var t = this.players.create({
                        d20userid: window.d20_account_id,
                        displayname: window.d20_current_name
                    });
                else
                    t = this.players.get(this.fbauthinfo.auth.playerid);
                if ($("#videoframerate").val(this.get("videobandwidth")).trigger("change-silent"),
                t)
                    return window.currentPlayer = t,
                    e(),
                    !0;
                var n = this;
                return console.log("ERROR: NO EXISTING PLAYER"),
                $.post("/editor/clearplayeridcache", function() {
                    alert("We were unable to connect you to the game session. Please reload and try again. If this error persists, please contact support. ERROR CODE: NEP:" + n.fbauthinfo.auth.playerid)
                }),
                !1
            },
            isNew: function() {
                return !1
            },
            activeCharacters: function() {
                var e = [];
                return this.characters.each(function(t) {
                    1 == !t.get("archived") && e.push(t)
                }),
                _.sortBy(e, function(e) {
                    return e.get("name")
                })
            }
        })
          , Z = Backbone.View.extend({
            _template: $("#tmpl_add_jukebox"),
            initialize: function() {
                function t(e) {
                    if ("keypress" == e.type && "13" == (e.keyCode ? e.keyCode : e.which) || "click" == e.type && "save btn" == e.currentTarget.className) {
                        var t = $(this).parents(".result")
                          , n = t.attr("data-track-id")
                          , i = (t.attr("data-origtitle"),
                        t.find(".titleedit").val());
                        i && $.post("/audio_library/rename/" + n, {
                            title: i
                        }, function(e) {
                            e = JSON.parse(e),
                            t.find(".titleedit").val(e.newtitle),
                            t.find(".title").html(e.newtitle),
                            t.find(".title").attr("title", e.newtitle),
                            t.attr("data-origtitle", e.newtitle),
                            t.find(".titleedit, .save, .cancel, .delete").hide(),
                            t.find(".title, .edit").show(),
                            t.parents("#myaudio_results").length ? t.find(".addtolist").show() : t.find(".removefromlist").show()
                        })
                    }
                }
                var n = this
                  , i = 0
                  , o = []
                  , r = 0
                  , a = []
                  , s = 0
                  , l = []
                  , c = []
                  , u = []
                  , d = function() {
                    $mpTracks = n.$el.find("#myaudio_playlists .result"),
                    $maTracks = n.$el.find("#myaudio_results .result");
                    var e = []
                      , t = [];
                    _.each($mpTracks, t=>{
                        var n = $(t).attr("data-tags");
                        e.push(n.split(",").map(e=>e.trim()).flatten().filter(e=>"" != e))
                    }
                    ),
                    e = (e = [...new Set(e.flatten().filter(e=>"" != e))]).map(e=>({
                        text: e,
                        value: e
                    })),
                    _.each($maTracks, e=>{
                        var n = $(e).attr("data-tags");
                        t.push(n.split(",").map(e=>e.trim()).flatten().filter(e=>"" != e))
                    }
                    ),
                    t = (t = [...new Set(t.flatten().filter(e=>"" != e))]).map(e=>({
                        text: e,
                        value: e
                    }));
                    var i = n.$el.find("#myplaylists_select")[0].selectize;
                    i.clear(),
                    i.clearOptions(),
                    i.load(t=>{
                        t(e)
                    }
                    ),
                    i.refreshOptions(!1);
                    var o = n.$el.find("#myaudio_select")[0].selectize;
                    o.clear(),
                    o.clearOptions(),
                    o.load(e=>{
                        e(t)
                    }
                    ),
                    o.refreshOptions(!1)
                };
                _.bindAll(this, "render", "showDialog", "search"),
                this.$el = $(this.el),
                this.$el.addClass("dialog"),
                this.render(),
                this.currentPlayingObj = !1,
                this.currentPlayInterval = !1;
                var h = _.debounce(this.search, 400);
                this.$el.find("#jukebox_search").bind("keyup", function() {
                    h()
                });
                var p, f = function(e, t) {
                    var n = new FileReader;
                    return n.onload = function() {
                        null != t && t(n.result)
                    }
                    ,
                    n.readAsArrayBuffer(e)
                }, g = function(e, t) {
                    var n = ""
                      , i = ""
                      , o = new Worker("/js/d20/ffmpeg-worker-webm.5.js");
                    o.onmessage = function(r) {
                        var a, s = r.data;
                        switch (s.type) {
                        case "ready":
                            f(e, t=>{
                                o.postMessage({
                                    type: "run",
                                    MEMFS: [{
                                        name: e.name,
                                        data: t
                                    }],
                                    arguments: ["-i", e.name, "-filter_complex", "compand,showwavespic=s=500x60:colors=#b2b2b2", "-frames:v", "1", "track.png"],
                                    TOTAL_MEMORY: 268435456
                                })
                            }
                            );
                            break;
                        case "stdout":
                            n += s.data + "\n";
                            break;
                        case "stderr":
                            i += s.data + "\n";
                            break;
                        case "done":
                            if (o.terminate(),
                            s.data.MEMFS[0]) {
                                a = s.data.MEMFS[0].data;
                                var l = new File([a],"track.png",{
                                    type: "image/png"
                                });
                                return t(l)
                            }
                            return t("err");
                        case "exit":
                            console.log("Process exited with code " + s.data),
                            s.data && console.log(i),
                            console.log(n);
                            break;
                        case "error":
                            console.log("FFMpeg encountered an error.  stderr output: ", i),
                            console.log(s.data),
                            o.terminate()
                        }
                    }
                };
                Dropzone.autoDiscover = !1,
                this.$el.find("#myaudio_dropzone").dropzone({
                    url: "/audio_library/upload",
                    maxFilesize: 20,
                    addRemoveLinks: !0,
                    dictRemoveFile: "Clear file",
                    init: function() {
                        this.on("processing", function(e) {
                            console.log("EVENT: addedfile"),
                            patience.spinIn($(e.previewElement).find(".dz-details"))
                        }),
                        this.on("sending", function(e) {
                            console.log("EVENT: sending"),
                            patience.spinOut($(e.previewElement).find(".dz-details"))
                        }),
                        this.on("complete", function(e) {
                            console.log("EVENT: complete"),
                            patience.spinOut($(e.previewElement).find(".dz-details"))
                        })
                    },
                    transformFile: function(e, t) {
                        var n = ""
                          , i = ""
                          , o = new Worker("/js/d20/ffmpeg-worker-webm.5.js");
                        o.onmessage = function(r) {
                            var a, s = r.data;
                            switch (s.type) {
                            case "ready":
                                f(e, t=>{
                                    o.postMessage({
                                        type: "run",
                                        MEMFS: [{
                                            name: e.name,
                                            data: t
                                        }],
                                        arguments: ["-i", e.name, "-c:a", "libopus", "-b:a", "96k", "-vn", "track.ogg"]
                                    })
                                }
                                );
                                break;
                            case "stdout":
                                n += s.data + "\n";
                                break;
                            case "stderr":
                                i += s.data + "\n";
                                break;
                            case "done":
                                if (o.terminate(),
                                s.data.MEMFS[0]) {
                                    a = s.data.MEMFS[0].data;
                                    var l = new File([a],"track.ogg",{
                                        type: "audio/opus"
                                    });
                                    return t(l)
                                }
                                return t("err");
                            case "exit":
                                console.log("Process exited with code " + s.data),
                                s.data && console.log(i),
                                console.log(n);
                                break;
                            case "error":
                                console.log("FFMpeg encountered an error.  stderr output: ", i),
                                console.log(s.data),
                                o.terminate()
                            }
                        }
                    },
                    accept: function(e, t) {
                        t()
                    },
                    success: function(e, t) {
                        var i = JSON.parse(t);
                        g(e, e=>{
                            function t(e, t) {
                                var n = new XMLHttpRequest;
                                n.onreadystatechange = (()=>{
                                    4 === n.readyState && t(n.response)
                                }
                                ),
                                n.open("POST", e),
                                n.send(o)
                            }
                            var o = new FormData;
                            o.append("file", e),
                            o.append("trackid", i.id),
                            console.log(e),
                            console.log(o),
                            t("/audio_library/uploadwaveform", ()=>{
                                $.get(`/audio_library/waveform/${i.id}`, e=>{
                                    n.$el.find(`.myaudio.result[data-track-id=${i.id}] .progressbg`).css({
                                        "background-image": `url('${e}')`
                                    }),
                                    console.log(e),
                                    i.tags = "",
                                    n.$el.find("#myaudio_results").append($("#tmpl_myaudio_search_result").jqote(i))
                                }
                                )
                            }
                            )
                        }
                        ),
                        ga("send", {
                            hitType: "event",
                            eventCategory: "My Audio",
                            eventAction: "Uploaded"
                        })
                    },
                    parallelUploads: 1,
                    createImageThumbnails: !1,
                    acceptedFiles: "audio/*,.ogg",
                    timeout: 18e4,
                    previewTemplate: '\t\t\t\t\t<div class="dz-preview dz-file-preview">\n\t\t\t\t\t\t<div class="dz-image"><img data-dz-thumbnail /></div>\n\t\t\t\t\t\t<div class="dz-details">\n\t\t\t\t\t\t\t<div class="dz-size"><span data-dz-size></span></div>\n\t\t\t\t\t\t\t<div class="dz-filename"><span data-dz-name></span></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress></span></div>\n\t\t\t\t\t\t<div class="dz-error-message"><span data-dz-errormessage></span></div>\n\t\t\t\t\t\t<div class="dz-success-mark">\n\t\t\t\t\t\t\t<svg width="54px" height="54px" viewBox="0 0 54 54" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">\n\t\t\t\t\t\t\t\t<title>Check</title>\n\t\t\t\t\t\t\t\t<defs></defs>\n\t\t\t\t\t\t\t\t<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">\n\t\t\t\t\t\t\t\t\t<path d="M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z" id="Oval-2" stroke-opacity="0.198794158" stroke="#747474" fill-opacity="0.816519475" fill="#FFFFFF" sketch:type="MSShapeGroup"></path>\n\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="dz-error-mark">\n\t\t\t\t\t\t\t<svg width="54px" height="54px" viewBox="0 0 54 54" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">\n\t\t\t\t\t\t\t\t<title>Error</title>\n\t\t\t\t\t\t\t\t<defs></defs>\n\t\t\t\t\t\t\t\t<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">\n\t\t\t\t\t\t\t\t\t<g id="Check-+-Oval-2" sketch:type="MSLayerGroup" stroke="#747474" stroke-opacity="0.198794158" fill="#FFFFFF" fill-opacity="0.816519475">\n\t\t\t\t\t\t\t\t\t\t<path d="M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z" id="Oval-2" sketch:type="MSShapeGroup"></path>\n\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\t\t\t\t'
                }),
                this.$el.on("click", ".newlist", function() {
                    $.post("/audio_library/newlist/", function(e) {
                        e = JSON.parse(e),
                        listdata = {
                            title: e.title,
                            id: e.id
                        },
                        n.$el.find("#myaudio_playlists").append($("#tmpl_myaudio_list").jqote(listdata))
                    })
                }),
                this.$el.on("click", ".play", function() {
                    var t = $(this);
                    n.$el.find(".pause").trigger("click");
                    var i = $(this).parents(".result")
                      , o = i.attr("data-track-id")
                      , r = i.attr("data-source");
                    if ("SoundCloud" === r)
                        n.currentPlayingObj = SC.stream(o),
                        n.currentPlayingObj.play({
                            onload: function() {
                                i.find(".title").text(i.attr("data-origtitle"))
                            }
                        }),
                        ga("send", {
                            hitType: "event",
                            eventCategory: "SoundCloud",
                            eventAction: "Play"
                        });
                    else if ("Tabletop Audio" === r)
                        n.currentPlayingObj = soundManager.createSound({
                            id: o,
                            url: "https://s3.amazonaws.com/cdn.roll20.net/ttaudio/" + o.split("-")[0]
                        }),
                        n.currentPlayingObj.play({
                            onload: function() {
                                i.find(".title").text(i.attr("data-origtitle"))
                            }
                        }),
                        ga("send", {
                            hitType: "event",
                            eventCategory: "Tabletop Audio",
                            eventAction: "Play"
                        });
                    else if ("Battlebards" === r) {
                        var a = o.split(".mp3-")[0];
                        a = (a += ".mp3").replace(/%20%2D%20/g, " - "),
                        a = encodeURIComponent(a),
                        $.post("/editor/audiourl/bb", {
                            trackurl: a
                        }, function(e) {
                            t.hasClass("pause") && (n.currentPlayingObj = soundManager.createSound({
                                id: o,
                                url: e
                            }),
                            n.currentPlayingObj.play({
                                onload: function() {
                                    i.find(".title").text(i.attr("data-origtitle"))
                                }
                            }))
                        }),
                        ga("send", {
                            hitType: "event",
                            eventCategory: "Battlebards",
                            eventAction: "Play"
                        })
                    } else
                        "Incompetech" === r ? (n.currentPlayingObj = soundManager.createSound({
                            id: o,
                            url: "https://s3.amazonaws.com/cdn.roll20.net/incompetech/" + o.split("-")[0]
                        }),
                        n.currentPlayingObj.play({
                            onload: function() {
                                i.find(".title").text(i.attr("data-origtitle"))
                            }
                        }),
                        ga("send", {
                            hitType: "event",
                            eventCategory: "Incompetech",
                            eventAction: "Play"
                        })) : "Fanburst" === r ? (n.currentPlayingObj = soundManager.createSound({
                            id: o,
                            url: "https://api.fanburst.com/tracks/" + o + "/stream?client_id=0fc1df8b-40a4-4391-b0f7-d0257edb6634"
                        }),
                        n.currentPlayingObj.play({
                            onload: function() {
                                i.find(".title").text(i.attr("data-origtitle"))
                            }
                        }),
                        ga("send", {
                            hitType: "event",
                            eventCategory: "Fanburst",
                            eventAction: "Play"
                        })) : "My Audio" === r && (n.currentPlayingObj = soundManager.createSound({
                            id: o,
                            url: "/audio_library/play/" + campaign_id + "/" + o.split("-")[0]
                        }),
                        n.currentPlayingObj.play({
                            onload: function() {
                                i.find(".title").text(i.attr("data-origtitle"))
                            }
                        }),
                        ga("send", {
                            hitType: "event",
                            eventCategory: "My Audio",
                            eventAction: "Play"
                        }));
                    i.find(".title").text("Loading..."),
                    $(this).removeClass("play").addClass("pause").find(".pictos").html("6"),
                    this.currentPlayInterval = setInterval(function() {
                        var t = Math.round(n.currentPlayingObj.position / n.currentPlayingObj.duration * 1e4) / 100
                          , o = Math.floor(n.currentPlayingObj.duration / 1e3)
                          , r = Math.round(n.currentPlayingObj.position / 1e3)
                          , a = e(o)
                          , s = e(r);
                        i.find(".progress").css({
                            width: t + "%"
                        }),
                        i.find(".progressText").text(`${s} / ${a}`)
                    }, 50)
                }),
                this.$el.on("click", ".pause", function() {
                    this.currentPlayInterval && clearInterval(this.currentPlayInterval),
                    n.$el.find(".progress").css({
                        width: "0%"
                    });
                    var e = $(this).parents(".result");
                    e.find(".progressText").text(""),
                    e.find(".title").text(e.attr("data-origtitle")),
                    n.$el.find(".pause").removeClass("pause").addClass("play").find(".pictos").html("4"),
                    n.currentPlayingObj && n.currentPlayingObj.destruct()
                }),
                this.$el.on("click", ".uppertab", function() {
                    var e = $(this).attr("data-section");
                    if (!$(this).hasClass("active")) {
                        var t = n.$el.find(".uppertab.active")
                          , i = t.attr("data-section");
                        t.removeClass("active"),
                        $(this).addClass("active"),
                        $(`.section.${i}`).hide(),
                        $(`.section.${e}`).show()
                    }
                }),
                this.$el.on("click", ".add", function() {
                    var e = $(this).parents(".result")
                      , t = e.attr("data-track-id")
                      , i = e.attr("data-origtitle");
                    n.model.addToPlaylist(t, i, e.attr("data-source"), e.attr("data-storagekey"))
                }),
                this.$el.on("click", ".result[data-source='My Audio'] .title", function() {
                    var e = $(this).parents(".result")
                      , t = e.attr("data-origtitle");
                    e.find(".title, .edit, .addtolist, .removefromlist").hide(),
                    e.find(".titleedit").val(t),
                    e.find(".titleedit, .save, .cancel, .delete").show(),
                    e.find(".titleedit").focus()
                }),
                this.$el.on("click", ".cancel", function() {
                    var e = $(this).parents(".result");
                    e.find(".titleedit, .save, .cancel, .delete").hide(),
                    e.find(".title, .edit").show(),
                    e.parents("#myaudio_results").length ? e.find(".addtolist").show() : e.find(".removefromlist").show()
                }),
                this.$el.on("click", ".result .progressbg", function(e) {
                    if (n.currentPlayingObj && n.currentPlayingObj.playState && n.currentPlayingObj.id == $(this).parents(".result").attr("data-track-id")) {
                        var t = e.offsetX / $(e.currentTarget).width()
                          , i = Math.floor(n.currentPlayingObj.duration * t);
                        n.currentPlayingObj.setPosition(i),
                        $(e.currentTarget).prev(".progress").css({
                            width: 100 * t + "%"
                        })
                    }
                }),
                this.$el.on("mousemove", ".result .progressbg", function(t) {
                    if (n.currentPlayingObj && n.currentPlayingObj.playState) {
                        var i = $(this).parents(".result").attr("data-track-id");
                        if (n.currentPlayingObj.id == i) {
                            var o = $("#durationTooltip");
                            o.length || (o = $('<div id="durationTooltip"></div>'),
                            $("body").append(o));
                            var r = t.offsetX / $(t.currentTarget).width()
                              , a = Math.floor(n.currentPlayingObj.duration * r);
                            o.show(),
                            o.text(`${e(Math.round(a / 1e3))}`),
                            o.css({
                                left: t.pageX + 20,
                                top: t.pageY + 20
                            })
                        }
                    }
                }),
                this.$el.on("mouseleave", ".result .progressbg", function() {
                    var e = $("#durationTooltip");
                    e.length && e.hide()
                }),
                this.$el.on("click", ".result.myaudio .tags .tag", function() {
                    var e = $(this).parents(".tags")[0]
                      , t = $("<select class='tagselect' style='visibility: hidden;' placeholder='Enter tags' multiple></select>")
                      , n = _.map($(e).children(":not(.addtag)"), e=>e.innerText)
                      , i = e;
                    $(e).before(t),
                    n.forEach(e=>{
                        t.append(`<option value="${e}" selected>${e}</option>`)
                    }
                    ),
                    c.forEach(e=>{
                        t.append(`<option value="${e}">${e}</option>`)
                    }
                    ),
                    t.selectize({
                        closeAfterSelect: !0,
                        create: !0,
                        dropdownParent: "body",
                        render: {
                            option_create: function(e, t) {
                                return '<div class="create">Add tag: <strong>' + t(e.input) + "</strong>&hellip;</div>"
                            }
                        },
                        onBlur: function() {}
                    });
                    var o = t[0].selectize;
                    o.$control_input.focus(),
                    o.$control_input.on("blur", ()=>{
                        o = t[0].selectize;
                        var e = ""
                          , n = o.getValue()
                          , r = $(`.myaudio.result[data-track-id="${$(i).parents(".result").attr("data-track-id")}"] .tags`);
                        $(r).empty(),
                        n.forEach(t=>{
                            e += `${t.trim()},`;
                            var n = $(`<div class="tag">${t}</div>`);
                            $(r).append(n)
                        }
                        );
                        var a = $('<div class="tag addtag">+Add</div>');
                        $(r).append(a),
                        e = e.slice(0, -1),
                        $(r).parents(".myaudio.result").attr("data-tags", e),
                        $(i).show(),
                        o.destroy(),
                        $(t).remove(),
                        n.forEach(e=>{
                            u.includes(e) || u.push(e),
                            c.includes(e) || c.push(e)
                        }
                        );
                        var s = $(i).parents(".result").attr("data-track-id");
                        $.post(`/audio_library/updatetracktags/${s}`, {
                            tags: e
                        }, function() {
                            console.log("Tags updated"),
                            d()
                        }).fail(function() {
                            console.log("Error updating track tags")
                        })
                    }
                    ),
                    $(e).hide()
                }),
                this.$el.on("click", ".save", t),
                this.$el.on("keypress", ".titleedit", t),
                this.$el.on("click", ".editlist", function() {
                    var e = $(this).parents(".listheader")
                      , t = e.attr("data-title");
                    e.find(".title, .editlist, .addtolist").hide(),
                    e.find(".titleedit").val(t),
                    e.find(".titleedit, .savelist, .cancellist, .deletelist").show()
                }),
                this.$el.on("click", ".cancellist", function() {
                    var e = $(this).parents(".listheader");
                    e.find(".titleedit, .savelist, .cancellist, .deletelist").hide(),
                    e.find(".title, .editlist").show(),
                    e.parents("#myaudio_results").length && e.find(".addtolist").show()
                }),
                this.$el.on("click", ".savelist", function() {
                    var e = $(this).parents(".listheader")
                      , t = e.attr("data-list-id")
                      , n = (e.attr("data-title"),
                    e.find(".titleedit").val());
                    n && $.post("/audio_library/renamelist/" + t, {
                        title: n
                    }, function(t) {
                        t = JSON.parse(t),
                        e.find(".titleedit").val(t.newtitle),
                        e.find(".title").html(t.newtitle),
                        e.attr("data-title", t.newtitle),
                        e.find(".titleedit, .savelist, .cancellist, .deletelist").hide(),
                        e.find(".title, .editlist").show()
                    })
                }),
                this.$el.on("click", ".deletelist", function() {
                    var e = $(this).parents(".listheader");
                    if (confirm("Are you sure you wish to delete this list from your library? This action is irreversible.")) {
                        var t = e.attr("data-list-id");
                        $.post("/audio_library/deletelist/" + t, function() {
                            e.siblings(".listresults[data-list-id=" + t + "]").remove(),
                            e.remove()
                        }).fail(function() {
                            console.log("Deletion failed.")
                        })
                    }
                }),
                this.$el.on("click", ".addlist", function() {
                    var e = $(this).parents(".listheader")
                      , t = e.attr("data-title")
                      , i = e.attr("data-list-id")
                      , o = d20.jukebox.addFolderToFolderStructure(t)
                      , r = e.siblings(".listresults[data-list-id=" + i + "]").find(".result").get().reverse();
                    _.each(r, function(e) {
                        var t = $(e).attr("data-track-id")
                          , i = $(e).attr("data-origtitle")
                          , r = n.model.addToPlaylist(t, i, $(e).attr("data-source"), $(e).attr("data-storagekey")).id;
                        d20.jukebox.addItemToFolderStructure(r, o)
                    })
                }),
                this.$el.on("click", ".delete", function() {
                    var e = $(this).parents(".result");
                    if (confirm("Are you sure you wish to delete this track from your library? This action is irreversible.")) {
                        var t = e.attr("data-track-id");
                        $.post("/audio_library/delete/" + t, function() {
                            ga("send", {
                                hitType: "event",
                                eventCategory: "My Audio",
                                eventAction: "Deleted"
                            }),
                            n.currentPlayingObj && n.currentPlayingObj.playState && t == n.currentPlayingObj.id && n.currentPlayingObj.stop(),
                            n.$el.find(`.result.myaudio[data-track-id=${t}]`).remove(),
                            e.remove()
                        }).fail(function() {
                            console.log("Deletion failed.")
                        })
                    }
                }),
                this.$el.on("click", ".addtolist", function() {
                    var e = $(this).parents(".result")
                      , t = n.$el.find("#myaudio_playlists .listheader")
                      , i = e.find(".listselector")
                      , o = [];
                    o.push({
                        text: "Add to game",
                        value: ":togame"
                    }),
                    _.each(t, function(e) {
                        o.push({
                            text: $(e).attr("data-title"),
                            value: $(e).attr("data-list-id")
                        })
                    }),
                    e.find(".controls .addtolist").hide(),
                    i.hasClass("selectized") || i.selectize({
                        closeAfterSelect: !0,
                        dropdownParent: "body",
                        render: {
                            option: (e,t)=>":togame" == e.value ? '<div class="option togame">' + t(e.text) + "</div>" : '<div class="option">' + t(e.text) + "</div>"
                        }
                    }),
                    console.log(o);
                    var r = i[0].selectize;
                    r.clear(),
                    r.clearOptions(),
                    r.load(e=>{
                        e(o)
                    }
                    ),
                    r.off("change"),
                    r.off("blur"),
                    r.focus(),
                    r.on("change", e=>{
                        var t = $(this).parents(".result")
                          , i = t.attr("data-track-id")
                          , o = t.attr("data-source")
                          , r = t.attr("data-storagekey")
                          , a = t.attr("data-tags")
                          , s = t.attr("data-origtitle")
                          , l = {
                            title: s,
                            id: i,
                            tags: a,
                            storagekey: r
                        }
                          , c = e;
                        ":togame" == c ? n.model.addToPlaylist(i, s, t.attr("data-source"), t.attr("data-storagekey")) : c && $.post("/audio_library/addtracktolist/" + c + "/" + i, {
                            source: o
                        }, function() {
                            $playlist = n.$el.find("#myaudio_playlists .listresults[data-list-id=" + c + "]"),
                            "My Audio" == o ? $playlist.append($("#tmpl_myaudio_search_result").jqote(l)) : "Tabletop Audio" == o ? $playlist.append($("#tmpl_ttaudio_search_result").jqote(l)) : "Battlebards" == o ? $playlist.append($("#tmpl_battlebards_search_result").jqote(l)) : "Incompetech" == o && $playlist.append($("#tmpl_incompetech_search_result").jqote(l)),
                            d(),
                            $playlist.find(".controls .removefromlist").show(),
                            t.find(".controls .addtolist").show(),
                            t.find(".controls.listselection").hide()
                        }).fail(function() {
                            console.log("Error adding track to playlist.")
                        })
                    }
                    ),
                    r.on("blur", function() {
                        e.find(".controls .addtolist").show(),
                        e.find(".controls.listselection").hide()
                    }),
                    e.find(".controls.listselection").show()
                }),
                this.$el.on("click", ".collapser", function() {
                    var e = $(this).parents(".listheader")
                      , t = e.attr("data-list-id")
                      , n = e.siblings(".listresults[data-list-id=" + t + "]");
                    n.is(":hidden") ? ($(this).find("div").css({
                        "-webkit-transform": "rotate(90deg) scaleY(1.8)",
                        "-moz-transform": "rotate(90deg) scaleY(1.8)",
                        transform: "rotate(90deg) scaleY(1.8)"
                    }),
                    n.slideDown()) : ($(this).find("div").css({
                        "-webkit-transform": "rotate(0deg) scaleY(1.8)",
                        "-moz-transform": "rotate(0deg) scaleY(1.8)",
                        transform: "rotate(0deg) scaleY(1.8)"
                    }),
                    n.slideUp())
                }),
                this.$el.on("click", ".removefromlist", function() {
                    var e = $(this).parents(".result")
                      , t = $(this).parents(".listresults")
                      , i = e.attr("data-track-id")
                      , o = e.attr("data-source")
                      , r = t.attr("data-list-id");
                    $.post("/audio_library/removetrackfromlist/" + r + "/" + i, {
                        source: o
                    }, function() {
                        n.currentPlayingObj && n.currentPlayingObj.playState && i == n.currentPlayingObj.id && n.currentPlayingObj.stop(),
                        e.remove(),
                        d()
                    }).fail(function() {
                        console.log("Error removing track from playlist.")
                    })
                }),
                this.$el.on("click", ".listcancel", function() {
                    var e = $(this).parents(".result");
                    e.find(".controls.default").show(),
                    e.find(".controls.listselection").hide()
                }),
                this.$el.on("myaudio:update", function() {
                    var e = n.$el.find("#myaudio_playlists");
                    e.html(""),
                    $.ajax({
                        url: "/audio_library/playlists",
                        dataType: "json"
                    }).done(function(t) {
                        _.each(t, function(t) {
                            listdata = {
                                id: t.id,
                                title: t.title,
                                order: t.order
                            },
                            $thisList = e.append($("#tmpl_myaudio_list").jqote(listdata)),
                            $playlist = $thisList.find(".listresults[data-list-id=" + t.id + "]"),
                            sortedTracks = [],
                            _.each(t.order, function(e) {
                                var n = !1;
                                t.tracks = t.tracks.filter(function(t) {
                                    return !(!n && t.id == e) || (sortedTracks.push(t),
                                    n = !0,
                                    !1)
                                })
                            }),
                            _.each(sortedTracks, function(e) {
                                c.push(e.tags.split(",").map(e=>e.trim()).flatten().filter(e=>"" != e)),
                                trackdata = {
                                    id: e.id,
                                    title: e.title,
                                    source: e.source,
                                    tags: e.tags
                                },
                                "My Audio" == e.source ? (trackdata.storagekey = e.storagekey,
                                $playlist.append($("#tmpl_myaudio_search_result").jqote(trackdata)),
                                u.push(e.tags.split(",").map(e=>e.trim()).flatten().filter(e=>"" != e))) : "Battlebards" == e.source ? $playlist.append($("#tmpl_battlebards_search_result").jqote(trackdata)) : "Incompetech" == e.source ? $playlist.append($("#tmpl_incompetech_search_result").jqote(trackdata)) : "Tabletop Audio" == e.source && $playlist.append($("#tmpl_ttaudio_search_result").jqote(trackdata))
                            }),
                            c = [...new Set(c.flatten().filter(e=>"" != e))],
                            u = [...new Set(u.flatten().filter(e=>"" != e))],
                            $playlistSelect = n.$el.find("#myplaylists_select:not(.selectized)"),
                            $maSelect = n.$el.find("#myaudio_select:not(.selectized)"),
                            c.forEach(e=>{
                                $playlistSelect.append($("<option>", {
                                    value: e,
                                    text: e
                                }))
                            }
                            ),
                            u.forEach(e=>{
                                $playlistSelect.append($("<option>", {
                                    value: e,
                                    text: e
                                }))
                            }
                            ),
                            n.$el.find("#myaudio_select").trigger("change"),
                            $playlist.find(".controls .removefromlist").show()
                        }),
                        sortables = n.$el.find(".listresults").sortable({
                            appendTo: n.$el,
                            handle: ".trackhandle",
                            forcePlaceholderSize: !0,
                            revert: !0,
                            stop: function() {
                                sortedIds = $(this).sortable("toArray", {
                                    attribute: "data-track-id"
                                }),
                                cleanedIds = [],
                                sortedIds.forEach(e=>{
                                    let t = $(this).find("[data-track-id='" + e + "']").attr("data-source");
                                    "Battlebards" == t ? cleanedIds.push("b-" + e) : "Tabletop Audio" == t ? cleanedIds.push("t-" + e) : "Incompetech" == t ? cleanedIds.push("i-" + e) : cleanedIds.push(e)
                                }
                                ),
                                $.post("/audio_library/changelistorder/" + $(this).attr("data-list-id"), {
                                    orderdata: cleanedIds
                                })
                            }
                        })
                    });
                    var t = n.$el.find("#myaudio_results");
                    t.html(""),
                    $.ajax({
                        url: "/audio_library/search",
                        dataType: "json",
                        data: {
                            alltracks: !0
                        }
                    }).done(function(e) {
                        _.each(e.tracks, function(e) {
                            thistrack = JSON.parse(e),
                            trackdata = {
                                id: String(thistrack.id),
                                title: thistrack.title,
                                account: String(thistrack.accountid),
                                tags: thistrack.tags,
                                storagekey: thistrack.storagekey
                            },
                            t.append($("#tmpl_myaudio_search_result").jqote(trackdata))
                        })
                    })
                }),
                this.$el.on("click", ".nav li a", function() {
                    n.$el.find(".nav li.active").removeClass("active"),
                    n.$el.find(".tab-pane").each(function() {
                        this.style.display = "none"
                    }),
                    n.$el.find(".tab-pane." + $(this).attr("data-tab"))[0].style.display = "block",
                    "myaudio" === $(this).attr("data-tab") && n.$el.trigger("myaudio:update"),
                    $(this).parent().addClass("active")
                }),
                this.$el.on("click", ".nav li", function() {
                    "tabletopaudio" === (p = n.$el.find(".nav li.active").children().first().attr("data-tab")) ? a.every((e,t)=>(n.$el.find("#ttaudio_results").append($("#tmpl_ttaudio_search_result").jqote(e)),
                    r = t,
                    t < 20)) : "battlebards" === p ? o.every((e,t)=>(n.$el.find("#battlebards_results").append($("#tmpl_battlebards_search_result").jqote(e)),
                    i = t,
                    t < 20)) : "incompetech" === p && l.every((e,t)=>(n.$el.find("#incompetech_results").append($("#tmpl_incompetech_search_result").jqote(e)),
                    s = t,
                    t < 20))
                }),
                this.$el.on("scroll", _.debounce(function() {
                    if (p = n.$el.find(".nav li.active").children().first().attr("data-tab"),
                    this.scrollTop + this.clientHeight >= this.scrollHeight - 3e3)
                        if ("tabletopaudio" === p) {
                            var e = r;
                            a.every((t,i)=>(i > r && (n.$el.find("#ttaudio_results").append($("#tmpl_ttaudio_search_result").jqote(t)),
                            r = i),
                            i < e + 20))
                        } else if ("battlebards" === p) {
                            e = i;
                            o.every((t,o)=>(o > i && (n.$el.find("#battlebards_results").append($("#tmpl_battlebards_search_result").jqote(t)),
                            i = o),
                            o < e + 20))
                        } else if ("incompetech" === p) {
                            e = s;
                            l.every((t,i)=>(i > s && (n.$el.find("#incompetech_results").append($("#tmpl_incompetech_search_result").jqote(t)),
                            s = i),
                            i < e + 20))
                        }
                }, 250)),
                this.$el.on("change", "#ttaudio_select", _.debounce(function() {
                    $("#ttaudio_select").selectize({
                        maxItems: null,
                        valueField: "id",
                        labelField: "tag",
                        searchField: "tag",
                        persist: !1,
                        create: !0,
                        render: {
                            option_create: function(e, t) {
                                return '<div class="create">Search for title: <strong>' + t(e.input) + "</strong>&hellip;</div>"
                            }
                        }
                    }),
                    n.$el.find(".pause").trigger("click"),
                    n.$el.find("#ttaudio_results").html("");
                    var e = $("#ttaudio_select").val();
                    null === e && (e = "");
                    var t = {};
                    if ("" === e)
                        a = [],
                        _.each(TTAUDIO, function(e) {
                            t = {
                                id: e[1] + "-" + (new Date).getTime(),
                                title: e[0],
                                tags: e[2]
                            },
                            a.push(t)
                        }),
                        n.$el.find(".nav li").trigger("click");
                    else {
                        a = [];
                        var i = Object.values(TTAUDIO).filter(t=>e.every(e=>TTAUDIOTAGS.includes(e) ? t[2].toLowerCase().includes(e.toLowerCase()) : t[0].toLowerCase().includes(e.toLowerCase())));
                        _.each(i, function(e) {
                            t = {
                                id: e[1] + "-" + (new Date).getTime(),
                                title: e[0],
                                tags: e[2]
                            },
                            a.push(t)
                        }),
                        a.every((e,t)=>(n.$el.find("#ttaudio_results").append($("#tmpl_ttaudio_search_result").jqote(e)),
                        r = t,
                        t < 20))
                    }
                }, 500)),
                this.$el.on("change", "#battlebards_select", _.debounce(function() {
                    $("#battlebards_select").selectize({
                        maxItems: null,
                        valueField: "id",
                        labelField: "tag",
                        searchField: "tag",
                        persist: !1,
                        create: !0,
                        render: {
                            option_create: function(e, t) {
                                return '<div class="create">Search for title: <strong>' + t(e.input) + "</strong>&hellip;</div>"
                            }
                        }
                    }),
                    n.$el.find(".pause").trigger("click"),
                    n.$el.find("#battlebards_results").html("");
                    var e = $("#battlebards_select").val();
                    null === e && (e = "");
                    var t = {};
                    if ("" === e)
                        o = [],
                        _.each(BATTLEBARDS, function(e) {
                            t = {
                                id: e[1] + "-" + (new Date).getTime(),
                                title: e[0],
                                tags: e[2]
                            },
                            o.push(t)
                        }),
                        n.$el.find(".nav li").trigger("click");
                    else {
                        o = [];
                        var r = Object.values(BATTLEBARDS).filter(t=>e.every(e=>BATTLEBARDSTAGS.includes(e) ? t[2].toLowerCase().includes(e.toLowerCase()) : t[0].toLowerCase().includes(e.toLowerCase())));
                        _.each(r, function(e) {
                            t = {
                                id: e[1] + "-" + (new Date).getTime(),
                                title: e[0],
                                tags: e[2]
                            },
                            n.$el.find("#battlebards_results").append($("#tmpl_battlebards_search_result").jqote(t))
                        }),
                        o.every((e,t)=>(n.$el.find("#battlebards_results").append($("#tmpl_battlebards_search_result").jqote(e)),
                        i = t,
                        t < 20))
                    }
                }, 500)),
                this.$el.on("change", "#incompetech_select", _.debounce(function() {
                    $("#incompetech_select").selectize({
                        maxItems: null,
                        valueField: "id",
                        labelField: "tag",
                        searchField: "tag",
                        persist: !1,
                        create: !0,
                        render: {
                            option_create: function(e, t) {
                                return '<div class="create">Search for title: <strong>' + t(e.input) + "</strong>&hellip;</div>"
                            }
                        }
                    }),
                    n.$el.find(".pause").trigger("click"),
                    n.$el.find("#incompetech_results").html("");
                    var e = $("#incompetech_select").val();
                    null === e && (e = "");
                    var t = {};
                    if ("" === e)
                        l = [],
                        _.each(INCOMPETECH, function(e) {
                            t = {
                                id: e[1] + "-" + (new Date).getTime(),
                                title: e[0],
                                tags: e[2]
                            },
                            l.push(t)
                        }),
                        n.$el.find(".nav li").trigger("click");
                    else {
                        l = [];
                        var i = Object.values(INCOMPETECH).filter(t=>e.every(e=>INCOMPETECHTAGS.includes(e) ? t[2].toLowerCase().includes(e.toLowerCase()) : t[0].toLowerCase().includes(e.toLowerCase())));
                        _.each(i, function(e) {
                            t = {
                                id: e[1] + "-" + (new Date).getTime(),
                                title: e[0],
                                tags: e[2]
                            },
                            l.push(t)
                        }),
                        l.every((e,t)=>(n.$el.find("#incompetech_results").append($("#tmpl_incompetech_search_result").jqote(e)),
                        s = t,
                        t < 20))
                    }
                }, 500)),
                this.$el.on("input", "#fanburst_search", _.debounce(function() {
                    var e = n.$el.find("#fanburst_results")
                      , t = escape(n.$el.find("#fanburst_search").val());
                    n.$el.find(".pause").trigger("click"),
                    e.html(""),
                    !t || t.length < 3 || $.ajax({
                        url: "/editor/fanburst_search/1",
                        dataType: "json",
                        data: {
                            filter: t
                        }
                    }).done(function(t) {
                        _.each(t.tracks, function(t) {
                            trackdata = {
                                id: t.id,
                                title: t.title,
                                username: t.user.name
                            },
                            e.append($("#tmpl_fanburst_search_result").jqote(trackdata))
                        }),
                        t.nextPage && e.append($("#tmpl_fanburst_search_result_next_page").jqote(t))
                    })
                }, 500)),
                this.$el.on("change", "#myplaylists_select", _.debounce(function() {
                    console.log(c),
                    $myplaylistsSelect = $("#myplaylists_select"),
                    $myplaylistsSelect.selectize({
                        maxItems: null,
                        persist: !1,
                        create: !0,
                        render: {
                            option_create: function(e, t) {
                                return '<div class="create">Search for title: <strong>' + t(e.input) + "</strong>&hellip;</div>"
                            }
                        }
                    });
                    var e = n.$el.find("#myaudio_playlists")
                      , t = n.$el.find("#myplaylists_select").val()
                      , i = "";
                    null != t && (i = t),
                    n.$el.find(".pause").trigger("click");
                    let o = function(t) {
                        var n = e.find(".result")
                          , i = n
                          , o = $([])
                          , r = e.find(".listheader")
                          , a = $([]);
                        $(this).parents(".listresults").attr("data-list-id");
                        t.length > 0 && (i = n.filter(function() {
                            var e = $(this);
                            return t.filter(t=>e.attr("data-origtitle").toLowerCase().includes(t.toLowerCase()) || e.attr("data-tags").toLowerCase().includes(t.toLowerCase())).length
                        }),
                        console.log(i),
                        o = n.filter(function() {
                            var e = $(this);
                            return t.filter(t=>!e.attr("data-origtitle").toLowerCase().includes(t.toLowerCase()) && !e.attr("data-tags").toLowerCase().includes(t.toLowerCase())).length
                        }),
                        console.log(o),
                        r = r.filter(function() {
                            var e = $(this);
                            return t.filter(t=>e.attr("data-title").toLowerCase().includes(t.toLowerCase())).length
                        }),
                        a = e.find(".listheader").not(r),
                        _.each(r, function(e) {
                            i.push($(".listresults[data-list-id*='" + $(e).attr("data-list-id") + "']").find(".result")),
                            o = o.not(".listresults[data-list-id*='" + $(e).attr("data-list-id") + "'] .result")
                        })),
                        i.show(),
                        t.length < 1 && $(".listresults").show(),
                        r.show(),
                        o.hide(),
                        _.each(a, function(e) {
                            $listResults = $(".listresults[data-list-id*='" + $(e).attr("data-list-id") + "']"),
                            0 == $listResults.children(":visible").length ? ($(e).hide(),
                            $listResults.hide()) : ($listResults.show(),
                            $(e).show())
                        })
                    };
                    i ? $.ajax({
                        url: "/audio_library/search",
                        dataType: "json",
                        data: {
                            filter: i
                        }
                    }).done(function() {
                        o(i)
                    }) : $.ajax({
                        url: "/audio_library/search",
                        dataType: "json",
                        data: {
                            alltracks: !0
                        }
                    }).done(function() {
                        o("")
                    })
                }, 500)),
                this.$el.on("change", "#myaudio_select", _.debounce(function() {
                    $("#myaudio_select").selectize({
                        maxItems: null,
                        persist: !1,
                        create: !0,
                        render: {
                            option_create: function(e, t) {
                                return '<div class="create">Search for title: <strong>' + t(e.input) + "</strong>&hellip;</div>"
                            }
                        }
                    });
                    var e = n.$el.find("#myaudio_results")
                      , t = n.$el.find("#myaudio_playlists")
                      , i = n.$el.find("#myaudio_select").val()
                      , o = "";
                    null != i && (o = i),
                    n.$el.find(".pause").trigger("click"),
                    e.html("");
                    let r = function(e) {
                        var n = t.find(".result")
                          , i = n
                          , o = $([])
                          , r = t.find(".listheader")
                          , a = $([]);
                        $(this).parents(".listresults").attr("data-list-id");
                        "" != (e = e.toLowerCase()) && (i = n.filter(function() {
                            return $(this).attr("data-origtitle").toLowerCase().indexOf(e) > -1
                        }),
                        o = n.filter(function() {
                            return -1 == $(this).attr("data-origtitle").toLowerCase().indexOf(e)
                        }),
                        r = r.filter(function() {
                            return $(this).attr("data-title").toLowerCase().indexOf(e) > -1
                        }),
                        a = t.find(".listheader").not(r),
                        _.each(r, function(e) {
                            i.push($(".listresults[data-list-id*='" + $(e).attr("data-list-id") + "']").find(".result")),
                            o = o.not(".listresults[data-list-id*='" + $(e).attr("data-list-id") + "'] .result")
                        })),
                        i.show(),
                        r.show(),
                        o.hide(),
                        _.each(a, function(e) {
                            0 == $(".listresults[data-list-id*='" + $(e).attr("data-list-id") + "']").children(":visible").length ? $(e).hide() : $(e).show()
                        })
                    };
                    o ? $.ajax({
                        url: "/audio_library/search",
                        dataType: "json",
                        data: {
                            filter: o
                        }
                    }).done(function(t) {
                        trackdatas = [],
                        _.each(t.tracks, function(e) {
                            thistrack = JSON.parse(e),
                            trackdatas.push({
                                id: String(thistrack.id),
                                title: thistrack.title,
                                account: String(thistrack.accountid),
                                tags: thistrack.tags,
                                storagekey: thistrack.storagekey
                            })
                        }),
                        filterArr = o,
                        console.log(trackdatas);
                        let n = trackdatas.filter(e=>filterArr.filter(t=>e.title.toLowerCase().includes(t.toLowerCase()) || e.tags.toLowerCase().includes(t.toLowerCase())).length)
                          , i = trackdatas.filter(e=>filterArr.filter(t=>!e.title.toLowerCase().includes(t.toLowerCase()) && !e.tags.toLowerCase().includes(t.toLowerCase())).length);
                        (n = n.filter(e=>!i.find(t=>e.id === t.id))).forEach(t=>{
                            e.append($("#tmpl_myaudio_search_result").jqote(t))
                        }
                        )
                    }) : $.ajax({
                        url: "/audio_library/search",
                        dataType: "json",
                        data: {
                            alltracks: !0
                        }
                    }).done(function(t) {
                        _.each(t.tracks, function(t) {
                            thistrack = JSON.parse(t),
                            trackdata = {
                                id: String(thistrack.id),
                                title: thistrack.title,
                                account: String(thistrack.accountid),
                                tags: thistrack.tags,
                                storagekey: thistrack.storagekey
                            },
                            e.append($("#tmpl_myaudio_search_result").jqote(trackdata))
                        }),
                        d(),
                        r("")
                    })
                }, 500)),
                this.$el.on("click", "#fanburst_next_page", function() {
                    var e = n.$el.find("#fanburst_results")
                      , t = escape(n.$el.find("#fanburst_search").val())
                      , i = n.$el.find("#fanburst_next_page")
                      , o = i.attr("data-nextPage");
                    n.$el.find(".pause").trigger("click"),
                    i.find(".load-more-text").text("Fetching"),
                    i.prop("disabled", !0),
                    $.ajax({
                        url: "/editor/fanburst_search/" + o,
                        dataType: "json",
                        data: {
                            filter: t
                        }
                    }).done(function(t) {
                        i.remove(),
                        _.each(t.tracks, function(t) {
                            trackdata = {
                                id: t.id,
                                title: t.title,
                                username: t.user.name
                            },
                            e.append($("#tmpl_fanburst_search_result").jqote(trackdata))
                        }),
                        t.nextPage && e.append($("#tmpl_fanburst_search_result_next_page").jqote(t))
                    })
                })
            },
            render: function() {
                this.$el.html(this._template.jqote(this.model))
            },
            showDialog: function() {
                var e = this;
                $(this.el).dialog({
                    modal: !1,
                    width: 560,
                    height: $(window).height() - 250,
                    position: ["center", 30],
                    title: i18n("manage_audio"),
                    zIndex: 10500,
                    beforeClose: function() {
                        e.$el.find(".pause").trigger("click")
                    }
                }),
                this.$el.find("#myplaylists_select").trigger("change"),
                this.$el.find("#myaudio_select").trigger("change"),
                this.$el.find(".nav li:first-child a").trigger("click"),
                this.$el.find("#ttaudio_select").trigger("change"),
                this.$el.find("#battlebards_select").trigger("change"),
                this.$el.find("#incompetech_select").trigger("change"),
                this.$el.find("#fanburst_search").trigger("keyup")
            },
            search: function() {
                var e = this
                  , t = this.$el.find("#jukebox_search").val();
                this.$el.find(".pause").trigger("click"),
                this.$el.find("#jukebox_results").html("<div class='alert'>Searching for music, please wait...</div>");
                var n = "";
                -1 === t.indexOf("soundcloud.com/") ? ("background" == $("#jukebox_filter").val() ? n = "&tags=game,soundtrack,ambiance,ambient,instrumental,orchestral,roll20" : "soundeffect" == $("#jukebox_filter").val() && (n = "&tags=sound-effect,roll20"),
                $.getJSON("https://api.soundcloud.com/tracks.json?client_id=bbee575fe431e873910d2a874e013989" + n + "&filter=streamable&q=" + escape(t), function(n) {
                    e.$el.find("#jukebox_results").html(""),
                    n && 0 != n.length ? _.each(n, function(t) {
                        e.$el.find("#jukebox_results").append($("#tmpl_jukebox_search_result").jqote(t))
                    }) : e.$el.find("#jukebox_results").html("<div class='alert'>We were unable to find any sounds for the keywords '" + t + "', sorry!</div>")
                })) : $.getJSON("/editor/sc_url_to_id/?scurl=" + escape(t), function(n) {
                    e.$el.find("#jukebox_results").html(""),
                    n && n.id && n.streamable ? e.$el.find("#jukebox_results").append($("#tmpl_jukebox_search_result").jqote(n)) : e.$el.find("#jukebox_results").html("<div class='alert'>We were unable to find a public sound at the url '" + d20.utils.strip_tags(t) + "', sorry! Double-check to make sure that the sound is shared publicly and that streaming of the track is allowed.</div>")
                })
            }
        })
          , Q = Backbone.View.extend({
            el: $("#jukebox"),
            _template: $("#tmpl_jukebox_row"),
            initialize: function() {
                var t = this;
                _.bindAll(this, "render"),
                this.debounced_render = _.debounce(this.render, 100),
                this.render(),
                this.$el.on("click", ".play", function() {
                    var e = $(this).parents(".jukeboxitem").attr("data-itemid")
                      , n = t.model.playlist.get(e);
                    if (n)
                        0 == n.get("playing") || 1 == n.get("softstop") ? (d20.Campaign.currentPlaylistPlayingID(),
                        n.play()) : (d20.Campaign.currentPlaylistPlayingID(),
                        n.get("activeinlist") ? d20.Campaign.stopPlaylistByID(n.get("activeinlist")) : n.stop());
                    else {
                        if (console.log($(this), e, n),
                        console.log("Unable to find jukebox item!"),
                        $(this).parents(".jukeboxplaylist").length)
                            d20.Campaign.stopPlaylistByID(e);
                        else {
                            var i = JSON.parse(d20.Campaign.get("jukeboxfolder"))
                              , o = $(this).parents(".dd-folder").attr("data-globalfolderid")
                              , r = $(this).parents(".dd-folder").find(".folder-title").text()
                              , a = $(this).parents(".dd-folder").find(".playstyle").attr("data-val")
                              , s = [];
                            _.each($(this).parents(".dd-folder").find(".jukeboxitem"), e=>{
                                s.push($(e).attr("data-itemid"))
                            }
                            ),
                            _.each(i, function(e) {
                                if ("object" == typeof e && e.id == o) {
                                    var t = JSON.parse(d20.Campaign.get("jukeboxplaylistsactive"));
                                    t.find(e=>e.id == o && 1 == e.playing) ? d20.Campaign.stopPlaylistByID(o) : (t.push({
                                        id: o,
                                        title: r,
                                        playingidx: 0,
                                        trackids: s,
                                        playstyle: a,
                                        playing: !1,
                                        playlistseed: "" + (new Date).getTime()
                                    }),
                                    d20.Campaign.save({
                                        jukeboxplaylistsactive: JSON.stringify(t)
                                    }),
                                    console.log("saved?"),
                                    console.log(t))
                                }
                            })
                        }
                        console.log("END SEARCH")
                    }
                }),
                this.$el.on("change", ".slider", function() {
                    var e = "";
                    e = $(this).parents("#jukeboxwhatsplaying").length ? $($(this).parents(".jukeboxitem")[0]).attr("data-itemid") : $(this).parents("li").attr("data-itemid");
                    var n = t.model.playlist.get(e);
                    if (n)
                        n.changeVolume($(this).val());
                    else {
                        var i = d20.Campaign.getActivePlaylistByID(e);
                        i && (n = t.model.playlist.get(i.trackids[i.playingidx])).changeVolume($(this).val())
                    }
                }),
                this.$el.on("click", ".plnext", function() {
                    var e = $(this).attr("data-itemid")
                      , n = d20.Campaign.getActivePlaylistByID(e);
                    "a" != n.playstyle && t.model.setPlaylistPlaying(e, n.playingidx + 1)
                }),
                this.$el.on("click", ".plprev", function() {
                    var e = $(this).attr("data-itemid")
                      , n = d20.Campaign.getActivePlaylistByID(e);
                    "a" != n.playstyle && (0 == n.playingidx ? t.model.setPlaylistPlaying(e, n.trackids.length - 1) : t.model.setPlaylistPlaying(e, n.playingidx - 1))
                }),
                window.is_gm && (this.$el.on("click", ".progressbg", function(e) {
                    var t = $(e.currentTarget).parents(".jukeboxitem-container").find(".jukeboxitem")
                      , n = $(t).attr("data-itemid");
                    if ($(t).hasClass("jukeboxplaylist")) {
                        var i = d20.Campaign.getActivePlaylistByID(n);
                        n = i.trackids[i.playingidx]
                    }
                    var o = window.Jukebox.playlist.get(n)
                      , r = window.Jukebox.soundObjs[o.get("track_id")];
                    if (r && r.playState) {
                        var a = e.offsetX / $(e.currentTarget).width()
                          , s = Math.floor(r.duration * a);
                        r.setPosition(s),
                        window.Jukebox.soundObjs[o.get("track_id")].progress = 100 * a,
                        o.set({
                            gprogress: a
                        }).save(),
                        $(e.currentTarget).parents(".jukeboxitem-container").find(".progress, .progressFilter").width(100 * a + "%")
                    }
                }),
                this.$el.on("mousemove", ".progressbg", function(t) {
                    var n = $(this).parents(".jukeboxitem-container").find(".jukeboxitem")
                      , i = $(n).attr("data-itemid");
                    if ($(n).hasClass("jukeboxplaylist")) {
                        var o = d20.Campaign.getActivePlaylistByID(i);
                        i = o.trackids[o.playingidx]
                    }
                    var r = window.Jukebox.playlist.get(i)
                      , a = window.Jukebox.soundObjs[r.get("track_id")];
                    if (a && a.playState && a.id == r.get("track_id")) {
                        var s = $("#durationTooltip")
                          , l = t.offsetX / $(t.currentTarget).width()
                          , c = Math.floor(a.duration * l);
                        s.show(),
                        s.text(`${e(Math.round(c / 1e3))}`);
                        var u = t.pageX + (t.pageX + 60 > document.documentElement.clientWidth ? -60 : 20)
                          , d = t.pageY + 20;
                        s.css({
                            left: u,
                            top: d
                        })
                    }
                }),
                this.$el.on("mouseleave", ".progressbg, #jukeboxwhatsplaying .plprev, #jukeboxwhatsplaying .plnext", function() {
                    var e = $("#durationTooltip");
                    e.length && e.hide()
                }),
                this.$el.on("mousemove", "#jukeboxwhatsplaying .plprev, #jukeboxwhatsplaying .plnext", function(e) {
                    var t = $("#durationTooltip");
                    if (t.length) {
                        t.show();
                        var n = e.pageX + (e.pageX + 60 > document.documentElement.clientWidth ? -60 : 20)
                          , i = e.pageY + 20;
                        $(e.currentTarget).hasClass("plprev") ? t.text("Previous Track") : t.text("Next Track"),
                        t.css({
                            left: n,
                            top: i
                        })
                    }
                    e.stopPropagation()
                })),
                this.$el.on("click", ".remove", function() {
                    var e = $(this).parents("li").attr("data-itemid");
                    t.model.playlist.get(e).destroy()
                }),
                this.$el.on("click", ".loop", function() {
                    var e = $(this).parents("li").attr("data-itemid");
                    t.model.playlist.get(e).set({
                        loop: $(this).is(":checked")
                    }).save()
                }),
                this.$el.on("click", ".title", function() {
                    if (!($(this).find("input").length > 0)) {
                        var e = $(this).parents("li").attr("data-itemid")
                          , n = t.model.playlist.get(e);
                        $(this).html("<input type='text'/>"),
                        $(this).find("input").val(d20.utils.strip_tags(n.get("title"))).focus().select()
                    }
                }),
                this.$el.on("keydown", ".title input", function(e) {
                    if (13 == e.which) {
                        var n = $(this).parents("li").attr("data-itemid")
                          , i = t.model.playlist.get(n)
                          , o = d20.utils.strip_tags($(this).val());
                        i.save({
                            title: o
                        }),
                        t.render()
                    }
                }),
                this.$el.on("click", "#addjukebox", function() {
                    t.model.searchView.showDialog(),
                    $("body").trigger("click")
                })
            },
            render: function() {
                _.defer(function() {
                    d20.jukebox.refreshJukeboxList()
                })
            }
        })
          , ee = Backbone.Model.extend({
            defaults: {
                track_id: "",
                title: "",
                playing: !1,
                volume: 30,
                storagekey: !1,
                loop: !1,
                softstop: !1,
                activeinlist: !1,
                tags: "",
                fadein: !1,
                fadeout: !1,
                fadelength: 2e3,
                gprogress: 0,
                plprogress: 0
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                this.playInterval = !1,
                this.fadeInInterval = !1,
                this.fadeOutInterval = !1,
                this.progress = 0,
                this.prettyDuration = "...",
                this.prettyPosition = "...",
                this.on("change:gprogress", ()=>{
                    this.syncProgress()
                }
                ),
                this.on("change:volume", ()=>{
                    this.setFadeIn(this),
                    this.setFadeOut(this)
                }
                )
            },
            syncProgress: function() {
                this.progress = 100 * this.get("gprogress");
                var e = window.Jukebox.soundObjs[this.get("track_id")];
                if (this.setFadeIn(this),
                this.setFadeOut(this),
                e) {
                    var t = Math.floor(e.duration * this.progress / 100);
                    e.setPosition(t)
                }
            },
            setFadeIn: function(e) {
                var t = window.Jukebox.soundObjs[e.get("track_id")];
                if (e.fadeInInterval && clearInterval(e.fadeInInterval),
                e.get("fadein") && t && t.loaded) {
                    if (t.position < e.get("fadelength")) {
                        var n = t.position / e.get("fadelength");
                        t.setVolume(e.get("volume") * n * d20.jukebox.globalVolume)
                    } else
                        t.setVolume(e.get("volume") * d20.jukebox.globalVolume);
                    e.fadeInInterval = setInterval(()=>{
                        if (t.position < e.get("fadelength")) {
                            var n = t.position / e.get("fadelength");
                            t.setVolume(e.get("volume") * n * d20.jukebox.globalVolume)
                        } else
                            t.setVolume(e.get("volume") * d20.jukebox.globalVolume),
                            clearInterval(e.fadeInInterval)
                    }
                    , 20)
                } else
                    t && t.setVolume(e.get("volume") * d20.jukebox.globalVolume),
                    e.fadeInInterval && clearInterval(e.fadeInInterval)
            },
            setFadeOut: function(e) {
                var t = window.Jukebox.soundObjs[e.get("track_id")];
                e.fadeOutInterval && clearInterval(e.fadeOutInterval),
                e.get("fadeout") && t && t.loaded ? e.fadeOutInterval = setInterval(()=>{
                    if (t.position > t.duration - e.get("fadelength")) {
                        var n = (t.duration - t.position) / e.get("fadelength");
                        t.setVolume(e.get("volume") * n * d20.jukebox.globalVolume)
                    } else
                        t.setVolume(e.get("volume") * d20.jukebox.globalVolume)
                }
                , 20) : (t && t.setVolume(e.get("volume") * d20.jukebox.globalVolume),
                e.fadeOutInterval && clearInterval(e.fadeOutInterval))
            },
            sendProgressToFirebase: function(e=!1) {
                let t = window.Jukebox.soundObjs[this.get("track_id")];
                t && (e = !1 === e ? t.position : e,
                this.save({
                    plprogress: e
                }, {
                    patch: !0
                }))
            },
            isNew: function() {
                return !this.persisted
            },
            play: function() {
                this.sendProgressToFirebase(0),
                this.save({
                    playing: !0,
                    softstop: !1
                })
            },
            stop: function() {
                this.playInterval && clearInterval(this.playInterval),
                this.fadeInInterval && clearInterval(this.fadeInInterval),
                this.fadeOutInterval && clearInterval(this.fadeOutInterval),
                this.progress = 0,
                this.prettyDuration = "...",
                this.prettyPosition = "...",
                this.sendProgressToFirebase(0),
                this.set({
                    gprogress: 0,
                    playing: !1,
                    activeinlist: !1
                }).save()
            },
            changeVolume: function(e) {
                e = 100 * Math.pow(e / 100, 2),
                this.save({
                    volume: e
                })
            },
            tagsArray: function() {
                try {
                    var e = JSON.parse(this.get("tags"))
                } catch (t) {
                    return []
                }
                return e
            },
            safeDestroy: function() {
                var e = this;
                $("<div class='dialog'>Are you sure you want to delete this track? This cannot be undone.</div>").dialog({
                    modal: !0,
                    title: "Confirm Deletion",
                    buttons: {
                        "Delete Track": function() {
                            e.playInterval && clearInterval(e.playInterval),
                            e.destroy(),
                            $(this).dialog("destroy")
                        },
                        Cancel: function() {
                            $(this).dialog("destroy")
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy")
                    }
                })
            }
        })
          , te = Backbone.Collection.extend({
            model: ee,
            initialize: function() {
                this.on("add change remove", function(e, t) {
                    t.changes && t.changes.plprogress || (this.jukebox.scanForNewPlays(),
                    this.jukebox.view.debounced_render())
                })
            }
        })
          , ne = Backbone.Model.extend({
            defaults: {
                playlist: []
            },
            initialize: function() {
                if (_.bindAll(this, "addToPlaylist", "_scanForNewPlays", "stopAllTracks", "setPlaylistPlaying"),
                window.SC) {
                    var e = this;
                    this.soundObjs = {},
                    this.scanForNewPlays = _.debounce(this._scanForNewPlays, 500),
                    this.playlist = new te,
                    this.playlist.jukebox = this,
                    this.playlist.url = "/jukeboxplaylist/",
                    _.defer(function() {
                        e.playlist.backboneFirebase = new BackboneFirebase(e.playlist)
                    }),
                    this.searchView = new Z({
                        model: this
                    }),
                    this.view = new Q({
                        model: this
                    }),
                    SC.initialize({
                        client_id: "bbee575fe431e873910d2a874e013989",
                        redirect_uri: "http://example.com/callback.html"
                    }),
                    soundManager.onready(function() {
                        e.scanForNewPlays()
                    })
                }
            },
            addToPlaylist: function(e, n, i, o=!1) {
                return this.playlist.create({
                    track_id: e + "#" + t(1e4, 99999),
                    title: n,
                    playing: !1,
                    volume: 30,
                    source: i,
                    storagekey: o
                })
            },
            _scanForNewPlays: function() {
                if (window.SC) {
                    console.log("Scan for new plays!");
                    var t = this
                      , n = [];
                    this.playlist.each(function(i) {
                        var o = i.get("track_id");
                        void 0 !== o && "" !== o || (o = i.get("soundcloud_id"),
                        i.save({
                            track_id: o,
                            soundcloud_id: ""
                        }));
                        var r = function() {
                            try {
                                if (1 !== t.soundObjs[o].playState) {
                                    i.setFadeIn(i),
                                    i.setFadeOut(i),
                                    ga("send", {
                                        hitType: "event",
                                        eventCategory: a,
                                        eventAction: "Play"
                                    }),
                                    i.playInterval = setInterval(function() {
                                        let n = t.soundObjs[o];
                                        if (n) {
                                            var r = Math.round(n.position / n.duration * 1e4) / 100
                                              , a = Math.floor(n.duration / 1e3)
                                              , s = Math.round(n.position / 1e3)
                                              , l = e(a)
                                              , c = e(s);
                                            i.prettyDuration = l,
                                            i.prettyPosition = c,
                                            i.progress = r,
                                            _.debounce(i.sendProgressToFirebase(), 1e3);
                                            let t = !1;
                                            if (t = i.get("activeinlist") ? $("#jukeboxwhatsplaying").find(`.jukeboxitem[data-itemid="${i.get("activeinlist")}"]`) : $("#jukeboxwhatsplaying").find(`.jukeboxitem[data-itemid="${i.get("id")}"]`)) {
                                                t.parents(".jukeboxitem-container").find(".progress, .progressFilter").width(r + "%");
                                                var u = t.find(".progressText");
                                                u && u.length && u.text(`${c} / ${l}`)
                                            }
                                        }
                                    }, 50),
                                    i.fadeOutInterval && clearInterval(i.fadeOutInterval);
                                    var n = function() {
                                        if (i.sendProgressToFirebase(0),
                                        t.soundObjs[o].loaded)
                                            if (1 == i.get("loop"))
                                                t.soundObjs[o].play({
                                                    onplay: i.setFadeIn(i),
                                                    onfinish: n
                                                });
                                            else {
                                                i.didAlreadyPlay = !0,
                                                i.playInterval && clearInterval(i.playInterval),
                                                i.prettyDuration = "0",
                                                i.prettyPosition = "0",
                                                i.percent = 0;
                                                var e = i.get("activeinlist");
                                                if (e) {
                                                    var r = d20.Campaign.getActivePlaylistByID(e);
                                                    r && window.Jukebox.setPlaylistPlaying(e, r.playingidx + 1)
                                                } else
                                                    window.is_gm && i.save({
                                                        softstop: !0
                                                    })
                                            }
                                        else
                                            console.log(o + " - Error playing track."),
                                            i.didAlreadyPlay = !0,
                                            t.soundObjs[o].stop(),
                                            window.is_gm && i.stop()
                                    };
                                    t.soundObjs[o].loadFailure && console.log("Load Failure: ", t.soundObjs[o].loadFailure);
                                    let r = i.get("plprogress");
                                    t.soundObjs[o].play({
                                        onplay: ()=>{
                                            t.soundObjs[o].setPosition(r > 2500 ? r : 0),
                                            t.soundObjs[o].setVolume(0),
                                            i.setFadeIn(i)
                                        }
                                        ,
                                        onfinish: n
                                    })
                                } else
                                    i.setFadeIn(i),
                                    i.setFadeOut(i)
                            } catch (r) {
                                console.log(r),
                                console.log("Unable to play music...Flash blocked?")
                            }
                        }
                          , a = i.get("source")
                          , s = !1;
                        if (i.get("playing") && 0 == i.get("softstop")) {
                            if (!t.soundObjs[o])
                                if ("Tabletop Audio" !== (a = i.get("source")) && a)
                                    if ("My Audio" === a) {
                                        if (d20.Campaign.players.filter(function(e) {
                                            return e.get("online")
                                        }).length > 15)
                                            return t.stopAllTracks(),
                                            void (0 === $("#myaudiocap").length && ($("#jukeboxwhatsplaying").after("<div id='myaudiocap' class='warning'>" + i18n("my_audio_cap", "You've exceeded the maximum active game size for My Audio tracks. You may continue other audio track types. You can find more information on the <a href='https://wiki.roll20.net/Jukebox'>Roll20 Wiki</a>.") + "<span id='dismiss_myaudiocap' class='ui-icon ui-icon-closethick'>close</span></div>"),
                                            $("#dismiss_myaudiocap").on("click", function() {
                                                $("#myaudiocap").remove()
                                            })));
                                        t.soundObjs[o] = soundManager.createSound({
                                            id: o,
                                            url: "/audio_library/play/" + campaign_id + "/" + o.split("-")[0],
                                            onload: ()=>{
                                                t.soundObjs[o].loaded ? soundManager.onPosition(o, t.soundObjs[o].duration - i.get("fadelength"), i.setFadeOut(i)) : (console.log("Error loading track."),
                                                t.soundObjs[o].loadFailure = !0,
                                                window.is_gm && i.stop())
                                            }
                                        })
                                    } else if ("Battlebards" === a) {
                                        var l = o.split(".mp3-")[0];
                                        l = (l += ".mp3").replace(/%20%2D%20/g, " - "),
                                        l = encodeURIComponent(l),
                                        $.post("/editor/audiourl/bb", {
                                            trackurl: l
                                        }, function(e) {
                                            t.soundObjs[o] = soundManager.createSound({
                                                id: o,
                                                url: e,
                                                onload: ()=>{
                                                    soundManager.onPosition(o, t.soundObjs[o].duration - i.get("fadelength"), i.setFadeOut(i))
                                                }
                                            }),
                                            r()
                                        }),
                                        s = !0
                                    } else
                                        t.soundObjs[o] = "Incompetech" === a ? soundManager.createSound({
                                            id: o,
                                            url: "https://s3.amazonaws.com/cdn.roll20.net/incompetech/" + o.split("-")[0],
                                            onload: ()=>{
                                                soundManager.onPosition(o, t.soundObjs[o].duration - i.get("fadelength"), i.setFadeOut(i))
                                            }
                                        }) : "Fanburst" === a ? soundManager.createSound({
                                            id: o,
                                            url: "https://api.fanburst.com/tracks/" + o + "/stream?client_id=0fc1df8b-40a4-4391-b0f7-d0257edb6634"
                                        }) : SC.stream(o);
                                else
                                    t.soundObjs[o] = soundManager.createSound({
                                        id: o,
                                        url: "https://s3.amazonaws.com/cdn.roll20.net/ttaudio/" + o.split("-")[0],
                                        onload: ()=>{
                                            soundManager.onPosition(o, t.soundObjs[o].duration - i.get("fadelength"), i.setFadeOut(i))
                                        }
                                    }),
                                    a || (i.source = "Tabletop Audio");
                            s || r()
                        }
                        i.get("playing") && n.push(o)
                    }),
                    _.each(this.soundObjs, function(e, i) {
                        if (-1 == _.indexOf(n, i)) {
                            try {
                                e.stop()
                            } catch (o) {
                                console.log("Unable to stop music...not playing in first place due to blocked Flash?")
                            }
                            delete t.soundObjs[i]
                        }
                    })
                }
            },
            stopAllTracks: function() {
                this.playlist.each(function(e) {
                    1 == e.get("playing") && e.save({
                        playing: !1
                    })
                })
            },
            setPlaylistPlaying: function(e, t) {
                var n = this;
                t || (t = 0);
                var i, o = e;
                if (console.log("Heard playlist play request for " + o),
                !d20.Campaign.getActivePlaylistByID(o))
                    return console.log("No valid playlist found, clearing old playlist node."),
                    void d20.Campaign.set({
                        jukeboxplaylistplaying: !1
                    }).save();
                if (0 == o)
                    return console.log("False, returning"),
                    void this.stopAllTracks();
                var r = JSON.parse(d20.Campaign.get("jukeboxfolder"));
                if (_.each(r, function(e) {
                    "object" == typeof e && e.id == o && (i = e)
                }),
                !i)
                    return void console.error("Unable to find a playlist with ID: " + o);
                i.i = _.reject(i.i, function(e) {
                    return "string" != typeof e || (!window.Jukebox.playlist.get(e) || void 0)
                });
                var a = !1;
                if ("s" == i.s)
                    t = d20.jukebox.randomizer.nextInt(i.i.length);
                else if ("b" == i.s)
                    t > i.i.length - 1 && (t = 0);
                else if ("o" == i.s)
                    t > i.i.length - 1 && d20.Campaign.stopPlaylistByID(o);
                else if ("a" == i.s) {
                    var s;
                    (s = JSON.parse(d20.Campaign.get("jukeboxplaylistsactive"))).find(e=>e.id === o);
                    JSON.parse(d20.Campaign.get("jukeboxplaylistsactive")).find(e=>e.id === o).playing,
                    d20.jukebox.playedPlaylistOnce = !0,
                    t = 0,
                    a = !0
                }
                let l = (s = JSON.parse(d20.Campaign.get("jukeboxplaylistsactive"))).find((e,n)=>{
                    if (e.id === o)
                        return s[n].playingidx = t,
                        s[n].playing = !0,
                        !0
                }
                );
                d20.Campaign.save({
                    jukeboxplaylistsactive: JSON.stringify(s)
                }),
                a ? l.trackids.forEach(e=>{
                    var t = n.playlist.get(e);
                    t.didAlreadyPlay && !t.get("loop") ? t.set({
                        playing: !1,
                        softstop: !0,
                        activeinlist: !1
                    }).save() : t.set({
                        playing: !0,
                        softstop: !1,
                        activeinlist: o
                    }).save(),
                    l.trackids.every(e=>this.playlist.get(e).get("softstop")) && d20.Campaign.stopPlaylistByID(o),
                    n.scanForNewPlays()
                }
                ) : l.trackids.forEach((e,i)=>{
                    var r = this.playlist.get(e);
                    r && (i == t ? (console.log("Playing track within playlist"),
                    r.progress = 0,
                    r.set({
                        playing: !0,
                        softstop: !1,
                        activeinlist: o
                    }).save(),
                    n.scanForNewPlays()) : (r.progress = 0,
                    r.set({
                        playing: !1,
                        softstop: !0,
                        activeinlist: !1
                    }).save(),
                    n.scanForNewPlays()))
                }
                )
            }
        });
        Backbone.execute_notify = function(e, t) {
            $.get("/editor/updatefromrt/" + campaign_id, function(n) {
                "success" == n ? ($("#exit").attr("title", "Save & Exit (Auto-Saved: " + currentTime() + ")"),
                e && e()) : t && t()
            })
        }
        ,
        window.d20ext.finalPageLoad = function() {
            console.log("Final page load."),
            d20.Campaign = new K,
            window.Campaign = d20.Campaign,
            window.Jukebox = new ne
        }
        ,
        window.d20ext.showGoogleAd = function() {
            $("#lr_interstitial_table").remove(),
            d20.adtype = "google";
            var e = e || {};
            e.cmd = e.cmd || [],
            function() {
                var e = document.createElement("script");
                e.async = !0,
                e.type = "text/javascript";
                var t = "https:" == document.location.protocol;
                e.src = (t ? "https:" : "http:") + "//www.googletagservices.com/tag/js/gpt.js";
                var n = document.getElementsByTagName("script")[0];
                n.parentNode.insertBefore(e, n)
            }(),
            e.cmd.push(function() {
                e.defineSlot("/34541132/LoadingScreen", [640, 360], "dfp-1349445796341-0").addService(e.pubads()),
                e.pubads().enableSingleRequest(),
                e.enableServices()
            }),
            e.cmd.push(function() {
                e.display("dfp-1349445796341-0")
            });
            var t = 15;
            $("#loading-overlay").find("p").addClass("countdowntext").text(t + "");
            var n = setInterval(function() {
                if (t < 1)
                    return clearInterval(n),
                    window.d20ext.seenad = !0,
                    $("#loading-overlay").find("div").hide(),
                    window.currentPlayer && d20.Campaign.pages.length > 0 && d20.Campaign.handlePlayerPageChanges(),
                    void $.get("/editor/startping/true");
                t -= 1,
                $("#loading-overlay").find("p").text(t + "")
            }, 1e3);
            window.googletag = e
        }
        ,
        d20.undo.lastActionSeen = new Date,
        d20.undo.newAction = function(e, t) {
            var n = new Date;
            n - d20.undo.lastActionSeen > 100 && _.size(d20.undo.currentGroup) > 0 && d20.undo.pushGroupToStack(),
            d20.undo.currentGroup[e] = {
                id: e,
                func: t,
                order: _.size(d20.undo.currentGroup)
            },
            d20.undo.lastActionSeen = n
        }
        ,
        d20.undo.pushGroupToStack = function() {
            _.size(d20.undo.currentGroup) > 0 && (d20.undo.stack.push(d20.undo.currentGroup),
            d20.undo.currentGroup = {})
        }
        ,
        d20.undo.doUndo = function() {
            if (d20.undo.pushGroupToStack(),
            0 != d20.undo.stack.length) {
                d20.engine.unselect();
                for (var e = d20.undo.stack.pop(), t = _.sortBy(e, function(e) {
                    return e.order
                }), n = 0; n < t.length; n++)
                    t[n].func(t[n].id)
            }
        }
        ,
        d20.undo.updateStack = function(e, t) {
            d20.undo.pushGroupToStack();
            for (var n = 0; n < d20.undo.stack.length; n++) {
                var i = d20.undo.stack[n];
                i[e] && (i[t] = i[e],
                i[t].id = t,
                delete i[e])
            }
        }
    }),
    d20.models = d20.models || {},
    function() {
        d20.models.CharacterEditorView = Backbone.View.extend({
            _template: $("#tmpl_charactereditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "updateModel", "showDialog"),
                this.model.bind("change:avatar change:defaulttoken", function() {
                    e.$el.is(":visible") && (e.render(),
                    e.$el.find(".selectize").selectize({
                        plugins: ["remove_button"]
                    })),
                    d20.engine && d20.engine.redrawScreenNextTick()
                }),
                $(this.el).addClass("dialog"),
                this.$el = $(this.el);
                e = this;
                this.$el.on("click", ".delete", function() {
                    e.model.safeDestroy()
                }),
                this.$el.on("click", ".archive", function() {
                    e.model.set({
                        archived: !e.model.get("archived")
                    }).save(),
                    e.$el.dialog("destroy")
                }),
                this.$el.on("click", ".duplicate", function() {
                    var t = e.model.toJSON();
                    delete t.id,
                    t.name = "Copy of " + t.name;
                    var n = e.model.collection.create(t);
                    setTimeout(function() {
                        var t = n.get("attrorder");
                        e.model.attribs.each(function(e) {
                            var i = e.toJSON();
                            delete i.id;
                            var o = n.attribs.create(i);
                            t = t.replace(e.id, o.id),
                            o = null
                        });
                        var i = n.get("abilorder");
                        e.model.abilities.each(function(e) {
                            var t = e.toJSON();
                            delete t.id;
                            var o = n.abilities.create(t);
                            i = i.replace(e.id, o.id),
                            o = null
                        }),
                        n.save({
                            abilorder: i,
                            attrorder: t
                        });
                        var o = {};
                        e.model._blobcache.bio && (o.bio = e.model._blobcache.bio),
                        e.model._blobcache.gmnotes && (o.gmnotes = e.model._blobcache.gmnotes),
                        e.model._blobcache.defaulttoken && (o.defaulttoken = e.model._blobcache.defaulttoken),
                        Object.keys(o).length > 0 && n.updateBlobs(o)
                    }, 100)
                }),
                this.$el.on("click", ".nav li a", function() {
                    e.$el.find(".nav li.active").removeClass("active"),
                    e.$el.find(".tab-pane").each(function() {
                        this.style.display = "none"
                    }),
                    e.$el.find(".tab-pane." + $(this).attr("data-tab"))[0].style.display = "block",
                    $(this).parent().addClass("active")
                }),
                this.$el.on("click", ".defaulttoken button", function() {
                    var t = d20.engine.selected();
                    if (t && 0 != t.length) {
                        var n = t[0];
                        if ("image" === n.type && n.model) {
                            var i = n.model.toJSON()
                              , o = {};
                            for (var r in delete i.id,
                            i)
                                i[r] !== n.model.defaults[r] && (o[r] = i[r]);
                            e.updateModel();
                            var a = JSON.stringify(o);
                            a !== e.model._blobcache.defaulttoken && (e.model.updateBlobs({
                                defaulttoken: a
                            }),
                            e.model.save({
                                defaulttoken: (new Date).getTime()
                            }))
                        }
                    }
                }),
                this.$el.on("click", ".defaulttoken .remove", function() {
                    $("<div class='dialog'>Are you sure you want to delete the default token?</div>").dialog({
                        modal: !0,
                        title: "Confirm Deletion",
                        buttons: {
                            "Yes, Delete": function() {
                                e.updateModel(),
                                $(this).dialog("destroy").remove(),
                                e.model.updateBlobs({
                                    defaulttoken: null
                                }),
                                e.model.save({
                                    defaulttoken: ""
                                })
                            },
                            Cancel: function() {
                                $(this).dialog("destroy").remove()
                            }
                        },
                        beforeClose: function() {
                            $(this).dialog("destroy").remove()
                        }
                    })
                })
            },
            addBlob: function(e) {
                var t = this;
                this.$el.find("." + e).html("Loading..."),
                this.model._getLatestBlob(e, function(n) {
                    let i = d20.utils.handleHTMLOutput(n);
                    "SINGLESPACED!!" == i.substring(0, 14) && (i = i.substring(14, i.length));
                    let o = t.$el.find("." + e);
                    o.addClass("summernote in-app-editor"),
                    o.val(i),
                    o.each(d20.utils.summernoteInit)
                })
            },
            addDefaultToken: function() {
                var e = this;
                this.model._getLatestBlob("defaulttoken", function(t) {
                    const n = JSON.parse(t);
                    let i;
                    i = d20.utils.isVideo(n.imgsrc) ? `<video src="${n.imgsrc}" draggable="false" muted autoplay loop>` : `<img src="${n.imgsrc}" draggable="false">`,
                    e.$el.find(".defaulttoken img, .defaulttoken video").replaceWith(i)
                })
            },
            render: function() {
                console.log("Render character editor");
                var e = this;
                if (this.$el.html(this._template.jqote(this.model)),
                this.$el.attr("data-characterid", this.model.id),
                this.$el.find(".name").val(this.model.get("name")),
                this.addBlob("bio"),
                window.is_gm) {
                    this.addBlob("gmnotes"),
                    "" !== this.model.get("defaulttoken") && this.addDefaultToken();
                    var t = this.model.get("controlledby").split(",");
                    _.each(t, function(t) {
                        e.$el.find(".controlledby option[value=" + t + "]").prop("selected", !0)
                    });
                    var n = this.model.get("inplayerjournals").split(",");
                    _.each(n, function(t) {
                        e.$el.find(".inplayerjournals option[value=" + t + "]").prop("selected", !0)
                    }),
                    this.tagEditor = new $.TextboxList(this.$el.find(".tags"),{
                        encode: function() {},
                        decode: function() {},
                        startEditableBit: !1,
                        inBetweenEditableBits: !1,
                        unique: !0,
                        plugins: {
                            autocomplete: {
                                minLength: 2
                            }
                        }
                    }),
                    this.tagEditor.plugins.autocomplete.setValues(_.map(d20.journal.possibletags, function(e) {
                        return [null, e.tag, null]
                    }));
                    for (var i = this.model.tagsArray(), o = 0; o < i.length; o++)
                        this.tagEditor.add(i[o])
                }
                d20.utils.setupAvatar(this.$el.find(".avatar"), e),
                this.$el.find(".tab-pane").show()
            },
            updateModel: function() {
                var e = {}
                  , t = {};
                if (window.is_gm) {
                    (l = d20.utils.handleHTMLInput(this.$el.find("textarea.bio").val())) !== this.model._blobcache.bio && (t.bio = l);
                    var n = d20.utils.handleHTMLInput(this.$el.find("textarea.gmnotes").val());
                    n !== this.model._blobcache.gmnotes && (t.gmnotes = n),
                    Object.keys(t).length > 0 && this.model.updateBlobs(t);
                    var i = [];
                    this.$el.find(".controlledby option:selected").each(function() {
                        i.push($(this).val())
                    });
                    var o = [];
                    if (this.$el.find(".inplayerjournals option:selected").each(function() {
                        o.push($(this).val())
                    }),
                    e = {
                        name: d20.utils.strip_tags(this.$el.find(".name").val()),
                        controlledby: i.join(","),
                        inplayerjournals: o.join(",")
                    },
                    t.bio && (e.bio = (new Date).getTime()),
                    t.gmnotes && (e.gmnotes = (new Date).getTime()),
                    this.tagEditor) {
                        for (var r = this.tagEditor.getValues(), a = [], s = 0; s < r.length; s++)
                            a.push(r[s][1]);
                        e.tags = JSON.stringify(a)
                    }
                } else {
                    var l;
                    (l = d20.utils.handleHTMLInput(this.$el.find("textarea.bio").val())) !== this.model._blobcache.bio && (t.bio = l),
                    Object.keys(t).length > 0 && (this.model._blobcache.bio = l,
                    this.model.updateBlobs(t)),
                    t.bio && (e.bio = (new Date).getTime()),
                    e.name = d20.utils.strip_tags(this.$el.find(".name").val())
                }
                this.model.save(e)
            },
            showDialog: function(e) {
                var t = this;
                this.render();
                var n = 500;
                window.is_gm && (n = 750);
                var i = $(window).height() - d20.utils.playerZoneHeight();
                i > n && (i = n),
                $(this.el).dialog({
                    modal: !1,
                    width: 700,
                    height: i,
                    position: ["center", 60],
                    title: "Edit " + this.model.get("name"),
                    zIndex: 10500,
                    buttons: [{
                        text: "Save Changes",
                        "class": "ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only",
                        click: function() {
                            d20.library.buildRecentUploads(),
                            t.$el.find(".abil.editing .saveabil").trigger("click"),
                            t.$el.find(".attrib").trigger("dosave");
                            var n = t.$el.find("ul.nav li.active a").attr("data-tab");
                            t.$el.dialog("destroy"),
                            t.updateModel(),
                            _.defer(function() {
                                t.model.view.showDialog(e),
                                _.defer(function() {
                                    t.model.view.$el.find("ul.nav li a[data-tab=" + n + "]").trigger("click")
                                })
                            });
                            var i = $("#speakingas").val();
                            speakingSplit = i.split("|"),
                            speakingSplit[1] == t.model.get("id") && currentPlayer.updateAvatar(i)
                        }
                    }, {
                        text: "Cancel",
                        "class": "ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only",
                        click: function() {
                            var n = t.$el.find("ul.nav li.active a").attr("data-tab");
                            t.$el.dialog("destroy"),
                            t.$el.find(".attrib").trigger("doclose"),
                            t.$el.find(".abil.editing").trigger("doclose"),
                            _.defer(function() {
                                t.model.view.showDialog(e),
                                _.defer(function() {
                                    t.model.view.$el.find("ul.nav li a[data-tab=" + n + "]").trigger("click")
                                })
                            })
                        }
                    }],
                    beforeClose: function() {
                        var n = t.$el.find("ul.nav li.active a").attr("data-tab");
                        $(".note-popover").hide(),
                        t.$el.find(".abil.editing").trigger("doclose"),
                        t.$el.dialog("destroy"),
                        _.defer(function() {
                            t.model.view.showDialog(e),
                            _.defer(function() {
                                t.model.view.$el.find("ul.nav li a[data-tab=" + n + "]").trigger("click")
                            })
                        })
                    }
                }),
                this.$el.find(".selectize").selectize({
                    plugins: ["remove_button"]
                })
            }
        }),
        d20.models.CharacterView = Backbone.View.extend({
            _template: $("#tmpl_characterviewer"),
            initialize: function() {
                _.bindAll(this, "render", "showDialog");
                var e = this;
                this.model.bind("change:blob_bio change:avatar " + (window.is_gm ? "change:blob_gmnotes" : ""), function() {
                    e.render()
                }),
                this.model.bind("change:name", function() {
                    d20.journal.customSheets ? (e.updateSheetValues("character_name", this.previous("name"), this.get("name")),
                    e.updateSheetValues("name", this.previous("name"), this.get("name"))) : e.render()
                }),
                $(this.el).addClass("dialog").addClass("characterdialog"),
                this.$el = $(this.el),
                this.debounced_updateSheetValues = _.debounce(this._updateSheetValues, 100),
                this._dirtySheetAttributes = [],
                this._dirtyPreviousAttributes = {},
                this._dirtyUpdatedAttributes = {},
                this.updateSheetValues = function(t, n, i) {
                    t !== undefined && (e._dirtySheetAttributes.push(t.toLowerCase()),
                    e._dirtySheetAttributes.push(t.toLowerCase() + "_max"),
                    n !== undefined && (e._dirtyPreviousAttributes[t.toLowerCase()] = n),
                    i !== undefined && (e._dirtyUpdatedAttributes[t.toLowerCase()] = i)),
                    e.debounced_updateSheetValues()
                }
                ,
                this.flushSheetValueUpdates = function() {
                    e._updateSheetValues()
                }
                ,
                this.model.attribs.on("change", function(t) {
                    e.updateSheetValues(t.get("name"), t.previous("current"), t.get("current"))
                }),
                this.model.attribs.on("add", function(t) {
                    e.updateSheetValues(t.get("name"), t.previous("current"), t.get("current"))
                }),
                this.model.attribs.on("remove", function(t) {
                    e.updateSheetValues(t.get("name"), t.previous("current"), t.get("current"))
                }),
                this._attribsHaveAttrived = !1,
                this._pendingRenderForAttribs = !1;
                var t = function() {
                    e._attribsHaveAttrived = !0,
                    e._pendingRenderForAttribs && (e.render(),
                    e._pendingRenderForAttribs = !1)
                }
                  , n = _.debounce(t, 100);
                this.model.attribs.on("initial_load", function() {
                    e._attribsHaveAttrived || n()
                }),
                this.rebindViewEvents(),
                this.changedByMe = !1
            },
            rebindViewEvents: function() {
                var e, t, n = this;
                this.$el.on("click", function() {}),
                this.$el.on("click", ".addattrib", function() {
                    var e = n.model.attribs.create();
                    n.$el.find(".attributes .body").append(e.view.$el),
                    e.view.rebindEvents(n.model),
                    e.view.$el.find(".attrname").trigger("click")
                }),
                this.$el.on("click", ".addabil", function() {
                    var e = 0;
                    n.model.abilities.each(function(t) {
                        -1 !== t.get("name").indexOf("New Ability") && e++
                    });
                    var t = n.model.abilities.create({
                        name: "New Ability " + e
                    });
                    n.$el.find(".abilities .body").append(t.view.$el),
                    t.view.rebindEvents(n.model),
                    t.view.$el.find(".abilname").trigger("click")
                }),
                this.allTabs = {},
                this.$el.on("click", ".nav li a", function() {
                    if (n.allTabs) {
                        e && e.removeClass("active"),
                        t && (t.style.display = "none");
                        var i = $(this).attr("data-tab");
                        n.allTabs[i] && (n.allTabs[i].style.display = "block",
                        t = n.allTabs[i],
                        $(this).parent().addClass("active"),
                        e = $(this).parent())
                    }
                }),
                this.$el[0].addEventListener("blur", function(e) {
                    var t = $(e.target);
                    t.parentsUntil(this.$el, ".charsheet").length > 0 && (t.is("input[type=text]") || t.is("input[type=number]") || t.is("textarea")) && n.saveSheetValues(t[0])
                }, !0),
                this.$el.on("click", ".charsheet input[type=number]", function() {
                    var e = $(this);
                    e.is(":focus") || e.focus()
                }),
                this.$el.on("keyup", ".charsheet input[type=text], .charsheet input[type=number]", function(e) {
                    13 == e.which && $(this).trigger("blur")
                }),
                this.$el.on("click", ".charsheet .btn", function() {
                    document.activeElement !== undefined && document.activeElement.name !== undefined && document.activeElement.name.length > 0 && document.activeElement.blur()
                }),
                this.$el.on("click", "a", function() {
                    var e = $(this).attr("href");
                    if (void 0 === e)
                        return !1;
                    if (-1 !== e.indexOf("journal.roll20.net")) {
                        var t = e.split("/")[3]
                          , n = e.split("/")[4]
                          , i = d20.Campaign[t + "s"].get(n);
                        if (i) {
                            var o = i.get("inplayerjournals").split(",");
                            (window.is_gm || -1 !== _.indexOf(o, "all") || window.currentPlayer && -1 !== _.indexOf(o, window.currentPlayer.id)) && i.view.showDialog()
                        }
                        return $("#existing" + t + "s").find("tr[data-" + t + "id=" + n + "]").trigger("click"),
                        !1
                    }
                }),
                this.$el.on("change", ".charsheet select", function() {
                    n.saveSheetValues(this)
                }),
                this.$el.on("click", ".charactersheet input[type=checkbox], .charactersheet input[type=radio]", function() {
                    console.log("CLICKED: radio/checkbox", this),
                    n.saveSheetValues(this)
                }),
                this.$el.on("change", ".charmancer select, .charmancer input, .charmancer textarea", function() {
                    var e = !1;
                    "checkbox" != $(this).attr("type") && "radio" != $(this).attr("type") || (console.log("CLICKED: radio/checkbox " + $(this).attr("name")),
                    e = $(this).is(":checked") ? $(this).val() : ""),
                    n.triggerCharmancerChange(this, e)
                }),
                this.$el.on("click", ".charsheet .repcontrol_add", function() {
                    var e = $(this).parents(".repcontrol").prev(".repcontainer")
                      , t = generateUUID().replace(/_/g, "Z")
                      , i = e.prev("fieldset").html()
                      , o = $("<div>" + i + "</div>")
                      , r = e.attr("data-groupname");
                    o.find("input[type=radio]").each(function() {
                        var e = $(this)
                          , n = e.attr("name").substring(5, e.attr("name").length);
                        e.attr("name", "attr_" + t + "_" + r + "_" + n),
                        e.attr("data-attrname", n)
                    }),
                    e.append("<div class='repitem' data-reprowid='" + t + "'><div class='itemcontrol'><button class='btn btn-danger pictos repcontrol_del'>#</button><a class='btn repcontrol_move'>\u2261</a></div>" + o.html() + "</div>"),
                    setTimeout(function() {
                        n.rebindCompendiumDropTargets()
                    }, 0)
                }),
                this.$el.on("click", ".charsheet .repcontrol_edit", function() {
                    var e = $(this).parents(".repcontrol").prev(".repcontainer");
                    e.hasClass("editmode") ? (e.removeClass("editmode"),
                    $(this).text("Modify"),
                    $(this).next(".repcontrol_add").show()) : (e.addClass("editmode"),
                    $(this).text("Done"),
                    $(this).next(".repcontrol_add").hide(),
                    e.sortable({
                        axis: "y",
                        handle: ".repcontrol_move",
                        items: ".repitem",
                        update: function() {
                            var t = [];
                            e.find(".repitem").each(function() {
                                t.push($(this).attr("data-reprowid"))
                            });
                            var i = "_reporder_" + e.attr("data-groupname")
                              , o = n.model.attribs.find(function(e) {
                                return e.get("name").toLowerCase() === i
                            });
                            o ? o.syncedSave({
                                current: t.join(",")
                            }) : n.model.attribs.create({
                                name: i,
                                current: t.join(",")
                            }),
                            d20.journal.notifyWorkersOfAttrChanges(n.model.id, [i], "player")
                        }
                    }))
                }),
                this.$el.on("click", ".charsheet .repcontrol_del", function() {
                    var e = $(this).parents(".repitem")
                      , t = $(this).parents(".repcontainer");
                    n.deleteRepeatingRow(t.attr("data-groupname"), e.attr("data-reprowid"))
                }),
                this.$el.on("click", ".charsheet button[type=roll]", function(e) {
                    e.preventDefault();
                    var t = n.model.expandReferencesInRoll($(this).val(), $(this));
                    n.model.activeCharmancer ? d20.journal.notofyWorkersOfMancerRoll(n.model.id, $(this)[0].name.substring(5), t) : d20.textchat.doChatInput(t)
                }),
                this.$el.on("click", ".charsheet button[type=action]", function(e) {
                    if (e.preventDefault(),
                    $(this)[0].name.substring(4).includes("repeating_"))
                        d20.journal.notifyWorkersOfButtonClick(n.model.id, $(this)[0].name.substring(4));
                    else if ($(this)[0].offsetParent.dataset.reprowid) {
                        const e = $(this)[0].offsetParent.parentElement.dataset.groupname
                          , t = $(this)[0].offsetParent.dataset.reprowid
                          , i = $(this)[0].name.split("_")[1];
                        d20.journal.notifyWorkersOfButtonClick(n.model.id, `${e}_${t}_${i}`),
                        d20.journal.notifyWorkersOfButtonClick(n.model.id, `${e}_${t}`)
                    } else
                        d20.journal.notifyWorkersOfButtonClick(n.model.id, $(this)[0].name.substring(4))
                }),
                this.$el.on("click", ".charsheet button[type=compendium]", function(e) {
                    if (e.preventDefault(),
                    window.COMPENDIUM_BOOK_NAME) {
                        var t = $(this).val()
                          , n = t;
                        n = t.replace(/ /g, "%20").replace(/:/g, "%3A").replace("/#h-", "#").replace("#", "/#h-"),
                        t = -1 != (t = t.split("#")[0].replace(/%20/g, " ").replace(/%3A/g, ":").replace("/", "")).indexOf(":") ? t.split(":")[1] : t,
                        d20.utils.openCompendiumPage(window.COMPENDIUM_BOOK_NAME, t, n)
                    } else
                        console.log("Compendium not defined for campaign.")
                })
            },
            addBlob: function(e) {
                var t = this;
                this.$el.find("." + e).html("Loading..."),
                this.model._getLatestBlob(e, function(n) {
                    var i = d20.utils.handleHTMLOutput(n, !0);
                    "SINGLESPACED!!" == i.substring(0, 14) && (i = i.substring(14, i.length)),
                    t.$el.find("." + e).html(i)
                })
            },
            render: function() {
                if (!this._attribsHaveAttrived)
                    return console.log("DELAY RENDER FOR ATTRIBUTES!"),
                    void (this._pendingRenderForAttribs = !0);
                var e = (new Date).getTime();
                console.log("--- RENDER CHARACTIVE VIEW ----");
                var t = this
                  , n = this.$el.find(".nav li.active a");
                if (n = n.length > 0 && n.attr("data-tab"),
                this.$el.html(this._template.jqote(this.model)),
                this.$el.attr("data-characterid", this.model.id),
                this.$el.find(".nav li a").each(function() {
                    t.allTabs[$(this).attr("data-tab")] = t.$el.find(".tab-pane." + $(this).attr("data-tab"))[0],
                    t.allTabs[$(this).attr("data-tab")].style.display = "none",
                    $(this).parent().removeClass("active")
                }),
                this.addBlob("bio"),
                window.is_gm && this.addBlob("gmnotes"),
                n ? this.$el.find(".nav li a[data-tab=" + n + "]").trigger("click") : this.$el.find(".nav li:first-child a").trigger("click"),
                this.model.currentPlayerControls()) {
                    $attrtable = this.$el.find(".attributes .body"),
                    $abiltable = this.$el.find(".abilities .body"),
                    $attrtable.addClass("editable"),
                    $abiltable.addClass("editable");
                    var i = this.$el.hasClass("compendium_drop") ? "sheetworker" : "player"
                      , o = this.model.get("attrorder").split(",")
                      , r = _.sortBy(this.model.attribs.models, function(e, t) {
                        var n = o.indexOf(e.id);
                        return -1 === n ? t + 1e3 : n
                    });
                    _.each(r, function(e) {
                        if (-1 !== e.get("name").toLowerCase().indexOf("repeating_"))
                            return !0;
                        e.view.$el.appendTo($attrtable),
                        e.view.rebindEvents(t.model)
                    });
                    o = this.model.get("abilorder").split(","),
                    r = _.sortBy(this.model.abilities.models, function(e, t) {
                        var n = o.indexOf(e.id);
                        return -1 === n ? t + 1e3 : n
                    });
                    _.each(r, function(e) {
                        e.view.$el.appendTo($abiltable),
                        e.view.rebindEvents(t.model)
                    }),
                    $attrtable.sortable({
                        items: ".attrib",
                        handle: ".handle",
                        distance: 5,
                        update: function() {
                            var e = [];
                            $attrtable.find(".attrib").each(function() {
                                var t = $(this).attr("data-attrid");
                                e.push(t)
                            }),
                            t.model.save({
                                attrorder: e.join(",")
                            })
                        },
                        axis: "y"
                    }),
                    $abiltable.sortable({
                        items: ".abil",
                        handle: ".handle",
                        distance: 5,
                        update: function() {
                            var e = [];
                            $abiltable.find(".abil").each(function() {
                                var t = $(this).attr("data-abilid");
                                e.push(t)
                            }),
                            t.model.save({
                                abilorder: e.join(",")
                            })
                        },
                        axis: "y"
                    }),
                    this.$el.find(".draggableresult").draggable({
                        revert: !0,
                        distance: 10,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body",
                        scroll: !1
                    }).addTouch(),
                    this.$charsheet = this.$el.find(".charactersheet"),
                    this.$charmancer = this.$el.find(".charmancer"),
                    this.$sheetform = this.$el.find(".sheetform"),
                    this.$charsheet.length > 0 && d20.journal.useCustomSheets && (console.log("Redoing charsheet html"),
                    this.$charsheet.remove(),
                    this.$charsheet.html(d20.journal.customSheets.layouthtml),
                    this.$charsheet.addClass("lang-" + window.customcharsheet_lang),
                    t.setupRepeatingControls(),
                    window.is_playerapp || t.$charsheet.find("button[type=roll]").draggable({
                        revert: !0,
                        distance: 10,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body",
                        scroll: !1,
                        cancel: !1,
                        connectToSortable: "#macrobar_macros",
                        start: function() {
                            if (t.childWindow)
                                return !1;
                            $(this).attr("data-characterid", t.model.id)
                        }
                    }).addTouch(),
                    t.updateSheetValues("all"),
                    this.hasBeenOpenedOnce || _.defer(function() {
                        d20.journal.notifyWorkersOfFirstOpen(t.model.id, i),
                        this.hasBeenOpenedOnce = !0
                    })),
                    console.log((new Date).getTime() - e + "ms to end of html")
                }
            },
            _updateSheetValues: function() {
                if (this.$charsheet || !1 !== this.changedByMe) {
                    console.log("Really updating character sheet values");
                    var e = (new Date).getTime();
                    this._ignoreSheetSaves = !0;
                    var t = this
                      , n = {};
                    this.$charsheet && (this.$charsheet.find("fieldset").each(function() {
                        var e = "<div><div class='repitem'><div class='itemcontrol'><button class='btn btn-danger pictos repcontrol_del'>#</button><a class='btn repcontrol_move'>\u2261</a></div>" + $(this).html() + "</div></div>"
                          , i = $(this).next(".repcontainer")
                          , o = i.attr("data-groupname");
                        if (i.length < 1 || "" === o)
                            return !0;
                        var r = o + "_"
                          , a = {};
                        t.model.attribs.each(function(e) {
                            if (e.get("name").toLowerCase().substring(0, r.length) === r.toLowerCase()) {
                                e.get("name").toLowerCase().split("_");
                                var t = (e.get("name") + "").split("_")[2]
                                  , n = e.get("name").substring(r.length + t.length + 1, e.get("name").length);
                                if (a[t] || (a[t] = {}),
                                a[t][n.toLowerCase()] !== undefined)
                                    return;
                                a[t][n.toLowerCase()] = {
                                    current: e.get("current"),
                                    max: e.get("max")
                                }
                            }
                        });
                        var s = t.model.repeatingKeyOrder(a, o)
                          , l = s.length
                          , c = i.find(".repitem").length;
                        if (c > l) {
                            var u, d = l - 1;
                            u = d < 0 ? i.find(".repitem") : i.find(".repitem:gt(" + d + ")"),
                            t._dirtySheetAttributes.push(o + "_" + u.eq(0).attr("data-reprowid")),
                            u.remove()
                        } else if (c < l)
                            for (var h = $(e), p = c; p < l; p++) {
                                var f = generateUUID();
                                h.find("input[type=radio]").each(function() {
                                    var e = $(this)
                                      , t = e.attr("data-attrname") || e.attr("name").substring(5, e.attr("name").length);
                                    e.attr("name", "attr_" + f + "_" + o + "_" + t),
                                    e.attr("data-attrname", t)
                                }),
                                i.append(h.html())
                            }
                        var g = 0;
                        _.each(s, function(e) {
                            var t = i.find(".repitem").eq(g);
                            t.attr("data-reprowid", e),
                            "-" === e.substring(0, 1) && e.toLowerCase() === e && t.addClass("repitembroken"),
                            g++
                        }),
                        n[o] = a,
                        a = null
                    }),
                    t.$charsheet.find("button[type=roll]").draggable({
                        revert: !0,
                        distance: 10,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body",
                        scroll: !1,
                        cancel: !1,
                        connectToSortable: "#macrobar_macros",
                        start: function() {
                            if (t.childWindow)
                                return !1;
                            $(this).parents(".repcontainer").length > 0 ? $(this).attr("data-characterid", t.model.id + "/" + $(this).closest(".repcontainer").attr("data-groupname") + "_" + $(this).closest(".repitem").attr("data-reprowid") + "_" + encodeURIComponent($(this).attr("name").substring(5, $(this).attr("name").length))) : $(this).attr("data-characterid", t.model.id)
                        }
                    }).addTouch(),
                    console.log("Setting up repeating sections took until " + ((new Date).getTime() - e) + "ms"));
                    var i = function(e, o) {
                        if (!(o > 99)) {
                            if (d20.journal.customSheets.attrDeps[e])
                                for (var r = 0; r < d20.journal.customSheets.attrDeps[e].length; r++)
                                    -1 === t._dirtySheetAttributes.indexOf(d20.journal.customSheets.attrDeps[e][r]) && (t._dirtySheetAttributes.push(d20.journal.customSheets.attrDeps[e][r]),
                                    i(d20.journal.customSheets.attrDeps[e][r], o++));
                            if ("repeating_" === e.substring(0, 10)) {
                                var a = "repeating_" + e.split("_")[1]
                                  , s = e.split("_");
                                for (var l in d20.journal.customSheets.availableAttributes)
                                    if (l.substring(0, a.length) === a) {
                                        var c = l.split("_");
                                        if (c.splice(2, 0, s[2]),
                                        c.splice(0, 3),
                                        l = c.join("_"),
                                        -1 === t._dirtySheetAttributes.indexOf(l) && (t._dirtySheetAttributes.push(l),
                                        -1 === s[2].indexOf("$"))) {
                                            var u = t.model.repeatingKeyOrder(n[a] || {}, a).indexOf(s[2]);
                                            if (-1 !== u) {
                                                var d = a + "_$" + u + "_" + s.splice(3);
                                                t._dirtySheetAttributes.push(d),
                                                i(d, o + 1)
                                            }
                                        }
                                    }
                            }
                        }
                    }
                      , o = !1;
                    if (-1 !== t._dirtySheetAttributes.indexOf("all"))
                        o = !0,
                        console.log("Updating ALL VALUES");
                    else
                        for (var r = t._dirtySheetAttributes.length, a = 0; a < r; a++)
                            i(t._dirtySheetAttributes[a].toLowerCase(), 1);
                    var s = {};
                    if (_.each(t._dirtySheetAttributes, function(e) {
                        s[e] = !0
                    }),
                    console.log("Finding list of dirty attributes took until " + ((new Date).getTime() - e) + "ms"),
                    !1 !== this.changedByMe && (d20.journal.notifyWorkersOfAttrChanges(t.model.id, t._dirtySheetAttributes, this.changedByMe, t._dirtyPreviousAttributes, t._dirtyUpdatedAttributes),
                    this.changedByMe = !1),
                    this.$charsheet) {
                        var l = this.$charsheet[0].querySelectorAll('*[name^="attr_"]');
                        console.log("Querytest took until " + ((new Date).getTime() - e) + "ms");
                        var c = {};
                        t.model.attribs.each(function(e) {
                            var t = e.get("name").toLowerCase();
                            c[t] || (c[t] = {
                                current: e.get("current"),
                                max: e.get("max"),
                                id: e.id
                            })
                        }),
                        console.log("Attribute cache compliation took until " + ((new Date).getTime() - e) + "ms"),
                        _.each(l, function(e) {
                            var i = e.getAttribute("data-attrname")
                              , r = e.name || e.getAttribute("name")
                              , a = null !== i ? i : r.substring(5, r.length);
                            if (o || s[a.toLowerCase()]) {
                                var l = $(e);
                                if (d20.utils.getParentsUntil(e, t.$charsheet[0], "fieldset").length > 0)
                                    return !0;
                                var u, d = d20.utils.getParentsUntil(e, t.$charsheet[0], ".repcontainer"), h = [];
                                d.length > 0 && (h = $(d[0]),
                                u = d20.utils.getParentsUntil(e, h[0], ".repitem")[0].getAttribute("data-reprowid"),
                                a = h.attr("data-groupname") + "_" + u + "_" + a);
                                var p, f, g = "current", m = a.split("_");
                                if ("max" === m[m.length - 1] && (g = "max",
                                a = a.substring(0, a.length - 4)),
                                "character_name" === a)
                                    f = t.model.get("name");
                                else if (l.prop("disabled")) {
                                    var y = l.attr("data-formula");
                                    try {
                                        var v = {};
                                        h.length > 0 && (p = h.attr("data-groupname"),
                                        u !== undefined && n[p] && n[p][u] && (v = n[p][u]),
                                        p += "_"),
                                        f = t.model.autoCalcFormula(y, v, p),
                                        l.data("data-prev-value") !== undefined && l.data("data-prev-value") != f && t.model.updateTokensByName(a),
                                        l.data("data-prev-value", f)
                                    } catch (x) {
                                        console.log("ERROR parsing formula: " + y),
                                        console.log(x)
                                    }
                                } else {
                                    var b = c[a.toLowerCase()];
                                    b !== undefined && b[g] !== undefined && "" !== b[g] && (f = b[g])
                                }
                                if (f !== undefined && "string" == typeof f && -1 !== f.indexOf("@{") && d20.journal.updateSheetDeps(a, f),
                                (!o || "span" === l[0].tagName.toLowerCase()) && f === undefined) {
                                    var w = (a + ("max" === g ? "_max" : "")).toLowerCase();
                                    if ("repeating_" === w.substring(0, 10) && (!d20.journal.customSheets || d20.journal.customSheets.availableAttributes[w] === undefined)) {
                                        var _ = w.split("_");
                                        isNaN(_[2]) && "-" !== _[2].substring(0, 1) || (_.splice(2, 1),
                                        w = _.join("_"))
                                    }
                                    d20.journal.customSheets && d20.journal.customSheets.availableAttributes && d20.journal.customSheets.availableAttributes[w] !== undefined && (f = d20.journal.customSheets.availableAttributes[w])
                                }
                                "input" === l[0].tagName.toLowerCase() && "checkbox" === l.attr("type") ? f !== undefined && (f == l.val() ? l.prop("checked", !0) : l.prop("checked", !1)) : "input" === l[0].tagName.toLowerCase() && "radio" === l.attr("type") ? f !== undefined && (f == l.val() ? l.prop("checked", !0) : l.prop("checked", !1)) : "span" === l[0].tagName.toLowerCase() ? f !== undefined && (e.hasAttribute("data-i18n-dynamic") ? l.text(i18n(f, "[" + f + "]")) : l.text() !== f && l.text(f)) : f !== undefined && l.val() !== f && (w !== undefined && console.log("FILLED IN A DEFAULT VALUE FOR " + a),
                                l.val(f))
                            }
                        }),
                        console.log("Set values (including auto-calcuating variables) took until " + ((new Date).getTime() - e) + "ms"),
                        0 == this.$sheetform.find(".charactersheet").length && (this.$sheetform.append(this.$charsheet),
                        console.log("Appending to screen took until " + ((new Date).getTime() - e) + "ms")),
                        this.rebindCompendiumDropTargets()
                    }
                    n = null,
                    c = null,
                    s = null,
                    this._ignoreSheetSaves = !1,
                    t._dirtySheetAttributes = [],
                    t._dirtyPreviousAttributes = {},
                    t._dirtyUpdatedAttributes = {},
                    console.log("Took " + ((new Date).getTime() - e) + "ms")
                }
            },
            rebindCompendiumDropTargets: function() {
                var e = this;
                this.$charsheet.find(".sheet-compendium-drop-target").not(".ui-droppable").each(function() {
                    $(this).parentsUntil(this.$charsheet, "fieldset").length > 0 || $(this).droppable({
                        hoverClass: "dropping",
                        tolerance: "pointer",
                        activeClass: "active-drop-target",
                        accept: ".compendium-item",
                        drop: function(t, n) {
                            console.log("Compendium item dropped onto target!"),
                            t.originalEvent.dropHandled = !0,
                            window.wantsToReceiveDrop(this, t, function() {
                                var i = $(n.helper[0]).attr("data-pagename")
                                  , o = $(n.helper[0]).attr("data-subhead");
                                $.ajax({
                                    url: "/compendium/compendium/getPages",
                                    data: {
                                        bookName: COMPENDIUM_BOOK_NAME,
                                        pages: [i],
                                        sharedCompendium: campaign_id
                                    },
                                    cache: !1,
                                    dataType: "JSON"
                                }).done(function(n) {
                                    n = JSON.parse(n[0]);
                                    var r = _.clone(n.data);
                                    r.Name = n.name,
                                    r.data = n.data,
                                    r.data = JSON.stringify(r.data),
                                    r.uniqueName = i,
                                    r.Content = n.content,
                                    r.dropSubhead = o,
                                    $(t.target).find("*[accept]").each(function() {
                                        var t = $(this)
                                          , n = t.attr("accept");
                                        r[n] && ("input" === t[0].tagName.toLowerCase() && "checkbox" === t.attr("type") ? t.val() == r[n] ? t.prop("checked", !0) : t.prop("checked", !1) : "input" === t[0].tagName.toLowerCase() && "radio" === t.attr("type") ? t.val() == r[n] ? t.prop("checked", !0) : t.prop("checked", !1) : "select" === t[0].tagName.toLowerCase() ? t.find("option").each(function() {
                                            var e = $(this);
                                            e.val() !== r[n] && e.text() !== r[n] || e.prop("selected", !0)
                                        }) : $(this).val(r[n]),
                                        e.saveSheetValues(this, "compendium"))
                                    })
                                })
                            })
                        }
                    })
                })
            },
            saveSheetValues: function(e, t) {
                if (this._ignoreSheetSaves)
                    console.log("Ignoring saves...");
                else {
                    var n = this
                      , i = $(e);
                    if (void 0 !== i.attr("name") && -1 !== i.attr("name").indexOf("attr_"))
                        if (i.prop("disabled"))
                            console.log("attr disabled");
                        else {
                            var o = !1
                              , r = "current"
                              , a = i.attr("data-attrname") !== undefined ? i.attr("data-attrname") : i.attr("name").substring(5, i.attr("name").length)
                              , s = i.parentsUntil(n.$charsheet, ".repitem");
                            if (s.length > 0) {
                                var l = s.parentsUntil(n.$charsheet, ".repcontainer");
                                a = l.attr("data-groupname") + "_" + s.attr("data-reprowid") + "_" + a
                            }
                            if ("_max" === a.substring(a.length - 4, a.length) && (r = "max",
                            a = a.substring(0, a.length - 4)),
                            "character_name" === a.toLowerCase())
                                return this.model.save({
                                    name: d20.utils.strip_tags(i.val())
                                }),
                                void this.model.view.$el.dialog("option", "title", "<button class='showpopout btn pictos' style='margin-right: 15px;'>|</button>" + d20.utils.strip_tags(i.val()));
                            o = this.model.attribs.find(function(e) {
                                return e.get("name").toLowerCase() === a.toLowerCase()
                            });
                            var c = {};
                            "input" === i[0].tagName.toLowerCase() && "checkbox" === i.attr("type") ? c[r] = d20.utils.strip_tags(i.is(":checked") ? i.val() : "0") : "input" === i[0].tagName.toLowerCase() && "radio" === i.attr("type") ? (console.log("input type radio", 'value = "' + d20.utils.strip_tags(i.val()) + '"'),
                            c[r] = d20.utils.strip_tags(i.val())) : c[r] = d20.utils.strip_tags(i.val());
                            var u = "" === c[r] || "undefined" == typeof c[r];
                            if (o)
                                o.syncedSave(c);
                            else {
                                if (u)
                                    return void console.log("blankVal, don't save");
                                c.name = a;
                                var d = this.model.attribs.create(c);
                                d.syncedSave(c),
                                -1 === c.name.indexOf("repeating_") && n.$el.find(".attributes .body").append(d.view.$el),
                                d.view.rebindEvents(this.model)
                            }
                            this.changedByMe = t || "player"
                        }
                    else
                        console.log("no attr name")
                }
            },
            deleteRepeatingRow: function(e, t) {
                if (!this._ignoreSheetSaves) {
                    console.log("DELETE REPEATING ROW: " + e + "_" + t);
                    var n = e + "_" + t + "_"
                      , i = n.split("_");
                    if (i < 3 || "" === i[2] || "-" !== i[2].substring(0, 1) && isNaN(i[2]))
                        console.log("ERROR: Invalid attempt to delete repeating row: " + n);
                    else {
                        var o = {}
                          , r = [];
                        this.model.attribs.each(function(e) {
                            e.get("name").toLowerCase().substring(0, n.length) === n.toLowerCase() && (r.push(e),
                            o[e.get("name")] = e.get("current"))
                        });
                        for (var a = 0; a < r.length; a++)
                            r[a].destroy();
                        d20.journal.notifyWorkersOfRowDeleted(this.model.id, e, t, "player", o)
                    }
                }
            },
            setupRepeatingControls: function() {
                this.$charsheet.find("fieldset").each(function() {
                    var e, t = this.classList;
                    if (_.each(t, function(t) {
                        if ("repeating_" === t.substring(0, 10))
                            return e = t.toLowerCase().replace("'", "&quot;"),
                            !1
                    }),
                    !e)
                        return !0;
                    $(this).hide(),
                    $(this).after("<div class='repcontrol' data-groupname='" + e + "'><button class='btn repcontrol_edit'>Modify</button><button class='btn repcontrol_add'>+Add</button></div>"),
                    $(this).after("<div class='repcontainer' data-groupname='" + e + "'></div>")
                })
            },
            showDialog: function(e, t) {
                if (console.log("Show Character View Dialog!"),
                this.childWindow) {
                    if (null !== this.childWindow.top)
                        return console.log("Already has child window!"),
                        void this.childWindow.focus();
                    console.log("Orphaned child window."),
                    this.$el.remove(),
                    this.rebindViewEvents(),
                    this.needsRebind = !0,
                    this.childWindow = null
                }
                if (!$(this.el).is(":visible")) {
                    t && "compendium_drop" === t && this.$el.addClass("compendium_drop");
                    var n = this;
                    if (n.render(),
                    !e && !0 === window.currentPlayer.get("usePopouts") || "waspopout" == e)
                        this.showPopout();
                    else {
                        var i = this.model.get("name");
                        i = "<button class='showpopout btn pictos' style='margin-right: 15px;'>|</button>" + i,
                        window.is_gm ? i += "<button class='broadcastcharacter btn'>Show to Players</button> <button class='editcharacter btn'>Edit</button>" : this.model.currentPlayerControls() && (i += "<button class='editcharacter btn'>Edit</button>"),
                        i += "<button class='zoomoptions btn'><span class='pictos'>s</span></button><div class='zoomoptionsmenu'><button class='zoomin'><span class='pictos'>&</span></button><button class='zoomdisplay'>100%</button><button class='zoomout'><span class='pictos'>_</span></button></div>";
                        var o = 500;
                        window.is_gm && (o = 750);
                        var r = $(window).height() - d20.utils.playerZoneHeight();
                        r > o && (r = o);
                        var a = 900
                          , s = $(window).width() - 100;
                        s > a && (s = a);
                        var l = $(this.el).parent()
                          , c = ["center", 30];
                        l.length > 0 && l.hasClass("ui-dialog") && (c = [parseInt(l.css("left").replace("px", ""), 10), parseInt(l.css("top").replace("px", ""), 10)],
                        s = parseInt(l[0].style.width.replace("px", ""), 10) + 1,
                        r = "auto" === l[0].style.height ? r : parseInt(l[0].style.height.replace("px", ""), 10)),
                        $(this.el).dialog({
                            modal: !1,
                            width: s,
                            height: r,
                            position: c,
                            title: i,
                            zIndex: 10500,
                            beforeClose: function() {
                                var e = this;
                                d20.journal.customSheets && d20.journal.setInactiveCharmancer(n.model.id),
                                setTimeout(function() {
                                    n.childWindow || $(e).find(".tab-content").html("")
                                }, 100)
                            }
                        }),
                        this.$el.parent().find(".ui-dialog-titlebar button").on("mousedown", function() {
                            return !1
                        }),
                        this.$el.parent().find(".zoomoptionsmenu").on("dblclick", function() {
                            return !1
                        });
                        var u = this.$el.parent().find(".ui-dialog-titlebar").siblings(".dialog")
                          , d = this.$el.parent().find(".ui-dialog-titlebar .zoomoptionsmenu .zoomin")
                          , h = this.$el.parent().find(".ui-dialog-titlebar .zoomoptionsmenu .zoomout")
                          , p = this.$el.parent().find(".ui-dialog-titlebar .zoomoptionsmenu");
                        u[0].addEventListener("mousewheel", function(e) {
                            !0 === e.altKey && (p.show(),
                            e.wheelDelta > 0 ? $(d).trigger("click") : $(h).trigger("click"))
                        }),
                        u[0].addEventListener("MozMousePixelScroll", function(e) {
                            !0 === e.altKey && (e.stopPropagation(),
                            e.preventDefault(),
                            p.show(),
                            e.detail > 0 ? $(d).trigger("click") : $(h).trigger("click"))
                        });
                        var f = $(this.el).parent();
                        f.length > 0 && f.hasClass("ui-dialog") && (f[0].style.height = r + "px")
                    }
                }
            },
            showPopout: function() {
                var e = this
                  , t = e.$el.parent()
                  , n = 900
                  , i = 750;
                t.hasClass("ui-dialog") && e.$el.hasClass("ui-dialog-content") && (n = t.width(),
                i = t.height(),
                t.find(".ui-droppable").droppable("destroy"),
                e.$el.dialog("destroy")),
                this.childWindow = window.open("/editor/popout", "Popout" + e.model.id, "menubar=0,location=0,toolbar=0,status=0,scrollbars=1,width=" + n + ",height=" + i),
                window.allChildWindows.push(this.childWindow),
                this.childWindow.onload = function() {
                    d20.journal.customSheets && d20.journal.customSheets.styleel && $(d20.journal.customSheets.styleel).clone().appendTo(e.childWindow.document.head),
                    e.$el.appendTo(e.childWindow.document.getElementById("containerdiv")),
                    e.childWindow.document.title = e.model.get("name"),
                    e.$el.show().css("height", "auto"),
                    e.model.currentPlayerControls() && (e.childWindow.document.getElementById("editobject").style.display = "block",
                    e.childWindow.document.getElementById("editobject").addEventListener("click", function() {
                        var t = e.model;
                        t ? (t.editview.showDialog("waspopout"),
                        t.view.childWindow.close(),
                        setTimeout(function() {
                            window.focus()
                        }, 500)) : alert("ERROR: Unable to find character to edit.")
                    }))
                }
                ,
                this.childWindow.onbeforeunload = function() {
                    e.$el.appendTo(t.hasClass("ui-dialog") ? t : $("body")),
                    e.$el.find(".tab-content").html(""),
                    e.$el.hide(),
                    d20.journal.customSheets && d20.journal.setInactiveCharmancer(e.model.id),
                    window.allChildWindows = _.without(window.allChildWindows, e.childWindow),
                    e.childWindow = null
                }
            },
            triggerCharmancerChange: function(e, t) {
                var n = this
                  , i = $(e)
                  , o = {};
                o[i.attr("name")] = "" === t ? t : i.val(),
                d20.journal.notifyWorkersOfCharmancerChanges(n.model.id, o)
            }
        }),
        d20.models.AbilityModel = Backbone.Model.extend({
            defaults: {
                name: "Untitled_Ability",
                description: "",
                action: "",
                order: -1,
                istokenaction: !1
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                this.view = new d20.models.AbilityView({
                    model: this
                })
            },
            isNew: function() {
                return !this.persisted
            }
        }),
        d20.models.AbilityCollection = Backbone.Collection.extend({
            model: d20.models.AbilityModel,
            initialize: function() {
                this.on("add remove change:name", function() {
                    d20.player_settings && d20.player_settings.debounced_refreshMacroBar()
                })
            }
        }),
        d20.models.AbilityView = Backbone.View.extend({
            _template: $("#tmpl_cs_ability"),
            initialize: function() {
                _.bindAll(this, "render");
                var e = this;
                this.$el.addClass("abil"),
                this.$el.attr("data-abilid", this.model.id),
                this.model.bind("remove", function() {
                    e.$el.remove()
                }),
                this.model.bind("change", function() {
                    e.render()
                }),
                e.render()
            },
            render: function() {
                this.$el.html(this._template.jqote(this.model)),
                this.$el.find(".action").val(this.convertForTokenizer(d20.utils.strip_tags(this.model.get("action")))),
                this.model.get("istokenaction") && this.$el.find(".istokenaction").prop("checked", !0),
                -1 !== window.currentPlayer.get("macrobar").indexOf(this.model.id) ? this.$el.find(".showinmacrobar").prop("checked", !0) : this.$el.find(".showinmacrobar").prop("checked", !1)
            },
            rebindEvents: function(e) {
                var t = this;
                this.$el.on("click", ".editabil", function() {
                    if (t.$el.parentsUntil(".ui-dialog", ".body").hasClass("editable")) {
                        t.$el.addClass("editing");
                        var e = t.$el.find(".abilname");
                        e.html("<input type='text' />"),
                        e.find("input").val(t.model.get("name")).focus()
                    }
                }),
                this.$el.on("click", ".saveabil", function() {
                    t.$el.parentsUntil(".ui-dialog", ".body").hasClass("editable") && (t.$el.removeClass("editing"),
                    t.saveValues(),
                    t.$el.find(".abilname").text(t.model.get("name")))
                }),
                this.$el.on("click", ".deleteabil", function() {
                    if (t.$el.parentsUntil(".ui-dialog", ".body").hasClass("editable")) {
                        var e = $("<div>Are you sure you want to delete this ability? This cannot be undone.</div>");
                        e.dialog({
                            modal: !0,
                            buttons: {
                                "Yes, Delete": function() {
                                    d20.Campaign.players.each(function(e) {
                                        e.removeFromMacroBar(t.model.id)
                                    }),
                                    t.model.destroy(),
                                    e.dialog("destroy").remove()
                                },
                                "No, Cancel": function() {
                                    e.dialog("destroy").remove()
                                }
                            },
                            beforeClose: function() {
                                e.dialog("destroy").remove()
                            },
                            title: "Confirm Deletion"
                        })
                    }
                }),
                this.$el.on("keyup", ".abilname input", function(e) {
                    if (32 == e.which) {
                        console.log("sapce!");
                        var t = $(this).val();
                        $(this).val(t.substring(0, t.length - 1).replace(" ", "") + "-")
                    }
                }),
                d20.Campaign && (this.$el.find(".action").atwho("@", {
                    cache: !1,
                    tpl: "<li data-value='{${name}}'>${name}</li>",
                    callbacks: {
                        filter: function(t) {
                            var n = []
                              , i = !1
                              , o = {};
                            return e.attribs.each(function(r) {
                                if ("repeating_" === r.get("name").substring(0, 10))
                                    return !0;
                                var a = ((i ? e.get("name") + "|" : "") + r.get("name")).score(t);
                                a > 0 && (n.push({
                                    name: r.get("name").replace("'", "&apos;"),
                                    score: a
                                }),
                                o[r.get("name").toLowerCase()] = !0)
                            }),
                            d20.journal.customSheets && d20.journal.availableAttributes && _.each(d20.journal.customSheets.availableAttributes, function(r, a) {
                                if (o[a.toLowerCase()] !== undefined)
                                    return !0;
                                var s = ((i ? e.get("name") + "|" : "") + a).score(t);
                                s > 0 && n.push({
                                    name: a.replace("'", "&apos;"),
                                    score: s
                                })
                            }),
                            o = null,
                            n = _.sortBy(n, function(e) {
                                return -e.score
                            })
                        },
                        sorter: function(e, t) {
                            return t
                        }
                    }
                }),
                this.$el.find(".action").atwho("#", {
                    cache: !1,
                    callbacks: {
                        filter: function(e) {
                            var t = [];
                            return d20.Campaign.players.each(function(n) {
                                n.macros.each(function(i) {
                                    if ("" == i.get("name"))
                                        return !0;
                                    (n.id == window.currentPlayer.id || i.visibleToCurrentPlayer()) && -1 !== i.get("name").toLowerCase().indexOf(e) && t.push({
                                        name: i.get("name"),
                                        val: i.get("name"),
                                        id: i.id
                                    })
                                })
                            }),
                            t
                        }
                    }
                }),
                this.$el.on("click", ".testabil", function() {
                    var e = d20.utils.strip_tags(t.convertFromTokenizer(t.$el.find(".action")));
                    e = e.replace(/@{[^}]+}/g, function(e) {
                        return -1 === e.indexOf("|") ? "@{" + t.model.collection.character.get("name") + "|" + e.substring(2, e.length) : e
                    }),
                    d20.textchat.doChatInput(e)
                }),
                this.$el.on("click", ".rollabil", function() {
                    d20.textchat.doChatInput("%{" + t.model.collection.character.get("name") + "|" + t.model.get("name") + "}")
                }),
                this.$el.on("click", ".showinmacrobar", function() {
                    $(this).is(":checked") ? window.currentPlayer.addToMacroBar(t.$el.parents(".abilities").attr("data-characterid") + "|" + t.model.id) : window.currentPlayer.removeFromMacroBar(t.model.id)
                }),
                this.$el.on("click", ".istokenaction", function() {
                    $(this).is(":checked") ? t.model.save({
                        istokenaction: !0
                    }) : t.model.save({
                        istokenaction: !1
                    })
                }))
            },
            saveValues: function() {
                var e = {
                    name: this.$el.find(".abilname input").length > 0 ? d20.utils.strip_tags(this.$el.find(".abilname input").val()) : this.model.get("name"),
                    action: d20.utils.strip_tags(this.convertFromTokenizer(this.$el.find(".action"))),
                    istokenaction: this.$el.find(".istokenaction").is(":checked")
                };
                this.model.save(e)
            },
            convertFromTokenizer: function(e) {
                return e.val()
            },
            convertForTokenizer: function(e) {
                return e
            }
        }),
        d20.models.AttributeModel = Backbone.Model.extend({
            defaults: {
                name: "Untitled",
                current: "",
                max: ""
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                this.view = new d20.models.AttributeView({
                    model: this
                })
            },
            isNew: function() {
                return !this.persisted
            },
            syncedSave: function(e) {
                this.save(e),
                this.collection.character.updateTokensByName(this.get("name"), this.id)
            }
        }),
        d20.models.AttributeCollection = Backbone.Collection.extend({
            model: d20.models.AttributeModel,
            initialize: function() {
                this.on("change", function() {
                    d20.engine && d20.engine.redrawScreenNextTick()
                }),
                this.on("add", function() {})
            }
        }),
        d20.models.AttributeView = Backbone.View.extend({
            _template: $("#tmpl_cs_attribute"),
            initialize: function() {
                _.bindAll(this, "render", "rebindEvents", "saveValues");
                var e = this;
                this.$el.addClass("attrib"),
                this.$el.attr("data-attrid", this.model.id),
                this.model.bind("remove", function() {
                    e.$el.remove()
                }),
                this.model.bind("change", function() {
                    e.render()
                }),
                this.renderedOnce = !1
            },
            render: function() {
                this.renderedOnce = !0,
                this.$el.html(this._template.jqote(this.model))
            },
            rebindEvents: function() {
                var e = this;
                this.renderedOnce || this.render(),
                this.$el.on("click", ".attrname", function() {
                    if (e.$el.parentsUntil(".ui-dialog", ".body").hasClass("editable")) {
                        var t = $(this);
                        if (!(t.find("input").length > 0)) {
                            var n = t.text();
                            t.html("<input type='text' />"),
                            t.find("input").val(n).focus()
                        }
                    }
                }),
                this.$el.on("keydown", ".attrname", function(t) {
                    13 == t.which && (e.saveValues(),
                    e.render())
                }),
                this.$el.on("click", ".deleteattr", function() {
                    e.$el.parentsUntil(".ui-dialog", ".body").hasClass("editable") && e.model.destroy()
                }),
                this.$el[0].addEventListener("blur", function(t) {
                    $(t.target).is("input") && setTimeout(function() {
                        var t = e.$el.find("input:focus").attr("name");
                        e.saveValues(),
                        e.$el.find("input[name=" + t + "]").focus()
                    }, 100)
                }, !0),
                this.$el.on("dosave", function() {
                    e.saveValues(),
                    e.$el.find(".attrname input").each(function() {
                        $(this).parentsUntil(".ui-dialog", ".attrname").text(e.model.get("name"))
                    })
                }),
                this.$el.on("doclose", function() {
                    e.$el.find(".attrname input").each(function() {
                        $(this).parentsUntil(".ui-dialog", ".attrname").text(e.model.get("name"))
                    })
                })
            },
            saveValues: function() {
                var e = {
                    name: this.$el.find(".attrname input").length > 0 ? d20.utils.strip_tags(this.$el.find(".attrname input").val()) : this.model.get("name"),
                    current: d20.utils.strip_tags(this.$el.find(".current input").val()),
                    max: d20.utils.strip_tags(this.$el.find(".max input").val())
                };
                this.model.syncedSave(e)
            }
        }),
        d20.models.Character = Backbone.Model.extend({
            defaults: {
                name: "",
                bio: "",
                gmnotes: "",
                avatar: "",
                inplayerjournals: "",
                controlledby: "",
                defaulttoken: "",
                tags: "",
                archived: !1,
                attrorder: "",
                abilorder: "",
                mancerdata: "{}"
            },
            initialize: function() {
                var e = this;
                if (this.id)
                    this.persisted = !0;
                else {
                    var t = generateUUID();
                    this.set({
                        id: t
                    }),
                    this.url = this.collection.url + t
                }
                this.allowDelays = {
                    update: !0
                },
                this.attribs = new d20.models.AttributeCollection,
                this.attribs.url = "/char-attribs/char/" + this.id + "/",
                this.attribs.character = this,
                this.abilities = new d20.models.AbilityCollection,
                this.abilities.url = "/char-abils/char/" + this.id + "/",
                this.abilities.character = this,
                _.defer(function() {
                    e.attribs.backboneFirebase = new BackboneFirebase(e.attribs),
                    e.abilities.backboneFirebase = new BackboneFirebase(e.abilities),
                    e.attribs.backboneFirebase.reference.once("value", function() {
                        e.attribs.trigger("initial_load")
                    })
                }),
                this.view = new d20.models.CharacterView({
                    model: this
                }),
                this.editview = new d20.models.CharacterEditorView({
                    model: this
                }),
                this.on("change:controlledby", function() {
                    e.attribs.each(function(e) {
                        e.view && e.view.render()
                    }),
                    e.abilities.each(function(e) {
                        e.view && e.view.render()
                    }),
                    e.view.$el.is(":visible") && e.view.render(),
                    window.currentPlayer && d20.player_settings && d20.player_settings.refreshMacroBar()
                }),
                this._blobcache = {}
            },
            isNew: function() {
                return !this.persisted
            },
            currentPlayerControls: function() {
                if (window.is_gm)
                    return !0;
                var e = this.get("controlledby").split(",");
                return -1 != _.indexOf(e, window.currentPlayer.id) || -1 != _.indexOf(e, "all")
            },
            tagsArray: function() {
                try {
                    var e = JSON.parse(this.get("tags"))
                } catch (t) {
                    return []
                }
                return e
            },
            _getLatestBlob: function(e, t) {
                if (this._blobcache[e])
                    t(this._blobcache[e]);
                else {
                    var n = this
                      , i = !1;
                    d20.Campaign.parentRef.child("char-blobs").child(this.id).child(e).on("value", function(o) {
                        o.val() ? n._blobcache[e] = o.val() : n._blobcache[e] = "",
                        i ? n.trigger("change:blob_" + e) : t(n._blobcache[e]),
                        i = !0
                    })
                }
            },
            updateBlobs: function(e) {
                if (d20.tutorial && d20.tutorial.active)
                    for (var t in e)
                        this._blobcache[t] = e[t];
                else
                    d20.Campaign.parentRef.child("char-blobs").child(this.id).update(e)
            },
            autoCalcFormula: function(formula, additionalAttrs, defaultValuesPrefix, dolog) {
                var character = this, varreg = /(@{[^}]+})/gm, prevformula;
                defaultValuesPrefix || (defaultValuesPrefix = "");
                for (var i = 0; i < 99 && (formula = formula.replace(varreg, function(e) {
                    var t, n, i = (e = e.substring(2, e.length - 1)).split("|");
                    n = i[0];
                    var o = "current";
                    if ("-" === i[0].substring(0, 1) && (t = character.attribs.get(i[0]),
                    n = t.get("name")),
                    i.length > 1 && "max" === i[1] && (o = "max"),
                    !t) {
                        if ("repeating_" === n.substring(0, 10) && -1 !== n.indexOf("$")) {
                            var r = n.split("_");
                            if (r.length > 3 && r[2] !== undefined && "$" === r[2].substring(0, 1)) {
                                var a = parseInt(r[2].replace("$", ""), 10)
                                  , s = []
                                  , l = r[0] + "_" + r[1];
                                character.attribs.each(function(e) {
                                    if (e.get("name").toLowerCase().substring(0, l.length) === l.toLowerCase()) {
                                        var t = e.get("name").split("_");
                                        t.length > 2 && t[2] !== undefined && s.push(t[2])
                                    }
                                }),
                                s = _.uniq(s),
                                (s = character.repeatingKeyOrder(s, l))[a] !== undefined ? (r[2] = s[a],
                                n = r.join("_")) : console.log("ERROR in auto-calc formula: You tried to use the repeating section row at index " + a + " for " + l + ", but there doesn't seem to be a row at that index.")
                            }
                        }
                        t = character.attribs.find(function(e) {
                            return e.get("name").toLowerCase() == n.toLowerCase()
                        })
                    }
                    var c = undefined;
                    if (t && (c = "max" == o ? t.get("max") : t.get("current")),
                    !c && additionalAttrs && additionalAttrs[n.toLowerCase()] !== undefined && (c = additionalAttrs[n.toLowerCase()][o]),
                    !(c === undefined || "" === c || d20.journal.customSheets && d20.journal.customSheets.reservedAttributes[n.toLowerCase() + ("max" === o ? "_max" : "")]))
                        return c;
                    var u = undefined;
                    return "" !== defaultValuesPrefix && d20.journal.customSheets && d20.journal.customSheets.availableAttributes && d20.journal.customSheets.availableAttributes[(defaultValuesPrefix + n + ("max" === o ? "_max" : "")).toLowerCase()] !== undefined ? u = d20.journal.customSheets.availableAttributes[(defaultValuesPrefix + n + ("max" === o ? "_max" : "")).toLowerCase()] : d20.journal.customSheets && d20.journal.customSheets.availableAttributes && d20.journal.customSheets.availableAttributes[(n + ("max" === o ? "_max" : "")).toLowerCase()] !== undefined && (u = d20.journal.customSheets.availableAttributes[(n + ("max" === o ? "_max" : "")).toLowerCase()]),
                    c !== undefined && u === undefined ? c : u !== undefined ? u : (console.log("ERROR: Unable to find attribute " + e + " in auto-calc formula."),
                    "")
                }),
                prevformula !== formula); i++)
                    prevformula = formula;
                prevformula = null;
                var filterreg = /(floor)|([0-9\.]+)|(\()|(\))|(ceil)|(round)|(abs)|(\+)|(\/)|(\-)|(\*)|(%)/gi, finalString = "", result;
                formula.replace(filterreg, function(e) {
                    finalString += e
                });
                try {
                    !function() {
                        "use strict";
                        var floor = Math.floor
                          , round = Math.round
                          , ceil = Math.ceil
                          , abs = Math.abs;
                        dolog && console.log(finalString),
                        result = eval(finalString)
                    }()
                } catch (e) {
                    result = formula
                }
                return "" !== result && result !== undefined || (result = formula),
                result
            },
            updateTokensByName: function(e, t) {
                var n = this;
                e = e.toLowerCase(),
                this.attribs.each(function(n) {
                    t || n.get("name").toLowerCase() === e && (t = n.id)
                }),
                d20.Campaign.pages.each(function(i) {
                    if (!i.thegraphics)
                        return !0;
                    i.thegraphics.each(function(i) {
                        if (i.get("represents") === n.id) {
                            var o = {};
                            (t !== undefined && i.get("bar1_link") === t || i.get("bar1_link").toLowerCase() === "sheetattr_" + e) && (o.bar1_value = n.autoCalcFormula("@{" + (t || e) + "}"),
                            o.bar1_max = n.autoCalcFormula("@{" + (t || e) + "|max}")),
                            (t !== undefined && i.get("bar2_link") === t || i.get("bar2_link").toLowerCase() === "sheetattr_" + e) && (o.bar2_value = n.autoCalcFormula("@{" + (t || e) + "}"),
                            o.bar2_max = n.autoCalcFormula("@{" + (t || e) + "|max}")),
                            (t !== undefined && i.get("bar3_link") === t || i.get("bar3_link").toLowerCase() === "sheetattr_" + e) && (o.bar3_value = n.autoCalcFormula("@{" + (t || e) + "}"),
                            o.bar3_max = n.autoCalcFormula("@{" + (t || e) + "|max}")),
                            _.keys(o).length > 0 && i.save(o)
                        }
                    })
                })
            },
            broadcastToPlayers: function(e) {
                var t = this;
                if ("" !== this.get("inplayerjournals") || e)
                    d20.textchat.sendShout({
                        type: "showcharacter",
                        jid: this.id,
                        jtype: "character",
                        time: (new Date).getTime(),
                        playerid: "all"
                    });
                else {
                    var n = $("<div>This character isn't currently shared with any players. Do you want to share with all players in the game?</div>");
                    n.dialog({
                        buttons: {
                            "Show to Everyone": function() {
                                t.save({
                                    inplayerjournals: ["all"].join(",")
                                }),
                                setTimeout(function() {
                                    t.broadcastToPlayers(!0)
                                }, 100),
                                n.dialog("close")
                            },
                            Cancel: function() {
                                setTimeout(function() {
                                    t.broadcastToPlayers(!0)
                                }, 0),
                                n.dialog("close")
                            }
                        },
                        beforeClose: function() {
                            n.dialog("destroy")
                        },
                        title: "Not Visible to Players"
                    })
                }
            },
            safeDestroy: function() {
                var e = this;
                $("<div class='dialog'>Are you sure you want to delete this character? This cannot be undone.</div>").dialog({
                    modal: !0,
                    title: "Confirm Deletion",
                    buttons: {
                        "Delete Character": function() {
                            d20.Campaign.players.each(function(t) {
                                t.removeFromMacroBar(e.id)
                            }),
                            e.attribs.backboneFirebase.reference.set(null),
                            e.abilities.backboneFirebase.reference.set(null),
                            e.updateBlobs({
                                gmnotes: null,
                                notes: null,
                                defaulttoken: null
                            }),
                            e.destroy(),
                            $(this).dialog("destroy").remove(),
                            e.editview.$el.is(":visible") && e.editview.$el.dialog("destroy")
                        },
                        Cancel: function() {
                            $(this).dialog("destroy").remove()
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy").remove()
                    }
                })
            },
            expandReferencesInRoll: function(e, t) {
                var n = this
                  , i = t.parents(".repitem")
                  , o = i.length > 0
                  , r = ""
                  , a = {}
                  , s = function(e, t, n) {
                    return !!(!a[e] || a[e] && t.val() && t.val() != n)
                };
                o && (r = i.parent().attr("data-groupname") + "_" + i.attr("data-reprowid"),
                i.find('*[name^="attr_"]').each(function() {
                    if ("span" !== this.tagName.toLowerCase()) {
                        var e = $(this)
                          , t = e.attr("data-attrname") !== undefined ? e.attr("data-attrname") : e.attr("name").substring(5, e.attr("name").length);
                        "input" === e[0].tagName.toLowerCase() && "checkbox" === e.attr("type") && s(t, e, undefined) ? (a[t.toLowerCase()] === undefined && (a[t.toLowerCase()] = "0"),
                        e.is(":checked") && (a[t.toLowerCase()] = d20.utils.strip_tags(e.val()))) : "input" === e[0].tagName.toLowerCase() && "radio" === e.attr("type") && s(t, e, undefined) ? e.is(":checked") && (a[t.toLowerCase()] = d20.utils.strip_tags(e.val())) : s(t, e, "") && (a[t.toLowerCase()] = d20.utils.strip_tags(e.val()))
                    }
                }));
                var l = d20.utils.strip_tags(e);
                l = l.split("\\n").join("\n");
                for (var c = 0; c < 99; c++) {
                    var u;
                    if ((l = l.replace(/@{[^}]+}/g, function(e) {
                        var t = e.split("|");
                        if (1 === t.length || 2 === t.length && "max}" === t[1].toLowerCase()) {
                            var i = e.substring(2, e.length - 1);
                            if (o) {
                                var r = 2 === t.length && "max}" === t[1].toLowerCase() ? t[0].substring(2, t[0].length) + "_max" : i;
                                if (a[r.toLowerCase()] !== undefined)
                                    return a[r.toLowerCase()]
                            }
                            return "@{" + n.get("name") + "|" + i + "}"
                        }
                        return e
                    })) === u)
                        break;
                    u = l
                }
                u = null;
                for (c = 0; c < 99 && (l = l.replace(/\(~[^\)]+\)/g, function(e) {
                    if (e.split("|").length < 2) {
                        var t = n.id
                          , i = e.substring(2, e.length);
                        return o && (i = r + "_" + i.split("_").splice(2).join("_")),
                        "(~" + t + "|" + i
                    }
                    return e
                })) !== u; c++)
                    u = l;
                return u = null,
                l
            },
            repeatingKeyOrder: function(e, t) {
                if (t) {
                    var n;
                    n = _.isArray(e) ? e : _.keys(e);
                    var i = []
                      , o = []
                      , r = [];
                    _.each(n, function(e) {
                        "-" === e.substring(0, 1) ? o.push(e) : isNaN(e) ? o.push(e) : i.push(e)
                    }),
                    o.sort();
                    var a = "_reporder_" + t
                      , s = this.attribs.find(function(e) {
                        return e.get("name").toLowerCase() === a
                    });
                    if (s) {
                        console.log("Foudn a pre-defined key order!");
                        var l = s.get("current").split(",");
                        _.each(l, function(e) {
                            -1 !== n.indexOf(e) && r.push(e)
                        })
                    }
                    return i.length > 0 && (i = _.sortBy(i, function(e) {
                        return parseInt(e, 10)
                    }),
                    r = _.union(r, i)),
                    r = _.union(r, o),
                    alleys = null,
                    i = null,
                    o = null,
                    r
                }
                console.error("ERROR: Did not include a groupname when using repeatingKeyOrder")
            }
        }),
        d20.models.CharacterCollection = Backbone.Collection.extend({
            model: d20.models.Character,
            url: "/characters/",
            initialize: function() {
                this.on("add change remove", function() {
                    d20.journal && d20.journal.refreshJournalList(),
                    d20.utils && d20.utils.refreshLinkCache()
                }),
                this.on("add", function() {
                    d20.player_settings && d20.player_settings.refreshMacroBar()
                })
            }
        }),
        d20.models.HandoutEditorView = Backbone.View.extend({
            _template: $("#tmpl_handouteditor"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "updateModel", "showDialog"),
                this.model.bind("change:avatar", function() {
                    e.$el.is(":visible") && (e.render(),
                    e.$el.find(".chosen").chosen())
                }),
                $(this.el).addClass("dialog"),
                this.$el = $(this.el);
                e = this;
                this.$el.on("click", ".delete", function() {
                    e.model.safeDestroy()
                }),
                this.$el.on("click", ".duplicate", function() {
                    var t = e.model.toJSON();
                    delete t.id,
                    t.name = "Copy of " + t.name;
                    var n = e.model.collection.create(t);
                    setTimeout(function() {
                        var t = {};
                        e.model._blobcache.notes && (t.notes = e.model._blobcache.notes),
                        e.model._blobcache.gmnotes && (t.gmnotes = e.model._blobcache.gmnotes),
                        Object.keys(t).length > 0 && n.updateBlobs(t)
                    }, 100)
                }),
                this.$el.on("click", ".archive", function() {
                    e.model.set({
                        archived: !e.model.get("archived")
                    }).save(),
                    e.$el.dialog("destroy")
                })
            },
            addBlob: function(e) {
                var t = this;
                this.$el.find("." + e).html("Loading..."),
                this.model._getLatestBlob(e, function(n) {
                    var i = d20.utils.handleHTMLOutput(n);
                    "SINGLESPACED!!" == i.substring(0, 14) && (i = i.substring(14, i.length));
                    let o = t.$el.find("." + e);
                    o.addClass("summernote in-app-editor"),
                    o.val(i),
                    o.each(d20.utils.summernoteInit)
                })
            },
            render: function() {
                var e = this;
                if (this.$el.html(this._template.jqote(this.model)),
                this.$el.attr("data-handoutid", this.model.id),
                this.$el.find(".name").val(this.model.get("name")),
                this.addBlob("notes"),
                d20.utils.setupAvatar(this.$el.find(".avatar"), e),
                window.is_gm) {
                    this.addBlob("gmnotes");
                    var t = this.model.get("controlledby").split(",");
                    _.each(t, function(t) {
                        e.$el.find(".controlledby option[value=" + t + "]").prop("selected", !0)
                    });
                    var n = this.model.get("inplayerjournals").split(",");
                    _.each(n, function(t) {
                        e.$el.find(".inplayerjournals option[value=" + t + "]").prop("selected", !0)
                    }),
                    this.tagEditor = new $.TextboxList(this.$el.find(".tags"),{
                        encode: function() {},
                        decode: function() {},
                        startEditableBit: !1,
                        inBetweenEditableBits: !1,
                        unique: !0,
                        plugins: {
                            autocomplete: {
                                minLength: 2
                            }
                        }
                    }),
                    this.tagEditor.plugins.autocomplete.setValues(_.map(d20.journal.possibletags, function(e) {
                        return [null, e.tag, null]
                    }));
                    for (var i = this.model.tagsArray(), o = 0; o < i.length; o++)
                        this.tagEditor.add(i[o])
                }
            },
            updateModel: function() {
                var e = {}
                  , t = {};
                if (window.is_gm) {
                    (l = d20.utils.handleHTMLInput(this.$el.find("textarea.notes").val())) !== this.model._blobcache.notes && (t.notes = l);
                    var n = d20.utils.handleHTMLInput(this.$el.find("textarea.gmnotes").val());
                    n !== this.model._blobcache.gmnotes && (t.gmnotes = n),
                    Object.keys(t).length > 0 && this.model.updateBlobs(t);
                    var i = [];
                    this.$el.find(".controlledby option:selected").each(function() {
                        i.push($(this).val())
                    });
                    var o = [];
                    if (this.$el.find(".inplayerjournals option:selected").each(function() {
                        o.push($(this).val())
                    }),
                    e = {
                        name: d20.utils.strip_tags(this.$el.find(".name").val()),
                        inplayerjournals: o.join(","),
                        controlledby: i.join(",")
                    },
                    t.notes && (e.notes = (new Date).getTime()),
                    t.gmnotes && (e.gmnotes = (new Date).getTime()),
                    this.tagEditor) {
                        for (var r = this.tagEditor.getValues(), a = [], s = 0; s < r.length; s++)
                            a.push(r[s][1]);
                        e.tags = JSON.stringify(a)
                    }
                } else {
                    var l;
                    (l = d20.utils.handleHTMLInput(this.$el.find("textarea.notes").val())) !== this.model._blobcache.notes && (t.notes = l),
                    Object.keys(t).length > 0 && this.model.updateBlobs(t),
                    t.notes && (e.notes = (new Date).getTime()),
                    e.name = d20.utils.strip_tags(this.$el.find(".name").val())
                }
                this.model.save(e)
            },
            showDialog: function(e) {
                var t = this;
                this.render();
                var n = 775
                  , i = $(window).height() - d20.utils.playerZoneHeight();
                i > n && (i = n),
                $(this.el).dialog({
                    modal: !1,
                    width: 700,
                    height: i,
                    position: ["center", 30],
                    title: "Edit " + this.model.get("name"),
                    zIndex: 10500,
                    buttons: [{
                        text: "Save Changes",
                        "class": "ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only",
                        click: function() {
                            $(this).dialog("destroy"),
                            t.updateModel(),
                            _.defer(function() {
                                t.model.view.showDialog(e)
                            })
                        }
                    }, {
                        text: "Cancel",
                        "class": "ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only",
                        click: function() {
                            $(this).dialog("destroy"),
                            _.defer(function() {
                                t.model.view.showDialog(e)
                            })
                        }
                    }],
                    beforeClose: function() {
                        $(this).dialog("destroy"),
                        $(".note-popover").hide(),
                        _.defer(function() {
                            t.model.view.showDialog(e)
                        })
                    }
                }),
                this.$el.find(".chosen").chosen()
            }
        }),
        d20.models.HandoutView = Backbone.View.extend({
            _template: $("#tmpl_handoutviewer"),
            initialize: function() {
                var e = this;
                _.bindAll(this, "render", "showDialog"),
                this.model.bind("change:name change:avatar change:blob_notes", function() {
                    e.$el.is(":visible") && e.render()
                }),
                $(this.el).addClass("dialog"),
                this.$el = $(this.el);
                e = this;
                this.$el.on("click", ".lightly", function() {
                    return window.fakeLightly($(this).attr("href"), e.childWindow ? $(e.childWindow.document) : null),
                    !1
                }),
                this.$el.on("click", "a", function() {
                    var e = $(this).attr("href");
                    if (void 0 === e)
                        return !1;
                    if (-1 !== e.indexOf("journal.roll20.net")) {
                        var t = e.split("/")[3]
                          , n = e.split("/")[4]
                          , i = d20.Campaign[t + "s"].get(n);
                        if (i) {
                            var o = i.get("inplayerjournals").split(",");
                            (window.is_gm || -1 !== _.indexOf(o, "all") || window.currentPlayer && -1 !== _.indexOf(o, window.currentPlayer.id)) && i.view.showDialog()
                        }
                        return $("#existing" + t + "s").find("tr[data-" + t + "id=" + n + "]").trigger("click"),
                        !1
                    }
                })
            },
            addBlob: function(e) {
                var t = this;
                this.$el.find("." + e).html("Loading..."),
                this.model._getLatestBlob(e, function(n) {
                    var i = d20.utils.handleHTMLOutput(n, !0);
                    "SINGLESPACED!!" == i.substring(0, 14) && (i = i.substring(14, i.length)),
                    t.$el.find("." + e).html(i)
                })
            },
            render: function() {
                this.$el.html(this._template.jqote(this.model)),
                this.$el.attr("data-handoutid", this.model.id),
                this.addBlob("notes"),
                window.is_gm && this.addBlob("gmnotes")
            },
            showDialog: function(e) {
                if (this.childWindow)
                    return console.log("Already has child window!"),
                    void this.childWindow.focus();
                if (!$(this.el).is(":visible"))
                    if (this.render(),
                    !e && !0 === window.currentPlayer.get("usePopouts") || "waspopout" == e)
                        this.showPopout();
                    else {
                        var t = this.model.get("name");
                        t = "<button class='showpopout btn pictos' style='margin-right: 15px;'>|</button>" + t,
                        window.is_gm ? t += "<button class='broadcasthandout btn'>Show to Players</button> <button class='edithandout btn'>Edit</button>" : this.model.currentPlayerControls() && (t += "<button class='edithandout btn'>Edit</button>"),
                        t += "<button class='zoomoptions btn'><span class='pictos'>s</span></button><div class='zoomoptionsmenu'><button class='zoomin'><span class='pictos'>&</span></button><button class='zoomdisplay'>100%</button><button class='zoomout'><span class='pictos'>_</span></button></div>";
                        var n = 550
                          , i = $(window).height() - d20.utils.playerZoneHeight();
                        i > n && (i = n);
                        var o = 550
                          , r = $(this.el).parent()
                          , a = ["center", 30];
                        r.length > 0 && r.hasClass("ui-dialog") && (a = [parseInt(r.css("left").replace("px", ""), 10), parseInt(r.css("top").replace("px", ""), 10)],
                        o = parseInt(r[0].style.width.replace("px", ""), 10) + 1,
                        i = "auto" === r[0].style.height ? i : parseInt(r[0].style.height.replace("px", ""), 10) + 9),
                        $(this.el).dialog({
                            modal: !1,
                            height: i,
                            position: a,
                            width: o,
                            title: t,
                            zIndex: 10500
                        }),
                        this.$el.parent().find(".ui-dialog-titlebar button").on("mousedown", function() {
                            return !1
                        }),
                        this.$el.parent().find(".zoomoptionsmenu").on("dblclick", function() {
                            return !1
                        });
                        var s = this.$el.parent().find(".ui-dialog-titlebar").siblings(".dialog")
                          , l = this.$el.parent().find(".ui-dialog-titlebar .zoomoptionsmenu .zoomin")
                          , c = this.$el.parent().find(".ui-dialog-titlebar .zoomoptionsmenu .zoomout")
                          , u = this.$el.parent().find(".ui-dialog-titlebar .zoomoptionsmenu");
                        s[0].addEventListener("mousewheel", function(e) {
                            !0 === e.altKey && (u.show(),
                            e.wheelDelta > 0 ? $(l).trigger("click") : $(c).trigger("click"))
                        }),
                        s[0].addEventListener("MozMousePixelScroll", function(e) {
                            console.log("HEARD SCROLL"),
                            !0 === e.altKey && (e.stopPropagation(),
                            e.preventDefault(),
                            u.show(),
                            e.detail > 0 ? $(l).trigger("click") : $(c).trigger("click"))
                        });
                        var d = $(this.el).parent();
                        d.length > 0 && d.hasClass("ui-dialog") && (d[0].style.height = i + "px")
                    }
            },
            showPopout: function() {
                var e = this
                  , t = e.$el.parent()
                  , n = 900
                  , i = 750;
                t.hasClass("ui-dialog") && (n = t.width(),
                i = t.height(),
                e.$el.dialog("close")),
                this.childWindow = window.open("/editor/popout", "Popout" + e.model.id, "menubar=0,location=0,toolbar=0,status=0,scrollbars=1,width=" + n + ",height=" + i),
                window.allChildWindows.push(this.childWindow),
                this.childWindow.onload = function() {
                    e.$el.appendTo(e.childWindow.document.getElementById("containerdiv")),
                    e.childWindow.document.title = e.model.get("name"),
                    e.$el.show().css("height", "auto"),
                    e.model.currentPlayerControls() && (e.childWindow.document.getElementById("editobject").style.display = "block",
                    e.childWindow.document.getElementById("editobject").addEventListener("click", function() {
                        console.log("Heard edit!");
                        var t = e.model;
                        t ? (t.editview.showDialog("waspopout"),
                        t.view.childWindow.close(),
                        setTimeout(function() {
                            window.focus()
                        }, 500)) : alert("ERROR: Unable to find character to edit.")
                    }))
                }
                ,
                this.childWindow.onbeforeunload = function() {
                    e.$el.appendTo(t.hasClass("ui-dialog") ? t : $("body")),
                    e.$el.find(".tab-content").html(""),
                    e.$el.hide(),
                    window.allChildWindows = _.without(window.allChildWindows, e.childWindow),
                    e.childWindow = null
                }
            }
        }),
        d20.models.Handout = Backbone.Model.extend({
            defaults: {
                name: "Mysterious Note",
                notes: "",
                avatar: "",
                inplayerjournals: "",
                archived: !1,
                tags: "",
                controlledby: ""
            },
            initialize: function() {
                if (this.id)
                    this.persisted = !0;
                else {
                    var e = generateUUID();
                    this.set({
                        id: e
                    }),
                    this.url = this.collection.url + e
                }
                this.allowDelays = {
                    update: !0
                },
                this._blobcache = {},
                this.view = new d20.models.HandoutView({
                    model: this
                }),
                this.editview = new d20.models.HandoutEditorView({
                    model: this
                })
            },
            isNew: function() {
                return !this.persisted
            },
            currentPlayerControls: function() {
                if (window.is_gm)
                    return !0;
                var e = this.get("controlledby").split(",");
                return -1 != _.indexOf(e, window.currentPlayer.id) || -1 != _.indexOf(e, "all")
            },
            tagsArray: function() {
                try {
                    var e = JSON.parse(this.get("tags"))
                } catch (t) {
                    return []
                }
                return e
            },
            _getLatestBlob: function(e, t) {
                if (this._blobcache[e])
                    t(this._blobcache[e]);
                else {
                    var n = this
                      , i = !1;
                    d20.Campaign.parentRef.child("hand-blobs").child(this.id).child(e).on("value", function(o) {
                        o.val() ? n._blobcache[e] = o.val() : n._blobcache[e] = "",
                        i ? n.trigger("change:blob_" + e) : t(n._blobcache[e]),
                        i = !0
                    })
                }
            },
            updateBlobs: function(e) {
                if (d20.tutorial && d20.tutorial.active)
                    for (var t in e)
                        this._blobcache[t] = e[t];
                else
                    d20.Campaign.parentRef.child("hand-blobs").child(this.id).update(e)
            },
            broadcastToPlayers: function(e) {
                var t = this;
                if ("" !== this.get("inplayerjournals") || e)
                    d20.textchat.sendShout({
                        type: "showhandout",
                        jid: this.id,
                        jtype: "handout",
                        time: (new Date).getTime(),
                        playerid: "all"
                    });
                else {
                    var n = $("<div>This handout isn't currently shared with any players. Do you want to share with all players in the game?</div>");
                    n.dialog({
                        buttons: {
                            "Show to Everyone": function() {
                                t.save({
                                    inplayerjournals: ["all"].join(",")
                                }),
                                setTimeout(function() {
                                    t.broadcastToPlayers(!0)
                                }, 100),
                                n.dialog("close")
                            },
                            Cancel: function() {
                                setTimeout(function() {
                                    t.broadcastToPlayers(!0)
                                }, 0),
                                n.dialog("close")
                            }
                        },
                        beforeClose: function() {
                            n.dialog("destroy")
                        },
                        title: "Not Visible to Players"
                    })
                }
            },
            safeDestroy: function() {
                var e = this;
                $("<div class='dialog'>Are you sure you want to delete this handout? This cannot be undone.</div>").dialog({
                    modal: !0,
                    title: "Confirm Deletion",
                    buttons: {
                        "Delete Handout": function() {
                            e.updateBlobs({
                                gmnotes: null,
                                notes: null
                            }),
                            e.destroy(),
                            $(this).dialog("destroy"),
                            e.editview.$el.is(":visible") && e.editview.$el.dialog("destroy")
                        },
                        Cancel: function() {
                            $(this).dialog("destroy")
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy")
                    }
                })
            }
        }),
        d20.models.HandoutCollection = Backbone.Collection.extend({
            model: d20.models.Handout,
            url: "/handouts/",
            initialize: function() {
                this.bind("add remove change", function() {
                    d20.journal && d20.journal.refreshJournalList(),
                    d20.utils && d20.utils.refreshLinkCache()
                })
            }
        })
    }(),
    pendingDropCallbacks = [],
    window.wantsToReceiveDrop = function(e, t, n) {
        pendingDropCallbacks.push({
            element: e,
            e: t,
            callback: n
        }),
        debounced_handleDrop()
    }
    ;
    var debounced_handleDrop = _.debounce(function() {
        handleDrop()
    }, 200)
      , handleDrop = function() {
        pendingDropCallbacks.sort(function(e, t) {
            return $(e.element).zIndex() < $(t.element).zIndex()
        }),
        pendingDropCallbacks.length > 0 && pendingDropCallbacks[0].callback(),
        pendingDropCallbacks = []
    };
    d20.uploader = {},
    $(function() {
        $(document).on("click", ".dropbox .btn", function() {
            $(this).siblings(".manual").click()
        })
    }),
    function(e) {
        const t = "/js/d20/ffmpeg-worker-webm.3.js";
        new Worker(t);
        var n = {
            init: function(i) {
                return this.each(function() {
                    let o = e(this)
                      , r = this;
                    e.each(i, function(e, t) {
                        o.data(e, t)
                    }),
                    this.uploadFailed = function() {
                        o.find(".status").html("<div class='alert alert-danger'>An error occurred. Please try again.</div>"),
                        o.trigger("uploadfailed")
                    }
                    ,
                    this.uploadCanceled = function() {
                        o.find(".status").html("<div class='alert alert-danger'>The upload was canceled or your connection was interrupted.</div>"),
                        o.trigger("uploadcanceled")
                    }
                    ,
                    this.doTransfer = function(n) {
                        o.find(".status").append("<div class='progress progress-striped active'><div class='bar' style='width: 0%;'></div></div>"),
                        o.trigger("uploadstarted");
                        let i = function(e, t) {
                            for (var n = atob(e.split(",")[1]), i = (e.split(",")[0].split(":")[1].split(";")[0],
                            new ArrayBuffer(n.length)), o = new Uint8Array(i), r = 0; r < n.length; r++)
                                o[r] = n.charCodeAt(r);
                            t(i)
                        }
                          , r = function(e, t) {
                            var n, i, o = new Uint8Array(e), r = o.length, a = 0;
                            if (71 !== o[0] || 73 !== o[1] || 70 !== o[2] || 56 !== o[3])
                                return console.log("Failstate: Detected as not gif?"),
                                void t(!1);
                            for (n = 0,
                            i = r - 3; n < i && a < 2; ++n)
                                0 === o[n] && 33 === o[n + 1] && 249 === o[n + 2] && (blocklength = o[n + 3],
                                afterblock = n + 4 + blocklength,
                                afterblock + 1 < r && 0 === o[afterblock] && (44 === o[afterblock + 1] || 33 === o[afterblock + 1]) && a++);
                            t(a > 1)
                        }
                          , a = function(e, t) {
                            let n = new XMLHttpRequest;
                            return "withCredentials"in n ? n.open(e, t, !0) : "undefined" != typeof XDomainRequest ? (n = new XDomainRequest).open(e, t) : n = null,
                            n
                        };
                        n.files.length > 0 ? e.each(n.files, function(s, l) {
                            let c = {};
                            if (c.multiUploadNum = s,
                            c.multiUploadTotal = n.files.length,
                            !1 === o.data("allowMultiple") && s > 0)
                                return !1;
                            if (l.size > (!0 === window.largefeats ? 10485760 : 5242880))
                                return void o.trigger("uploadfailed");
                            c.size = l.size,
                            c.width = 200,
                            c.height = 200;
                            let u = this
                              , d = l.type || "application/octet-stream"
                              , h = l.name || l.fileName || "";
                            h = h.toLowerCase(),
                            -1 === d.indexOf("image/gif") && -1 === d.indexOf("video/") || (h = h.replace(/\.[^\.]+$/, ".webm")),
                            c.filename = h;
                            let p, f, g = null, m = function(e) {
                                let t = new XMLHttpRequest;
                                t.upload;
                                t.addEventListener("error", u.uploadFailed, !1),
                                t.addEventListener("abort", u.uploadCanceled, !1),
                                t.open(o.data("method") || "POST", o.data("url") + "/?pn=" + e, !0),
                                t.setRequestHeader("X-Requested-With", "XMLHttpRequest"),
                                t.onload = function(e) {
                                    o.find(".bar").css("width", "100%");
                                    let t = JSON.parse(e.target.response);
                                    if (t) {
                                        let e = {
                                            base: t[0].url.split("?")[0],
                                            width: t[0].width,
                                            height: t[0].height
                                        };
                                        o.trigger("uploadcomplete", [e])
                                    } else
                                        o.trigger("uploadcomplete", [e.target.response])
                                }
                                ,
                                t.upload.onprogress = function(e) {
                                    if (e.lengthComputable) {
                                        let t = Math.round(100 * e.loaded / e.total);
                                        o.trigger("uploadprogress", t)
                                    } else
                                        o.find(".progress").remove()
                                }
                                ;
                                let n = new FormData;
                                n.append("filecontents", l),
                                t.send(n)
                            }, y = [], v = !1;
                            -1 !== d.indexOf("image/gif") || -1 !== d.indexOf("video/") ? (y = [[100, 100, "mini"], [2048, 2048, "frame"], [200, 200, "thumb"], [512, 512, "med"]],
                            console.log("Is Video; sizeArray:", y)) : (y = [[100, 100, "mini"], [200, 200, "thumb"], [512, 512, "med"], [2048, 2048, "max"], [1e4, 1e4, "original"]],
                            console.log("Not Video; sizeArray:", y));
                            let b = 0
                              , w = document.createElement("img")
                              , x = new FileReader;
                            x.onload = function(e) {
                                w.src = e.target.result,
                                console.log("Reader load!"),
                                -1 !== e.target.result.indexOf("video/") && w.onload()
                            }
                            ,
                            f = (p = document.createElement("canvas")).getContext("2d");
                            let k = function(n) {
                                let o = y[n][0]
                                  , a = y[n][1]
                                  , s = w.width
                                  , u = w.height
                                  , h = document.createElement("canvas")
                                  , p = h.getContext("2d");
                                console.log("Uploading a size: " + o + "x" + a),
                                s > u ? s > o && (u *= o / s,
                                s = o) : u > a && (s *= a / u,
                                u = a);
                                let f = !0;
                                if (-1 !== w.src.indexOf("image/gif") && i(w.src, e=>{
                                    r(e, e=>{
                                        f = e
                                    }
                                    )
                                }
                                ),
                                -1 !== w.src.indexOf("image/gif") && f || -1 !== w.src.indexOf("video/")) {
                                    (function(e, r) {
                                        var a = ""
                                          , s = ""
                                          , l = new Worker(t);
                                        l.onmessage = function(t) {
                                            var c, u = t.data;
                                            switch (u.type) {
                                            case "ready":
                                                ffargs = [],
                                                ffargs.push("-i", e.name),
                                                "mini" == y[n][2] ? ffargs.push("-vf", "scale=min'(" + o + ",iw)':-1", "-an", "-vframes", "1", "sample.png") : "frame" == y[n][2] ? ffargs.push("-vf", "scale=min'(" + o + ",iw)':-1", "-an", "-vframes", "1", "frame.png") : (ffargs.push("-c:v", "libvpx", "-pix_fmt", "yuva420p", "-auto-alt-ref", "0", "-an"),
                                                "thumb" == y[n][2] ? ffargs.push("-b:v", "200k") : ffargs.push("-crf", "10", "-b:v", "800k"),
                                                ffargs.push(y[n][2] + ".webm")),
                                                i(w.src, t=>{
                                                    l.postMessage({
                                                        type: "run",
                                                        MEMFS: [{
                                                            name: e.name,
                                                            data: t
                                                        }],
                                                        arguments: ffargs,
                                                        TOTAL_MEMORY: 268435456
                                                    })
                                                }
                                                );
                                                break;
                                            case "stdout":
                                                a += u.data + "\n";
                                                break;
                                            case "stderr":
                                                s += u.data + "\n";
                                                break;
                                            case "done":
                                                c = u.data.MEMFS[0].data;
                                                var d = new Blob([c],{
                                                    type: "video/vp8"
                                                });
                                                r([d]),
                                                l.terminate();
                                                break;
                                            case "exit":
                                                console.log("Process exited with code " + u.data),
                                                u.data && console.log(s),
                                                console.log(a);
                                                break;
                                            case "error":
                                                console.log("FFMpeg encountered an error.  stderr output: ", s),
                                                console.log(u.data),
                                                l.terminate()
                                            }
                                        }
                                    }
                                    )(l, t=>{
                                        _.each(t, t=>{
                                            w.src.includes("video/webm") && "thumb" == y[n][2] && t && t.size > 0 && (v = !0);
                                            let i = t
                                              , o = "";
                                            o = d20 && d20.library && d20.library.libraryBase ? d20.library.libraryBase + "/image_library/s3putsign/" : "/image_library/s3putsign/";
                                            let r = "mini" == y[n][2]
                                              , a = "frame" == y[n][2];
                                            if (a) {
                                                let e = new FileReader;
                                                e.onload = function() {
                                                    var t = new Image;
                                                    t.onload = function() {
                                                        c.width = t.width,
                                                        c.height = t.height
                                                    }
                                                    ,
                                                    t.src = e.result
                                                }
                                                ,
                                                e.readAsDataURL(i)
                                            }
                                            let s = r ? "sample.png" : a ? "frame.png" : y[n][2] + ".webm";
                                            e.post(o + c.imageid, {
                                                name: s,
                                                type: "video/vp8",
                                                size: i.size
                                            }, function(e) {
                                                g = JSON.parse(e),
                                                c.url = g.base + g.additional,
                                                c.base = g.base,
                                                E(i)
                                            })
                                        }
                                        )
                                    }
                                    )
                                } else
                                    h.width = s,
                                    h.height = u,
                                    p.drawImage(w, 0, 0, s, u),
                                    h.toBlob(function(t) {
                                        let i = "";
                                        i = d20 && d20.library && d20.library.libraryBase ? d20.library.libraryBase + "/image_library/s3putsign/" : "/image_library/s3putsign/",
                                        e.post(i + c.imageid, {
                                            name: y[n][2] + (-1 !== d.indexOf("png") ? ".png" : ".jpg"),
                                            type: d,
                                            size: t.size
                                        }, function(e) {
                                            g = JSON.parse(e),
                                            c.url = g.base + g.additional,
                                            c.base = g.base,
                                            c.width = s,
                                            c.height = u,
                                            E(t)
                                        })
                                    }, d)
                            }
                              , E = function(e, t=!1) {
                                let n = a("PUT", c.url)
                                  , i = (n.upload,
                                d);
                                -1 !== e.type.indexOf("video/") && (i = e.type),
                                n.setRequestHeader("X-Requested-With", "XMLHttpRequest"),
                                n.setRequestHeader("Content-Type", i),
                                n.setRequestHeader("Cache-Control", "max-age=31104000,public"),
                                n.setRequestHeader("x-amz-acl", "public-read"),
                                t || (n.onload = function() {
                                    o.find(".bar").css("width", "100%"),
                                    c.numCompleted++,
                                    c.numCompleted >= c.numToComplete ? setTimeout(function() {
                                        o.trigger("uploadcomplete", c)
                                    }, 250) : k(c.numCompleted)
                                }
                                ,
                                n.upload.onprogress = function(e) {
                                    if (e.lengthComputable) {
                                        let t = Math.round(100 * e.loaded / e.total);
                                        t *= c.numCompleted / c.numToComplete,
                                        t = Math.max(t, b),
                                        b = t,
                                        o.find(".bar").css("width", t + "%"),
                                        o.trigger("uploadprogress", t)
                                    } else
                                        o.find(".progress").remove()
                                }
                                ),
                                n.addEventListener("error", u.uploadFailed, !1),
                                n.addEventListener("abort", u.uploadCanceled, !1),
                                n.send(e)
                            };
                            if (-1 !== l.type.indexOf("pdf")) {
                                var S = e("<div></p>It looks like you're uploading a PDF. We'll convert it into an image for you, but we need to know what page you want to use (you can upload multiple times to do multiple pages). If it's a single-page PDF, just leave this set to 1.</p><p>Page Number: <input type='text' value='1' style='width: 50px;' /></p></div>");
                                S.dialog({
                                    modal: !0,
                                    width: 300,
                                    title: "PDF Page Number?",
                                    buttons: {
                                        Continue: function() {
                                            m(parseInt(S.find("input").val(), 10) - 1),
                                            S.dialog("destroy").remove(),
                                            S = !1
                                        },
                                        Cancel: function() {
                                            S.dialog("destroy").remove(),
                                            S = !1
                                        }
                                    },
                                    beforeClose: function() {
                                        S.dialog("destroy").remove(),
                                        S = !1
                                    }
                                })
                            } else
                                b = 0,
                                w.onload = function() {
                                    let n = !0;
                                    if (-1 !== w.src.indexOf("image/gif") && i(w.src, e=>{
                                        r(e, e=>{
                                            n = e
                                        }
                                        )
                                    }
                                    ),
                                    n || (y = [[100, 100, "mini"], [200, 200, "thumb"], [512, 512, "med"], [2048, 2048, "max"], [1e4, 1e4, "original"]],
                                    h = h.replace(/\.[^\.]+$/, ".jpg"),
                                    console.log("Gif is not Video; Recover as image; sizearray:", y)),
                                    -1 !== w.src.indexOf("image/gif") && n || -1 !== w.src.indexOf("video/")) {
                                        (function(e, n) {
                                            var o = ""
                                              , r = ""
                                              , a = new Worker(t);
                                            a.onmessage = function(t) {
                                                var s, l = t.data;
                                                switch (l.type) {
                                                case "ready":
                                                    i(w.src, t=>{
                                                        a.postMessage({
                                                            type: "run",
                                                            MEMFS: [{
                                                                name: e.name,
                                                                data: t
                                                            }],
                                                            arguments: ["-i", e.name, "-vcodec", "libvpx", "-vframes", "1", "-an", "snip.webm"],
                                                            TOTAL_MEMORY: 268435456
                                                        })
                                                    }
                                                    );
                                                    break;
                                                case "stdout":
                                                    o += l.data + "\n";
                                                    break;
                                                case "stderr":
                                                    r += l.data + "\n";
                                                    break;
                                                case "done":
                                                    s = l.data.MEMFS[0].data;
                                                    var c = new Blob([s],{
                                                        type: "video/vp8"
                                                    });
                                                    n([c]),
                                                    a.terminate();
                                                    break;
                                                case "exit":
                                                    console.log("Process exited with code " + l.data),
                                                    l.data && console.log(r),
                                                    console.log(o);
                                                    break;
                                                case "error":
                                                    console.log("FFMpeg encountered an error.  stderr output: ", r),
                                                    console.log(l.data),
                                                    a.terminate()
                                                }
                                            }
                                        }
                                        )(l, t=>{
                                            _.each(t, ()=>{
                                                let t = "";
                                                t = d20 && d20.library && d20.library.libraryBase ? d20.library.libraryBase + "/image_library/reqimage" : "/image_library/reqimage",
                                                e.post(t, {
                                                    name: h,
                                                    type: "video/vp8",
                                                    size: l.size
                                                }, function(e) {
                                                    "overquota" !== e && "toolarge" !== e ? (c.imageid = e,
                                                    c.numToComplete = y.length,
                                                    c.numCompleted = 0,
                                                    c.filename = h,
                                                    k(0)) : o.trigger("uploadcomplete", [e])
                                                })
                                            }
                                            )
                                        }
                                        )
                                    } else {
                                        let t = "beta" === d20ext.environment ? "https://app.roll20.net/image_library/reqimage" : "/image_library/reqimage";
                                        console.log(h),
                                        e.post(t, {
                                            name: h,
                                            type: d,
                                            size: l.size
                                        }, function(e) {
                                            console.log(e),
                                            "overquota" !== e && "toolarge" !== e ? (c.imageid = e,
                                            c.numToComplete = y.length,
                                            c.numCompleted = 0,
                                            c.filename = h,
                                            k(0)) : o.trigger("uploadcomplete", [e])
                                        })
                                    }
                                }
                                ,
                                x.readAsDataURL(l)
                        }) : o.trigger("uploadfailed")
                    }
                    ,
                    o.bind("dragenter.dndUploader", n.dragEnter),
                    o.bind("dragover.dndUploader", n.dragOver),
                    o.bind("drop.dndUploader", n.drop),
                    o.bind("triggermanual", function() {
                        r.doTransfer(o.find(".manual")[0])
                    });
                    var a = o.children(".inner");
                    a.length > 0 && a.find(".manual").bind("change", _.bind(n.manualUpload, this))
                })
            },
            dragEnter: function(e) {
                if (!(e.namespace !== undefined || e.dataTransfer && e.dataTransfer.types && -1 !== e.dataTransfer.types[0].indexOf("text")))
                    return e.stopPropagation(),
                    e.preventDefault(),
                    !1
            },
            dragOver: function(e) {
                if (!(e.namespace !== undefined || e.dataTransfer && e.dataTransfer.types && -1 !== e.dataTransfer.types[0].indexOf("text")))
                    return e.stopPropagation(),
                    e.preventDefault(),
                    !1
            },
            drop: function(t) {
                if (!(t.namespace !== undefined || t.originalEvent.dataTransfer && 0 == t.originalEvent.dataTransfer.files.length || t.dataTransfer && t.dataTransfer.types && -1 !== t.dataTransfer.types[0].indexOf("text"))) {
                    console.log("DROP ON FILE UPLOAD"),
                    t.stopPropagation(),
                    t.preventDefault(),
                    d20.uploader.lastDropX = t.originalEvent.pageX,
                    d20.uploader.lastDropY = t.originalEvent.pageY;
                    e(this);
                    var n = t.originalEvent.dataTransfer;
                    return this.doTransfer(n),
                    !1
                }
            },
            manualUpload: function(t) {
                t.stopPropagation(),
                this.doTransfer(e(this).children(".inner").find(".manual")[0])
            }
        };
        e.fn.dndUploader = function(t) {
            return n[t] ? n[t].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof t && t ? void e.error("Method " + t + " does not exist on jQuery.dndUploader") : n.init.apply(this, arguments)
        }
    }(jQuery),
    /*! @source http://purl.eligrey.com/github/canvas-toBlob.js/blob/master/canvas-toBlob.js */
    function(e) {
        "use strict";
        var t, n = e.Uint8Array, i = e.HTMLCanvasElement, o = i && i.prototype, r = /\s*;\s*base64\s*(?:;|$)/i, a = "toDataURL", s = function(e) {
            for (var i, o, r, a = e.length, s = new n(a / 4 * 3 | 0), l = 0, c = 0, u = [0, 0], d = 0, h = 0; a--; )
                o = e.charCodeAt(l++),
                255 !== (i = t[o - 43]) && i !== r && (u[1] = u[0],
                u[0] = o,
                h = h << 6 | i,
                4 === ++d && (s[c++] = h >>> 16,
                61 !== u[1] && (s[c++] = h >>> 8),
                61 !== u[0] && (s[c++] = h),
                d = 0));
            return s
        };
        n && (t = new n([62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, 0, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51])),
        i && !o.toBlob && (o.toBlob = function(e, t) {
            if (t || (t = "image/png"),
            this.mozGetAsFile)
                e(this.mozGetAsFile("canvas", t));
            else if (this.msToBlob && /^\s*image\/png\s*(?:$|;)/i.test(t))
                e(this.msToBlob());
            else {
                var i, o = Array.prototype.slice.call(arguments, 1), l = this[a].apply(this, o), c = l.indexOf(","), u = l.substring(c + 1), d = r.test(l.substring(0, c));
                Blob.fake ? ((i = new Blob).encoding = d ? "base64" : "URI",
                i.data = u,
                i.size = u.length) : n && (i = d ? new Blob([s(u)],{
                    type: t
                }) : new Blob([decodeURIComponent(u)],{
                    type: t
                })),
                e(i)
            }
        }
        ,
        o.toDataURLHD ? o.toBlobHD = function() {
            a = "toDataURLHD";
            var e = this.toBlob();
            return a = "toDataURL",
            e
        }
        : o.toBlobHD = o.toBlob)
    }("undefined" != typeof self && self || "undefined" != typeof window && window || this.content || this),
    d20.namegen = !1,
    function() {
        function e(e, t) {
            for (var n; ; )
                if ((n = Math.floor(Math.random() * (t - e + 1) + e)) >= e && n <= t)
                    return n
        }
        var t = new Array(["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["a", 7],["e", 7],["i", 7],["o", 7],["u", 7],["ae", 7],["ai", 7],["ao", 7],["au", 7],["aa", 7],["ea", 7],["eo", 7],["eu", 7],["ee", 7],["ia", 7],["io", 7],["iu", 7],["ii", 7],["oa", 7],["oe", 7],["oi", 7],["ou", 7],["oo", 7],["eau", 7],["'", 4],["y", 7])
          , n = new Array(["b", 7],["c", 7],["d", 7],["f", 7],["g", 7],["h", 7],["j", 7],["k", 7],["l", 7],["m", 7],["n", 7],["p", 7],["qu", 6],["r", 7],["s", 7],["t", 7],["v", 7],["w", 7],["x", 7],["y", 7],["z", 7],["sc", 7],["ch", 7],["gh", 7],["ph", 7],["sh", 7],["th", 7],["wh", 6],["ck", 5],["nk", 5],["rk", 5],["sk", 7],["wk", 0],["cl", 6],["fl", 6],["gl", 6],["kl", 6],["ll", 6],["pl", 6],["sl", 6],["br", 6],["cr", 6],["dr", 6],["fr", 6],["gr", 6],["kr", 6],["pr", 6],["sr", 6],["tr", 6],["ss", 5],["st", 7],["str", 6],["b", 7],["c", 7],["d", 7],["f", 7],["g", 7],["h", 7],["j", 7],["k", 7],["l", 7],["m", 7],["n", 7],["p", 7],["r", 7],["s", 7],["t", 7],["v", 7],["w", 7],["b", 7],["c", 7],["d", 7],["f", 7],["g", 7],["h", 7],["j", 7],["k", 7],["l", 7],["m", 7],["n", 7],["p", 7],["r", 7],["s", 7],["t", 7],["v", 7],["w", 7],["br", 6],["dr", 6],["fr", 6],["gr", 6],["kr", 6])
          , i = function(i, o) {
            i == undefined && (i = 3),
            o == undefined && (o = 6);
            for (var r = "", a = "", s = e(i, o), l = e(0, 1), c = 1; c <= s; c++) {
                for (; ; )
                    if (r = l ? t[e(0, t.length - 1)] : n[e(0, n.length - 1)],
                    1 == c) {
                        if (2 & r[1])
                            break
                    } else if (c == s) {
                        if (1 & r[1])
                            break
                    } else if (4 & r[1])
                        break;
                a += r[0],
                l = 1 - l
            }
            return a = a.slice(0, 1).toUpperCase() + a.slice(1)
        };
        d20.namegen = i
    }(),
    $(function() {
        var e;
        $("#manageimagelibrary").on("click", function() {
            var e = 930
              , t = 800
              , n = $(window).height() - 100;
            n > t && (n = t);
            var i = $(window).width() - 50;
            i > e && (i = e);
            var o = $("<div id='imagelibrarypopup'><iframe src='https://marketplace.roll20.net/library/?inapp=true' width='" + i + "' height='" + (n - 90) + "' frameborder='0'></iframe></div>");
            o.dialog({
                modal: !1,
                title: "Your Library | <a href='https://marketplace.roll20.net/' target='_blank' style='color: #80C;'>Go to the Marketplace &rarr;</a>",
                beforeClose: function() {
                    o.dialog("destroy").remove()
                },
                width: i + 40,
                height: n,
                zIndex: 11e3
            })
        }),
        $("#imagedialog").on("click", "a.buyart", function() {
            var t = 940
              , n = 550
              , i = $(window).height() - d20.utils.playerZoneHeight();
            i > n && (i = n),
            e && e.dialog("destroy").remove(),
            e = $("<div><iframe src='" + $(this).attr("data-href") + "' width='" + t + "' height='" + (i - 75) + "' frameborder='0'></iframe></div>").dialog({
                modal: !1,
                title: "Purchase Asset",
                beforeClose: function() {
                    $(this).dialog("destroy").remove(),
                    e = !1
                },
                width: t + 60,
                height: i + 20
            })
        }),
        d20.engine.marketplaceDrop = {
            lastDrop: !1
        },
        d20.engine.marketplaceDrop.doDrop = function(e, t) {
            $("#imagelibrarypopup").parents(".ui-dialog").removeClass("collapsed");
            var n = Math.floor(e / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom)
              , i = Math.floor((t - Math.floor(d20.engine.marketplaceDrop.lastDrop.height / 2)) / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom)
              , o = Math.floor(d20.engine.pageWidth / d20.engine.canvasZoom) - 5
              , r = Math.floor(d20.engine.pageHeight / d20.engine.canvasZoom) - 5;
            n > o && (n = o),
            i > r && (i = r),
            i < 0 && (i = 0),
            n < 0 && (n = 0);
            var a = d20.engine.marketplaceDrop.lastDrop.width
              , s = d20.engine.marketplaceDrop.lastDrop.height;
            0 != d20.engine.snapTo && "map" != window.currentEditingLayer && (a = d20.engine.snapTo,
            s = d20.engine.snapTo);
            var l = {
                x: n,
                y: i,
                width: a,
                height: s,
                imgsrc: d20.engine.marketplaceDrop.lastDrop.src,
                imgwidth: a,
                imgheight: s,
                represents: ""
            };
            console.log(l);
            d20.Campaign.activePage().addImage(l, !1, !1);
            d20.engine.marketplaceDrop.lastDrop = !1
        }
        ;
        var t = function(t) {
            if (console.log("MESSAGE RECEIVED"),1
            console.log(t),
            "setpurchased" == t.data && "https://marketplace.roll20.net" == t.origin)
                $("#imagedialog .keywords").trigger("keyup"),
                e.dialog("destroy"),
                e = !1;
            else if ("string" == typeof t.data && "{" == t.data.substring(0, 1) && "https://marketplace.roll20.net" == t.origin) {
                var n = JSON.parse(t.data)
                  , i = $("#imagelibrarypopup").parents(".ui-dialog");
                "dragstart" == n.type ? (i.addClass("collapsed"),
                d20.engine.marketplaceDrop.lastDrop = n) : "dragend" == n.type && d20.engine.marketplaceDrop.doDrop(n.x, n.y)
            }
        };
        window.addEventListener("message", t, !1)
    }),
    $("#secondary-toolbar").on("mousedown mouseup mousemove touchstart touchmove touchend", function(e) {
        e.stopPropagation()
    });
    var $body = $("body");
    $("body").on("shape_selected", "#editor", function(e, t) {
        if ("select" == d20.engine.mode) {
            if ($("#secondary-toolbar").hide(),
            $("#secondary-toolbar .mode").hide(),
            "image" == t.type) {
                if ($body.addClass("tokenselected"),
                1 != d20.engine.selected().length || "objects" != window.currentEditingLayer && "gmlayer" != window.currentEditingLayer ? ($("#radial-menu input").trigger("blur"),
                d20.token_editor.removeRadialMenu()) : d20.token_editor.showRadialMenu(t),
                t.model) {
                    var n = [];
                    if ("" !== t.model.get("represents")) {
                        var i = d20.Campaign.characters.get(t.model.get("represents"));
                        i && (i.abilities.each(function(e) {
                            if (!0 !== e.get("istokenaction"))
                                return !0;
                            n.push({
                                type: "ability",
                                macroid: i.id + "|" + e.id,
                                name: e.get("name"),
                                abilid: e.id
                            })
                        }),
                        d20.journal.customSheets && d20.journal.customSheets.tokenActions && _.each(d20.journal.customSheets.tokenActions, function(e) {
                            n.push({
                                type: "ability",
                                macroid: "selected|" + e,
                                name: e
                            })
                        }))
                    }
                    if (d20.Campaign.players.each(function(e) {
                        e.macros.each(function(t) {
                            !0 !== t.get("istokenaction") || e.id != window.currentPlayer.id && !t.visibleToCurrentPlayer() || n.push({
                                type: "macro",
                                name: t.get("name"),
                                macroid: e.id + "|" + t.id
                            })
                        })
                    }),
                    i)
                        var o = i.get("abilorder").split(",");
                    (n = currentPlayer.get("alphatokenactions") ? _.sortBy(n, function(e) {
                        return e.name.toLowerCase()
                    }) : _.sortBy(n, function(e) {
                        return "macro" === e.type ? "2" + e.name : i && o ? o.indexOf(e.abilid) : "1"
                    })).length > 0 && ($("#secondary-toolbar").show(),
                    $("#secondary-toolbar .tokenactions").html($("#tmpl_tokenactions").jqote({
                        actions: n
                    })).show())
                }
                return
            }
            $body.removeClass("tokenselected"),
            d20.token_editor.removeRadialMenu(),
            $("#secondary-toolbar").show(),
            $("#secondary-toolbar ." + t.type).show()
        }
    }),
    $("body").on("nothing_selected", "#editor", function() {
        $body.removeClass("tokenselected"),
        "select" == d20.engine.mode && ($("#secondary-toolbar .mode").hide(),
        $("#secondary-toolbar").hide(),
        $(".colorpicker").colorPicker.hide(),
        $("#radial-menu input").trigger("blur"),
        d20.token_editor.removeRadialMenu()),
        d20.engine.lightOnlySelected = !1
    }),
    $(document).ready(function() {
        $("#select").on(clicktype, onSelect),
        $("#measure li").on(clicktype, function(e) {
            $(e.target).parent().children(".activerulermode").removeClass("activerulermode"),
            $(e.target).addClass("activerulermode"),
            $(e.target).hasClass("rulervisibility") ? d20.engine.measure.hide = "hide" === e.target.attributes.mode.value : ($("#measuretoolicon").attr("src", $(e.target).children("img").attr("src")),
            d20.engine.ruler_snapping = e.target.attributes.mode.value)
        }),
        $("#measure").on(clicktype, function() {
            setMode("measure")
        });
        const e = $("#floatingtoolbar #fxtools");
        d20.canvas_overlay.gl.active ? e.on(clicktype, function() {
            setMode("fxtools")
        }) : (e.prop("disabled", !0),
        e.prop("title", i18n("toolbar_fx_need_webgl")),
        e.addClass("disabled"),
        e.tipsy({
            live: !0,
            gravity: "w",
            opacity: 1,
            html: !0
        })),
        $("#rect").on(clicktype, onRect),
        $("#path").on(clicktype, onPath),
        $("#text").on(clicktype, onText),
        $("#editinglayer").on(clicktype, "li", function() {
            var e = $(this);
            $("#editinglayer").removeClass(window.currentEditingLayer),
            $("#drawingtools .choosepath").show(),
            "polygon" !== d20.engine.mode && $("#drawingtools").hasClass("polygon") && $("#drawingtools").removeClass("polygon").addClass("path"),
            e.hasClass("chooseobjects") ? window.currentEditingLayer = "objects" : e.hasClass("choosemap") ? window.currentEditingLayer = "map" : e.hasClass("choosegmlayer") ? window.currentEditingLayer = "gmlayer" : e.hasClass("choosewalls") && (window.currentEditingLayer = "walls",
            $("#drawingtools .choosepath").hide(),
            "path" !== d20.engine.mode && $("#drawingtools").removeClass("path").addClass("polygon")),
            $("#editinglayer").addClass(window.currentEditingLayer),
            $(document).trigger("d20:editingLayerChanged")
        }),
        $("#zoompanel").on("change", "select", function() {
            var e = parseInt($(this).val(), 10) / 100;
            d20.engine.setZoom(e)
        }),
        $("#zoompanel select").val("100"),
        $("#fogcontrols").on(clicktype, function() {
            d20.engine.fog.points = [],
            $(this).hasClass("reveal") ? setMode("fog-reveal") : $(this).hasClass("polygonreveal") ? setMode("fog-polygonreveal") : setMode("fog-hide")
        }),
        $("#fogcontrols .choosereveal").on(clicktype, function() {
            $("#fogcontrols").removeClass("hide").removeClass("polygonreveal").addClass("reveal")
        }),
        $("#fogcontrols .choosepolygonreveal").on(clicktype, function() {
            $("#fogcontrols").removeClass("hide").removeClass("reveal").addClass("polygonreveal")
        }),
        $("#fogcontrols .choosehide").on(clicktype, function() {
            $("#fogcontrols").removeClass("reveal").removeClass("polygonreveal").addClass("hide")
        }),
        $("#fogcontrols .chooseclearfog").on(clicktype, function() {
            var e = $("<div>Are you sure you want to delete all revealed areas and reset the map back to completely hidden?</div>");
            return e.dialog({
                title: "Confirm Reset",
                modal: !0,
                buttons: {
                    "Reset Fog": function() {
                        d20.engine.clearPageFog(),
                        d20.textchat.sendShout({
                            type: "reset_local_afow",
                            time: Date.now()
                        }),
                        e.dialog("destroy").remove()
                    },
                    Cancel: function() {
                        e.dialog("destroy").remove()
                    }
                },
                beforeClose: function() {
                    e.dialog("destroy").remove()
                }
            }),
            !1
        }),
        $("#drawingtools .chooserect").on(clicktype, function() {
            return setMode("rect"),
            !1
        }),
        $("#drawingtools .choosetext").on(clicktype, function() {
            return setMode("text"),
            !1
        }),
        $("#drawingtools .choosepath").on(clicktype, function() {
            return setMode("path"),
            !1
        }),
        $("#drawingtools .choosedrawselect").on(clicktype, function() {
            $("#drawingtools").removeClass("text path").addClass("drawselect")
        }),
        $("#drawingtools .choosepolygon").on(clicktype, function() {
            return setMode("polygon"),
            !1
        }),
        $("#drawingtools .choosecleardrawings").on(clicktype, function() {
            var e = $("<div>Are you sure you want to delete all drawings, text, and images marked as drawings on the current layer? This cannot be undone.</div>");
            return e.dialog({
                title: "Confirm Clear",
                modal: !0,
                buttons: {
                    Clear: function() {
                        setMode("select"),
                        d20.engine.unselect(),
                        d20.engine.selectAll(!0);
                        var t = d20.engine.selected();
                        d20.engine.canvas.deactivateAllWithDispatch();
                        for (var n = 0; n < t.length; n++)
                            t[n].model.destroy();
                        e.dialog("destroy").remove()
                    },
                    Cancel: function() {
                        e.dialog("destroy").remove()
                    }
                },
                beforeClose: function() {
                    e.dialog("destroy").remove()
                }
            }),
            !1
        }),
        $("#drawingtools").on(clicktype, function() {
            $(this).hasClass("rect") ? setMode("rect") : $(this).hasClass("text") ? setMode("text") : $(this).hasClass("path") ? setMode("path") : $(this).hasClass("drawselect") ? setMode("drawselect") : $(this).hasClass("polygon") && setMode("polygon")
        }),
        $("#select .chooseselect").on(clicktype, function() {
            return setMode("select"),
            !1
        }),
        $("#select .choosepan").on(clicktype, function() {
            return setMode("pan"),
            !1
        }),
        $("#helpsite").on(clicktype, function() {
            $(window).height(),
            $(window).width();
            window.open("https://wiki.roll20.net")
        }),
        $("#helpsite .showshortcuts").on(clicktype, function() {
            return -1 != navigator.appVersion.indexOf("Mac") ? $("#shortcut-help").find(".platform-pc").hide() : $("#shortcut-help").find(".platform-mac").hide(),
            $("#shortcut-help").dialog({
                title: "Keyboard Shortcuts",
                width: 700
            }),
            !1
        }),
        $("#helpsite .showbugs").on(clicktype, function() {
            $(window).height(),
            $(window).width();
            return window.open("https://app.roll20.net/forum/category/18"),
            !1
        }),
        $("#editor").on("showhelp", function() {
            var e = $($("#tmpl_help_overview").jqote());
            e.appendTo("body"),
            e.dialog({
                title: "Welcome to Roll20!",
                width: 680,
                height: 530,
                zIndex: 10005,
                beforeClose: function() {
                    e.dialog("destroy").remove()
                }
            }),
            e.on("click", "a.noshow", function() {
                $.post("/editor/disable_tutorial/startvideo"),
                e.dialog("destroy")
            })
        });
        var t = $("#dicerollerdialog");
        $("#diceroller .quickdice .basicroll").on(clicktype, function(e) {
            e.stopPropagation();
            let t = $(this).attr("data-dice")
              , n = "true" === $(".quickdice-toggle[data-toggle-type='gmroll']").attr("data-toggle");
            "true" === $(".quickdice-toggle[data-toggle-type='exploding']").attr("data-toggle") ? t += "!" : "true" === $(".quickdice-toggle[data-toggle-type='compounding']").attr("data-toggle") ? t += "!!" : "true" === $(".quickdice-toggle[data-toggle-type='penetrating']").attr("data-toggle") && (t += "!p"),
            t = "true" === $(".quickdice-toggle[data-toggle-type='inline']").attr("data-toggle") ? n ? "/w GM [[" + t + "]]" : "[[" + t + "]]" : n ? "/gmroll " + t : "/roll " + t,
            d20.textchat.doChatInput(t)
        }),
        $("#diceroller .quickdice .quickdice-toggle").on(clicktype, function(e) {
            e.stopPropagation();
            let t = $(this)
              , n = "true" === t.attr("data-toggle") ? "false" : "true"
              , i = t.attr("data-group");
            void 0 !== i && $(".quickdice-toggle[data-group='" + i + "'").attr("data-toggle", "false"),
            localStorage.setItem(window.campaign_id + "-" + t.attr("data-toggle-type"), n),
            t.attr("data-toggle", "" + n)
        });
        let n = localStorage.getItem(window.campaign_id + "-exploding")
          , i = localStorage.getItem(window.campaign_id + "-compounding")
          , o = localStorage.getItem(window.campaign_id + "-penetrating")
          , r = localStorage.getItem(window.campaign_id + "-inline")
          , a = localStorage.getItem(window.campaign_id + "-gmroll");
        $(".quickdice-toggle[data-toggle-type='exploding']").attr("data-toggle", n || "false"),
        $(".quickdice-toggle[data-toggle-type='compounding']").attr("data-toggle", i || "false"),
        $(".quickdice-toggle[data-toggle-type='penetrating']").attr("data-toggle", o || "false"),
        $(".quickdice-toggle[data-toggle-type='gmroll']").attr("data-toggle", a || "false"),
        $(".quickdice-toggle[data-toggle-type='inline']").attr("data-toggle", r || "false"),
        $("#diceroller").on(clicktype, function() {
            var e = 600
              , n = $(window).height() - 200;
            n > e && (n = e),
            t.dialog({
                title: "Dice Roller",
                width: 375,
                height: n,
                position: ["center", 30],
                beforeClose: function() {
                    t.dialog("destroy")
                }
            })
        }),
        t.on(clicktype, ".basicroll", function() {
            var e = $(this).attr("data-dice");
            d20.textchat.doChatInput("/roll 1" + e)
        }),
        t.on(clicktype, "button.rolladvanced", function() {
            var e = t.find(".numdice").val()
              , n = t.find("select.dicetype").val()
              , i = t.find(".addition").val()
              , o = t.find("input[name=exploding]:checked").val()
              , r = "" == t.find(".targetnum").val() ? "" : t.find(".targettype").val() + t.find(".targetnum").val();
            "" != r ? d20.textchat.doChatInput("/roll {" + e + n + o + ("0" != i ? " + " + i : "") + "}" + r) : d20.textchat.doChatInput("/roll " + e + n + o + ("0" != i ? " + " + i : ""))
        }),
        t.on(clicktype, "button.reroll", function() {
            var e = $.trim($(this).parents("tr").find("td.formula").text());
            d20.textchat.doChatInput("/roll " + e)
        }),
        $("#switchtoview").on("click", function() {
            window.location = "/editor/setcampaign/" + campaign_id + "/read"
        }),
        $("#switchtoedit").on("click", function() {
            window.location = "/editor/setcampaign/" + campaign_id + "/edit"
        }),
        $("#rightsidebar").tabs(),
        $("#rightsidebar").on("tabsselect", function(e, t) {
            if ("#textchat" == $(t.tab).attr("href")) {
                if ($("#textchattab").removeClass("alertify"),
                d20.textchat && (d20.textchat.tabIsFocused = !0),
                d20.textchat.childWindow)
                    return console.log("Cancel showing"),
                    e.preventDefault(),
                    d20.textchat.childWindow.focus(),
                    !1;
                $("#textchat-input").show()
            } else
                d20.textchat.lastScrollTop || (d20.textchat.lastScrollTop = $("#textchat").scrollTop()),
                $("#textchat-input").hide(),
                d20.textchat.tabIsFocused = !1
        }),
        $("#rightsidebar").on("tabsshow", function(e, t) {
            "#textchat" == $(t.tab).attr("href") && d20.textchat.lastScrollTop && ($("#textchat").scrollTop(d20.textchat.lastScrollTop),
            d20.textchat.lastScrollTop = !1)
        }),
        $("#gridaligninstructions .cancelgridalign").on("click", function() {
            setMode("select")
        }),
        $(document).on("click", ".canceltargeting", function() {
            console.log("Attempt to cancel targeting"),
            d20.engine.nextTargetCallback && d20.engine.nextTargetCallback(!1),
            setMode("select"),
            $("#targetinginstructions").hide()
        })
    }),
    $(function() {
        $(".colorpicker").colorPicker()
    }),
    $(function() {
        $("body").on("shape_selected", "#editor", function(e, t) {
            "text" == t.type && (console.log(t.model.get("font_size")),
            $("#font-size").val(t.model.get("font_size")),
            $("#font-color").val(t.get("fill")).trigger("change-silent"),
            $("#font-family").val(t.get("fontFamily").replace(/'/g, "")))
        }),
        $("#font-size").on("change.textedit", function() {
            if (textarea = $(".texteditor"),
            textarea.length > 0)
                textarea.css("font-size", $(this).val() + "px").focus().trigger("keyup");
            else {
                var e = d20.engine.selected();
                if (e.length < 1)
                    return !0;
                for (var t = 0; t < e.length; t++)
                    if (e[0] && "text" == e[0].type) {
                        var n = e[t];
                        console.log(parseInt($(this).val(), 10)),
                        n.set("fontSize", parseInt($(this).val()), 10),
                        d20.engine.canvas.fire("object:modified", {
                            target: n
                        })
                    }
            }
        }),
        $("body").on("change", "#font-color", function() {
            if (textarea = $(".texteditor"),
            textarea.length > 0)
                textarea.css("color", $(this).val()).trigger("keyup");
            else {
                var e = d20.engine.selected();
                if (e.length < 1)
                    return !0;
                for (var t = 0; t < e.length; t++)
                    if (e[0] && "text" == e[0].type) {
                        var n = e[t];
                        n.set("fill", $(this).val()),
                        d20.engine.canvas.fire("object:modified", {
                            target: n
                        })
                    }
            }
        }),
        $("body").on("change", "#font-family", function() {
            if (textarea = $(".texteditor"),
            textarea.length > 0)
                textarea.css("font-family", $(this).val()).focus().trigger("keyup");
            else {
                var e = d20.engine.selected();
                if (e.length < 1)
                    return !0;
                for (var t = 0; t < e.length; t++)
                    if (e[0] && "text" == e[0].type) {
                        var n = e[t];
                        n.set("fontFamily", $(this).val()),
                        d20.engine.canvas.fire("object:modified", {
                            target: n
                        })
                    }
            }
        })
    }),
    $(function() {
        $("body").on("shape_selected", "#editor", function(e, t) {
            if ("rect" == t.type) {
                $("#rect_fill").val(t.attr("fill")).trigger("change-silent"),
                $("#rect_strokecolor").val(t.attr("stroke")).trigger("change-silent");
                var n = parseInt(t.getBBox().width)
                  , i = parseInt(t.getBBox().height);
                if (n > i)
                    var o = .01 * n;
                else
                    o = .01 * i;
                var r = Math.round(parseInt(t.attr("r")) / o);
                $("#roundness").val(r)
            }
        }),
        $("#roundness").on("change", function() {
            if (svgeditor.selected.length < 1)
                return !0;
            for (var e = 0; e < svgeditor.selected.length; e++)
                if ("rect" == svgeditor.selected[e].type) {
                    var t = parseInt(svgeditor.selected[e].getBBox().width)
                      , n = parseInt(svgeditor.selected[e].getBBox().height);
                    if (t > n)
                        var i = .01 * t;
                    else
                        i = .01 * n;
                    var o = parseInt($(this).val()) * i;
                    svgeditor.selected[e].setAttr("r", o),
                    $(svgeditor.selected[e].node).trigger("modified")
                }
        }),
        $("body").on("change", "#rect_fill", function() {
            if (svgeditor.selected.length < 1)
                return !0;
            for (var e = 0; e < svgeditor.selected.length; e++)
                if (svgeditor.selected[e] && "rect" == svgeditor.selected[e].type) {
                    var t = svgeditor.selected[e];
                    t.setAttr("fill", $(this).val()),
                    $(t.node).trigger("modified")
                }
        }),
        $("body").on("change", "#rect_strokecolor", function() {
            if (svgeditor.selected.length < 1)
                return !0;
            for (var e = 0; e < svgeditor.selected.length; e++)
                if (svgeditor.selected[0] && "rect" == svgeditor.selected[e].type) {
                    var t = svgeditor.selected[e];
                    t.setAttr("stroke", $(this).val()),
                    $(t.node).trigger("modified")
                }
        })
    }),
    $(function() {
        $("body").on("shape_selected", "#editor", function(e, t) {
            "path" == t.type && ($("#path_strokecolor").val(t.get("stroke")).trigger("change-silent"),
            $("#path_fillcolor").val(t.get("fill")).trigger("change-silent"),
            $("#path_width").val(parseInt(t.get("strokeWidth"), 10) + ""))
        }),
        $("body").on("change", "#path_strokecolor", function() {
            d20.engine.canvas.freeDrawingBrush.color = $(this).val();
            var e = d20.engine.selected();
            if (e.length < 1)
                return !0;
            for (var t = 0; t < e.length; t++)
                if (e[0] && "path" == e[0].type) {
                    var n = e[t];
                    n.set("stroke", $(this).val()),
                    d20.engine.canvas.fire("object:modified", {
                        target: n
                    })
                }
        }),
        $("body").on("change", "#path_fillcolor", function() {
            d20.engine.canvas.freeDrawingBrush.fill = $(this).val();
            var e = d20.engine.selected();
            if (e.length < 1)
                return !0;
            for (var t = 0; t < e.length; t++)
                if (e[0] && "path" == e[0].type) {
                    var n = e[t];
                    n.set("fill", $(this).val()),
                    d20.engine.canvas.fire("object:modified", {
                        target: n
                    })
                }
        }),
        $("body").on("change", "#path_width", function() {
            d20.engine.canvas.freeDrawingBrush.width = parseInt($(this).val(), 10);
            var e = d20.engine.selected();
            if (e.length < 1)
                return !0;
            for (var t = 0; t < e.length; t++)
                if (e[0] && "path" == e[0].type) {
                    var n = e[t];
                    n.set("strokeWidth", parseInt($(this).val(), 10)),
                    d20.engine.canvas.fire("object:modified", {
                        target: n
                    })
                }
        })
    }),
    d20.clipboard = {},
    d20.clipboard.doCopy = function() {
        var e, t = [], n = d20.engine.canvas.getActiveGroup(), i = !1;
        if (n ? (e = n.getObjects(),
        i = [n.left, n.top]) : e = [d20.engine.canvas.getActiveObject()],
        0 != e.length && null != e[0]) {
            for (var o = e, r = 0; r < o.length; r++) {
                var a = JSON.parse(JSON.stringify(o[r]));
                i || (i = [a.left, a.top],
                a.left = 0,
                a.top = 0);
                var s = {}
                  , l = o[r].model.toJSON();
                _.each(d20.token_editor.tokenkeys, function(e) {
                    l.hasOwnProperty(e) && (s[e] = l[e])
                }),
                t.push({
                    type: o[r].type,
                    attrs: a,
                    modelattrs: s,
                    oldid: o[r].model.id,
                    groupwith: l.groupwith
                })
            }
            d20.clipboard.contents = JSON.stringify(t),
            d20.clipboard.fromPage = d20.Campaign.activePage().id,
            d20.clipboard.groupOrigin = i
        }
    }
    ,
    d20.clipboard.doPaste = function() {
        var e = {};
        try {
            objects = JSON.parse(d20.clipboard.contents)
        } catch (d) {
            return void console.log("clipboard contents invalid.")
        }
        d20.clipboard.fromPage == d20.Campaign.activePage().id && (parseInt(2 * Math.random()),
        d20.engine.snapTo,
        parseInt(2 * Math.random()),
        d20.engine.snapTo),
        d20.engine && d20.engine.lastMousePos && (d20.clipboard.groupOrigin = [d20.engine.lastMousePos[0], d20.engine.lastMousePos[1]]);
        for (var t = 0; t < objects.length; t++) {
            (u = objects[t]).attrs.left = u.attrs.left + d20.clipboard.groupOrigin[0],
            u.attrs.top = u.attrs.top + d20.clipboard.groupOrigin[1];
            var n = d20.Campaign.activePage().get("width") * window.dpi - window.dpi
              , i = d20.Campaign.activePage().get("height") * window.dpi - window.dpi;
            if (u.attrs.left > n && (u.attrs.left = n),
            u.attrs.top > i && (u.attrs.top = i),
            "image" == u.type) {
                var o = u.attrs
                  , r = (o.src,
                o.src);
                o.imgsrc = r;
                var a = d20.Campaign.activePage().addImage(o, !0, !1, !1, !1, !0);
                if (u.modelattrs && u.modelattrs.represents) {
                    var s, l, c = d20.Campaign.characters.get(u.modelattrs.represents);
                    c && (console.log(c),
                    "" != u.modelattrs.bar1_link && (-1 !== u.modelattrs.bar1_link.indexOf("sheetattr_") ? (l = u.modelattrs.bar1_link.split("sheetattr_")[1],
                    setTimeout(function() {
                        c.updateTokensByName(l)
                    }, .5)) : (s = c.attribs.get(u.modelattrs.bar1_link),
                    l = s.get("name"),
                    setTimeout(function() {
                        c.updateTokensByName(l, u.modelattrs.bar1_link)
                    }, .5))),
                    "" != u.modelattrs.bar2_link && (-1 !== u.modelattrs.bar2_link.indexOf("sheetattr_") ? (l = u.modelattrs.bar2_link.split("sheetattr_")[1],
                    setTimeout(function() {
                        c.updateTokensByName(l)
                    }, .5)) : (s = c.attribs.get(u.modelattrs.bar2_link),
                    l = s.get("name"),
                    setTimeout(function() {
                        c.updateTokensByName(l, u.modelattrs.bar2_link)
                    }, .5))),
                    "" != u.modelattrs.bar3_link && (-1 !== u.modelattrs.bar3_link.indexOf("sheetattr_") ? (l = u.modelattrs.bar3_link.split("sheetattr_")[1],
                    setTimeout(function() {
                        c.updateTokensByName(l)
                    }, .5)) : (s = c.attribs.get(u.modelattrs.bar3_link),
                    l = s.get("name"),
                    setTimeout(function() {
                        c.updateTokensByName(l, u.modelattrs.bar3_link)
                    }, .5))))
                } else
                    "text" == u.type ? a = d20.Campaign.activePage().addText(u.attrs) : "path" == u.type && (a = d20.Campaign.activePage().addPath(u.attrs));
                a && (a.save(u.modelattrs),
                e[u.oldid] = a,
                setMode("select"))
            } else
                "text" == u.type ? a = d20.Campaign.activePage().addText(u.attrs) : "path" == u.type && (a = d20.Campaign.activePage().addPath(u.attrs));
            a && (a.save(u.modelattrs),
            e[u.oldid] = a,
            setMode("select"))
        }
        for (t = 0; t < objects.length; t++) {
            var u = objects[t];
            _.each(e, function(e, t) {
                console.log(t + " is now " + e.id),
                u.groupwith = u.groupwith.replace(t, e.id)
            }),
            e[u.oldid].set({
                groupwith: u.groupwith
            })
        }
    }
    ,
    $(function() {
        $("body").on(clicktype, "#copy", function() {
            d20.clipboard.doCopy()
        }),
        $("body").on(clicktype, "#paste", function() {
            d20.clipboard.doPaste()
        })
    }),
    $(function() {
        $("body").on(clicktype, "#fork", function() {
            window.location = "/browse/fork/" + campaign_id
        })
    }),
    $.fn.tipsy && !window.mobilesafari && $("#toolbar .button").tipsy({
        live: !0,
        gravity: $.fn.tipsy.autoNS,
        opacity: 1,
        delayIn: 500
    }),
    $("#secondary-toolbar select").on("click", function(e) {
        e.stopPropagation()
    }),
    $(function() {
        var e = $("#zoomslider");
        if (e.slider({
            orientation: "vertical",
            min: 10,
            max: 250,
            value: 100,
            slide: function(e, t) {
                var n = parseInt(t.value, 10) / 100;
                d20.engine.slideZoom(n, !0)
            }
        }).addTouch(),
        e.on("dblclick", function() {
            d20.engine.setZoom(1, !1, !0)
        }),
        window.is_gm) {
            $("#gm_layer_slider").slider({
                orientation: "horizontal",
                min: 0,
                max: 1,
                step: .01,
                value: .55,
                stop: (e,t)=>{
                    d20.engine.gm_layer_opacity = t.value,
                    d20.engine.redrawScreenNextTick()
                }
            }).addTouch()
        }
    }),
    d20.pagetoolbar = {
        noReload: !1,
        noClosing: !1
    },
    $(function() {
        if (window.is_gm) {
            $("#page-toolbar").show();
            var e = function() {
                return $("#page-toolbar .pages input").length > 0
            }
              , t = function() {
                $("#page-toolbar").css({
                    top: "-" + $("#page-toolbar").height() + "px"
                }).addClass("closed"),
                $("#page-toolbar .handle").css({
                    bottom: "-30px"
                }),
                $("#page-toolbar .pages").hide()
            };
            t(),
            $(window).bind("resize", t);
            var n = function() {
                console.log("capture page order!");
                var e = {}
                  , t = 0;
                $("#page-toolbar .pages .chooseablepage").each(function() {
                    e[$(this).attr("data-pageid")] = t;
                    var n = d20.Campaign.pages.get($(this).attr("data-pageid"));
                    n && n.save({
                        placement: t
                    }),
                    t++
                }),
                d20.pagetoolbar.noReload = !1,
                d20.pagetoolbar.refreshPageListing()
            }
              , i = function() {
                if (!d20.Campaign || e() || d20.pagetoolbar.noReload)
                    return !1;
                console.log("refershing page listings!");
                var t = $("#page-toolbar .pages")
                  , i = "";
                i = "<div class='availablepage' data-pageid='create'><img class='pagethumb' src='" + d20.siteURL + "/images/blankcampaignnew.jpg' /><span>Create New Page</span></div>";
                for (var o = d20.Campaign.pages.sortBy(function(e) {
                    return parseInt(e.get("placement"), 10) || 0
                }), r = 0, a = d20.Campaign.get("playerspecificpages"), s = 0; s < o.length; s++) {
                    var l = o[s];
                    if (l.get("archived"))
                        r++;
                    else {
                        (new Date).getTime();
                        var c = l.get("name");
                        "" != c && null != c || (c = "Untitled"),
                        "<" == c.charAt(0) && (c = c.substring(1));
                        var u = "<div class='availablepage chooseablepage";
                        d20.Campaign && l == d20.Campaign.activePage() && (u += " activepage");
                        var d = l.get("thumbnail")
                          , h = $("<span></span>").text(c);
                        if (u += "' data-pageid='" + l.id + "'><img class='pagethumb' data-pageversion='" + l.get("version") + "' src='" + d + "' />" + h[0].outerHTML,
                        (d20.Campaign.get("playerpageid") == l.id || !d20.Campaign.get("playerpageid") && 0 == s) && (u += "<div class='playerbookmark'><img src='/images/playerribbon.png' /></div>"),
                        a) {
                            var p = 0;
                            for (var f in a)
                                if (a[f] === l.id) {
                                    var g = d20.Campaign.players.get(f);
                                    g && (u += "<div class='playerspecificbookmark' data-playerid='" + g.id + "' style='top: " + (15 * p + 5) + "px'><img src='/users/avatar/" + g.get("d20userid") + "/150' title='" + g.get("displayname").replace("'", "") + "' /></div>",
                                    p++)
                                }
                        }
                        i += u += "<div class='pictos duplicate showtip' title='Duplicate Page'>;</div><div class='pictos settings showtip' title='Page Settings'>y</div></div>",
                        1;
                        (new Date).getTime()
                    }
                }
                r > 0 && (i += "<div class='availablepage' data-pageid='archive'><img class='pagethumb' src='" + d20.siteURL + "/images/archivecampaign.jpg' /><span>" + r + " Archived</span></div>"),
                t.html(i),
                $("#page-toolbar .pages").sortable({
                    items: "> .chooseablepage",
                    axis: "x",
                    start: function() {
                        d20.pagetoolbar.noReload = !0
                    },
                    stop: function() {
                        n()
                    },
                    distance: 15
                }).addTouch(),
                $("#page-toolbar .playerbookmark").draggable({
                    revert: "invalid",
                    appendTo: "#page-toolbar",
                    helper: "original",
                    axis: "x"
                }).addTouch(),
                $("#page-toolbar .playerspecificbookmark").draggable({
                    revert: "invalid",
                    appendTo: "#page-toolbar",
                    helper: "original",
                    axis: "x"
                }).addTouch(),
                $("#page-toolbar .playerbookmark").droppable({
                    accept: ".playerspecificbookmark",
                    hoverClass: "dropping",
                    drop: function(e, t) {
                        var n = $(t.draggable).attr("data-playerid")
                          , i = d20.Campaign.get("playerspecificpages");
                        i || (i = {}),
                        delete i[n],
                        0 === Object.keys(i).length && (i = !1),
                        d20.Campaign.save({
                            playerspecificpages: i
                        }),
                        d20.pagetoolbar.refreshPageListing(),
                        e.originalEvent.handled = !0
                    }
                }),
                $("#page-toolbar .chooseablepage").droppable({
                    accept: ".playerbookmark, .player-bookmark, .playerspecificbookmark",
                    hoverClass: "activepage",
                    drop: function(e, t) {
                        if (!e.originalEvent.handled) {
                            var n = $(t.draggable)
                              , i = $(this).attr("data-pageid");
                            if (n.hasClass("playerbookmark")) {
                                d20.Campaign.save({
                                    playerpageid: i
                                }),
                                d20.pagetoolbar.refreshPageListing();
                                var o = d20.Campaign.pages.get(i);
                                if (o && "" !== o.get("jukeboxtrigger")) {
                                    var r = window.Jukebox.playlist.get(o.get("jukeboxtrigger"));
                                    if (!r || !0 !== r.get("playing") || !0 === r.get("playing") && !0 === r.get("softstop"))
                                        if (d20.jukebox.stopAllTracks(),
                                        "nonestopall" !== o.get("jukeboxtrigger") && d20.jukebox.childWindow) {
                                            var a = $(d20.jukebox.childWindow.document);
                                            a.find("#jukeboxfolderroot .jukeboxitem[data-itemid=" + o.get("jukeboxtrigger") + "]").find("> .dd-content .play[data-isplaying=false]").trigger("click"),
                                            a.find("#jukeboxfolderroot .dd-folder[data-globalfolderid=" + o.get("jukeboxtrigger") + "]").find("> .dd-content .play[data-isplaying=false]").trigger("click")
                                        } else
                                            "nonestopall" !== o.get("jukeboxtrigger") && ($("#jukeboxfolderroot .jukeboxitem[data-itemid=" + o.get("jukeboxtrigger") + "]").find("> .dd-content .play[data-isplaying=false]").trigger("click"),
                                            $("#jukeboxfolderroot .dd-folder[data-globalfolderid=" + o.get("jukeboxtrigger") + "]").find("> .dd-content .play[data-isplaying=false]").trigger("click"))
                                }
                            } else if (n.hasClass("player-bookmark") || n.hasClass("playerspecificbookmark")) {
                                var s;
                                s = n.hasClass("player-bookmark") ? n.parents(".player").attr("id").replace("player_", "") : n.attr("data-playerid");
                                var l = d20.Campaign.get("playerspecificpages");
                                l || (l = {}),
                                l[s] = i,
                                d20.Campaign.save({
                                    playerspecificpages: l
                                }),
                                d20.pagetoolbar.refreshPageListing()
                            }
                        }
                    }
                })
            };
            d20.pagetoolbar.refreshPageListing = _.debounce(i, 100),
            $(window).bind("d20:pageInitialized", function() {
                d20.pagetoolbar.refreshPageListing()
            }),
            $(document).bind("d20:pagechanged", function() {
                d20.pagetoolbar.refreshPageListing()
            }),
            $("#page-toolbar .handle").bind(clicktype, function(e) {
                d20.pagetoolbar.noClosing || ($("#page-toolbar").hasClass("closed") ? ($("#page-toolbar").animate({
                    top: "-1px"
                }, 300).removeClass("closed"),
                $("#page-toolbar .pages").show()) : $("#page-toolbar").animate({
                    top: "-" + $("#page-toolbar").height() + "px"
                }, 300, function() {
                    $("#page-toolbar").addClass("closed"),
                    $("#page-toolbar .pages").hide(),
                    _.delay(function() {
                        $("#page-toolbar .pages input").trigger("blur")
                    })
                }),
                e.stopPropagation())
            }),
            $("body").on(clicktype, "#page-toolbar .pages .availablepage", function() {
                if ($this = $(this),
                $this.find("input").length > 0 || window.mobilesafari && d20.lastTouchDistance > 20)
                    return !0;
                "create" == $this.attr("data-pageid") ? d20.Campaign.pages.create({
                    placement: $("#page-toolbar .pages .chooseablepage").length
                }, {
                    success: function(e) {
                        if (window.defaultsettings && window.defaultsettings.game && Object.keys(window.defaultsettings.game).length > 0) {
                            var t = _.difference(_.keys(d20.models.Page.prototype.defaults), ["name", "version", "revealedAreas", "thumbnail", "zorder", "archived", "jukeboxtrigger"])
                              , n = {};
                            _.each(t, function(e) {
                                window.defaultsettings.game[e] != undefined && (n[e] = window.defaultsettings.game[e])
                            }),
                            e.set(n).save()
                        }
                    }
                }) : "archive" == $this.attr("data-pageid") ? d20.journal.showArchiveDialog(d20.Campaign.pages, "Pages") : ($("#page-toolbar .handle").trigger("click"),
                d20.Campaign.switchPageById($this.attr("data-pageid")),
                currentPlayer.set({
                    lastpage: $this.attr("data-pageid")
                }).save())
            }),
            $("body").on(clicktype, "#page-toolbar .pages .availablepage span", function() {
                if ($target = $(this),
                $target.find("input").length > 0 || "create" == $target.parents(".availablepage").attr("data-pageid") || "archive" == $target.parents(".availablepage").attr("data-pageid"))
                    return !0;
                var e = $target.text();
                $target.html("<input type='text' />").find("input").val(e),
                $target.find("input").focus()
            }),
            $("body").on("keyup", "#page-toolbar .pages .availablepage span input", function(e) {
                var t = $(this).parents(".availablepage").attr("data-pageid");
                if (13 == e.which) {
                    var n = d20.Campaign.pages.get(t)
                      , i = $(this)
                      , o = i.val();
                    "" == o && (o = "Untitled"),
                    n.save({
                        name: o
                    }),
                    i.parents("span").text(o)
                }
            }),
            $("body").on("blur", "#page-toolbar .pages .availablepage span input", function() {
                var e = $(this).parents(".availablepage").attr("data-pageid")
                  , t = d20.Campaign.pages.get(e);
                $(this).parents("span").text(t.get("name"))
            }),
            $("#page-toolbar").on("click", ".settings", function() {
                return d20.Campaign.pages.get($(this).parents(".availablepage").attr("data-pageid")).view.showDialog(),
                !1
            }),
            $("body").on(clicktype, "#page-toolbar .pages .availablepage .duplicate", function() {
                var e = $(this).parents(".availablepage").attr("data-pageid")
                  , t = d20.Campaign.pages.get(e)
                  , n = _.clone(t.attributes);
                return n.name = n.name + " (Copy)",
                delete n.id,
                delete n.thumbnail,
                delete n.revealedAreas,
                d20.Campaign.pages.create(n),
                $(".tipsy").remove(),
                !1
            })
        }
    }),
    d20.token_editor = {
        statusmarkers: {
            red: "#C91010",
            blue: "#1076C9",
            green: "#2FC910",
            brown: "#C97310",
            purple: "#9510C9",
            pink: "#EB75E1",
            yellow: "#E5EB75",
            dead: "X",
            skull: "0",
            sleepy: "34",
            "half-heart": "68",
            "half-haze": "102",
            interdiction: "136",
            snail: "170",
            "lightning-helix": "204",
            spanner: "238",
            "chained-heart": "272",
            "chemical-bolt": "306",
            "death-zone": "340",
            "drink-me": "374",
            "edge-crack": "408",
            "ninja-mask": "442",
            stopwatch: "476",
            "fishing-net": "510",
            overdrive: "544",
            strong: "578",
            fist: "612",
            padlock: "646",
            "three-leaves": "680",
            "fluffy-wing": "714",
            pummeled: "748",
            tread: "782",
            arrowed: "816",
            aura: "850",
            "back-pain": "884",
            "black-flag": "918",
            "bleeding-eye": "952",
            "bolt-shield": "986",
            "broken-heart": "1020",
            cobweb: "1054",
            "broken-shield": "1088",
            "flying-flag": "1122",
            radioactive: "1156",
            trophy: "1190",
            "broken-skull": "1224",
            "frozen-orb": "1258",
            "rolling-bomb": "1292",
            "white-tower": "1326",
            grab: "1360",
            screaming: "1394",
            grenade: "1428",
            "sentry-gun": "1462",
            "all-for-one": "1496",
            "angel-outfit": "1530",
            "archery-target": "1564"
        },
        statussheet_ready: !1,
        statusicon_size: 24
    },
    $(function() {
        d20.token_editor.tokenkeys = _.difference(Object.keys(d20.models.Graphic.prototype.defaults), ["left", "top", "width", "height", "z_index", "imgsrc", "type", "page_id", "layer", "status_dead", "groupwith", "lastmove"]);
        var e, t = !1, n = [];
        d20.token_editor.statussheet = new Image,
        d20.token_editor.statussheet.src = "/images/statussheet.png",
        d20.token_editor.statussheet_small = new Image,
        d20.token_editor.statussheet_small.onload = function() {
            d20.token_editor.statussheet_ready = !0
        }
        ,
        d20.token_editor.statussheet_small.src = "/images/statussheet_small.png";
        var i = function() {
            t && (t.remove(),
            t = !1),
            e && clearTimeout(e)
        }
          , o = function(o) {
            var r, a;
            o.changedTouches && o.changedTouches.length > 0 ? (r = o.changedTouches[0].pageX,
            a = o.changedTouches[0].pageY) : (r = o.pageX,
            a = o.pageY),
            i(),
            n = [];
            for (var s = d20.engine.selected(), l = 0; l < s.length; l++)
                n.push(s[l]);
            if (n.length) {
                const e = {
                    contains_animations: !1,
                    show_play: !1,
                    show_pause: !1,
                    show_start_looping: !1,
                    show_stop_looping: !1
                };
                for (const t of n)
                    t.isAnimated && (e.contains_animations = !0,
                    t.isPaused ? e.show_play = !0 : e.show_pause = !0,
                    t.model.get("anim_loop") ? e.show_stop_looping = !0 : e.show_start_looping = !0);
                t = $($("#tmpl_actions_menu").jqote(_.defaults(e, n[0].model)))
            } else
                t = $($("#tmpl_actions_menu").jqote({}));
            if (!window.is_gm && t[0].lastElementChild.childElementCount < 1)
                return !1;
            t.appendTo("body");
            var c = t.height()
              , u = t.width()
              , d = {};
            return a > $("#editor-wrapper").height() - $("#playerzone").height() - c - 100 ? d.top = a - c + "px" : d.top = a + "px",
            r > $("#editor-wrapper").width() - u ? d.left = r + 10 - u + "px" : d.left = r + 10 + "px",
            t.css(d),
            $(".actions_menu").bind("mousedown mouseup touchstart", function(e) {
                e.stopPropagation()
            }),
            $(".actions_menu ul > li").bind("mouseover touchend", function() {
                if (e && (clearTimeout(e),
                e = !1),
                $(this).parents(".hasSub").length > 0)
                    ;
                else if ($(this).hasClass("hasSub")) {
                    $(".actions_menu").css({
                        width: "215px",
                        height: "250px"
                    });
                    var t = this;
                    _.defer(function() {
                        $(".actions_menu ul.submenu").hide(),
                        $(t).find("ul.submenu:hidden").show()
                    })
                } else
                    $(".actions_menu ul.submenu").hide()
            }),
            $("body").on("mouseover", ".actions_menu ul.submenu", function() {
                e && (clearTimeout(e),
                e = !1)
            }),
            $("body").on("mouseleave", ".actions_menu, .actions_menu ul.submenu", function() {
                e || (e = setTimeout(function() {
                    $(".actions_menu ul.submenu").hide(),
                    $(".actions_menu").css("width", "100px").css("height", "auto"),
                    e = !1
                }, 500))
            }),
            $(".actions_menu li").on(clicktype, function() {
                var e = $(this).attr("data-action-type");
                let t;
                if (null != e) {
                    if ("copy" == e)
                        d20.clipboard.doCopy(),
                        i();
                    else if ("paste" == e)
                        d20.clipboard.doPaste(),
                        i();
                    else if ("delete" == e) {
                        var o = d20.engine.selected();
                        d20.engine.canvas.deactivateAllWithDispatch();
                        for (var r = 0; r < o.length; r++)
                            o[r].model.destroy();
                        i()
                    } else if ("undo" == e)
                        d20.undo && d20.undo.doUndo(),
                        i();
                    else if ("tofront" == e)
                        d20.engine.canvas.getActiveGroup() && d20.engine.unselect(),
                        _.each(n, function(e) {
                            d20.engine.canvas.bringToFront(e)
                        }),
                        d20.Campaign.activePage().debounced_recordZIndexes(),
                        i();
                    else if ("toback" == e)
                        d20.engine.canvas.getActiveGroup() && d20.engine.unselect(),
                        _.each(n, function(e) {
                            d20.engine.canvas.sendToBack(e)
                        }),
                        d20.Campaign.activePage().debounced_recordZIndexes(),
                        i();
                    else if (-1 !== e.indexOf("tolayer_")) {
                        d20.engine.unselect();
                        var a = e.replace("tolayer_", "");
                        _.each(n, function(e) {
                            e.model.save({
                                layer: a
                            })
                        }),
                        i(),
                        d20.token_editor.removeRadialMenu()
                    } else if ("addturn" == e)
                        _.each(n, function(e) {
                            d20.Campaign.initiativewindow.addTokenToList(e.model.id)
                        }),
                        i(),
                        d20.tutorial && d20.tutorial.active && $(document.body).trigger("addedTurn");
                    else if ("group" == e) {
                        var s = [];
                        d20.engine.unselect(),
                        _.each(n, function(e) {
                            s.push(e.model.id)
                        }),
                        _.each(n, function(e) {
                            e.model.addToGroup(s)
                        }),
                        i();
                        var l = n[0];
                        d20.engine.select(l)
                    } else if ("ungroup" == e)
                        d20.engine.unselect(),
                        _.each(n, function(e) {
                            e.model.clearGroup()
                        }),
                        d20.token_editor.removeRadialMenu(),
                        i();
                    else if ("toggledrawing" == e)
                        d20.engine.unselect(),
                        _.each(n, function(e) {
                            e.model.set({
                                isdrawing: !e.model.get("isdrawing")
                            }).save()
                        }),
                        i(),
                        d20.token_editor.removeRadialMenu();
                    else if ("toggleflipv" == e)
                        d20.engine.unselect(),
                        _.each(n, function(e) {
                            e.model.set({
                                flipv: !e.model.get("flipv")
                            }).save()
                        }),
                        i(),
                        d20.token_editor.removeRadialMenu();
                    else if ("togglefliph" == e)
                        d20.engine.unselect(),
                        _.each(n, function(e) {
                            e.model.set({
                                fliph: !e.model.get("fliph")
                            }).save()
                        }),
                        i(),
                        d20.token_editor.removeRadialMenu();
                    else if ("takecard" == e)
                        d20.engine.canvas.getActiveGroup() && d20.engine.unselect(),
                        _.each(n, function(e) {
                            var t = d20.decks.cardByID(e.model.get("cardid"));
                            if (!1 === e.model.get("isdrawing"))
                                var n = {
                                    bar1_value: e.model.get("bar1_value"),
                                    bar1_max: e.model.get("bar1_max"),
                                    bar2_value: e.model.get("bar2_value"),
                                    bar2_max: e.model.get("bar2_max"),
                                    bar3_value: e.model.get("bar3_value"),
                                    bar3_max: e.model.get("bar3_max")
                                };
                            d20.Campaign.hands.addCardToHandForPlayer(t, window.currentPlayer, n || undefined),
                            _.defer(function() {
                                e.model.destroy()
                            })
                        }),
                        d20.engine.unselect(),
                        i();
                    else if ("flipcard" == e)
                        d20.engine.canvas.getActiveGroup() && d20.engine.unselect(),
                        _.each(n, function(e) {
                            var t = e.model.get("sides").split("|")
                              , n = e.model.get("currentSide") + 1;
                            n > t.length - 1 && (n = 0),
                            e.model.set({
                                currentSide: n,
                                imgsrc: unescape(t[n])
                            }).save()
                        }),
                        i();
                    else if ("setdimensions" == e) {
                        var c = n[0]
                          , u = $($("#tmpl_setdimensions").jqote()).dialog({
                            title: "Set Dimensions",
                            width: 325,
                            height: 225,
                            buttons: {
                                Set: function() {
                                    var e, t;
                                    "pixels" == u.find(".dimtype").val() ? (e = parseInt(u.find("input.width").val(), 10),
                                    t = parseInt(u.find("input.height").val(), 10)) : (e = parseFloat(u.find("input.width").val()) * window.dpi,
                                    t = parseFloat(u.find("input.height").val()) * window.dpi),
                                    c.model.save({
                                        width: e,
                                        height: t
                                    }),
                                    u.off("change"),
                                    u.dialog("destroy").remove()
                                },
                                Cancel: function() {
                                    u.off("change"),
                                    u.dialog("destroy").remove()
                                }
                            },
                            beforeClose: function() {
                                u.off("change"),
                                u.dialog("destroy").remove()
                            }
                        });
                        u.on("change", ".dimtype", function() {
                            "pixels" == $(this).val() ? (u.find("input.width").val(Math.round(c.get("width"))),
                            u.find("input.height").val(Math.round(c.get("height")))) : (u.find("input.width").val(c.get("width") / window.dpi),
                            u.find("input.height").val(c.get("height") / window.dpi))
                        }),
                        u.find(".dimtype").trigger("change"),
                        i()
                    } else if ("aligntogrid" == e)
                        if (0 === d20.Campaign.activePage().get("snapping_increment")) {
                            i();
                            var d = $($("#tmpl_grid-disabled").jqote(attrs)).dialog({
                                title: "Grid Off",
                                buttons: {
                                    Ok: function() {
                                        d.off("change"),
                                        d.dialog("destroy").remove()
                                    }
                                },
                                beforeClose: function() {
                                    d.off("change"),
                                    d.dialog("destroy").remove()
                                }
                            })
                        } else
                            d20.engine.gridaligner.target = n[0],
                            setMode("gridalign"),
                            i();
                    else if ("side_random" == e) {
                        d20.engine.canvas.getActiveGroup() && d20.engine.unselect();
                        var h = [];
                        _.each(n, function(e) {
                            if (e.model && "" != e.model.get("sides")) {
                                var t = e.model.get("sides").split("|")
                                  , n = t.length
                                  , i = d20.textchat.diceengine.random(n);
                                e.model.save({
                                    currentSide: i,
                                    imgsrc: unescape(t[i])
                                }),
                                h.push(t[i])
                            }
                        }),
                        d20.textchat.rawChatInput({
                            type: "tokenroll",
                            content: h.join("|")
                        }),
                        i(),
                        d20.token_editor.removeRadialMenu()
                    } else if ("side_choose" == e) {
                        const e = n[0]
                          , t = e.model.toJSON()
                          , o = t.sides.split("|");
                        let r = t.currentSide;
                        const a = $($("#tmpl_chooseside").jqote()).dialog({
                            title: "Choose Side",
                            width: 325,
                            height: 225,
                            buttons: {
                                Choose: function() {
                                    d20.engine.canvas.getActiveGroup() && d20.engine.unselect(),
                                    e.model.save({
                                        currentSide: r,
                                        imgsrc: unescape(o[r])
                                    }),
                                    a.off("slide"),
                                    a.dialog("destroy").remove()
                                },
                                Cancel: function() {
                                    a.off("slide"),
                                    a.dialog("destroy").remove()
                                }
                            },
                            beforeClose: function() {
                                a.off("slide"),
                                a.dialog("destroy").remove()
                            }
                        })
                          , s = a.find(".sidechoices");
                        for (const e of o) {
                            const t = unescape(e);
                            let n = d20.utils.isVideo(t) ? `<video src="${t.replace("/med.webm", "/thumb.webm")}" muted autoplay loop />` : `<img src="${t}" />`;
                            n = `<div class="sidechoice">${n}</div>`,
                            s.append(n)
                        }
                        s.children().attr("data-selected", !1).eq(r).attr("data-selected", !0),
                        a.find(".sideslider").slider({
                            min: 0,
                            max: o.length - 1,
                            step: 1,
                            value: r
                        }),
                        a.on("slide", function(e, t) {
                            t.value != r && (r = t.value,
                            a.find(".sidechoices .sidechoice").attr("data-selected", !1).eq(t.value).attr("data-selected", !0))
                        }),
                        i(),
                        d20.token_editor.removeRadialMenu()
                    } else
                        (t = /^anim_((?:un)?pause)$/.exec(e)) ? (n.length > 1 && d20.engine.canvas.deactivateAllWithDispatch(),
                        _.each(n, e=>{
                            e.isAnimated && (e.isPaused = "pause" === t[1])
                        }
                        ),
                        i()) : (t = /^anim_(start|stop)_looping$/.exec(e)) && (n.length > 1 && d20.engine.canvas.deactivateAllWithDispatch(),
                        _.each(n, e=>{
                            e.isAnimated && e.model.save({
                                anim_loop: "start" === t[1]
                            })
                        }
                        ),
                        i());
                    return !1
                }
            }),
            !1
        };
        d20.token_editor.showContextMenu = o,
        d20.token_editor.closeContextMenu = i;
        var r = $("#editor-wrapper");
        d20.token_editor.updateRadialMenuPos = function() {
            if (d20.token_editor.$currentRadialMenu && d20.token_editor.currentRadialTarget) {
                var e = d20.token_editor.currentRadialTarget
                  , t = Math.floor((e.get("left") - d20.engine.currentCanvasOffset[0]) * d20.engine.canvasZoom) - 35 + window.ruleroffset - 125 + d20.engine.paddingOffset[0]
                  , n = Math.floor((e.get("top") - d20.engine.currentCanvasOffset[1]) * d20.engine.canvasZoom) - Math.floor(e.get("height") / 2 * d20.engine.canvasZoom) + window.ruleroffset - 125 + d20.engine.paddingOffset[1];
                t += r.scrollLeft(),
                n += r.scrollTop(),
                d20.token_editor.$currentRadialMenu.css({
                    top: n + "px",
                    left: t + "px",
                    display: "block"
                })
            }
        }
        ,
        d20.token_editor.debounced_updateRadialMenuPos = _.debounce(d20.token_editor.updateRadialMenuPos, 100);
        var a, s = e=>{
            $("#radial-menu .button-6.open").attr("data-paused", e.paused)
        }
        ;
        d20.token_editor.removeRadialMenu = function() {
            d20.token_editor.currentRadialTarget && d20.token_editor.currentRadialTarget.isAnimated && d20.token_editor.currentRadialTarget.off("play/pause", s),
            $("#radial-menu").remove(),
            $(document).off("keypress.statusnum"),
            $(this).off("mouseover.statusiconhover"),
            d20.token_editor.$currentRadialMenu = !1
        }
        ,
        d20.token_editor.do_showRadialMenu = function(e, t, n) {
            if ((!($("#radial-menu").length > 0 && e == currentcontexttarget) || n) && !(e && e.model && e.model.get("isdrawing"))) {
                currentcontexttarget = d20.token_editor.currentRadialTarget = e,
                $("#radial-menu input").trigger("blur"),
                d20.token_editor.removeRadialMenu();
                var o = $($("#tmpl_radial_menu_token").jqote(e.model));
                o.on("mousedown mouseup touchstart", ".button", function(e) {
                    e.which && 3 == e.which || e.stopPropagation()
                }),
                o.on(clicktype, ".action", function(e) {
                    var t = $(this).attr("data-action-type");
                    if (null != t) {
                        if ("tokensettings" == t) {
                            if ((e.shiftKey || e.altKey) && "" !== currentcontexttarget.model.get("represents")) {
                                console.log("Show token's character...");
                                var n = d20.Campaign.characters.get(currentcontexttarget.model.get("represents"));
                                if (n) {
                                    var o = n.get("inplayerjournals").split(",");
                                    (window.is_gm || -1 !== _.indexOf(o, "all") || window.currentPlayer && -1 !== _.indexOf(o, window.currentPlayer.id)) && n.view.showDialog()
                                }
                                e.altKey ? $(".dialog[data-characterid=" + currentcontexttarget.model.get("represents") + "] .characterviewer ul.nav a[data-tab='attributesabilities']").trigger("click") : $(".dialog[data-characterid=" + currentcontexttarget.model.get("represents") + "] .characterviewer ul.nav a[data-tab='bioinfo']").trigger("click")
                            } else
                                currentcontexttarget.model.trigger("showtokeneditor");
                            i()
                        } else if ("play_pause_animation" === t)
                            currentcontexttarget.togglePause();
                        else if (-1 !== t.indexOf("modify_") || -1 !== t.indexOf("sub_")) {
                            var r = t.replace("modify_", "");
                            if (!currentcontexttarget.model.currentPlayerControls())
                                return;
                            if (!window.is_gm && !currentcontexttarget.model.get("playersedit_" + r))
                                return;
                            $(this).append("<div class='popupvalue'><input type='text' class='tutorial' data-tutorial='quick-change-value' /></div>");
                            var a = $(this).find(".popupvalue")
                              , s = $(this).find("input")
                              , l = $(this).attr("data-currentval");
                            s.on("click", function() {
                                return !1
                            }),
                            s.on("keyup", function(e) {
                                if (13 == e.which) {
                                    var t = {}
                                      , n = s.val();
                                    if ("+" == n.substring(0, 1) || /^\-\d+$/.test(n)) {
                                        n = (+l || 0) + (+n || 0)
                                    }
                                    t[r + "_value"] = n;
                                    var i = !1;
                                    if (currentcontexttarget.model.character) {
                                        var o = currentcontexttarget.model.get(r + "_link");
                                        if ("" !== o) {
                                            var a = currentcontexttarget.model.character.attribs.get(o);
                                            a && (a.syncedSave({
                                                current: n
                                            }),
                                            d20.journal.notifyWorkersOfAttrChanges(currentcontexttarget.model.character.id, [a.get("name")], "player"),
                                            i = !0)
                                        }
                                    }
                                    i || currentcontexttarget.model.save(t),
                                    s.trigger("blur")
                                }
                            }),
                            s.on("blur", function() {
                                $(".tipsy").remove(),
                                a.remove()
                            }),
                            s.val(l).focus(),
                            s[0].selectionStart = 0,
                            s[0].selectionEnd = l.length
                        } else if (-1 !== t.indexOf("toggle_status_")) {
                            var c = t.replace("toggle_status_", "")
                              , u = "" == currentcontexttarget.model.get("statusmarkers") ? [] : currentcontexttarget.model.get("statusmarkers").split(",");
                            $(this).hasClass("active") ? (u = _.filter(u, function(e) {
                                return e.split("@")[0] != c
                            }),
                            $(this).removeClass("active")) : (u.push(c),
                            $(this).addClass("active")),
                            currentcontexttarget.model.save({
                                statusmarkers: u.join(",")
                            })
                        } else if ("show_marker_menu" == t) {
                            $(this).attr("data-action-type", "hide_marker_menu"),
                            $("#radial-menu .markermenu").remove();
                            var d = $("<div class='markermenu'></div>")
                              , h = (u = "" == currentcontexttarget.model.get("statusmarkers") ? [] : currentcontexttarget.model.get("statusmarkers").split(","),
                            _.map(u, function(e) {
                                return e.split("@")[0]
                            }));
                            _.each(d20.token_editor.statusmarkers, function(e, t) {
                                var n = "";
                                -1 !== h.indexOf(t) && (n = "active"),
                                "#" === e.substring(0, 1) ? d.append("<div class='statusicon markercolor action " + n + "' data-action-type='toggle_status_" + t + "' style='background-color: " + e + " '></div>") : "dead" === t ? d.append("<div class='statusicon markercolor action dead " + n + "' data-action-type='toggle_status_dead'>X</div>") : d.append("<div class='statusicon markericon action " + n + "' data-action-type='toggle_status_" + t + "' style='background-position: -" + e + "px 0px;'></div>")
                            }),
                            d.appendTo(this),
                            $("#textchat-input textarea").on("input.chat_input focus.chat_input", function() {
                                $("#radial-menu .button[data-action-type=hide_marker_menu]").trigger(clicktype)
                            }),
                            _.delay(function() {
                                d.addClass("open")
                            })
                        } else if ("hide_marker_menu" == t) {
                            $(this).attr("data-action-type", "show_marker_menu");
                            var p = $("#radial-menu .markermenu");
                            p.removeClass("open"),
                            $("#textchat-input textarea").off(".chat_input"),
                            setTimeout(function() {
                                p && p.remove()
                            }, 300)
                        }
                        return !1
                    }
                });
                var r = Math.floor(e.get("height") * d20.engine.canvasZoom);
                if (o.css({
                    height: r + "px"
                }),
                d20.token_editor.$currentRadialMenu = o,
                d20.token_editor.updateRadialMenuPos(o, !0),
                currentcontexttarget.isAnimated && (o.find(".button-6").attr("data-paused", currentcontexttarget.isPaused),
                currentcontexttarget.on("play/pause", s)),
                t)
                    o.find(".button").addClass("open animcomplete"),
                    o.appendTo($("#editor-wrapper")),
                    o.find(".button div.hasnumber").textfill(20);
                else {
                    o.appendTo($("#editor-wrapper"));
                    var a = 0;
                    o.find(".button").each(function() {
                        var e = this;
                        setTimeout(function() {
                            $(e).addClass("open"),
                            o.find(".button div.hasnumber").textfill(20)
                        }, 30 * a),
                        a++
                    }),
                    setTimeout(function() {
                        o.find(".button").addClass("animcomplete")
                    }, 250)
                }
            }
        }
        ,
        d20.token_editor.showRadialMenu = _.debounce(d20.token_editor.do_showRadialMenu, 100),
        $("#editor").on("ischanging", function() {
            $("#radial-menu input").trigger("blur"),
            d20.token_editor.removeRadialMenu()
        }),
        $("#editor-wrapper").bind("contextmenu", function() {
            return !1
        }),
        $(document).on("mouseenter", ".markermenu", function() {
            const e = this;
            $("#textchat-input textarea")[0].blur(),
            $(this).on("mouseover.statusiconhover", ".statusicon", function() {
                a = $(this).attr("data-action-type").replace("toggle_status_", "")
            }),
            $(document).on("keypress.statusnum", function(t) {
                const n = String.fromCharCode(t.which);
                if (!currentcontexttarget || "dead" === a || Number.isNaN(+n))
                    return void $("#radial-menu .button[data-action-type=hide_marker_menu]").trigger(clicktype);
                let i = "" == currentcontexttarget.model.get("statusmarkers") ? [] : currentcontexttarget.model.get("statusmarkers").split(",")
                  , o = !1;
                i = _.map(i, function(e) {
                    return e.split("@")[0] == a ? (o = !0,
                    a + "@" + n) : e
                }),
                o || ($(e).find(".statusicon[data-action-type=toggle_status_" + a + "]").addClass("active"),
                i.push(a + "@" + n)),
                currentcontexttarget.model.save({
                    statusmarkers: i.join(",")
                })
            })
        }),
        $(document).on("mouseleave", ".markermenu", function() {
            $(document).off("keypress.statusnum"),
            $(this).off("mouseover.statusiconhover")
        }),
        $("body").bind(mousedowntype, function(e) {
            e.which && 3 == e.which || i()
        })
    }),
    function(e) {
        e.fn.textfill = function(t) {
            return t = parseInt(t, 10),
            this.each(function() {
                var n = e("span", this)
                  , i = n.parent()
                  , o = (i.height(),
                i.width())
                  , r = parseInt(n.css("fontSize"), 10) * (o / n.width() - .2);
                n.css("fontSize", t > 0 && r > t ? t : r)
            })
        }
    }(jQuery),
    d20.engine.advanced_fog.save = function() {
        if (d20.engine.advanced_fog.players_needing_update.length) {
            for (const e of d20.engine.advanced_fog.players_needing_update) {
                const t = d20.Campaign.players.get(e);
                if (!t)
                    continue;
                const n = {};
                _.each(d20.engine.advanced_fog.revealed_cells[e], (e,t)=>{
                    n[t] = Array.from(e)
                }
                );
                const i = JSON.stringify(n);
                i !== t.get("adv_fow_revealed") && t.save({
                    adv_fow_revealed: i
                })
            }
            d20.engine.advanced_fog.players_needing_update = []
        }
    }
    ,
    d20.engine.advanced_fog.computeVisibleCells = function(e, t) {
        const n = d20.Campaign.activePage();
        let i = 1;
        n.get("showgrid") || (i = +n.get("adv_fow_grid_size") || 1);
        const o = t / i
          , r = d20.engine.snapTo || 70 * i
          , a = _.map([+n.get("width"), +n.get("height")], e=>Math.floor(70 * e / r))
          , s = []
          , l = {
            min: _.map(e.min, (e,t)=>d20.math.clamp(Math.round(e / r) - o, 0, a[t])),
            max: _.map(e.max, (e,t)=>d20.math.clamp(Math.round(e / r) + o, 0, a[t]))
        };
        if (l.size = d20.math.sub(l.max, l.min),
        n.get("showlighting")) {
            const i = new Array;
            for (const e of _.filter(n.thepaths.models, e=>"walls" === e.get("layer"))) {
                const t = JSON.parse(e.get("path"))
                  , n = [+e.get("left") - +e.get("width") / 2, +e.get("top") - +e.get("height") / 2];
                let o, r = n;
                if (Array.isArray(t))
                    for (let e of t) {
                        let t;
                        switch (e[0].toString().toUpperCase()) {
                        case "M":
                            r = d20.math.add(n, e.slice(1)),
                            o || (o = _.clone(r));
                            continue;
                        case "L":
                            t = d20.math.add(n, e.slice(1));
                            break;
                        case "H":
                            t = [r[0] + e[1], r[1]];
                            break;
                        case "V":
                            t = [r[0], r[1] + e[1]];
                            break;
                        case "Z":
                            t = o || n;
                            break;
                        default:
                            continue
                        }
                        i.push([_.clone(r), _.clone(t)]),
                        r = t
                    }
            }
            const o = d20.math.add(d20.math.div(d20.math.sub(e.max, e.min), 2), e.min)
              , a = t * r * t * r
              , c = new d20.math.Matrix([0, 1, -1, 0],2,2)
              , u = c.transpose();
            for (let t = 0; t < l.size[0]; ++t)
                for (let n = 0; n < l.size[1]; ++n) {
                    const d = d20.math.mul(d20.math.add(l.min, [t, n], .5), r)
                      , h = d20.math.sub(d, o)
                      , p = d20.math.normalize(h)
                      , f = d20.math.div(d20.math.sub(e.max, e.min), 2)
                      , g = [d20.math.dot(p, [f[0], 0]), d20.math.dot(p, [0, f[1]])]
                      , m = d20.math.sub(h, g);
                    let y = !0;
                    if (!(d20.math.magnitude2(m) >= a)) {
                        for (const e of i) {
                            const t = d20.math.line_line_intersection([o, d], e);
                            if (!t)
                                continue;
                            const n = d20.math.sub(t, o)
                              , i = d20.math.sub(d, t);
                            if (d20.math.dot(i, n) > 0) {
                                if (_.chain(e).map((t,n)=>{
                                    const i = d20.math.sub(t, o)
                                      , r = e[Math.abs(n - 1)]
                                      , a = d20.math.sub(r, t);
                                    let s = c.mul(i);
                                    return d20.math.dot(s, a) < 0 && (s = u.mul(i)),
                                    d20.math.dot(s, h)
                                }
                                ).every(e=>e >= 0).value()) {
                                    y = !1;
                                    break
                                }
                            }
                        }
                        y && s.push(d20.math.add(l.min, [t, n]))
                    }
                }
        } else {
            s.length = l.size[0] * l.size[1];
            for (let e = 0; e < l.size[0]; ++e)
                for (let t = 0; t < l.size[1]; ++t)
                    s[l.size[1] * e + t] = d20.math.add(l.min, [e, t])
        }
        return s
    }
    ,
    d20.engine.advanced_fog.computeVisibleCellsFromToken = function(e) {
        let t = "image" !== e.get("type");
        if (t |= "gmlayer" === e.get("layer"),
        t |= !(e.get("light_hassight") || +e.get("adv_fow_view_distance")))
            return [];
        const n = d20.Campaign.activePage()
          , i = +n.get("scale_number") || 5
          , o = e.get("adv_fow_view_distance");
        let r = +o;
        if ("" === o || Number.isNaN(r))
            if (n.get("showlighting") && n.get("lightglobalillum"))
                r = Infinity;
            else {
                const t = +e.get("light_multiplier")
                  , i = +e.get("light_radius") || 0;
                if (n.get("adv_fow_dim_reveals"))
                    r = i;
                else {
                    const t = e.get("light_dimradius")
                      , n = +t;
                    r = "" === t || Number.isNaN(n) ? .75 * i : Math.min(n, i)
                }
                r *= Number.isNaN(t) ? 1 : t
            }
        if (r <= 0)
            return [];
        const a = Math.max(0, Math.ceil(r / i))
          , s = e.get("group")
          , l = s ? [+s.get("left"), +s.get("top")] : 0
          , c = {
            midpoint: d20.math.add([+e.get("left"), +e.get("top")], l),
            width: +e.get("width"),
            height: +e.get("height"),
            top_left: new Array(2)
        };
        c.top_left[0] = c.midpoint[0] - c.width / 2,
        c.top_left[1] = c.midpoint[1] - c.height / 2;
        const u = {
            min: _.clone(c.top_left),
            max: [c.top_left[0] + c.width, c.top_left[1] + c.height]
        };
        let d = +e.get("rotation") % 360;
        if (d && r !== Infinity) {
            d = d20.math.radians(d);
            const e = Math.sin(d)
              , t = Math.cos(d)
              , n = new d20.math.Matrix([t, -e, e, t],2,2)
              , i = _.map(u, e=>d20.math.add(c.midpoint, n.mul(d20.math.sub(e, c.midpoint))));
            for (const e in u)
                for (let t = 0; t < u[e].length; ++t)
                    u[e][t] = Math[e](i[0][t], i[1][t])
        }
        return d20.engine.advanced_fog.computeVisibleCells(u, a)
    }
    ,
    d20.engine.advanced_fog.updateFromToken = function(e, t) {
        const n = d20.Campaign.activePage();
        if (!(d20.engine.page_loaded && n && e && e.get && e.get("page_id") === n.get("id") && n.get("adv_fow_enabled") && window.largefeats))
            return;
        const i = n.get("showlighting");
        i || (d20.engine.advanced_fog.visible_cells[e.get("id")] = []);
        const o = t && t.vision_only
          , r = window.is_gm && n.get("adv_fow_gm_see_all");
        let a;
        if (o)
            a = [];
        else {
            const t = d20.Campaign.characters.get(e.get("represents"));
            a = e.get("controlledby").split(","),
            t && (a = _.union(a, t.get("controlledby").split(","))),
            a = _.compact(a),
            _.contains(a, "all") && (a = _.invoke(d20.Campaign.players.models, "get", "id"))
        }
        if (o || a || r) {
            const t = new Set
              , s = d20.engine.advanced_fog.computeVisibleCellsFromToken(e);
            r && (d20.engine.advanced_fog.revealed_cells.gm || (d20.engine.advanced_fog.revealed_cells.gm = {}),
            d20.engine.advanced_fog.revealed_cells.gm[n.get("id")] || (d20.engine.advanced_fog.revealed_cells.gm[n.get("id")] = new Set));
            for (const e of a) {
                let t = d20.engine.advanced_fog.revealed_cells[e];
                t || (t = d20.engine.advanced_fog.revealed_cells[e] = {}),
                t[n.get("id")] || (t[n.get("id")] = new Set)
            }
            for (let l = 0; l < s.length; l++) {
                const c = s[l][0] + "," + s[l][1];
                if (!o) {
                    for (const e of a)
                        t.has(e) || d20.engine.advanced_fog.revealed_cells[e][n.get("id")].has(c) || t.add(e),
                        d20.engine.advanced_fog.revealed_cells[e][n.get("id")].add(c);
                    r && !a.length && d20.engine.advanced_fog.revealed_cells.gm[n.get("id")].add(c)
                }
                i || d20.engine.advanced_fog.visible_cells[e.get("id")].push(c)
            }
            (a || r) && (d20.engine.advanced_fog.players_needing_update = _.union(d20.engine.advanced_fog.players_needing_update, Array.from(t)))
        }
        d20.engine.redrawScreenNextTick()
    }
    ,
    d20.engine.advanced_fog.updateAllVision = function(e) {
        const t = d20.Campaign.activePage()
          , n = e || {};
        if (d20.engine.page_loaded && t && t.get("adv_fow_enabled") && window.largefeats && (!n.vision_only || !t.get("showlighting")))
            for (const e of t.thegraphics.models)
                d20.engine.advanced_fog.updateFromToken(e, n)
    }
    ,
    d20.engine.advanced_fog.getVisibleCells = function() {
        if (!d20.engine.page_loaded)
            return [];
        const e = d20.Campaign.activePage()
          , t = [];
        let n;
        if (window.is_gm && d20.engine.lightOnlySelected && d20.engine.lightOnlySelected.length) {
            n = [];
            for (const i of d20.engine.lightOnlySelected) {
                const o = d20.Campaign.characters.get(i.model.get("represents"))
                  , r = i.model.get("controlledby").length > 0 || o && o.get("controlledby").length > 0;
                (i.model.get("light_hassight") || +i.model.get("adv_fow_view_distance")) && (r || e.get("adv_fow_gm_see_all")) ? n = _.union(n, d20.engine.advanced_fog.visible_cells[i.model.get("id")]) : d20.engine.advanced_fog.visible_cells[i.model.get("id")] && !e.get("adv_fow_gm_see_all") && t.push(i.model.get("id"))
            }
        } else {
            const i = new RegExp(`^(all|${window.currentPlayer.id})$`);
            n = _.chain(d20.engine.advanced_fog.visible_cells).filter((n,o)=>{
                const r = e.thegraphics.get(o);
                if (r && (r.get("light_hassight") || +r.get("adv_fow_view_distance"))) {
                    const n = d20.Campaign.characters.get(r.get("represents"));
                    let a = r.get("controlledby").split(",");
                    if (n && (a = a.concat(n.get("controlledby").split(","))),
                    0 !== (a = _.compact(a)).length || window.is_gm && e.get("adv_fow_gm_see_all")) {
                        if (window.is_gm || _.some(a, e=>i.test(e)))
                            return !0
                    } else
                        t.push(o)
                } else
                    t.push(o);
                return !1
            }
            ).values().flatten().uniq().value()
        }
        for (const e of t)
            delete d20.engine.advanced_fog.visible_cells[e];
        return n
    }
    ,
    d20.engine.advanced_fog.getRevealedCells = function() {
        if (!d20.engine.page_loaded)
            return new Set;
        const e = d20.Campaign.activePage();
        let t;
        if (window.is_gm) {
            const n = e.get("adv_fow_gm_see_all")
              , i = _.pluck(d20.Campaign.players.models, "id");
            let o;
            if (d20.engine.lightOnlySelected && d20.engine.lightOnlySelected.length > 0) {
                o = [];
                for (const e of d20.engine.lightOnlySelected) {
                    const t = d20.Campaign.characters.get(e.model.get("represents"));
                    o = o.concat(e.model.get("controlledby").split(","), t ? t.get("controlledby").split(",") : [])
                }
                o = _.chain(o).uniq().compact().value(),
                _.contains(o, "all") && (o = _.pluck(d20.Campaign.players.models, "id")),
                n && !o.length && o.push("gm")
            } else
                o = _.pluck(d20.Campaign.players.models, "id"),
                n && o.push("gm");
            t = new Set;
            for (const n of o)
                if ("gm" === n || _.contains(i, n))
                    for (const i of d20.engine.advanced_fog.revealed_cells[n][e.get("id")].values())
                        t.add(i)
        } else
            t = d20.engine.advanced_fog.revealed_cells[window.currentPlayer.id][e.get("id")];
        return t
    }
    ,
    d20.engine.advanced_fog.clearPage = function(e) {
        const t = e !== undefined && d20.Campaign.pages.get(e) || d20.Campaign.activePage();
        d20.Campaign.players.each(function(e) {
            const n = JSON.parse(e.get("adv_fow_revealed"));
            n[t.get("id")] && (n[t.get("id")] = [],
            e.save({
                adv_fow_revealed: JSON.stringify(n)
            })),
            d20.engine.advanced_fog.revealed_cells[e.get("id")][t.get("id")] = new Set
        }),
        d20.engine.advanced_fog.revealed_cells.gm && (d20.engine.advanced_fog.revealed_cells.gm[t.get("id")] = new Set),
        t === d20.Campaign.activePage() && (d20.engine.advanced_fog.visible_cells = {},
        d20.engine.advanced_fog.updateAllVision(),
        d20.engine.redrawScreenNextTick())
    }
    ,
    d20.DicePEG = function() {
        function quote(e) {
            return '"' + e.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\x08/g, "\\b").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\f/g, "\\f").replace(/\r/g, "\\r").replace(/[\x00-\x07\x0B\x0E-\x1F\x80-\uFFFF]/g, escape) + '"'
        }
        var result = {
            parse: function(input, startRule) {
                function padLeft(e, t, n) {
                    for (var i = e, o = n - e.length, r = 0; r < o; r++)
                        i = t + i;
                    return i
                }
                function escape(e) {
                    var t, n, i = e.charCodeAt(0);
                    return i <= 255 ? (t = "x",
                    n = 2) : (t = "u",
                    n = 4),
                    "\\" + t + padLeft(i.toString(16).toUpperCase(), "0", n)
                }
                function matchFailed(e) {
                    pos < rightmostFailuresPos || (pos > rightmostFailuresPos && (rightmostFailuresPos = pos,
                    rightmostFailuresExpected = []),
                    rightmostFailuresExpected.push(e))
                }
                function parse_start() {
                    var e, t, n, i, o, r, a;
                    if (i = pos,
                    o = pos,
                    null !== (e = parse_rollExpression())) {
                        for (t = [],
                        input.length > pos ? (n = input.charAt(pos),
                        pos++) : (n = null,
                        0 === reportFailures && matchFailed("any character")); null !== n; )
                            t.push(n),
                            input.length > pos ? (n = input.charAt(pos),
                            pos++) : (n = null,
                            0 === reportFailures && matchFailed("any character"));
                        null !== t ? e = [e, t] : (e = null,
                        pos = o)
                    } else
                        e = null,
                        pos = o;
                    return null !== e && (r = e[0],
                    a = e[1],
                    Array.isArray(r) || (r = [r]),
                    "" !== a && (a = a.join("")).trim().length > 0 && r.push(new Comment(a)),
                    e = r),
                    null === e && (pos = i),
                    e
                }
                function parse_rollExpression() {
                    var e, t, n, i, o, r, a, s, l;
                    return i = pos,
                    o = pos,
                    null !== (e = parse_rollExpressionPrimary()) && null !== (t = parse_labelAwareRollOperator()) && null !== (n = parse_rollExpression()) ? e = [e, t, n] : (e = null,
                    pos = o),
                    null !== e && (r = e[0],
                    a = e[1],
                    s = e[2],
                    e = mergeExpressions(mergeExpressions(r, a), s)),
                    null === e && (pos = i),
                    null === e && (i = pos,
                    o = pos,
                    null !== (e = parse_rollExpressionPrimary()) && null !== (t = parse_inlineLabelWithSpace()) ? e = [e, t] : (e = null,
                    pos = o),
                    null !== e && (e = mergeExpressions(e[0], e[1])),
                    null === e && (pos = i),
                    null === e && (i = pos,
                    o = pos,
                    null !== (e = parse_inlineLabelWithSpace()) && null !== (t = parse_rollExpression()) ? e = [e, t] : (e = null,
                    pos = o),
                    null !== e && (e = mergeExpressions(e[0], e[1])),
                    null === e && (pos = i),
                    null === e && (i = pos,
                    null !== (e = parse_rollExpressionPrimary()) && (l = e,
                    Array.isArray(l) || (l = [l]),
                    e = l),
                    null === e && (pos = i)))),
                    e
                }
                function parse_rollExpressionPrimary() {
                    var e, t, n, i, o, r, a, s;
                    return r = pos,
                    a = pos,
                    null !== (e = parse_fullRoll()) ? (s = pos,
                    reportFailures++,
                    t = parse_validRollSuffix(),
                    reportFailures--,
                    null !== t ? (t = "",
                    pos = s) : t = null,
                    null !== t ? e = [e, t] : (e = null,
                    pos = a)) : (e = null,
                    pos = a),
                    null !== e && (e = e[0]),
                    null === e && (pos = r),
                    null === e && (r = pos,
                    a = pos,
                    null !== (e = parse_rollGroup()) ? (s = pos,
                    reportFailures++,
                    t = parse_validRollSuffix(),
                    reportFailures--,
                    null !== t ? (t = "",
                    pos = s) : t = null,
                    null !== t ? e = [e, t] : (e = null,
                    pos = a)) : (e = null,
                    pos = a),
                    null !== e && (e = e[0]),
                    null === e && (pos = r),
                    null === e && (r = pos,
                    null !== (e = parse_number()) && (e = new MathExpression(e)),
                    null === e && (pos = r),
                    null === e && (r = pos,
                    a = pos,
                    "floor(" === input.substr(pos, 6) ? (e = "floor(",
                    pos += 6) : (e = null,
                    0 === reportFailures && matchFailed('"floor("')),
                    null !== e && null !== (t = parse__()) && null !== (n = parse_rollExpression()) && null !== (i = parse__()) ? (41 === input.charCodeAt(pos) ? (o = ")",
                    pos++) : (o = null,
                    0 === reportFailures && matchFailed('")"')),
                    null !== o ? e = [e, t, n, i, o] : (e = null,
                    pos = a)) : (e = null,
                    pos = a),
                    null !== e && (e = mergeExpressions("floor(", mergeExpressions(e[2], ")"))),
                    null === e && (pos = r),
                    null === e && (r = pos,
                    a = pos,
                    "ceil(" === input.substr(pos, 5) ? (e = "ceil(",
                    pos += 5) : (e = null,
                    0 === reportFailures && matchFailed('"ceil("')),
                    null !== e && null !== (t = parse__()) && null !== (n = parse_rollExpression()) && null !== (i = parse__()) ? (41 === input.charCodeAt(pos) ? (o = ")",
                    pos++) : (o = null,
                    0 === reportFailures && matchFailed('")"')),
                    null !== o ? e = [e, t, n, i, o] : (e = null,
                    pos = a)) : (e = null,
                    pos = a),
                    null !== e && (e = mergeExpressions("ceil(", mergeExpressions(e[2], ")"))),
                    null === e && (pos = r),
                    null === e && (r = pos,
                    a = pos,
                    "round(" === input.substr(pos, 6) ? (e = "round(",
                    pos += 6) : (e = null,
                    0 === reportFailures && matchFailed('"round("')),
                    null !== e && null !== (t = parse__()) && null !== (n = parse_rollExpression()) && null !== (i = parse__()) ? (41 === input.charCodeAt(pos) ? (o = ")",
                    pos++) : (o = null,
                    0 === reportFailures && matchFailed('")"')),
                    null !== o ? e = [e, t, n, i, o] : (e = null,
                    pos = a)) : (e = null,
                    pos = a),
                    null !== e && (e = mergeExpressions("round(", mergeExpressions(e[2], ")"))),
                    null === e && (pos = r),
                    null === e && (r = pos,
                    a = pos,
                    "abs(" === input.substr(pos, 4) ? (e = "abs(",
                    pos += 4) : (e = null,
                    0 === reportFailures && matchFailed('"abs("')),
                    null !== e && null !== (t = parse__()) && null !== (n = parse_rollExpression()) && null !== (i = parse__()) ? (41 === input.charCodeAt(pos) ? (o = ")",
                    pos++) : (o = null,
                    0 === reportFailures && matchFailed('")"')),
                    null !== o ? e = [e, t, n, i, o] : (e = null,
                    pos = a)) : (e = null,
                    pos = a),
                    null !== e && (e = mergeExpressions("abs(", mergeExpressions(e[2], ")"))),
                    null === e && (pos = r),
                    null === e && (r = pos,
                    a = pos,
                    40 === input.charCodeAt(pos) ? (e = "(",
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed('"("')),
                    null !== e && null !== (t = parse__()) && null !== (n = parse_rollExpression()) && null !== (i = parse__()) ? (41 === input.charCodeAt(pos) ? (o = ")",
                    pos++) : (o = null,
                    0 === reportFailures && matchFailed('")"')),
                    null !== o ? e = [e, t, n, i, o] : (e = null,
                    pos = a)) : (e = null,
                    pos = a),
                    null !== e && (e = mergeExpressions("(", mergeExpressions(e[2], ")"))),
                    null === e && (pos = r)))))))),
                    e
                }
                function parse_validRollSuffix() {
                    var e, t;
                    return null === (e = parse___()) && null === (e = parse_inlineLabelWithSpace()) && (125 === input.charCodeAt(pos) ? (e = "}",
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed('"}"')),
                    null === e && (44 === input.charCodeAt(pos) ? (e = ",",
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed('","')),
                    null === e && (41 === input.charCodeAt(pos) ? (e = ")",
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed('")"')),
                    null === e && (t = pos,
                    reportFailures++,
                    e = parse_operator(),
                    reportFailures--,
                    null !== e ? (e = "",
                    pos = t) : e = null,
                    null === e && (t = pos,
                    reportFailures++,
                    input.length > pos ? (e = input.charAt(pos),
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed("any character")),
                    reportFailures--,
                    null === e ? e = "" : (e = null,
                    pos = t)))))),
                    e
                }
                function parse_rollGroup() {
                    var e, t, n, i, o, r, a, s;
                    return a = pos,
                    s = pos,
                    123 === input.charCodeAt(pos) ? (e = "{",
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed('"{"')),
                    null !== e && null !== (t = parse__()) && null !== (n = parse_rollGroupExpression()) && null !== (i = parse__()) ? (125 === input.charCodeAt(pos) ? (o = "}",
                    pos++) : (o = null,
                    0 === reportFailures && matchFailed('"}"')),
                    null !== o && null !== (r = null !== (r = parse_groupMods()) ? r : "") ? e = [e, t, n, i, o, r] : (e = null,
                    pos = s)) : (e = null,
                    pos = s),
                    null !== e && (e = new GroupExpression(e[2],e[5])),
                    null === e && (pos = a),
                    e
                }
                function parse_rollGroupExpression() {
                    var e, t, n, i, o, r, a, s, l;
                    return r = pos,
                    a = pos,
                    null === (e = parse_rollExpression()) && (e = parse_rollGroup()),
                    null !== e && null !== (t = parse__()) ? (44 === input.charCodeAt(pos) ? (n = ",",
                    pos++) : (n = null,
                    0 === reportFailures && matchFailed('","')),
                    null !== n && null !== (i = parse__()) && null !== (o = parse_rollGroupExpression()) ? e = [e, t, n, i, o] : (e = null,
                    pos = a)) : (e = null,
                    pos = a),
                    null !== e && (s = e[0],
                    l = e[4],
                    Array.isArray(s) || (s = [s]),
                    e = "" !== l ? [s].concat(l) : s),
                    null === e && (pos = r),
                    null === e && (r = pos,
                    null === (e = parse_rollExpression()) && (e = parse_rollGroup()),
                    null !== e && (e = [e]),
                    null === e && (pos = r)),
                    e
                }
                function parse_labelAwareRollOperator() {
                    var e, t, n, i, o;
                    if (i = pos,
                    o = pos,
                    null !== (e = parse_rollOperator())) {
                        for (t = [],
                        null === (n = parse_rollOperator()) && (n = parse_inlineLabelWithSpace()); null !== n; )
                            t.push(n),
                            null === (n = parse_rollOperator()) && (n = parse_inlineLabelWithSpace());
                        null !== t ? e = [e, t] : (e = null,
                        pos = o)
                    } else
                        e = null,
                        pos = o;
                    return null !== e && (e = function(e, t, n) {
                        for (var i = t, o = 0; o < n.length; o++)
                            i = mergeExpressions(i, n[o]);
                        return i
                    }(0, e[0], e[1])),
                    null === e && (pos = i),
                    null === e && (i = pos,
                    o = pos,
                    null !== (e = parse_inlineLabelWithSpace()) && null !== (t = parse_labelAwareRollOperator()) ? e = [e, t] : (e = null,
                    pos = o),
                    null !== e && (e = mergeExpressions(e[0], e[1])),
                    null === e && (pos = i)),
                    e
                }
                function parse_rollOperator() {
                    var e, t, n, i, o, r, a, s, l;
                    return s = pos,
                    l = pos,
                    null !== (e = parse__()) && null !== (t = parse_operator()) && null !== (n = parse__()) && null !== (i = parse_mathExpressionPrimary()) && null !== (o = parse__()) && null !== (r = parse_rollOperator()) && null !== (a = parse__()) ? e = [e, t, n, i, o, r, a] : (e = null,
                    pos = l),
                    null !== e && (e = e[1] + e[3] + e[5]),
                    null === e && (pos = s),
                    null === e && (s = pos,
                    l = pos,
                    null !== (e = parse__()) && null !== (t = parse_operator()) && null !== (n = parse__()) ? e = [e, t, n] : (e = null,
                    pos = l),
                    null !== e && (e = e[1]),
                    null === e && (pos = s)),
                    e
                }
                function parse_fullRoll() {
                    var e, t, n, i, o, r, a;
                    return i = pos,
                    o = pos,
                    null !== (e = parse_coreRoll()) && null !== (t = null !== (t = parse_rollMods()) ? t : "") ? e = [e, t] : (e = null,
                    pos = o),
                    null !== e && (r = e[0],
                    "" !== (a = e[1]) && (r.mods = a),
                    e = r),
                    null === e && (pos = i),
                    null === e && (i = pos,
                    o = pos,
                    null !== (e = parse_numberOfDice()) ? ("t" === input.substr(pos, 1).toLowerCase() ? (t = input.substr(pos, 1),
                    pos++) : (t = null,
                    0 === reportFailures && matchFailed('"t"')),
                    null !== t && null !== (n = parse_inlineLabel()) ? e = [e, t, n] : (e = null,
                    pos = o)) : (e = null,
                    pos = o),
                    null !== e && (e = new TableRollExpression(e[0],e[2].text)),
                    null === e && (pos = i)),
                    e
                }
                function parse_coreRoll() {
                    var e, t, n, i, o;
                    return i = pos,
                    o = pos,
                    null !== (e = parse_numberOfDice()) ? ("d" === input.substr(pos, 1).toLowerCase() ? (t = input.substr(pos, 1),
                    pos++) : (t = null,
                    0 === reportFailures && matchFailed('"d"')),
                    null !== t ? ("f" === input.substr(pos, 1).toLowerCase() ? (n = input.substr(pos, 1),
                    pos++) : (n = null,
                    0 === reportFailures && matchFailed('"f"')),
                    null !== n ? e = [e, t, n] : (e = null,
                    pos = o)) : (e = null,
                    pos = o)) : (e = null,
                    pos = o),
                    null !== e && (e = new FateRollExpression(e[0])),
                    null === e && (pos = i),
                    null === e && (i = pos,
                    o = pos,
                    null !== (e = parse_numberOfDice()) ? ("d" === input.substr(pos, 1).toLowerCase() ? (t = input.substr(pos, 1),
                    pos++) : (t = null,
                    0 === reportFailures && matchFailed('"d"')),
                    null !== t && null !== (n = parse_numberOfSides()) ? e = [e, t, n] : (e = null,
                    pos = o)) : (e = null,
                    pos = o),
                    null !== e && (e = new RollExpression(e[0],e[2])),
                    null === e && (pos = i)),
                    e
                }
                function parse_numberOfDice() {
                    var result0, result1, result2, result3, result4, pos0, pos1;
                    return result0 = parse_integer(),
                    null === result0 && (pos0 = pos,
                    pos1 = pos,
                    40 === input.charCodeAt(pos) ? (result0 = "(",
                    pos++) : (result0 = null,
                    0 === reportFailures && matchFailed('"("')),
                    null !== result0 ? (result1 = parse__(),
                    null !== result1 ? (result2 = parse_mathExpression(),
                    null !== result2 ? (result3 = parse__(),
                    null !== result3 ? (41 === input.charCodeAt(pos) ? (result4 = ")",
                    pos++) : (result4 = null,
                    0 === reportFailures && matchFailed('")"')),
                    null !== result4 ? result0 = [result0, result1, result2, result3, result4] : (result0 = null,
                    pos = pos1)) : (result0 = null,
                    pos = pos1)) : (result0 = null,
                    pos = pos1)) : (result0 = null,
                    pos = pos1)) : (result0 = null,
                    pos = pos1),
                    null !== result0 && (result0 = function(offset, expr) {
                        return Math.round(eval("(" + expr + ")"))
                    }(pos0, result0[2])),
                    null === result0 && (pos = pos0),
                    null === result0 && (pos0 = pos,
                    result0 = "",
                    null !== result0 && (result0 = 1),
                    null === result0 && (pos = pos0))),
                    result0
                }
                function parse_numberOfSides() {
                    var result0, result1, result2, result3, result4, pos0, pos1;
                    return result0 = parse_integer(),
                    null === result0 && (pos0 = pos,
                    pos1 = pos,
                    40 === input.charCodeAt(pos) ? (result0 = "(",
                    pos++) : (result0 = null,
                    0 === reportFailures && matchFailed('"("')),
                    null !== result0 ? (result1 = parse__(),
                    null !== result1 ? (result2 = parse_mathExpression(),
                    null !== result2 ? (result3 = parse__(),
                    null !== result3 ? (41 === input.charCodeAt(pos) ? (result4 = ")",
                    pos++) : (result4 = null,
                    0 === reportFailures && matchFailed('")"')),
                    null !== result4 ? result0 = [result0, result1, result2, result3, result4] : (result0 = null,
                    pos = pos1)) : (result0 = null,
                    pos = pos1)) : (result0 = null,
                    pos = pos1)) : (result0 = null,
                    pos = pos1)) : (result0 = null,
                    pos = pos1),
                    null !== result0 && (result0 = function(offset, expr) {
                        return Math.round(eval("(" + expr + ")"))
                    }(pos0, result0[2])),
                    null === result0 && (pos = pos0),
                    null === result0 && (pos0 = pos,
                    "f" === input.substr(pos, 1).toLowerCase() ? (result0 = input.substr(pos, 1),
                    pos++) : (result0 = null,
                    0 === reportFailures && matchFailed('"f"')),
                    null !== result0 && (result0 = "F"),
                    null === result0 && (pos = pos0))),
                    result0
                }
                function parse_groupMods() {
                    var e, t, n, i, o;
                    if (i = pos,
                    o = pos,
                    null === (e = parse_keepMod()) && null === (e = parse_dropMod()) && null === (e = parse_multipleMod()) && null === (e = parse_matchTotalMod()) && null === (e = parse_matchMod()) && (e = parse_successMod()),
                    null !== e) {
                        for (t = [],
                        n = parse_groupMods(); null !== n; )
                            t.push(n),
                            n = parse_groupMods();
                        null !== t ? e = [e, t] : (e = null,
                        pos = o)
                    } else
                        e = null,
                        pos = o;
                    return null !== e && (e = processMods(e[0], e[1])),
                    null === e && (pos = i),
                    e
                }
                function parse_rollMods() {
                    var e, t, n, i, o;
                    if (i = pos,
                    o = pos,
                    null === (e = parse_compoundingMod()) && null === (e = parse_penetratingMod()) && null === (e = parse_explodingMod()) && null === (e = parse_keepMod()) && null === (e = parse_dropMod()) && null === (e = parse_rerollOnceMod()) && null === (e = parse_rerollMod()) && null === (e = parse_customCritMod()) && null === (e = parse_customFumbleMod()) && null === (e = parse_sortMod()) && null === (e = parse_matchTotalMod()) && null === (e = parse_matchMod()) && (e = parse_successMod()),
                    null !== e) {
                        for (t = [],
                        n = parse_rollMods(); null !== n; )
                            t.push(n),
                            n = parse_rollMods();
                        null !== t ? e = [e, t] : (e = null,
                        pos = o)
                    } else
                        e = null,
                        pos = o;
                    return null !== e && (e = processMods(e[0], e[1])),
                    null === e && (pos = i),
                    e
                }
                function parse_explodingMod() {
                    var e, t, n, i;
                    return n = pos,
                    i = pos,
                    33 === input.charCodeAt(pos) ? (e = "!",
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed('"!"')),
                    null !== e && null !== (t = null !== (t = parse_comparisonPoint()) ? t : "") ? e = [e, t] : (e = null,
                    pos = i),
                    null !== e && (e = {
                        exploding: e[1]
                    }),
                    null === e && (pos = n),
                    e
                }
                function parse_compoundingMod() {
                    var e, t, n, i;
                    return n = pos,
                    i = pos,
                    "!!" === input.substr(pos, 2) ? (e = "!!",
                    pos += 2) : (e = null,
                    0 === reportFailures && matchFailed('"!!"')),
                    null !== e && null !== (t = null !== (t = parse_comparisonPoint()) ? t : "") ? e = [e, t] : (e = null,
                    pos = i),
                    null !== e && (e = {
                        compounding: e[1]
                    }),
                    null === e && (pos = n),
                    e
                }
                function parse_penetratingMod() {
                    var e, t, n, i, o;
                    return i = pos,
                    o = pos,
                    33 === input.charCodeAt(pos) ? (e = "!",
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed('"!"')),
                    null !== e ? ("p" === input.substr(pos, 1).toLowerCase() ? (t = input.substr(pos, 1),
                    pos++) : (t = null,
                    0 === reportFailures && matchFailed('"p"')),
                    null !== t && null !== (n = null !== (n = parse_comparisonPoint()) ? n : "") ? e = [e, t, n] : (e = null,
                    pos = o)) : (e = null,
                    pos = o),
                    null !== e && (e = {
                        penetrating: e[2]
                    }),
                    null === e && (pos = i),
                    e
                }
                function parse_keepMod() {
                    var e, t, n, i, o, r, a;
                    return i = pos,
                    o = pos,
                    "k" === input.substr(pos, 1).toLowerCase() ? (e = input.substr(pos, 1),
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed('"k"')),
                    null !== e ? (/^['h'|'l']/i.test(input.charAt(pos)) ? (t = input.charAt(pos),
                    pos++) : (t = null,
                    0 === reportFailures && matchFailed("['h'|'l']i")),
                    null !== (t = null !== t ? t : "") && null !== (n = parse_integer()) ? e = [e, t, n] : (e = null,
                    pos = o)) : (e = null,
                    pos = o),
                    null !== e && (r = e[1],
                    a = e[2],
                    e = {
                        keep: {
                            end: r.toLowerCase() || "h",
                            count: a
                        }
                    }),
                    null === e && (pos = i),
                    e
                }
                function parse_dropMod() {
                    var e, t, n, i, o, r, a;
                    return i = pos,
                    o = pos,
                    "d" === input.substr(pos, 1).toLowerCase() ? (e = input.substr(pos, 1),
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed('"d"')),
                    null !== e ? (/^['h'|'l']/i.test(input.charAt(pos)) ? (t = input.charAt(pos),
                    pos++) : (t = null,
                    0 === reportFailures && matchFailed("['h'|'l']i")),
                    null !== (t = null !== t ? t : "") && null !== (n = parse_integer()) ? e = [e, t, n] : (e = null,
                    pos = o)) : (e = null,
                    pos = o),
                    null !== e && (r = e[1],
                    a = e[2],
                    e = {
                        drop: {
                            end: r.toLowerCase() || "l",
                            count: a
                        }
                    }),
                    null === e && (pos = i),
                    e
                }
                function parse_customCritMod() {
                    var e, t, n, i, o, r, a, s;
                    return i = pos,
                    o = pos,
                    "cs" === input.substr(pos, 2).toLowerCase() ? (e = input.substr(pos, 2),
                    pos += 2) : (e = null,
                    0 === reportFailures && matchFailed('"cs"')),
                    null !== e && null !== (t = null !== (t = parse_comparisonPoint()) ? t : "") && null !== (n = null !== (n = parse_customCritMod()) ? n : "") ? e = [e, t, n] : (e = null,
                    pos = o),
                    null !== e && (r = e[1],
                    a = e[2],
                    s = {
                        customCrit: "" !== r ? [r] : [{}]
                    },
                    "" !== a && (s.customCrit = s.customCrit.concat(a.customCrit)),
                    e = s),
                    null === e && (pos = i),
                    e
                }
                function parse_customFumbleMod() {
                    var e, t, n, i, o, r, a, s;
                    return i = pos,
                    o = pos,
                    "cf" === input.substr(pos, 2).toLowerCase() ? (e = input.substr(pos, 2),
                    pos += 2) : (e = null,
                    0 === reportFailures && matchFailed('"cf"')),
                    null !== e && null !== (t = null !== (t = parse_comparisonPoint()) ? t : "") && null !== (n = null !== (n = parse_customFumbleMod()) ? n : "") ? e = [e, t, n] : (e = null,
                    pos = o),
                    null !== e && (r = e[1],
                    a = e[2],
                    s = {
                        customFumble: "" !== r ? [r] : [{}]
                    },
                    "" !== a && (s.customFumble = s.customFumble.concat(a.customFumble)),
                    e = s),
                    null === e && (pos = i),
                    e
                }
                function parse_rerollMod() {
                    var e, t, n, i, o, r, a, s;
                    return i = pos,
                    o = pos,
                    "r" === input.substr(pos, 1).toLowerCase() ? (e = input.substr(pos, 1),
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed('"r"')),
                    null !== e && null !== (t = null !== (t = parse_comparisonPoint()) ? t : "") && null !== (n = null !== (n = parse_rerollMod()) ? n : "") ? e = [e, t, n] : (e = null,
                    pos = o),
                    null !== e && (r = e[1],
                    a = e[2],
                    s = {
                        reroll: "" !== r ? [r] : [{}]
                    },
                    "" !== a && (s.reroll = s.reroll.concat(a.reroll)),
                    e = s),
                    null === e && (pos = i),
                    e
                }
                function parse_rerollOnceMod() {
                    var e, t, n, i, o, r, a, s;
                    return i = pos,
                    o = pos,
                    "ro" === input.substr(pos, 2).toLowerCase() ? (e = input.substr(pos, 2),
                    pos += 2) : (e = null,
                    0 === reportFailures && matchFailed('"ro"')),
                    null !== e && null !== (t = null !== (t = parse_comparisonPoint()) ? t : "") && null !== (n = null !== (n = parse_rerollMod()) ? n : "") ? e = [e, t, n] : (e = null,
                    pos = o),
                    null !== e && (r = e[1],
                    a = e[2],
                    s = {
                        reroll: "" !== r ? [r] : [{}]
                    },
                    "" !== a && (s.reroll = s.reroll.concat(a.reroll)),
                    s.reroll && s.reroll[0] && (s.reroll[0].maxrerolls = 1),
                    e = s),
                    null === e && (pos = i),
                    e
                }
                function parse_sortMod() {
                    var e, t, n, i;
                    return n = pos,
                    i = pos,
                    "s" === input.substr(pos, 1).toLowerCase() ? (e = input.substr(pos, 1),
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed('"s"')),
                    null !== e ? (/^['a'|'d']/i.test(input.charAt(pos)) ? (t = input.charAt(pos),
                    pos++) : (t = null,
                    0 === reportFailures && matchFailed("['a'|'d']i")),
                    null !== (t = null !== t ? t : "") ? e = [e, t] : (e = null,
                    pos = i)) : (e = null,
                    pos = i),
                    null !== e && (e = {
                        sort: {
                            order: e[1].toLowerCase() || "a"
                        }
                    }),
                    null === e && (pos = n),
                    e
                }
                function parse_floorMod() {
                    var e, t;
                    return t = pos,
                    "flr" === input.substr(pos, 3) ? (e = "flr",
                    pos += 3) : (e = null,
                    0 === reportFailures && matchFailed('"flr"')),
                    null !== e && (e = {
                        round: {
                            type: "floor"
                        }
                    }),
                    null === e && (pos = t),
                    e
                }
                function parse_multipleMod() {
                    var e, t, n, i;
                    return n = pos,
                    i = pos,
                    "x" === input.substr(pos, 1).toLowerCase() ? (e = input.substr(pos, 1),
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed('"x"')),
                    null !== e && null !== (t = parse_integer()) ? e = [e, t] : (e = null,
                    pos = i),
                    null !== e && (e = {
                        multiple: {
                            times: e[1]
                        }
                    }),
                    null === e && (pos = n),
                    e
                }
                function parse_successMod() {
                    var e, t, n, i, o, r, a, s, l;
                    return i = pos,
                    o = pos,
                    null !== (e = parse_comparisonPoint()) ? (r = pos,
                    "f" === input.substr(pos, 1).toLowerCase() ? (t = input.substr(pos, 1),
                    pos++) : (t = null,
                    0 === reportFailures && matchFailed('"f"')),
                    null !== t && null !== (n = parse_comparisonPoint()) ? t = [t, n] : (t = null,
                    pos = r),
                    null !== (t = null !== t ? t : "") ? e = [e, t] : (e = null,
                    pos = o)) : (e = null,
                    pos = o),
                    null !== e && (a = e[0],
                    s = e[1],
                    l = {
                        success: a
                    },
                    "" !== s && (l.failure = s[1]),
                    e = l),
                    null === e && (pos = i),
                    e
                }
                function parse_matchMod() {
                    var e, t, n, i, o, r, a, s;
                    return i = pos,
                    o = pos,
                    109 === input.charCodeAt(pos) ? (e = "m",
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed('"m"')),
                    null !== e && null !== (t = parse_matchThreshold()) && null !== (n = null !== (n = parse_comparisonPoint()) ? n : "") ? e = [e, t, n] : (e = null,
                    pos = o),
                    null !== e && (r = e[1],
                    a = e[2],
                    (s = {
                        match: "" !== a ? a : {}
                    }).match.threshold = r,
                    e = s),
                    null === e && (pos = i),
                    e
                }
                function parse_matchTotalMod() {
                    var e, t, n, i, o, r, a, s;
                    return i = pos,
                    o = pos,
                    "mt" === input.substr(pos, 2) ? (e = "mt",
                    pos += 2) : (e = null,
                    0 === reportFailures && matchFailed('"mt"')),
                    null !== e && null !== (t = parse_matchThreshold()) && null !== (n = null !== (n = parse_comparisonPoint()) ? n : "") ? e = [e, t, n] : (e = null,
                    pos = o),
                    null !== e && (r = e[1],
                    a = e[2],
                    (s = {
                        match: "" !== a ? a : {}
                    }).match.threshold = r,
                    s.match.total = !0,
                    e = s),
                    null === e && (pos = i),
                    e
                }
                function parse_matchThreshold() {
                    var e, t, n, i;
                    for (n = pos,
                    e = [],
                    /^[0-9]/.test(input.charAt(pos)) ? (t = input.charAt(pos),
                    pos++) : (t = null,
                    0 === reportFailures && matchFailed("[0-9]")); null !== t; )
                        e.push(t),
                        /^[0-9]/.test(input.charAt(pos)) ? (t = input.charAt(pos),
                        pos++) : (t = null,
                        0 === reportFailures && matchFailed("[0-9]"));
                    return null !== e && (e = (i = e) && i != [] && parseInt(i.join(""), 10) > 2 ? parseInt(i.join(""), 10) : 2),
                    null === e && (pos = n),
                    e
                }
                function parse_comparisonPoint() {
                    var e, t, n, i, o;
                    return n = pos,
                    i = pos,
                    null !== (e = null !== (e = parse_comparison()) ? e : "") && null !== (t = parse_integer()) ? e = [e, t] : (e = null,
                    pos = i),
                    null !== e && (e = {
                        comp: ("" == (o = e[0]) ? "=" : o) + "=",
                        point: e[1]
                    }),
                    null === e && (pos = n),
                    e
                }
                function parse_comparison() {
                    var e;
                    return /^[>|<|=]/.test(input.charAt(pos)) ? (e = input.charAt(pos),
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed("[>|<|=]")),
                    e
                }
                function parse_mathExpression() {
                    var e, t, n, i, o, r, a, s, l;
                    return s = pos,
                    l = pos,
                    null !== (e = parse__()) && null !== (t = parse_mathExpressionPrimary()) && null !== (n = parse__()) && null !== (i = parse_operator()) && null !== (o = parse__()) && null !== (r = parse_mathExpression()) && null !== (a = parse__()) ? e = [e, t, n, i, o, r, a] : (e = null,
                    pos = l),
                    null !== e && (e = e[1] + e[3] + e[5]),
                    null === e && (pos = s),
                    null === e && (s = pos,
                    l = pos,
                    null !== (e = parse__()) && null !== (t = parse_mathExpressionPrimary()) && null !== (n = parse__()) ? e = [e, t, n] : (e = null,
                    pos = l),
                    null !== e && (e = e[1]),
                    null === e && (pos = s)),
                    e
                }
                function parse_mathExpressionPrimary() {
                    var e, t, n, i, o, r, a;
                    return r = pos,
                    a = pos,
                    null !== (e = parse__()) && null !== (t = parse_number()) && null !== (n = parse__()) ? e = [e, t, n] : (e = null,
                    pos = a),
                    null !== e && (e = e[1]),
                    null === e && (pos = r),
                    null === e && (r = pos,
                    a = pos,
                    40 === input.charCodeAt(pos) ? (e = "(",
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed('"("')),
                    null !== e && null !== (t = parse__()) && null !== (n = parse_mathExpression()) && null !== (i = parse__()) ? (41 === input.charCodeAt(pos) ? (o = ")",
                    pos++) : (o = null,
                    0 === reportFailures && matchFailed('")"')),
                    null !== o ? e = [e, t, n, i, o] : (e = null,
                    pos = a)) : (e = null,
                    pos = a),
                    null !== e && (e = "(" + e[2] + ")"),
                    null === e && (pos = r)),
                    e
                }
                function parse_inlineLabelWithSpace() {
                    var e, t, n, i, o;
                    return i = pos,
                    o = pos,
                    null !== (e = parse__()) && null !== (t = parse_inlineLabel()) && null !== (n = parse__()) ? e = [e, t, n] : (e = null,
                    pos = o),
                    null !== e && (e = e[1]),
                    null === e && (pos = i),
                    e
                }
                function parse_inlineLabel() {
                    var e, t, n, i, o;
                    if (i = pos,
                    o = pos,
                    91 === input.charCodeAt(pos) ? (e = "[",
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed('"["')),
                    null !== e) {
                        for (t = [],
                        /^[^\]]/.test(input.charAt(pos)) ? (n = input.charAt(pos),
                        pos++) : (n = null,
                        0 === reportFailures && matchFailed("[^\\]]")); null !== n; )
                            t.push(n),
                            /^[^\]]/.test(input.charAt(pos)) ? (n = input.charAt(pos),
                            pos++) : (n = null,
                            0 === reportFailures && matchFailed("[^\\]]"));
                        null !== t ? (93 === input.charCodeAt(pos) ? (n = "]",
                        pos++) : (n = null,
                        0 === reportFailures && matchFailed('"]"')),
                        null !== n ? e = [e, t, n] : (e = null,
                        pos = o)) : (e = null,
                        pos = o)
                    } else
                        e = null,
                        pos = o;
                    return null !== e && (e = new Label(e[1].join(""))),
                    null === e && (pos = i),
                    e
                }
                function parse_operator() {
                    var e;
                    return /^[+|\-|*|\/|%]/.test(input.charAt(pos)) ? (e = input.charAt(pos),
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed("[+|\\-|*|\\/|%]")),
                    e
                }
                function parse_number() {
                    var e;
                    return null === (e = parse_exponent()) && null === (e = parse_float()) && (e = parse_signedInteger()),
                    e
                }
                function parse_integer() {
                    var e, t, n;
                    if (n = pos,
                    /^[0-9]/.test(input.charAt(pos)) ? (t = input.charAt(pos),
                    pos++) : (t = null,
                    0 === reportFailures && matchFailed("[0-9]")),
                    null !== t)
                        for (e = []; null !== t; )
                            e.push(t),
                            /^[0-9]/.test(input.charAt(pos)) ? (t = input.charAt(pos),
                            pos++) : (t = null,
                            0 === reportFailures && matchFailed("[0-9]"));
                    else
                        e = null;
                    return null !== e && (e = parseInt(e.join(""), 10)),
                    null === e && (pos = n),
                    e
                }
                function parse_signedInteger() {
                    var e, t, n, i, o, r;
                    return n = pos,
                    i = pos,
                    /^[+|\-]/.test(input.charAt(pos)) ? (e = input.charAt(pos),
                    pos++) : (e = null,
                    0 === reportFailures && matchFailed("[+|\\-]")),
                    null !== (e = null !== e ? e : "") && null !== (t = parse_integer()) ? e = [e, t] : (e = null,
                    pos = i),
                    null !== e && (o = e[0],
                    r = e[1],
                    e = "-" == o ? -1 * r : r),
                    null === e && (pos = n),
                    e
                }
                function parse_float() {
                    var e, t, n, i, o, r, a, s;
                    if (o = pos,
                    r = pos,
                    null !== (e = null !== (e = parse_signedInteger()) ? e : ""))
                        if (46 === input.charCodeAt(pos) ? (t = ".",
                        pos++) : (t = null,
                        0 === reportFailures && matchFailed('"."')),
                        null !== t) {
                            if (/^[0-9]/.test(input.charAt(pos)) ? (i = input.charAt(pos),
                            pos++) : (i = null,
                            0 === reportFailures && matchFailed("[0-9]")),
                            null !== i)
                                for (n = []; null !== i; )
                                    n.push(i),
                                    /^[0-9]/.test(input.charAt(pos)) ? (i = input.charAt(pos),
                                    pos++) : (i = null,
                                    0 === reportFailures && matchFailed("[0-9]"));
                            else
                                n = null;
                            null !== n ? e = [e, t, n] : (e = null,
                            pos = r)
                        } else
                            e = null,
                            pos = r;
                    else
                        e = null,
                        pos = r;
                    return null !== e && (a = e[0],
                    s = e[2],
                    e = 0 === a && 1 / a < 0 ? -1 * parseFloat(a + "." + s.join("")) : parseFloat(a + "." + s.join(""))),
                    null === e && (pos = o),
                    e
                }
                function parse_exponent() {
                    var e, t, n, i, o, r, a, s, l, c;
                    return r = pos,
                    a = pos,
                    null !== (e = null !== (e = parse_signedInteger()) ? e : "") ? (46 === input.charCodeAt(pos) ? (t = ".",
                    pos++) : (t = null,
                    0 === reportFailures && matchFailed('"."')),
                    null !== t && null !== (n = parse_integer()) ? (101 === input.charCodeAt(pos) ? (i = "e",
                    pos++) : (i = null,
                    0 === reportFailures && matchFailed('"e"')),
                    null !== i && null !== (o = parse_signedInteger()) ? e = [e, t, n, i, o] : (e = null,
                    pos = a)) : (e = null,
                    pos = a)) : (e = null,
                    pos = a),
                    null !== e && (s = e[0],
                    l = e[2],
                    c = e[4],
                    e = parseFloat(s + "." + l + "e" + c)),
                    null === e && (pos = r),
                    null === e && (r = pos,
                    a = pos,
                    null !== (e = parse_signedInteger()) ? (101 === input.charCodeAt(pos) ? (t = "e",
                    pos++) : (t = null,
                    0 === reportFailures && matchFailed('"e"')),
                    null !== t && null !== (n = parse_signedInteger()) ? e = [e, t, n] : (e = null,
                    pos = a)) : (e = null,
                    pos = a),
                    null !== e && (e = function(e, t, n) {
                        return parseFloat(t + "e" + n)
                    }(0, e[0], e[2])),
                    null === e && (pos = r)),
                    e
                }
                function parse__() {
                    var e, t, n;
                    for (n = pos,
                    e = [],
                    /^[ |\t]/.test(input.charAt(pos)) ? (t = input.charAt(pos),
                    pos++) : (t = null,
                    0 === reportFailures && matchFailed("[ |\\t]")); null !== t; )
                        e.push(t),
                        /^[ |\t]/.test(input.charAt(pos)) ? (t = input.charAt(pos),
                        pos++) : (t = null,
                        0 === reportFailures && matchFailed("[ |\\t]"));
                    return null !== e && (e = e.join("")),
                    null === e && (pos = n),
                    e
                }
                function parse___() {
                    var e, t, n;
                    if (n = pos,
                    /^[ |\t]/.test(input.charAt(pos)) ? (t = input.charAt(pos),
                    pos++) : (t = null,
                    0 === reportFailures && matchFailed("[ |\\t]")),
                    null !== t)
                        for (e = []; null !== t; )
                            e.push(t),
                            /^[ |\t]/.test(input.charAt(pos)) ? (t = input.charAt(pos),
                            pos++) : (t = null,
                            0 === reportFailures && matchFailed("[ |\\t]"));
                    else
                        e = null;
                    return null !== e && (e = e.join("")),
                    null === e && (pos = n),
                    e
                }
                function cleanupExpected(e) {
                    e.sort();
                    for (var t = null, n = [], i = 0; i < e.length; i++)
                        e[i] !== t && (n.push(e[i]),
                        t = e[i]);
                    return n
                }
                function computeErrorPosition() {
                    for (var e = 1, t = 1, n = !1, i = 0; i < Math.max(pos, rightmostFailuresPos); i++) {
                        var o = input.charAt(i);
                        "\n" === o ? (n || e++,
                        t = 1,
                        n = !1) : "\r" === o || "\u2028" === o || "\u2029" === o ? (e++,
                        t = 1,
                        n = !0) : (t++,
                        n = !1)
                    }
                    return {
                        line: e,
                        column: t
                    }
                }
                function log(e) {
                    console.log(e)
                }
                function MathExpression(e) {
                    this.type = d20.dice.TYPE_MATH_EXPR,
                    this.expr = e != undefined ? e : ""
                }
                function RollExpression(e, t) {
                    this.type = d20.dice.TYPE_ROLL_EXPR,
                    this.dice = e,
                    this.sides = t,
                    this.mods = {}
                }
                function FateRollExpression(e) {
                    this.type = d20.dice.TYPE_ROLL_EXPR,
                    this.dice = e,
                    this.fate = !0,
                    this.mods = {}
                }
                function TableRollExpression(e, t) {
                    this.type = d20.dice.TYPE_ROLL_EXPR,
                    this.dice = e,
                    this.table = t,
                    this.mods = {}
                }
                function GroupExpression(e, t) {
                    this.type = d20.dice.TYPE_GROUP_EXPR,
                    this.rolls = e,
                    this.mods = t || {}
                }
                function Label(e) {
                    this.type = d20.dice.TYPE_LABEL,
                    this.text = e
                }
                function Comment(e) {
                    this.type = d20.dice.TYPE_COMMENT,
                    this.text = e
                }
                function mergeExpressions(e, t) {
                    if ("string" == typeof e) {
                        if (0 == e.length)
                            return t;
                        e = new MathExpression(e)
                    }
                    if ("string" == typeof t) {
                        if (0 == t.length)
                            return e;
                        t = new MathExpression(t)
                    }
                    if (Array.isArray(e) && Array.isArray(t)) {
                        if (e[e.length - 1].type == d20.dice.TYPE_MATH_EXPR && t[0].type == d20.dice.TYPE_MATH_EXPR) {
                            var n = e.pop();
                            t[0].expr = n.expr + t[0].expr
                        }
                        return e.concat(t)
                    }
                    return Array.isArray(e) ? (e[e.length - 1].type == d20.dice.TYPE_MATH_EXPR && t.type == d20.dice.TYPE_MATH_EXPR ? e[e.length - 1].expr += t.expr : e.push(t),
                    e) : Array.isArray(t) ? (t[0].type == d20.dice.TYPE_MATH_EXPR && e.type == d20.dice.TYPE_MATH_EXPR ? t[0].expr = e.expr + t[0].expr : t.unshift(e),
                    t) : e.type == d20.dice.TYPE_MATH_EXPR && t.type == d20.dice.TYPE_MATH_EXPR ? (e.expr += t.expr,
                    e) : [e, t]
                }
                function processMods(e, t) {
                    var n = e;
                    if (t.length > 0)
                        for (var i in t[0]) {
                            if (n[i] != undefined)
                                throw {
                                    message: "'" + i + "' roll modifier can only be specified once"
                                };
                            n[i] = t[0][i]
                        }
                    return n
                }
                var parseFunctions = {
                    start: parse_start,
                    rollExpression: parse_rollExpression,
                    rollExpressionPrimary: parse_rollExpressionPrimary,
                    validRollSuffix: parse_validRollSuffix,
                    rollGroup: parse_rollGroup,
                    rollGroupExpression: parse_rollGroupExpression,
                    labelAwareRollOperator: parse_labelAwareRollOperator,
                    rollOperator: parse_rollOperator,
                    fullRoll: parse_fullRoll,
                    coreRoll: parse_coreRoll,
                    numberOfDice: parse_numberOfDice,
                    numberOfSides: parse_numberOfSides,
                    groupMods: parse_groupMods,
                    rollMods: parse_rollMods,
                    explodingMod: parse_explodingMod,
                    compoundingMod: parse_compoundingMod,
                    penetratingMod: parse_penetratingMod,
                    keepMod: parse_keepMod,
                    dropMod: parse_dropMod,
                    customCritMod: parse_customCritMod,
                    customFumbleMod: parse_customFumbleMod,
                    rerollMod: parse_rerollMod,
                    rerollOnceMod: parse_rerollOnceMod,
                    sortMod: parse_sortMod,
                    floorMod: parse_floorMod,
                    multipleMod: parse_multipleMod,
                    successMod: parse_successMod,
                    matchMod: parse_matchMod,
                    matchTotalMod: parse_matchTotalMod,
                    matchThreshold: parse_matchThreshold,
                    comparisonPoint: parse_comparisonPoint,
                    comparison: parse_comparison,
                    mathExpression: parse_mathExpression,
                    mathExpressionPrimary: parse_mathExpressionPrimary,
                    inlineLabelWithSpace: parse_inlineLabelWithSpace,
                    inlineLabel: parse_inlineLabel,
                    operator: parse_operator,
                    number: parse_number,
                    integer: parse_integer,
                    signedInteger: parse_signedInteger,
                    float: parse_float,
                    exponent: parse_exponent,
                    _: parse__,
                    __: parse___
                };
                if (startRule !== undefined) {
                    if (parseFunctions[startRule] === undefined)
                        throw new Error("Invalid rule name: " + quote(startRule) + ".")
                } else
                    startRule = "start";
                var pos = 0
                  , reportFailures = 0
                  , rightmostFailuresPos = 0
                  , rightmostFailuresExpected = []
                  , d20 = "undefined" != typeof window && window.d20 !== undefined ? window.d20 : {};
                d20.dice == undefined && (d20.dice = d20.dice || {},
                d20.dice.TYPE_MATH_EXPR = "M",
                d20.dice.TYPE_ROLL_EXPR = "R",
                d20.dice.TYPE_GROUP_EXPR = "G",
                d20.dice.TYPE_LABEL = "L",
                d20.dice.TYPE_COMMENT = "C",
                d20.dice.TYPE_VALIDATED_ROLLS = "V");
                var result = parseFunctions[startRule]();
                if (null === result || pos !== input.length) {
                    var offset = Math.max(pos, rightmostFailuresPos)
                      , found = offset < input.length ? input.charAt(offset) : null
                      , errorPosition = computeErrorPosition();
                    throw new this.SyntaxError(cleanupExpected(rightmostFailuresExpected),found,offset,errorPosition.line,errorPosition.column)
                }
                return result
            },
            toSource: function() {
                return this._source
            },
            SyntaxError: function(e, t, n, i, o) {
                function r(e, t) {
                    var n;
                    switch (e.length) {
                    case 0:
                        n = "end of input";
                        break;
                    case 1:
                        n = e[0];
                        break;
                    default:
                        n = e.slice(0, e.length - 1).join(", ") + " or " + e[e.length - 1]
                    }
                    return "Expected " + n + " but " + (t ? quote(t) : "end of input") + " found."
                }
                this.name = "SyntaxError",
                this.expected = e,
                this.found = t,
                this.message = r(e, t),
                this.offset = n,
                this.line = i,
                this.column = o
            }
        };
        return result.SyntaxError.prototype = Error.prototype,
        result
    }(),
    d20.dice_formatter = {},
    d20ext.dice_formatter = d20.dice_formatter,
    function() {
        var e = function() {}
          , t = function(n) {
            for (var i = "", o = 0; o < n.length; o++) {
                if (n[o].type === d20.dice.TYPE_GROUP_EXPR) {
                    i += "{<div class='parsegroup'>";
                    for (var r = 0; r < n[o].rolls.length; r++)
                        i += "<div class='parsegroupitem ",
                        n[o].results && n[o].results[r].d && (i += "dropped"),
                        i += "'>",
                        i += t(n[o].rolls[r]),
                        r + 1 < n[o].rolls.length && (i += " + "),
                        i += "</div>";
                    i += "</div>}"
                }
                if (n[o].type === d20.dice.TYPE_ROLL_EXPR) {
                    i += "<div class='dicegrouping' data-groupindex='" + o + "' ",
                    n[o + 1] && n[o + 1].type == d20.dice.TYPE_LABEL && (i += "title='" + n[o + 1].text.replace(/'/g, "&apos;") + "'"),
                    i += ">",
                    i += "(";
                    for (var a = 0; a < n[o].results.length; a++) {
                        i += "<div data-origindex='" + a + "' class='diceroll ",
                        n[o].results.length > 50 && (i += "withouticons "),
                        n[o].fate ? i += "d6" : n[o].table || (i += "d" + n[o].sides),
                        !0 === n[o].results[a].d && (i += " dropped ");
                        var s = !1
                          , l = !1
                          , c = !1;
                        if (n[o].mods && n[o].mods.customCrit ? _.each(n[o].mods.customCrit, function(e) {
                            "<=" === e.comp ? n[o].results[a].v <= e.point && (s = !0) : ">=" === e.comp ? n[o].results[a].v >= e.point && (s = !0) : "==" === e.comp && n[o].results[a].v === e.point && (s = !0)
                        }) : n[o].results[a].v === n[o].sides && (s = !0),
                        s && (i += " critsuccess ",
                        e()),
                        n[o].mods && n[o].mods.customFumble ? _.each(n[o].mods.customFumble, function(e) {
                            "<=" === e.comp ? n[o].results[a].v <= e.point && (l = !0) : ">=" === e.comp ? n[o].results[a].v >= e.point && (l = !0) : "==" === e.comp && n[o].results[a].v === e.point && (l = !0)
                        }) : 1 === n[o].results[a].v && !0 !== n[o].fate && (l = !0),
                        l && (i += " critfail "),
                        n[o].mods && n[o].mods.match && n[o].mods.match.matches[n[o].results[a].v] && (c = !0),
                        c && (i += " match-" + n[o].mods.match.matches[n[o].results[a].v]),
                        i += "'>",
                        c && (i += "<div class='matchbar' style='border-color:" + n[o].mods.match.matches[n[o].results[a].v] + "'></div>"),
                        i += "<div class='dicon'><div class='didroll'>",
                        !0 === n[o].fate)
                            switch (n[o].results[a].v) {
                            case 1:
                                i += "+";
                                break;
                            case 0:
                                i += "0";
                                break;
                            case -1:
                                i += "-"
                            }
                        else if (n[o].results[a].tableItem)
                            if (n[o].results[a].tableItem.avatar && "" !== n[o].results[a].tableItem.avatar) {
                                const e = n[o].results[a].tableItem.avatar.replace("/med.webm", "/thumb.webm")
                                  , t = d20ext.utils.strip_tags(n[o].results[a].tableItem.name).replace(/'/g, "&apos;");
                                i += d20.utils.isVideo(e) ? `<video src="${e}" title="${t}" muted autoplay loop />` : `<img src="${e}" title="${t}" />`
                            } else
                                i += d20ext.utils.strip_tags(n[o].results[a].tableItem.name);
                        else
                            i += n[o].results[a].v;
                        i += "</div><div class='backing'></div></div>",
                        !0 !== n[o].fate && a + 1 < n[o].results.length && (i += "+"),
                        i += "</div>"
                    }
                    i += ")",
                    i += "</div>"
                } else
                    n[o].type === d20.dice.TYPE_MATH_EXPR && (i += n[o].expr)
            }
            return i
        }
          , n = function(e) {
            if (e) {
                for (var t = "", i = 0; i < e.length; i++) {
                    if (e[i].type === d20.dice.TYPE_GROUP_EXPR) {
                        console.log("Descending into madness..."),
                        t += "{";
                        for (var o = 0; o < e[i].rolls.length; o++)
                            t += n(e[i].rolls[o]),
                            o + 1 < e[i].rolls.length && (t += "+");
                        t += "}"
                    }
                    if (e[i].type === d20.dice.TYPE_ROLL_EXPR) {
                        var r = e[i].results !== undefined ? e[i].results.length : 0
                          , a = e[i].mods && e[i].mods.match && e[i].mods.match.matches ? e[i].mods.match.matches : [];
                        t += "(";
                        for (var s = 0; s < r; s++) {
                            if (t += "<span class='basicdiceroll",
                            e[i].results[s].d)
                                t += " dropped";
                            else {
                                var l = !1
                                  , c = !1;
                                e[i].mods && e[i].mods.customCrit ? _.each(e[i].mods.customCrit, function(t) {
                                    "<=" === t.comp ? e[i].results[s].v <= t.point && (l = !0) : ">=" === t.comp ? e[i].results[s].v >= t.point && (l = !0) : "==" === t.comp && e[i].results[s].v === t.point && (l = !0)
                                }) : e[i].results[s].v === e[i].sides && (l = !0),
                                l && (t += " critsuccess "),
                                e[i].mods && e[i].mods.customFumble ? _.each(e[i].mods.customFumble, function(t) {
                                    "<=" === t.comp ? e[i].results[s].v <= t.point && (c = !0) : ">=" === t.comp ? e[i].results[s].v >= t.point && (c = !0) : "==" === t.comp && e[i].results[s].v === t.point && (c = !0)
                                }) : 1 === e[i].results[s].v && !0 !== e[i].fate && (c = !0),
                                c && (t += " critfail ")
                            }
                            if (a != [] && a[e[i].results[s].v] && (t += "' style='color: " + a[e[i].results[s].v] + "'"),
                            t += "'>",
                            !0 === e[i].fate)
                                switch (e[i].results[s].v) {
                                case 1:
                                    t += "+";
                                    break;
                                case 0:
                                    t += "0";
                                    break;
                                case -1:
                                    t += "-"
                                }
                            else
                                e[i].results[s].tableItem ? t += d20ext.utils.strip_tags(e[i].results[s].tableItem.name) : t += e[i].results[s].v;
                            t += "</span>",
                            !0 !== e[i].fate && s + 1 < e[i].results.length && (t += "+")
                        }
                        t += ")"
                    } else
                        e[i].type === d20.dice.TYPE_MATH_EXPR && (t += e[i].expr)
                }
                return t
            }
        };
        d20.dice_formatter.checkForCrits = function(e, t) {
            if (!e)
                return !1;
            for (var n = !1, i = !1, o = 0; o < e.length; o++) {
                if (e[o].type === d20.dice.TYPE_GROUP_EXPR)
                    for (var r = 0; r < e[o].rolls.length; r++)
                        !0 === d20.dice_formatter.checkForCrits(e[o].rolls[r], t) && ("crit" === t ? n = !0 : i = !0);
                if (e[o].type === d20.dice.TYPE_ROLL_EXPR)
                    for (var a = e[o].results !== undefined ? e[o].results.length : 0, s = 0; s < a; s++)
                        !0 !== e[o].results[s].d && (e[o].mods && e[o].mods.customCrit ? _.each(e[o].mods.customCrit, function(t) {
                            "<=" === t.comp ? e[o].results[s].v <= t.point && (n = !0) : ">=" === t.comp ? e[o].results[s].v >= t.point && (n = !0) : "==" === t.comp && e[o].results[s].v === t.point && (n = !0)
                        }) : e[o].results[s].v === e[o].sides && (n = !0),
                        e[o].mods && e[o].mods.customFumble ? _.each(e[o].mods.customFumble, function(t) {
                            "<=" === t.comp ? e[o].results[s].v <= t.point && (i = !0) : ">=" === t.comp ? e[o].results[s].v >= t.point && (i = !0) : "==" === t.comp && e[o].results[s].v === t.point && (i = !0)
                        }) : 1 === e[o].results[s].v && !0 !== e[o].fate && (i = !0))
            }
            return "crit" === t ? n : i
        }
        ,
        d20.dice_formatter.getHtmlForResult = function(e) {
            var n = t(e.rolls)
              , i = e.total;
            return e.resultType === d20.dice.ROLL_TYPE_SUCCESS ? i = 1 === i ? i + " Success" : i + " Successes" : e.resultType === d20.dice.ROLL_TYPE_MATCH && (i = 1 === i ? i + " Match" : i + " Matches"),
            {
                formula: n,
                total: i
            }
        }
        ,
        d20.dice_formatter.replaceInlineRolls = function(e, t, i) {
            return e = d20.utils.strip_tags(e, i),
            t.inlinerolls ? e = e.replace(/\$\[\[[0-9]+\]\]/g, function(e) {
                var o = e.substring(3, e.length - 1)
                  , r = t.inlinerolls[parseInt(o, 10)];
                if (!r || !r.results)
                    return "INVALID INLINE ROLL!";
                r.expression = r.expression.replace("<", "&lt;");
                var a = "Rolling " + d20.utils.strip_tags(r.expression, i) + " = ";
                r.signature && d20.textchat.verifyRoll(r.rollid, r.results, r.signature) && (a = "<img src='/images/quantumrollwhite.png' class='inlineqroll'> " + a),
                a += n(r.results.rolls);
                var s = r.results.total;
                try {
                    0 == s && r.results.rolls[0].results[0].tableItem && (s = d20ext.utils.strip_tags(r.results.rolls[0].results[0].tableItem.name))
                } catch (d) {}
                var l = "<span class='inlinerollresult showtip tipsy-n-right"
                  , c = -1 !== a.indexOf("critsuccess")
                  , u = -1 !== a.indexOf("critfail");
                return c && u ? l += " importantroll" : c ? l += " fullcrit" : u && (l += " fullfail"),
                l += "' title='" + a.replace(/'/g, "&quot;") + "'>" + s + "</span>"
            }) : e
        }
        ;
        var i = {
            "@": "critsuccess",
            "#": "critfail",
            _: "dropped"
        }
          , o = function(e, t) {
            for (var n in i) {
                var r = new RegExp("\\{" + n + "(.+?)" + n + "\\}","g");
                if (null != (match = r.exec(e)))
                    return t.push(i[n]),
                    o(match[1], t)
            }
            return e
        };
        d20.dice_formatter.oldformat = function(e) {
            return e === undefined ? "" : e.replace(/\{([@#_])(.+?)\1\}/g, function(e, t, n) {
                var r = [i[t]];
                n = o(n, r);
                return "<span class='" + r.sort().join(" ") + "'>" + n + "</span>"
            })
        }
    }(),
    d20.dice_engine = function(seed) {
        function TaskCompletionCallback(e, t, n) {
            var i = 0
              , o = !1;
            this.taskComplete = function() {
                if (i == e)
                    throw "All " + i + " tasks have already been completed for: " + n;
                ++i == e && (o = !0,
                t())
            }
            ,
            this.verify = function() {
                i != e || o || t()
            }
        }
        function RollResult(e) {
            this.i = e,
            this.v = 0
        }
        function GroupResult(e) {
            this.v = e
        }
        function ValidatedRollExpression(e, t) {
            this.type = d20.dice.TYPE_VALIDATED_ROLLS,
            this.rolls = e,
            this.resultType = t
        }
        function ExpressionBuilder() {
            var expression = ""
              , groupMemeberCount = undefined
              , verifyInGroup = function() {
                if (groupMemeberCount == undefined)
                    throw "Not currently in a group expression: '" + expression + "'"
            };
            this.addMathExpr = function(e) {
                expression += e
            }
            ,
            this.startGroup = function() {
                expression += "(",
                groupMemeberCount = 0,
                prevResults = []
            }
            ,
            this.addGroupValue = function(e) {
                verifyInGroup(),
                groupMemeberCount > 0 && (expression += "+"),
                expression += e,
                groupMemeberCount++
            }
            ,
            this.addGroupSuccess = function(e, t) {
                this.addGroupValue("(" + e + t.comp + t.point + "?1:0)")
            }
            ,
            this.addGroupFailure = function(e, t) {
                this.addGroupValue("(" + e + t.comp + t.point + "?-1:0)")
            }
            ,
            this.addGroupMatch = function(e, t) {
                var n = t.comp ? t.comp : ">="
                  , i = t.point ? t.point : "0";
                prevResults.push(e);
                for (var o = {}, r = 0; r < prevResults.length; r++) {
                    var a = prevResults[r];
                    o[a] = o[a] ? o[a] + 1 : 1
                }
                o[e] === t.threshold && this.addGroupValue("(" + e + n + i + "?1:0)")
            }
            ,
            this.endGroup = function() {
                verifyInGroup(),
                0 == groupMemeberCount && (expression += "0"),
                expression += ")",
                groupMemeberCount = undefined,
                prevResults = []
            }
            ,
            this.eval = function() {
                var result;
                log(expression);
                var thisexp = expression;
                return function() {
                    "use strict";
                    var floor = Math.floor
                      , ceil = Math.ceil
                      , round = Math.round
                      , max = Math.max
                      , min = Math.min
                      , abs = Math.abs;
                    try {
                        result = eval(thisexp)
                    } catch (e) {
                        result = 0
                    }
                }(),
                result
            }
        }
        function showWarning(e, t) {
            var n = window.Campaign.players.get(e.pid);
            d20.textchat.incoming(!1, {
                who: "system",
                type: "system",
                content: i18n("warning_roll_results_missing_name_number").tranSub(n.get("displayname"), t)
            }),
            numBounce = 0
        }
        d20.dice = d20.dice || {},
        d20.dice.TYPE_MATH_EXPR = "M",
        d20.dice.TYPE_ROLL_EXPR = "R",
        d20.dice.TYPE_GROUP_EXPR = "G",
        d20.dice.TYPE_LABEL = "L",
        d20.dice.TYPE_COMMENT = "C",
        d20.dice.TYPE_VALIDATED_ROLLS = "V",
        d20.dice.ROLL_TYPE_MATCH = "match",
        d20.dice.ROLL_TYPE_SUCCESS = "success",
        d20.dice.ROLL_TYPE_TABLE = "table",
        d20.dice.ROLL_TYPE_SUM = "sum",
        d20.dice.MATCH_COLORS = ["#ee0086", "#ff9c00", "#688de8", "#a6f900", "#a909e1", "#ff6a00", "#07afde", "#eefe00"],
        d20.getTableElementCount == undefined && (d20.getTableElementCount = function(e) {
            return log("Using fallback getTableElementCount(" + e + ")"),
            e.length
        }
        ,
        d20.getTableElementValue = function(e, t) {
            return log("Using fallback getTableElementValue(" + e + ", " + t + ")"),
            parseInt(e, 10) || 0
        }
        );
        var MAX_NUM_ROLLS = 999
          , MAX_ROLL = 9999999
          , recentRolls = [];
        console.log("Initializing new dice engine with randomness..."),
        seed == undefined ? (console.log("Using random entropy"),
        Math.seedrandom(window.RANDOM_ENTROPY, !0)) : Math.seedrandom(seed),
        this.random = Math.randomInt;
        var othis = this
          , log = function() {}
          , logerr = function(e) {
            _.isFunction(e) && (e = e()),
            console.log(e)
        }
          , fallbackErrorHandler = function(e) {
            throw logerr(e),
            e
        }
          , diceRollToString = function(e) {
            var t = e.dice + "d" + e.sides;
            return e.mods.compounding && (t += "!!" + comparePointToString(e.mods.compounding)),
            e.mods.penetrating && (t += "!p" + comparePointToString(e.mods.penetrating)),
            e.mods.exploding && (t += "!" + comparePointToString(e.mods.exploding)),
            e.mods.keep && (t += "k",
            "h" != e.mods.keep.end && (t += e.mods.keep.end),
            t += e.mods.keep.count),
            e.mods.drop && (t += "k",
            "l" != e.mods.drop.end && (t += e.mods.drop.end),
            t += e.mods.drop.count),
            e.mods.reroll && e.mods.reroll.forEach(function(e) {
                t += "r" + comparePointToString(e)
            }),
            e.mods.sort && (t += "s" + e.mods.sort.order),
            e.mods.success && (t += comparePointToString(e.mods.success, !0)),
            e.mods.failure && (t += "f" + comparePointToString(e.mods.failure, !0)),
            t
        }
          , comparePointToString = function(e, t) {
            var n = "";
            return e.point && (("==" != e.comp || t) && (n += e.comp.charAt(0)),
            n += e.point),
            n
        }
          , validateParseResult = function(e) {
            for (var t = undefined, n = 0; n < e.length; n++) {
                if (e[n].type == d20.dice.TYPE_ROLL_EXPR || e[n].type == d20.dice.TYPE_GROUP_EXPR) {
                    var i = getRollType(e[n]);
                    if (t == undefined)
                        t = i;
                    else if (t != i)
                        throw "Cannot mix " + t + " and " + i + " rolls in a single roll expression"
                }
                if (e[n].type == d20.dice.TYPE_ROLL_EXPR) {
                    if (e[n].fate ? e[n].sides = 3 : e[n].table != undefined && (e[n].sides = d20.getTableElementCount(e[n].table)),
                    e[n].fate && e[n].mods.compounding != undefined)
                        throw "Compounding FATE dice are not legal, try ! instead of !! for exploding FATE dice";
                    if (e[n].mods && e[n].mods.exploding != undefined && e[n].sides < 2)
                        throw "You must roll a d2 or higher to roll exploding dice.";
                    e[n].dice = Math.max(Math.min(e[n].dice, MAX_NUM_ROLLS), 0),
                    e[n].sides = Math.max(Math.min(e[n].sides, MAX_ROLL), 0)
                }
                if (e[n].type == d20.dice.TYPE_GROUP_EXPR) {
                    if (1 == e[n].rolls.length && t == d20.dice.ROLL_TYPE_SUCCESS)
                        for (var o = !1, r = 0; r < e[n].rolls[0].length; r++)
                            if (e[n].rolls[0][r].type == d20.dice.TYPE_ROLL_EXPR) {
                                if (o)
                                    throw "Only one roll expression is allowed in a single sub-roll expression success check";
                                o = !0
                            } else if (e[n].rolls[0][r].type == d20.dice.TYPE_GROUP_EXPR)
                                throw e[n].rolls[0][r].type + " expression is not supported in a single sub-roll expression success check";
                    for (var a = undefined, s = 0; s < e[n].rolls.length; s++) {
                        var l = validateParseResult(e[n].rolls[s]);
                        if (a == undefined)
                            a = l;
                        else if (a != l)
                            throw "Cannot mix " + a + " and " + l + " rolls in a  roll group"
                    }
                    e[n].resultType = a
                }
            }
            if (t == undefined) {
                if (e[0].type === d20.dice.TYPE_MATH_EXPR)
                    return d20.dice.TYPE_MATH_EXPR;
                throw "Could not determine result type of: " + JSON.stringify(e)
            }
            return t
        }
          , getRollType = function(e) {
            return e.mods && e.mods.match !== undefined && e.mods.match.total !== undefined ? d20.dice.ROLL_TYPE_MATCH : e.mods && e.mods.success !== undefined ? d20.dice.ROLL_TYPE_SUCCESS : e.sides != undefined && e.sides.type == d20.dice.TYPE_LABEL ? d20.dice.ROLL_TYPE_TABLE : d20.dice.ROLL_TYPE_SUM
        }
          , parseRollString = function(e) {
            log(function() {
                return "E parseRollString: " + e
            });
            var t = d20.DicePEG.parse(e);
            log(t);
            var n = new ValidatedRollExpression(t,validateParseResult(t));
            return log(n),
            log(JSON.stringify(n)),
            log(function() {
                return "L parseRollString: " + n.rolls.length + " expressions from: " + e
            }),
            n
        }
          , initiateRolls = function(e, t, n) {
            for (var i = 0; i < e.length; i++)
                e[i].type == d20.dice.TYPE_ROLL_EXPR ? doRolls(e[i], n) : e[i].type == d20.dice.TYPE_GROUP_EXPR ? initiateGroupRolls(e[i], t, n) : n()
        }
          , initiateGroupRolls = function(e, t, n) {
            for (var i = new TaskCompletionCallback(e.rolls.length,function() {
                postProcessCompleteGroup(e, t),
                n()
            }
            ,"groupCompleteCallback"), o = 0; o < e.rolls.length; o++)
                initiateSubGroupRolls(e.rolls[o], e.resultType, i)
        }
          , initiateSubGroupRolls = function(e, t, n) {
            var i = new TaskCompletionCallback(e.length,function() {
                n.taskComplete()
            }
            ,"subGroupCompleteCallback");
            initiateRolls(e, t, function() {
                i.taskComplete()
            })
        }
          , doRolls = function(e, t) {
            log(function() {
                return diceRollToString(e) + "\t - E doRolls"
            }),
            e.results = [];
            for (var n = new TaskCompletionCallback(e.dice,function() {
                diceRollCompleteCallback(e),
                t()
            }
            ,"rollCompleteCallback"), i = function() {
                n.taskComplete()
            }, o = 0; o < e.dice; o++)
                rollDie(o, e, i);
            n.verify(),
            log(function() {
                return diceRollToString(e) + "\t - L doRolls"
            })
        }
          , diceRollCompleteCallback = function(e) {
            if (log(function() {
                return diceRollToString(e) + "\t - E diceRollCompleteCallback"
            }),
            e.results.sort(function(e, t) {
                var n = e.i - t.i;
                return 0 != n || e.d == t.d ? n : e.d ? -1 : 1
            }),
            e.results.forEach(function(e) {
                delete e.i
            }),
            e.mods && e.mods.keep != undefined) {
                var t = "l" == e.mods.keep.end ? "a" : "d"
                  , n = sortRolls(e.results, t);
                keepRolls(n, e.mods.keep.count)
            }
            if (e.mods && e.mods.drop != undefined) {
                t = "l" == e.mods.drop.end ? "a" : "d",
                n = sortRolls(e.results, t);
                dropRolls(n, e.mods.drop.count)
            }
            e.mods && e.mods.sort != undefined && (e.results = sortRolls(e.results, e.mods.sort.order)),
            log(function() {
                return diceRollToString(e) + "\t - L diceRollCompleteCallback"
            })
        }
          , postProcessCompleteGroup = function(e, t) {
            if (log(function() {
                return "E postProcessCompleteGroup(" + t + ")"
            }),
            e.mods && e.mods.keep != undefined && 1 == e.rolls.length) {
                var n = "l" == e.mods.keep.end ? "a" : "d"
                  , i = buildSubGroupRollsArray(e.rolls[0]);
                i = sortRolls(i, n),
                keepRolls(i, e.mods.keep.count),
                cleanupSubGroupValues(e.rolls[0])
            }
            if (e.mods && e.mods.drop != undefined && 1 == e.rolls.length) {
                n = "l" == e.mods.drop.end ? "a" : "d",
                i = buildSubGroupRollsArray(e.rolls[0]);
                i = sortRolls(i, n),
                dropRolls(i, e.mods.drop.count),
                cleanupSubGroupValues(e.rolls[0])
            }
            if (totalResult(e, t),
            e.mods && e.mods.keep != undefined && e.rolls.length > 1) {
                n = "l" == e.mods.keep.end ? "a" : "d";
                var o = sortRolls(e.results, n);
                keepRolls(o, e.mods.keep.count)
            }
            if (e.mods && e.mods.drop != undefined && e.rolls.length > 1) {
                n = "l" == e.mods.drop.end ? "a" : "d",
                o = sortRolls(e.results, n);
                dropRolls(o, e.mods.drop.count)
            }
            log(function() {
                return "L postProcessCompleteGroup"
            })
        }
          , buildSubGroupRollsArray = function(e) {
            for (var t = [], n = 0; n < e.length; n++)
                e[n].type == d20.dice.TYPE_ROLL_EXPR ? t = t.concat(e[n].results) : e[n].type == d20.dice.TYPE_GROUP_EXPR && (e[n].v = totalResult(e[n], e[n].resultType).eval(),
                t.push(e[n]));
            return t
        }
          , cleanupSubGroupValues = function(e) {
            e.forEach(function(e) {
                e.type == d20.dice.TYPE_GROUP_EXPR && delete e.v
            })
        }
          , keepRolls = function(e, t) {
            for (var n = 0, i = 0; i < e.length; i++)
                e[i].d || (n < t ? n++ : e[i].d = !0)
        }
          , dropRolls = function(e, t) {
            for (var n = 0, i = 0; i < e.length && n < t; i++)
                e[i].d || (e[i].d = !0,
                n++)
        }
          , sortRolls = function(e, t) {
            var n = "d" == t ? -1 : 1;
            return e.slice(0).sort(function(e, t) {
                return (e.v - t.v) * n
            })
        }
          , asyncRand = function(e, t, n, i) {
            if (0 === e)
                setTimeout(function() {
                    t(0)
                }, 0);
            else {
                if ("undefined" == typeof Firebase && d20.tddice && d20.tddice.canRoll3D() && !n)
                    return void d20.tddice.roller(e, t, i);
                if (6 === e && d20.textchat && d20.textchat.egg_clickhole && !$("#lightly-overlay").is(":visible")) {
                    var o = [["2990", 1, 4], ["2991", 1, 7], ["2992", 1, 12], ["2993", 2, 7], ["2994", 2, 5], ["2995", 2, 38], ["2996", 2, 11], ["2997", 3, 13], ["2998", 3, 16], ["2999", 3, 6], ["3000", 3, 16], ["3001", 4, 17], ["3002", 4, 18], ["3003", 4, 16], ["3004", 5, 7], ["3006", 5, 24], ["3005", 5, 14], ["3007", 5, 27], ["3008", 6, 7], ["3009", 6, 6], ["3010", 6, 5], ["3012", 6, 10]]
                      , r = o[othis.random(o.length)];
                    d20.textchat.sendShout({
                        type: "playclickhole",
                        playerid: window.currentPlayer.id,
                        content: r,
                        time: (new Date).getTime()
                    }),
                    window.fakeLightly && window.fakeLightly("http://v.theonion.com/onionstudios/video/" + r[0] + "/640.mp4"),
                    setTimeout(function() {
                        t(r[1]),
                        $("#lightly-overlay").hide()
                    }, 1e3 * r[2] + 2e3)
                } else
                    setTimeout(function() {
                        t(othis.random(e) + 1)
                    }, 0)
            }
        }
          , compareToPoint = function(value, cp, defaultPoint) {
            if (cp.comp != undefined) {
                var cpFormula = value + cp.comp + cp.point
                  , cpResult = eval(cpFormula);
                return cpResult
            }
            return value == defaultPoint
        }
          , rollDie = function(e, t, n, i) {
            var o, r = new RollResult(e);
            t.results.push(r),
            o = r,
            asyncRand(t.sides, function(e) {
                individualRollCallback(t, o, e, n, i)
            }, t.table !== undefined, t.rollid)
        }
          , individualRollCallback = function(e, t, n, i, o) {
            if (o = o || 0,
            log(function() {
                return diceRollToString(e) + "\t - E individualRollCallback(" + o + ") " + n
            }),
            e.table !== undefined ? (t.tableidx = n - 1,
            t.v += d20.getTableElementValue(e.table, t.tableidx)) : t.v += n,
            e.fate && (t.v -= 2),
            e.mods && e.mods.penetrating != undefined && o > 0 && (t.v -= 1),
            o > MAX_NUM_ROLLS)
                i();
            else if (e.mods && e.mods.exploding != undefined && compareToPoint(n, e.mods.exploding, e.sides))
                rollDie(t.i, e, i, o + 1);
            else if (e.mods && e.mods.compounding != undefined && compareToPoint(n, e.mods.compounding, e.sides))
                asyncRand(e.sides, function(n) {
                    individualRollCallback(e, t, n, i, o + 1)
                }, e.table !== undefined, e.rollid);
            else if (e.mods && e.mods.penetrating != undefined && compareToPoint(n, e.mods.penetrating, e.sides))
                rollDie(t.i, e, i, o + 1);
            else if (e.mods && e.mods.reroll != undefined) {
                e.mods.reroll.some(function(r) {
                    if (r.maxrerolls)
                        for (var a = 0, s = 0; s < e.results.length; s++)
                            e.results[s].i === t.i && !0 === e.results[s].d && a++;
                    return !!compareToPoint(n, r, 1) && (!(r.maxrerolls && a >= r.maxrerolls) && (t.d = !0,
                    rollDie(t.i, e, i, o + 1),
                    !0))
                }) || i()
            } else
                i();
            log(function() {
                return diceRollToString(e) + "\t - L individualRollCallback(" + o + ") " + n
            })
        }
          , postProcessCompleteRolls = function(e, t, n) {
            if (log(function() {
                return "E postProcessCompleteRolls"
            }),
            e.type == d20.dice.TYPE_VALIDATED_ROLLS) {
                var i = postProcessCompleteRolls(e.rolls, e.resultType);
                return e.total = i,
                i
            }
            var o = totalResults(e, t, n);
            return log(function() {
                return "L postProcessCompleteRolls - " + o
            }),
            o
        }
          , totalResults = function(e, t, n, i) {
            i = i || new ExpressionBuilder,
            i = new ExpressionBuilder;
            for (var o = 0; o < e.length; o++)
                totalResult(e[o], t, n, i);
            return i.eval()
        }
          , totalResult = function(e, t, n, i) {
            i = i || new ExpressionBuilder;
            if (e.type == d20.dice.TYPE_ROLL_EXPR) {
                i.startGroup();
                for (var o = 0; o < e.results.length; o++)
                    e.results[o].d || addResultValue(i, t, e.results[o].v, e);
                if (i.endGroup(),
                e.mods.match) {
                    var r = []
                      , a = {};
                    _.each(e.results, function(e) {
                        r.push(e.v)
                    });
                    var s = r.reduce(function(e, t) {
                        return e[t] = ++e[t] || 1,
                        e
                    }, {})
                      , l = 0;
                    for (var c in s)
                        s[c] >= e.mods.match.threshold && (!e.mods.match.comp || !e.mods.match.point || ">=" === e.mods.match.comp && c >= e.mods.match.point || "<=" === e.mods.match.comp && c <= e.mods.match.point || "==" === e.mods.match.comp && c == e.mods.match.point) && (8 == l && (l = 0),
                        a[c] = d20.dice.MATCH_COLORS[l],
                        l++);
                    e.mods.match.matches = a
                }
            } else if (e.type == d20.dice.TYPE_MATH_EXPR)
                i.addMathExpr(e.expr);
            else if (e.type == d20.dice.TYPE_GROUP_EXPR) {
                if (i.startGroup(),
                !e.d)
                    if (e.results == undefined || n)
                        if (e.results = [],
                        1 == e.rolls.length && t == d20.dice.ROLL_TYPE_SUCCESS) {
                            for (var u = "", d = undefined, h = "", p = 0; p < e.rolls[0].length; p++)
                                if (e.rolls[0][p].type == d20.dice.TYPE_ROLL_EXPR) {
                                    if (d != undefined)
                                        throw "Only one roll expression is allowed in a single sub-roll expression success check";
                                    d = e.rolls[0][p]
                                } else if (e.rolls[0][p].type == d20.dice.TYPE_MATH_EXPR)
                                    d == undefined ? u += e.rolls[0][p].expr : h += e.rolls[0][p].expr;
                                else if (e.rolls[0][p].type == d20.dice.TYPE_GROUP_EXPR)
                                    throw e.rolls[0][p].type + " expression is not supported in a single sub-roll expression success check";
                            for (p = 0; p < d.results.length; p++)
                                if (!d.results[p].d) {
                                    var f = new ExpressionBuilder;
                                    f.startGroup(),
                                    f.addMathExpr(u),
                                    f.addGroupValue(d.results[p].v),
                                    f.addMathExpr(h),
                                    f.endGroup(),
                                    e.results.push(new GroupResult(f.eval()))
                                }
                        } else
                            for (var g = 0; g < e.rolls.length; g++) {
                                var m = totalResults(e.rolls[g], e.resultType, n);
                                e.results.push(new GroupResult(m)),
                                addResultValue(i, t, m, e)
                            }
                    else
                        e.results.forEach(function(n) {
                            n.d || addResultValue(i, t, n.v, e)
                        });
                i.endGroup()
            }
            return i
        }
          , addResultValue = function(e, t, n, i) {
            if (t == d20.dice.ROLL_TYPE_SUM)
                e.addGroupValue(n);
            else if (t == d20.dice.ROLL_TYPE_SUCCESS)
                e.addGroupSuccess(n, i.mods.success),
                i.mods && i.mods.failure != undefined && e.addGroupFailure(n, i.mods.failure);
            else {
                if (t != d20.dice.ROLL_TYPE_MATCH)
                    throw "Unsupported resultType: " + t;
                e.addGroupMatch(n, i.mods.match)
            }
        };
        this.reprocess = function(e, t, n) {
            n = n || fallbackErrorHandler;
            try {
                postProcessCompleteRolls(e, undefined, !0),
                t(e)
            } catch (i) {
                n(i)
            }
        }
        ;
        var remoteRollQueue = []
          , remoteRollCallbacks = {}
          , performRemoteRoll = function(e, t, n, i, o) {
            remoteRollQueue.push({
                vre: e,
                rollid: t,
                rolltype: n
            }),
            remoteRollCallbacks[t] = {
                success: i,
                error: o
            },
            debounced_doRemoteRollRequest()
        }
          , _doRemoteRollRequest = function() {
            if (0 !== remoteRollQueue.length)
                if (!window.is_playerapp && window.currentPlayer.get("tddiceenabled") && !1 === window.currentPlayer.get("disableagency")) {
                    if ($("#tdagencyoverlay").is(":visible"))
                        return;
                    $("#tdagencyoverlay").show(),
                    numberofdice = remoteRollQueue[0].vre.rolls[0].dice ? remoteRollQueue[0].vre.rolls[0].dice : 1,
                    d20.tddice.playsound("dicecup", numberofdice);
                    var e = {}
                      , t = $("#tdagencyoverlay svg line")
                      , n = !1;
                    $("#tdagencyoverlay").on("mousedown", function(i) {
                        e.startx = i.clientX / $(window).width(),
                        e.starty = i.clientY / $(window).height(),
                        t.attr("x1", i.clientX).attr("y1", i.clientY).attr("x2", i.clientX).attr("y2", i.clientY),
                        n = !0
                    }),
                    $("#tdagencyoverlay").on("mousemove", function(i) {
                        if (n) {
                            xdist = Math.abs(e.startx - i.clientX / $(window).width()),
                            ydist = Math.abs(e.starty - i.clientY / $(window).height());
                            var o = Math.sqrt(xdist * xdist + ydist * ydist);
                            o < .2 ? t.css("stroke", "rgb(255,255,255)") : o < .5 ? t.css("stroke", "rgb(245,238,44)") : t.css("stroke", "rgb(245,44,44)"),
                            t.attr("x2", i.clientX).attr("y2", i.clientY)
                        }
                    }),
                    $("#tdagencyoverlay").on("mouseup", function(n) {
                        $("#tdagencyoverlay").off().hide(),
                        t.attr("x1", 0).attr("y1", 0).attr("x2", 0).attr("y2", 0),
                        e.startx ? (e.stopx = n.clientX / $(window).width(),
                        e.stopy = n.clientY / $(window).height(),
                        _posthookrollrequest(e)) : _posthookrollrequest()
                    })
                } else
                    setTimeout(function() {
                        _posthookrollrequest()
                    }, 50)
        }
          , _posthookrollrequest = function(e) {
            if (0 !== remoteRollQueue.length) {
                var t = {
                    cid: window.campaign_storage_path,
                    fbnum: window.FIREBASE_ROOT,
                    authkey: window.GNTKN,
                    pid: window.currentPlayer.id,
                    rolls: remoteRollQueue,
                    use3d: window.is_playerapp ? window.currentPlayer.get("apptddiceenabled") : window.currentPlayer.get("tddiceenabled")
                };
                if (e) {
                    var n = {
                        x: e.startx - e.stopx,
                        y: e.starty - e.stopy
                    };
                    mindistance = .01,
                    maxdistance = .3,
                    Math.abs(n.x) < mindistance && (n.x = n.x < 0 ? -mindistance : mindistance),
                    Math.abs(n.y) < mindistance && (n.y = n.y < 0 ? -mindistance : mindistance),
                    Math.abs(n.x) > maxdistance && (n.x = n.x < 0 ? -maxdistance : maxdistance),
                    Math.abs(n.y) > maxdistance && (n.y = n.y < 0 ? -maxdistance : maxdistance),
                    t.deltas = {
                        x: 80 * n.x * -1,
                        y: 80 * n.y * 1
                    }
                } else
                    !0 === t.use3d && (t.deltas = {
                        x: 10 * Math.random() - 5,
                        y: 20
                    });
                if ("production" === d20.environment)
                    var i = "https://app.roll20.net";
                else if ("staging" === d20.environment) {
                    console.log("Rolling on Staging");
                    i = "https://app.roll20staging.net"
                } else {
                    console.log("Rolling on Dev");
                    i = "https://app.roll20dev.net"
                }
                $.ajax({
                    url: i + "/doroll",
                    type: "POST",
                    data: JSON.stringify(t),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function(e) {
                        var t = e;
                        for (var n in t)
                            if (d20.dice_engine.newRoll(n),
                            t[n].error == undefined) {
                                var i = JSON.parse(t[n].json);
                                postProcessCompleteRolls(i),
                                remoteRollCallbacks[n].success(i, n, t[n].signature, t[n].tdseed),
                                d20.tutorial && t[n].shoutjson !== undefined && d20.tddice.remoteRoll(JSON.parse(t[n].shoutjson))
                            } else
                                remoteRollCallbacks[n].error("There was an error fetching your roll. " + t[n].error)
                    },
                    error: function() {
                        console.log("Error fetching from QuantumRoll, fallback to local rolls."),
                        _.each(t.rolls, function(e) {
                            var t = e.vre
                              , n = new TaskCompletionCallback(t.rolls.length,function() {
                                postProcessCompleteRolls(t),
                                setTimeout(function() {
                                    remoteRollCallbacks[e.rollid].success(t, null, !1)
                                }, 0)
                            }
                            ,"wholeRollCompleteCallback");
                            initiateRolls(t.rolls, t.resultType, function() {
                                n.taskComplete()
                            })
                        })
                    }
                }),
                remoteRollQueue = []
            }
        }
          , numBounce = 0
          , showWarningTH = _.throttle(showWarning, 7e3, {
            leading: !1
        });
        d20.dice_engine.handleRollReceived = function(e) {
            -1 === recentRolls.indexOf(e.rid) ? setTimeout(function() {
                -1 === recentRolls.indexOf(e.rid) ? showWarningTH(e, ++numBounce) : recentRolls.splice(recentRolls.indexOf(e.rid), 1)
            }, 3e3) : recentRolls.splice(recentRolls.indexOf(e.rid), 1)
        }
        ,
        d20.dice_engine.newRoll = function(e) {
            -1 === recentRolls.indexOf(e) && recentRolls.push(e)
        }
        ,
        this.flushRemoteQueue = function() {
            _doRemoteRollRequest()
        }
        ;
        var debounced_doRemoteRollRequest = _.debounce(_doRemoteRollRequest, 100);
        return this.process = function(e, t, n) {
            n = n || fallbackErrorHandler;
            try {
                var i = parseRollString(e);
                if (0 == i.rolls)
                    throw "There were no dice to roll!";
                var o = !1
                  , r = !1
                  , a = 0
                  , s = function(e) {
                    if (a++,
                    e !== undefined)
                        for (var t = 0; t < e.length; t++)
                            if (e[t].table !== undefined && (o = !0),
                            "R" === e[t].type && (r = !0),
                            (!o || !r) && a < 99 && e[t].rolls !== undefined && e[t].rolls.length > 0)
                                for (var n = 0; n < e[t].rolls.length; n++)
                                    s(e[t].rolls[n])
                };
                try {
                    s(i.rolls)
                } catch (h) {
                    console.log("Error while checking for table existence. Ignoring.")
                }
                if (s = null,
                d20.textchat && d20.textchat.egg_clickhole && (o = !0),
                "undefined" == typeof Firebase || !0 === o || !1 === r) {
                    var l = new TaskCompletionCallback(i.rolls.length,function() {
                        postProcessCompleteRolls(i),
                        setTimeout(function() {
                            t(i, null, !1)
                        }, 0)
                    }
                    ,"wholeRollCompleteCallback");
                    initiateRolls(i.rolls, i.resultType, function() {
                        l.taskComplete()
                    })
                } else if ("undefined" == typeof $) {
                    var c = generateUUID()
                      , u = {
                        vre: i,
                        cid: CAMPAIGNID,
                        fbnum: "https://" + FIREBASENUM + ".firebaseio.com/",
                        pid: "api",
                        rid: c,
                        use3d: !1,
                        authkey: FIREBASETOKEN,
                        rolltype: d20.textchat.currentRollType
                    };
                    if ("production" === d20.environment)
                        var d = "https://app.roll20.net";
                    else
                        d = "https://app.roll20dev.net";
                    request.post({
                        url: d + "/doroll",
                        body: u,
                        json: !0,
                        timeout: 5e3
                    }, function(e, i, o) {
                        if (e || 200 != i.statusCode || "" === o)
                            n("There was an error communicating with the QuantumRoll server.");
                        else {
                            var r = o;
                            if (r.error !== undefined)
                                return void n("There was an error fetching your roll. " + r.error);
                            var a = JSON.parse(r.json);
                            postProcessCompleteRolls(a),
                            t(a, c, r.signature)
                        }
                    })
                } else {
                    c = generateUUID();
                    performRemoteRoll(i, c, d20.textchat.currentRollType, t, n)
                }
            } catch (h) {
                n(h)
            }
        }
        ,
        this.handleRollReq = function(e, t) {
            var n = new TaskCompletionCallback(e.rolls.length,function() {
                try {
                    postProcessCompleteRolls(e)
                } catch (n) {
                    return void t({
                        error: "There was an error processing this roll."
                    })
                }
                setTimeout(function() {
                    t(e)
                }, 0)
            }
            ,"wholeRollCompleteCallback");
            try {
                initiateRolls(e.rolls, e.resultType, function() {
                    n.taskComplete()
                })
            } catch (i) {
                t({
                    error: "There was an error processing this roll."
                })
            }
        }
        ,
        this.handleRollString = function(e) {
            var t = parseRollString(e);
            if (0 == t.rolls)
                throw "There were no dice to roll!";
            return t
        }
        ,
        this
    }
    ,
    d20.textchat = {
        commandhistory: [],
        commandIndex: 0,
        currentRollType: "rollresult",
        commandInProgress: !1,
        lastChatBeep: 0,
        talktomyself: !1,
        allowed3drolls: [],
        globalrolled: 0,
        egg_clickhole: !1
    },
    $(function() {
        var e, t, n = "", i = 0, o = !0, r = !1, a = !1, s = {}, l = {};
        d20.textchat.tabIsFocused = !0,
        d20.dice_engine && (d20.textchat.diceengine = new d20.dice_engine),
        $(window).bind("focus", function() {
            o = !0
        }),
        $(window).bind("blur", function() {
            o = !1
        }),
        d20.textchat.$textarea = $("#textchat-input textarea"),
        d20.textchat.$speakingas = $("#speakingas"),
        d20.textchat.$textchat = $("#textchat");
        var c = new X509;
        c.readCertPEM("-----BEGIN CERTIFICATE-----MIICtTCCAl+gAwIBAgIJAJtwle/qkHJnMA0GCSqGSIb3DQEBBQUAMHIxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJLUzEQMA4GA1UEBxMHV2ljaGl0YTEPMA0GA1UEChMGUm9sbDIwMRMwEQYDVQQDEwpyb2xsMjAubmV0MR4wHAYJKoZIhvcNAQkBFg90ZWFtQHJvbGwyMC5uZXQwHhcNMTQwMzAzMTgwMTQ4WhcNMTQwNDAyMTgwMTQ4WjByMQswCQYDVQQGEwJVUzELMAkGA1UECBMCS1MxEDAOBgNVBAcTB1dpY2hpdGExDzANBgNVBAoTBlJvbGwyMDETMBEGA1UEAxMKcm9sbDIwLm5ldDEeMBwGCSqGSIb3DQEJARYPdGVhbUByb2xsMjAubmV0MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALJq8muAFnZMkJysXg9VJsevoQxtxV1NytYvCKHTtaCja/tyeLTRei0nu+NymPfNKKiRhv7R8D33oZLvIA/udusCAwEAAaOB1zCB1DAdBgNVHQ4EFgQUarGxVvODYDpzS5OKyKsTyCEmDSUwgaQGA1UdIwSBnDCBmYAUarGxVvODYDpzS5OKyKsTyCEmDSWhdqR0MHIxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJLUzEQMA4GA1UEBxMHV2ljaGl0YTEPMA0GA1UEChMGUm9sbDIwMRMwEQYDVQQDEwpyb2xsMjAubmV0MR4wHAYJKoZIhvcNAQkBFg90ZWFtQHJvbGwyMC5uZXSCCQCbcJXv6pByZzAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA0EAjBHayltU3K4DCs2h4nC2quGGKzGE2h1nMCBzhQ1ed+vir+lLnWQvAOrqt50Nx7lMk+23uFGhGMysK2UyrqptMw==-----END CERTIFICATE-----");
        var u = /\/((roll)|(r)|(gmroll)|(gr))[ ]+/i
          , d = function(e, t) {
            var n = e.listenerid ? e.listenerid : undefined;
            if (e.content = e.content + "",
            null !== e.content.match(u)) {
                var i = "rollresult";
                null !== e.content.match(/\/((gmroll)|(gr))[ ]+/i) && (i = "gmrollresult"),
                d20.textchat.currentRollType = i;
                try {
                    var o = e.content.replace(u, "");
                    o = o.replace(/\$\[\[[0-9]+\]\]/g, function(t) {
                        var n = t.substring(3, t.length - 1)
                          , i = e.inlinerolls[parseInt(n, 10)];
                        return i ? i.results.total : "INVALID INLINE ROLL"
                    });
                    var r = function(e, t) {
                        var n = 0
                          , i = !1;
                        return t > 99 ? (console.log("Too many subgroups, abort."),
                        undefined) : (_.each(e, function(e) {
                            if ("G" === e.type)
                                _.each(e.rolls, function(e) {
                                    var o = r(e, t + 1);
                                    o !== undefined && (n += o,
                                    i = !0)
                                });
                            else if (e.table) {
                                var o = d20.Campaign.rollabletables.findTableByName(e.table)
                                  , a = o.getWeightedArray();
                                o && _.each(e.results, function(e) {
                                    i = !0,
                                    e.tableItem = o.tableitems.get(a[e.tableidx]).toJSON(),
                                    e.d === undefined && (n += e.v)
                                })
                            } else
                                e.results && _.each(e.results, function(e) {
                                    if (e.d)
                                        return !0;
                                    n += e.v
                                })
                        }),
                        i ? n : undefined)
                    };
                    d20.utils.textchatNotify("Rolling the dice..."),
                    d20.textchat.diceengine.process(o, function(o, a, s, l) {
                        if (d20.textchat.globalrolled++,
                        d20.utils.textchatNotify(!1),
                        o.error) {
                            var c = {
                                who: "error",
                                type: "error",
                                content: o.error
                            };
                            d20.textchat.incoming(!1, c)
                        } else {
                            if (o.rolls && o.rolls.length > 0)
                                try {
                                    r(o.rolls, 0) !== undefined && (s = null)
                                } catch (h) {
                                    console.log("ERROR matching table"),
                                    console.log(h)
                                }
                            var d = {
                                who: d20.textchat.$speakingas.find("option:selected").text(),
                                type: i,
                                content: JSON.stringify(o),
                                signature: s,
                                origRoll: e.content.replace(u, ""),
                                playerid: window.currentPlayer.id,
                                avatar: e.avatar,
                                _fbid: a
                            };
                            n && (d.listenerid = n),
                            l && (d.tdseed = l),
                            e.opts && e.opts.tracker && f(e.currentSelected, o, e.opts.tracker),
                            t(d)
                        }
                    }, function(e) {
                        console.log(e);
                        var t = {
                            who: "error",
                            type: "error",
                            content: "string" == typeof e ? e : "There was an error with your formula. Please try again."
                        };
                        d20.textchat.incoming(!1, t),
                        d20.utils.textchatNotify(!1)
                    })
                } catch (F) {
                    console.log(F);
                    var a = {
                        who: "error",
                        type: "error",
                        content: "string" == typeof F ? F : "There was an error with your formula. Please try again."
                    };
                    d20.textchat.incoming(!1, a)
                }
            } else if ("/em " === e.content.substring(0, 4) || "/e " == e.content.substring(0, 3) || "/me " == e.content.substring(0, 4)) {
                var s = e.content.replace("/em ", "").replace("/e ", "").replace("/me ", "")
                  , l = {
                    who: d20.textchat.$speakingas.find("option:selected").text(),
                    type: "emote",
                    content: s,
                    playerid: window.currentPlayer.id,
                    avatar: e.avatar
                };
                n && (l.listenerid = n),
                t(l)
            } else if ("/ooc " === e.content.substring(0, 5) || "/o " === e.content.substring(0, 3)) {
                var c = e.content.replace("/ooc ", "").replace("/o ", "");
                l = {
                    who: d20.textchat.$speakingas.find("option:first-child").text(),
                    type: "general",
                    playerid: window.currentPlayer.id,
                    content: c,
                    avatar: "/users/avatar/" + window.currentPlayer.get("d20userid") + "/30"
                };
                n && (l.listenerid = n),
                t(l)
            } else if (window.is_gm && "/as " === e.content.substring(0, 4)) {
                if (null == (d = (c = e.content.substring(4, e.content.length)).match(/\w+|"[^"]+"/)) || !d.length)
                    throw 'Invalid. Try /as "Name of Character" <message>';
                c = c.substring(d[0].length, c.length);
                l = {
                    who: '"' === d[0][0] ? d[0].substring(1, d[0].length - 1) : d[0],
                    type: "general",
                    playerid: window.currentPlayer.id,
                    content: c
                };
                n && (l.listenerid = n),
                t(l)
            } else if (window.is_gm && "/emas " === e.content.substring(0, 6)) {
                var d;
                if (null == (d = (c = e.content.substring(6, e.content.length)).match(/\w+|"[^"]+"/)) || !d.length)
                    throw 'Invalid. Try /as "Name of Character" <message>';
                c = c.substring(d[0].length, c.length);
                l = {
                    who: '"' === d[0][0] ? d[0].substring(1, d[0].length - 1) : d[0],
                    type: "emote",
                    playerid: window.currentPlayer.id,
                    content: c
                };
                n && (l.listenerid = n),
                t(l)
            } else if (window.is_gm && "/desc " === e.content.substring(0, 6)) {
                c = e.content.substring(6, e.content.length),
                l = {
                    who: "",
                    type: "desc",
                    playerid: window.currentPlayer.id,
                    content: c
                };
                n && (l.listenerid = n),
                t(l)
            } else if ("/w " === e.content.substring(0, 3)) {
                var g = e.content.split(" ")
                  , m = g.slice(2, g.length)
                  , y = /\"([^"]+)\"/i
                  , v = g[1]
                  , b = function(e, t) {
                    return e.split(" ")[0].toLowerCase() === t.toLowerCase()
                };
                if ('"' === g[1].substring(0, 1)) {
                    var w = y.exec(e.content);
                    w && (v = w[1],
                    m = e.content.replace(y, function() {
                        return ""
                    }).split(" ").slice(1, g.length),
                    b = function(e, t) {
                        return e.toLowerCase() === t.toLowerCase()
                    }
                    )
                }
                var x = 0;
                if ("gm" == v.toLowerCase() && (x = "gm",
                targetname = "GM"),
                0 == x && d20.Campaign.players.each(function(e) {
                    b(e.get("displayname"), v) && (x = e.id,
                    targetname = e.get("displayname"))
                }),
                0 == x && d20.Campaign.characters.each(function(e) {
                    b(e.get("name"), v) && (e.get("controlledby") && "" != e.get("controlledby") ? (x = e.get("controlledby"),
                    targetname = e.get("name")) : (x = "gm",
                    targetname = "GM"))
                }),
                0 == x) {
                    a = {
                        who: "error",
                        type: "error",
                        content: "Unable to find a player or character with name: " + v
                    };
                    return void d20.textchat.incoming(!1, a)
                }
                var k = m.join(" ");
                l = {
                    who: d20.textchat.$speakingas.find("option:selected").text(),
                    type: "whisper",
                    target: x,
                    target_name: targetname,
                    playerid: window.currentPlayer.id,
                    content: k,
                    avatar: e.avatar
                };
                n && (l.listenerid = n),
                t(l)
            } else if ("/say " == e.content.substring(0, 5)) {
                var E = e.content.replace("/say ", "")
                  , S = d20.textchat.$speakingas.val();
                if (e.content = E,
                t(l),
                -1 === S.indexOf("character|"))
                    return;
                var C = S.split("|")[1];
                n && ({
                    type: "say",
                    characterid: C,
                    content: E
                }.listenerid = n)
            } else if ("/fx " == e.content.substring(0, 4)) {
                var T = e.content.split(" ")
                  , A = !1
                  , R = (v = e.currentSelected,
                !1)
                  , M = T[1]
                  , P = M.indexOf("-") > -1 ? M.split("-")[0] : M;
                if (d20.fx.presetEffects[P])
                    -1 === d20.fx.presetEffects[P].angle && (A = !0);
                else if (window.Campaign.custFx) {
                    var I = window.Campaign.custFx.filter(function(e) {
                        return e.get("name").toLowerCase() === P.toLowerCase()
                    })[0];
                    if (I)
                        M = I.id,
                        -1 === window.Campaign.custFx.get(M).get("definition").angle && (A = !0)
                }
                if (-1 === M.indexOf("|") ? M += "|duration:25" : -1 === M.indexOf("duration") && (M += ",duration:25"),
                T.length > 2) {
                    x = T[2];
                    v = d20.Campaign.activePage().thegraphics.get(x).view.graphic
                }
                if (T.length > 3) {
                    var O = T[3];
                    R = d20.Campaign.activePage().thegraphics.get(O).view.graphic
                }
                if (v) {
                    var D = v.left
                      , L = v.top;
                    if (A)
                        if (R) {
                            var B = {};
                            B.distance = p(R.left - v.left, R.top - v.top),
                            B.angle = h(R.left - v.left, R.top - v.top),
                            d20.fx.spawnFx(D, L, M, B)
                        } else
                            d20.fx.agencyFx(function(e) {
                                d20.fx.spawnFx(D, L, M, e)
                            }, D, L);
                    else
                        d20.fx.spawnFx(D, L, M)
                } else {
                    a = {
                        who: "error",
                        type: "error",
                        content: "The /fx command requires a selected token or token ID, but none was provided. Select a token and try again."
                    };
                    d20.textchat.incoming(!1, a)
                }
                t("noop")
            } else if ("/talktomyself on" === e.content.substring(0, 16) || "/talktomyself" === e.content || "/talktomyself off" === e.content.substring(0, 17)) {
                if ("/talktomyself on" === e.content.substring(0, 16) || "/talktomyself" === e.content && !1 === d20.textchat.talktomyself) {
                    d20.textchat.talktomyself = !0;
                    a = {
                        who: "system",
                        type: "system",
                        content: "<strong>You are now talking to yourself.</strong> Chat messages and dice rolls will <strong>NOT BE BROADCAST</strong> to others until you turn this off. Use <code>/talktomyself off</code> to disable."
                    };
                    d20.textchat.incoming(!1, a),
                    d20.utils.textchatNotify("Talking to Yourself", !0)
                } else if ("/talktomyself off" === e.content.substring(0, 17) || "/talktomyself" === e.content && !0 === d20.textchat.talktomyself) {
                    d20.textchat.talktomyself = !1;
                    a = {
                        who: "system",
                        type: "system",
                        content: "<strong>You are no longer talking to yourself.</strong> Hooray!"
                    };
                    d20.textchat.incoming(!1, a),
                    d20.utils.textchatNotify(!1, !0)
                }
            } else {
                a = {
                    who: "error",
                    type: "error",
                    content: "Unrecognized command: " + e.content
                };
                d20.textchat.incoming(!1, a)
            }
        }
          , h = function(e, t) {
            var n = 180 * Math.atan2(t, e) / Math.PI;
            return n < 0 && (n = 360 + n),
            n % 180 > 90 ? n += n % 90 > 45 ? 10 - n % 45 / 4.5 : n % 45 / 4.5 : n -= n % 90 > 45 ? 10 - n % 45 / 4.5 : n % 45 / 4.5,
            n
        }
          , p = function(e, t) {
            return Math.sqrt(Math.pow(e, 2) + Math.pow(t, 2))
        }
          , f = function(e, t, n) {
            if (e && "image" === e.type)
                d20.Campaign.parentRef.child("campaign").child("turnorder").transaction(function(i) {
                    d20.Campaign.set("turnorder", i);
                    var o = d20.Campaign.initiativewindow.cleanList()
                      , r = !1;
                    return t.total && t.total % 1 != 0 && (t.total = parseFloat(t.total.toPrecision(12))),
                    _.each(o, function(i) {
                        if (i.id === e.model.id)
                            switch (r = !0,
                            n) {
                            case "+":
                                i.pr = parseFloat(i.pr) + t.total;
                                break;
                            case "-":
                                i.pr = parseFloat(i.pr) - t.total;
                                break;
                            default:
                                i.pr = t.total
                            }
                    }),
                    r || o.push({
                        id: e.model.id,
                        pr: t.total,
                        custom: ""
                    }),
                    JSON.stringify(o)
                });
            else {
                var i = {
                    who: "error",
                    type: "error",
                    content: "You wanted to send the result of this roll to the turn tracker, but no valid token was selected!"
                };
                d20.textchat.incoming(!1, i)
            }
        };
        d20.textchat.rawChatInput = function(t) {
            var n = _.extend({
                who: d20.textchat.$speakingas.find("option:selected").text(),
                type: "general",
                playerid: window.currentPlayer.id,
                content: ""
            }, t);
            if (d20.textchat.talktomyself)
                d20.textchat.incoming(!0, n);
            else {
                var i = e.push().key();
                e.child(i).setWithPriority(n, Firebase.ServerValue.TIMESTAMP)
            }
        }
        ;
        var g = function(e, t, n) {
            return "bar1" == e.toLowerCase() ? "max" == n ? t.get("bar1_max") : t.get("bar1_value") : "bar2" == e.toLowerCase() ? "max" == n ? t.get("bar2_max") : t.get("bar2_value") : "bar3" == e.toLowerCase() ? "max" == n ? t.get("bar3_max") : t.get("bar3_value") : "token_name" == e.toLowerCase() ? t.get("name") : "token_id" === e.toLowerCase() ? t.id : undefined
        };
        d20.textchat.doChatInput = function(t, n) {
            if (e) {
                if ("" != (t = d20.utils.strip_tags(t))) {
                    d20.textchat.commandhistory.push(t),
                    d20.textchat.commandhistory = _.last(d20.textchat.commandhistory, 20),
                    d20.textchat.commandIndex = 0;
                    var i = d20.textchat.$speakingas.find("option:selected").val()
                      , o = !1;
                    if (-1 !== i.indexOf("player"))
                        o = "/users/avatar/" + window.currentPlayer.get("d20userid") + "/30";
                    else {
                        var r = d20.Campaign.characters.get(i.split("|")[1]);
                        r && (o = r.get("avatar"))
                    }
                    var a = {
                        who: d20.textchat.$speakingas.find("option:selected").text(),
                        type: "general",
                        content: $.trim(t),
                        playerid: window.currentPlayer.id,
                        avatar: o
                    };
                    n && (a.listenerid = n);
                    var s = !1;
                    "`" === a.content.substring(0, 1) && (s = !0,
                    a.content = a.content.substring(1, a.content.length));
                    var l = d20.engine.selected();
                    l.length > 0 && l[0].model && (a.currentSelected = l[0]);
                    var c = {};
                    d20.Campaign.players.each(function(e) {
                        e.macros.each(function(t) {
                            (e.id == window.currentPlayer.id || t.visibleToCurrentPlayer()) && (c["#" + t.get("name")] = t.get("action"))
                        })
                    });
                    var u = {}
                      , h = {}
                      , p = d20.engine.mode + ""
                      , m = /(#[^ \n]+)/gm
                      , y = /(%{[^}]+})/gm
                      , v = /&{[^}]+}/
                      , b = /(@{[^}]+})/gm
                      , w = ""
                      , x = 0
                      , k = function() {
                        try {
                            var e = !1
                              , t = !1;
                            if (a.content = a.content.replace(/&{noerror}/g, function() {
                                return t = !0,
                                ""
                            }),
                            a.content = a.content.replace(y, function(n) {
                                var i, o, r, s, l, c, u, d = (n = n.substring(2, n.length - 1)).split("|");
                                if (4 == d.length && (i = d[1],
                                o = d[0],
                                charname = d[2],
                                l = d[3],
                                (r = d20.Campaign.characters.get(o)) && (s = r.abilities.get(i),
                                c = s.get("action"))),
                                2 == d.length && (charname = d[0],
                                l = d[1]),
                                3 == d.length && (charname = d[0],
                                l = d[2]),
                                "repeating_" === l.substring(0, 10) && (!d20.journal.customSheets || d20.journal.customSheets.availableRolls[l.toLowerCase()] === undefined)) {
                                    console.log("SUBBING ABILITY REPEATING STUFF");
                                    var p = l.split("_");
                                    l = "repeating_" + p[1] + "_" + p.slice(3).join("_"),
                                    u = "repeating_" + p[1] + "_" + p[2] + "_"
                                }
                                if ("selected" == charname.toLowerCase()) {
                                    if (!a.currentSelected)
                                        throw "You attempted to use a roll command looking for the value of a selected token, but no tokens are selected.";
                                    if ("" === a.currentSelected.model.get("represents"))
                                        throw "You attempted to use a roll command looking for a selected token ability, but the selected token does not represent a Character, and therefore has no abilities.";
                                    r = d20.Campaign.characters.get(a.currentSelected.model.get("represents"))
                                } else if ("target" === charname.toLowerCase()) {
                                    if (e || d20.engine.nextTargetCallback)
                                        return "%{" + n + "}";
                                    var f = "target";
                                    if (d.length > 2 && (f = d[1],
                                    l = d[2]),
                                    !l)
                                        throw "Syntax Error: You must specify a valid ability to fetch from the target.";
                                    return d20.engine.nextTargetCallback = function(e) {
                                        if (!1 === e)
                                            return R(),
                                            void (d20.engine.nextTargetCallback = !1);
                                        a.content = a.content.replace(/%\${currentTarget\|[^}]+}/, function(i) {
                                            var o = i.split("|")[1].replace("}", "");
                                            if ("" !== e.model.get("represents")) {
                                                var r = d20.Campaign.characters.get(e.model.get("represents"));
                                                if (r) {
                                                    var a = undefined;
                                                    return r.abilities.each(function(e) {
                                                        e.get("name").toLowerCase() == o.toLowerCase() && (a = "%{" + r.id + "|" + e.id + "|" + r.get("name") + "|" + e.get("name") + "}")
                                                    }),
                                                    a !== undefined ? a : "%{" + r.get("name") + "|" + o + "}"
                                                }
                                                console.log("Couldn't find character that represents this token.")
                                            }
                                            if (!t) {
                                                var s = {
                                                    who: "error",
                                                    type: "error",
                                                    content: "No ability was found for targeted token by the name of " + o
                                                };
                                                d20.textchat.incoming(!1, s)
                                            }
                                            return n
                                        }),
                                        d20.engine.nextTargetCallback = !1,
                                        h[f] = e,
                                        k()
                                    }
                                    ,
                                    h[f] !== undefined ? _.defer(function() {
                                        d20.engine.nextTargetCallback(h[f])
                                    }) : (setMode("targeting"),
                                    $("#targetinginstructions .targetname").text(ucfirst(f))),
                                    e = !0,
                                    "%${currentTarget|" + l + "}"
                                }
                                if (r && s || (r || d20.Campaign.characters.each(function(e) {
                                    if (e.get("name").toLowerCase() == charname.toLowerCase() || e.id === charname)
                                        return r = e,
                                        !1
                                }),
                                !s && r && r.abilities.each(function(e) {
                                    if (e.get("name").toLowerCase() == l.toLowerCase() || e.id === l)
                                        return c = (s = e).get("action"),
                                        !1
                                }),
                                !s && r && d20.journal.customSheets && d20.journal.customSheets.availableRolls && d20.journal.customSheets.availableRolls[l.toLowerCase()] !== undefined && (s = d20.journal.customSheets.availableRolls[l.toLowerCase()],
                                c = s)),
                                !(r && s && r.currentPlayerControls())) {
                                    if (!t) {
                                        var g = {
                                            who: "error",
                                            type: "error",
                                            content: "No ability was found for %{" + charname + "|" + l + "}"
                                        };
                                        d20.textchat.incoming(!1, g)
                                    }
                                    return n
                                }
                                n = c;
                                var m = {};
                                u && r.attribs.each(function(e) {
                                    e.get("name").substring(0, u.length) === u && (m[e.get("name").substring(u.length, e.get("name").length)] = !0)
                                });
                                var y = /(@{[^}]+})/gm;
                                return n = (n = n.replace(y, function(e) {
                                    var n = e.substring(2, e.length - 1).split("|");
                                    if (n.length > 1 && "max" !== n[1])
                                        return e;
                                    var i = u !== undefined ? u.split("_")[1] : "";
                                    if ("repeating_" === n[0].substring(0, 10) && -1 !== n[0].indexOf("$")) {
                                        var o = n[0].split("_");
                                        if (o.length > 3 && o[2] !== undefined && "$" === o[2].substring(0, 1)) {
                                            var a = parseInt(o[2].replace("$", ""), 10)
                                              , s = []
                                              , l = o[0] + "_" + o[1];
                                            if (r.attribs.each(function(e) {
                                                if (e.get("name").toLowerCase().substring(0, l.length) === l.toLowerCase()) {
                                                    var t = e.get("name").split("_");
                                                    t.length > 2 && t[2] !== undefined && s.push(t[2])
                                                }
                                            }),
                                            s = _.uniq(s),
                                            (s = r.repeatingKeyOrder(s, l))[a] !== undefined)
                                                o[2] = s[a],
                                                n[0] = o.join("_");
                                            else if (!t) {
                                                var c = {
                                                    who: "error",
                                                    type: "error",
                                                    content: "You tried to use the repeating section row at index " + a + " for " + l + ", but there doesn't seem to be a row at that index."
                                                };
                                                d20.textchat.incoming(!1, c)
                                            }
                                        }
                                    }
                                    return u && m[n[0]] !== undefined ? "@{" + r.get("name") + "|" + u + n[0] + (2 == n.length ? "|" + n[1] : "") + "}" : u && d20.journal.customSheets && d20.journal.customSheets.availableAttributes[("repeating_" + i + "_" + n[0]).toLowerCase()] !== undefined && d20.journal.customSheets.availableAttributes[n[0].toLowerCase()] === undefined ? "@{" + r.get("name") + "|" + u + n[0] + (2 == n.length ? "|" + n[1] : "") + "}" : "@{" + r.get("name") + "|" + n[0] + (2 == n.length ? "|" + n[1] : "") + "}"
                                })).replace(/\(~[^\)]+\)/g, function(e) {
                                    if (e.split("|").length < 2) {
                                        var t = e.substring(2, e.length);
                                        if (u && "repeating_" === t.substring(0, 10)) {
                                            var n = t.split("_");
                                            t = u + n.splice(2).join("_")
                                        }
                                        return "(~" + r.id + "|" + t
                                    }
                                    return e
                                })
                            }),
                            a.content = a.content.replace(m, function(e) {
                                return c[e] !== undefined ? c[e] : e
                            }),
                            a.content = a.content.replace(b, function(n) {
                                var i, o, r, s, l, c, u, d = (n = n.substring(2, n.length - 1)).split("|"), p = "current", f = !1;
                                if (4 == d.length && (i = d[1],
                                o = d[0],
                                l = d[2],
                                c = d[3],
                                (r = d20.Campaign.characters.get(o)) && (s = r.attribs.get(i))),
                                !r)
                                    if (l = d[0],
                                    c = d[1],
                                    d.length > 2 && ("max" == (d[2] + "").toLowerCase() || "max" == (d[3] + "").toLowerCase()) && (p = "max"),
                                    "selected" == l.toLowerCase()) {
                                        if (!a.currentSelected)
                                            throw "You attempted to use a roll command looking for the value of a selected token, but no tokens are selected.";
                                        var m = g(c, a.currentSelected.model, p);
                                        if (m !== undefined)
                                            return m;
                                        if ("" !== a.currentSelected.model.get("represents")) {
                                            if (r = d20.Campaign.characters.get(a.currentSelected.model.get("represents")),
                                            "character_name" === c.toLowerCase())
                                                return r.get("name");
                                            if ("character_id" === c.toLowerCase())
                                                return r.id
                                        }
                                    } else {
                                        if ("target" === l.toLowerCase()) {
                                            if (e || d20.engine.nextTargetCallback)
                                                return "@{" + n + "}";
                                            d20.engine.mode;
                                            var y = "target";
                                            if (d.length > 2 && (y = d[1],
                                            c = d[2]),
                                            !c)
                                                throw "Syntax Error: You must specify a valid attribute to fetch from the target.";
                                            return d20.engine.nextTargetCallback = function(e) {
                                                if (!1 === e)
                                                    return d20.engine.nextTargetCallback = !1,
                                                    R(),
                                                    void setTimeout(function() {
                                                        if ("targeting" != d20.engine.mode)
                                                            for (var e = 0; e < origtoken.length; e++)
                                                                d20.engine.select(origtoken[e])
                                                    }, 500);
                                                a.content = a.content.replace(/@\${currentTarget\|[^}]+}/, function(n) {
                                                    var i = n.split("|")[1].replace("}", "")
                                                      , o = g(i, e.model, p);
                                                    if (o !== undefined)
                                                        return o;
                                                    if ("" !== e.model.get("represents")) {
                                                        var r = d20.Campaign.characters.get(e.model.get("represents"));
                                                        if (r)
                                                            return "character_name" === c.toLowerCase() ? r.get("name") : "character_id" === c.toLowerCase() ? r.id : "@{TARGET:" + y + "|" + i + ("max" === p ? "|max" : "") + "}";
                                                        console.log("Couldn't find character that represents this token.")
                                                    }
                                                    if (!t) {
                                                        var a = {
                                                            who: "error",
                                                            type: "error",
                                                            content: "No attribute was found for targeted token by the name of " + i
                                                        };
                                                        d20.textchat.incoming(!1, a)
                                                    }
                                                    return ""
                                                }),
                                                d20.engine.nextTargetCallback = !1,
                                                h[y] = e,
                                                k(),
                                                setTimeout(function() {
                                                    if ("targeting" != d20.engine.mode)
                                                        for (var e = 0; e < origtoken.length; e++)
                                                            d20.engine.select(origtoken[e])
                                                }, 500)
                                            }
                                            ,
                                            h[y] !== undefined ? _.defer(function() {
                                                d20.engine.nextTargetCallback(h[y])
                                            }) : ("targeting" != d20.engine.mode && (origtoken = d20.engine.selected()),
                                            setMode("targeting"),
                                            $("#targetinginstructions .targetname").text(ucfirst(y))),
                                            e = !0,
                                            "@${currentTarget|" + c + "}"
                                        }
                                        if ("tracker" === l.toLowerCase()) {
                                            var v, b = d20.Campaign.initiativewindow.cleanList();
                                            if (_.each(b, function(e) {
                                                if (e.custom.toLowerCase() === c.toLowerCase())
                                                    return v = e.pr,
                                                    !1;
                                                if (e.id) {
                                                    var t = d20.Campaign.activePage().thegraphics.get(e.id);
                                                    if (t && t.get("name").toLowerCase() === c.toLowerCase())
                                                        return v = e.pr,
                                                        !1
                                                }
                                            }),
                                            v !== undefined)
                                                return v;
                                            if (!t) {
                                                var w = {
                                                    who: "error",
                                                    type: "error",
                                                    content: "No turn order item was found by the name " + c
                                                };
                                                d20.textchat.incoming(!1, w)
                                            }
                                            return ""
                                        }
                                    }
                                if ("repeating_" === c.substring(0, 10)) {
                                    var x = c.split("_");
                                    u = "repeating_" + x[1] + "_" + x[2] + "_"
                                }
                                if ((!r || !s) && (!r && "TARGET:" === l.substring(0, 7) && h[l.substring(7, l.length)] && (r = d20.Campaign.characters.get(h[l.substring(7, l.length)].model.get("represents")),
                                f = !0),
                                r || d20.Campaign.characters.each(function(e) {
                                    if (e.get("name").toLowerCase() == l.toLowerCase())
                                        return r = e,
                                        !1
                                }),
                                !s && r)) {
                                    if ("repeating_" === c.substring(0, 10) && -1 !== c.indexOf("$")) {
                                        var E = c.split("_");
                                        if (E.length > 3 && E[2] !== undefined && "$" === E[2].substring(0, 1)) {
                                            var S = parseInt(E[2].replace("$", ""), 10)
                                              , C = []
                                              , T = E[0] + "_" + E[1];
                                            if (r.attribs.each(function(e) {
                                                if (e.get("name").toLowerCase().substring(0, T.length) === T.toLowerCase()) {
                                                    var t = e.get("name").split("_");
                                                    t.length > 2 && t[2] !== undefined && C.push(t[2])
                                                }
                                            }),
                                            C = _.uniq(C),
                                            (C = r.repeatingKeyOrder(C, T))[S] !== undefined)
                                                E[2] = C[S],
                                                c = E.join("_");
                                            else if (!t) {
                                                w = {
                                                    who: "error",
                                                    type: "error",
                                                    content: "You tried to use the repeating section row at index " + S + " for " + T + ", but there doesn't seem to be a row at that index."
                                                };
                                                d20.textchat.incoming(!1, w)
                                            }
                                        }
                                    }
                                    s = r.attribs.find(function(e) {
                                        return e.get("name").toLowerCase() === c.toLowerCase()
                                    })
                                }
                                if (!r) {
                                    w = {
                                        who: "error",
                                        type: "error",
                                        content: "No character was found for '" + l + "'"
                                    };
                                    return d20.textchat.incoming(!1, w),
                                    n
                                }
                                var A = {};
                                u && r.attribs.each(function(e) {
                                    e.get("name").substring(0, u.length) === u && (A[e.get("name").substring(u.length, e.get("name").length)] = !0)
                                });
                                var M = function(e) {
                                    var t = /(@{[^}]+})/gm;
                                    return e = (e = (e + "").replace(t, function(e) {
                                        var t = e.substring(2, e.length - 1).split("|");
                                        if (t.length > 1 && "max" !== t[1])
                                            return e;
                                        var n = u !== undefined ? u.split("_")[1] : "";
                                        return u && A[t[0]] !== undefined ? "@{" + (f ? l : r.get("name")) + "|" + u + t[0] + (2 == t.length ? "|" + t[1] : "") + "}" : u && d20.journal.customSheets && d20.journal.customSheets.availableAttributes[("repeating_" + n + "_" + t[0]).toLowerCase()] !== undefined && d20.journal.customSheets.availableAttributes[t[0].toLowerCase()] === undefined ? "@{" + (f ? l : r.get("name")) + "|" + u + t[0] + (2 == t.length ? "|" + t[1] : "") + "}" : "@{" + (f ? l : r.get("name")) + "|" + t[0] + (2 == t.length ? "|" + t[1] : "") + "}"
                                    })).replace(/\(~[^\)]+\)/g, function(e) {
                                        if (e.split("|").length < 2) {
                                            var t = e.substring(2, e.length);
                                            if (u && "repeating_" === t.substring(0, 10)) {
                                                var n = t.split("_");
                                                t = u + n.splice(2).join("_")
                                            }
                                            return "(~" + r.id + "|" + t
                                        }
                                        return e
                                    })
                                };
                                if ("character_name" === c)
                                    return r.get("name");
                                if ("character_id" === c)
                                    return r.id;
                                var P = undefined;
                                if (s && (r.currentPlayerControls() || !0 === f) && (P = "max" == p ? s.get("max") : s.get("current")),
                                P !== undefined && "" !== P)
                                    return M(P);
                                var I = undefined
                                  , O = (c + ("max" === p ? "_max" : "")).toLowerCase();
                                if ("repeating_" === O.substring(0, 10) && (!d20.journal.customSheets || d20.journal.customSheets.availableAttributes[O] === undefined)) {
                                    var D = O.split("_");
                                    isNaN(D[2]) && "-" !== D[2].substring(0, 1) || (D.splice(2, 1),
                                    O = D.join("_"))
                                }
                                (r.currentPlayerControls() || !0 === f) && d20.journal.customSheets && d20.journal.customSheets.availableAttributes && d20.journal.customSheets.availableAttributes[O] !== undefined && (I = d20.journal.customSheets.availableAttributes[O]);
                                if (P !== undefined && I === undefined)
                                    return M(P);
                                if (I !== undefined)
                                    return M(I);
                                if (!t) {
                                    w = {
                                        who: "error",
                                        type: "error",
                                        content: "No attribute was found for @{" + l + "|" + c + "}"
                                    };
                                    d20.textchat.incoming(!1, w)
                                }
                                return n
                            }),
                            x++,
                            e)
                                return;
                            window.logRolls !== undefined && console.log(a.content),
                            a.content == w || x > 99 ? (console.log("Finished after going " + x + " levels deep."),
                            A()) : (w = a.content,
                            k())
                        } catch (i) {
                            var n = {
                                who: "error",
                                type: "error",
                                content: i + ""
                            };
                            d20.textchat.incoming(!1, n)
                        }
                    }
                      , E = function() {
                        var t = /{{[\s\S]*?}}/g;
                        a.content = a.content.replace(t, function(e) {
                            return e.replace(/\n/g, "%NEWLINE%")
                        });
                        var n = a.content.split("\n")
                          , i = []
                          , o = 0
                          , r = function() {
                            if (i && !(o < i.length)) {
                                for (var t = 0; t < i.length; t++)
                                    if ("noop" !== i[t])
                                        if (i[t]._fbid) {
                                            console.log("Found existing ID!");
                                            var n = i[t]._fbid;
                                            delete i[t]._fbid,
                                            d20.textchat.talktomyself ? (i[t].id = n,
                                            i[t].timestamp = (new Date).getTime(),
                                            d20.textchat.incoming(!0, i[t])) : e.child(n).setWithPriority(i[t], Firebase.ServerValue.TIMESTAMP)
                                        } else if (d20.textchat.talktomyself)
                                            i[t].id = e.push().key(),
                                            i[t].timestamp = (new Date).getTime(),
                                            d20.textchat.incoming(!0, i[t]);
                                        else {
                                            var r = e.push().key();
                                            e.child(r).setWithPriority(i[t], Firebase.ServerValue.TIMESTAMP)
                                        }
                                R(),
                                i = null
                            }
                        }
                          , l = 0;
                        _.each(n, function(e) {
                            i.push(!1);
                            var t = _.clone(a);
                            t.content = e,
                            t.content = t.content.replace(/%NEWLINE%/g, "<br/>\n");
                            var n, c = l + 0, u = function(e) {
                                if ("object" == typeof e && (t.inlinerolls && (e.inlinerolls = t.inlinerolls),
                                n && (e.rolltemplate = n),
                                delete e.currentSelected,
                                delete e.opts,
                                "api" == e.type)) {
                                    var a = d20.engine.selected();
                                    a && a.length > 0 && (e.selected = [],
                                    _.each(a, function(t) {
                                        if (t.model == undefined)
                                            return !0;
                                        e.selected.push({
                                            _type: "image" == t.model.get("type") ? "graphic" : t.model.get("type"),
                                            _id: t.model.id
                                        })
                                    }))
                                }
                                i[c] = e,
                                o++,
                                _.defer(function() {
                                    r()
                                })
                            }, h = function() {
                                console.log("Inline rolls complete!"),
                                s || (t.content = t.content.replace(v, function(e) {
                                    e = e.substring(2, e.length - 1),
                                    t.opts || (t.opts = {});
                                    for (var n = e.split(","), i = 0; i < n.length; i++) {
                                        var o = n[i].split(":");
                                        t.opts[o[0]] = !(o.length > 1) || o[1]
                                    }
                                    return ""
                                })),
                                t.opts && t.opts.template !== undefined && (n = t.opts.template),
                                "//" === t.content.substring(0, 2) ? u("noop") : s || "/" != t.content.substring(0, 1) ? (s || "!" != t.content.substring(0, 1) || (t.type = "api"),
                                u(t)) : d(t, u)
                            };
                            s ? h() : (console.log("Begin processing op!"),
                            S(t, h)),
                            d20.textchat.diceengine.flushRemoteQueue(),
                            l++
                        })
                    }
                      , S = function(e, t) {
                        var n = []
                          , i = 0
                          , o = 0
                          , r = function() {
                            o < i || (e.inlinerolls = n,
                            t())
                        }
                          , a = function(t, o) {
                            for (var r = [], a = [], l = !1, c = !1, u = 0, d = !1; !d; ) {
                                for (var h = 0; h < t.length; h++)
                                    if ("[" === t[h])
                                        if ("[" === t[h - 1]) {
                                            if (u++,
                                            "$" === t[h - 2]) {
                                                l = !0;
                                                continue
                                            }
                                            r.push(h - 1)
                                        } else
                                            "[" === t[h + 1] || (c = !0);
                                    else if ("]" === t[h]) {
                                        if (c) {
                                            c = !1,
                                            a.push(h);
                                            continue
                                        }
                                        if ("]" === t[h - 1] && -1 === a.indexOf(h - 1)) {
                                            if (u--,
                                            l) {
                                                l = !1;
                                                continue
                                            }
                                            var p = r.slice(-1)[0]
                                              , f = t.substring(p, h + 1);
                                            if (-1 !== f.indexOf("$[[")) {
                                                console.log("There's a nested inline roll in here. Ignore for now");
                                                continue
                                            }
                                            if (function() {
                                                var r = i + 0
                                                  , a = u + 0;
                                                i++,
                                                t = t.substring(0, p) + "$[[" + r + "]]" + t.substring(h + 1, t.length),
                                                e.content = t,
                                                s(f, r, function() {
                                                    console.log("Finished " + r),
                                                    console.log("Levels deep: " + a),
                                                    a > 0 && (console.log("Substituting for " + r),
                                                    e.content = e.content.replace("$[[" + r + "]]", n[r].results.total)),
                                                    o()
                                                })
                                            }(),
                                            console.log("Levels deep: " + u),
                                            u > 0)
                                                return void d20.textchat.diceengine.flushRemoteQueue();
                                            break
                                        }
                                    }
                                d = !0
                            }
                            o(t)
                        }
                          , s = function(t, i, r) {
                            t = $.trim(t.substring(2, t.length - 2));
                            var a = {};
                            t = t.replace(v, function(e) {
                                for (var t = (e = e.substring(2, e.length - 1)).split(","), n = 0; n < t.length; n++) {
                                    var i = t[n].split(":");
                                    a[i[0]] = !(i.length > 1) || i[1]
                                }
                                return ""
                            }),
                            d20.textchat.diceengine.process(t, function(s, l, c, u) {
                                if (d20.textchat.globalrolled++,
                                s.rolls && s.rolls.length > 0)
                                    try {
                                        _.each(s.rolls, function(e) {
                                            if (e.table) {
                                                d20.utils.stattracker.rolltables || (d20.utils.stattracker.rolltables = !0);
                                                var t = d20.Campaign.rollabletables.findTableByName(e.table)
                                                  , n = t.getWeightedArray();
                                                t && _.each(e.results, function(e) {
                                                    e.tableItem = t.tableitems.get(n[e.tableidx]).toJSON()
                                                })
                                            }
                                        })
                                    } catch (d) {
                                        console.log("ERROR matching table"),
                                        console.log(d)
                                    }
                                n[i] = {
                                    expression: t,
                                    results: s,
                                    signature: c,
                                    rollid: l
                                },
                                u && (n[i].tdseed = u),
                                a.tracker && f(e.currentSelected, s, a.tracker),
                                o++,
                                r()
                            })
                        }
                          , l = ""
                          , c = function() {
                            l !== e.content ? (l = e.content,
                            a(e.content + "", c)) : r()
                        };
                        a(e.content + "", c)
                    }
                      , C = /(\?{[^}]+})/m
                      , T = 0
                      , A = function() {
                        var e = !1;
                        a.content = a.content.replace(C, function(t) {
                            if (T > 99)
                                return t;
                            e = !0,
                            T++;
                            var n = (t = $.trim(t.substring(2, t.length - 1))).split("|");
                            if (t = n[0],
                            console.log(n.length),
                            u[t] !== undefined)
                                return _.defer(function() {
                                    A()
                                }),
                                u[t];
                            if (n.length <= 2)
                                var i = $("<div><p style='font-size: 1.15em;'><strong>" + d20.utils.strip_tags(t) + ":</strong> <input type='text' style='width: 75px; margin-left: 5px;'></p></div>");
                            else {
                                options = [],
                                n.each(function(e) {
                                    opt = e.split(","),
                                    optlabel = opt[0],
                                    optvalue = opt[1] ? opt[1] : opt[0],
                                    optvalue = optvalue.replace(/'/g, "&#39"),
                                    opt != t && options.push("<option value='" + d20.utils.strip_tags(optvalue) + "'>" + d20.utils.strip_tags(optlabel) + "</option>")
                                });
                                i = $("<div><p style='font-size: 1.15em;'><strong>" + d20.utils.strip_tags(t) + ":</strong> <select style='width: 150px; margin-left: 5px;'>" + options.join("") + "</select></p></div>")
                            }
                            return i.dialog({
                                title: "Input Value",
                                beforeClose: function() {
                                    return !1
                                },
                                buttons: {
                                    Submit: function() {
                                        n.length < 3 ? (u[t] = i.find("input").val(),
                                        a.content = a.content.replace("?${1}", i.find("input").val())) : (u[t] = i.find("select").val(),
                                        a.content = a.content.replace("?${1}", i.find("select").val())),
                                        i.off(),
                                        i.dialog("destroy").remove(),
                                        A(),
                                        d20.textchat.$textarea.focus()
                                    },
                                    Cancel: function() {
                                        i.off(),
                                        i.dialog("destroy").remove(),
                                        R()
                                    }
                                }
                            }),
                            i.on("keydown", "input, select", function(e) {
                                13 == e.which && (n.length < 3 ? (u[t] = i.find("input").val(),
                                a.content = a.content.replace("?${1}", i.find("input").val())) : (u[t] = i.find("select").val(),
                                a.content = a.content.replace("?${1}", i.find("select").val())),
                                i.off(),
                                i.dialog("destroy").remove(),
                                A(),
                                e.stopPropagation(),
                                e.preventDefault(),
                                d20.textchat.$textarea.focus())
                            }),
                            _.defer(function() {
                                n.length <= 2 ? (2 === n.length && i.find("input").val(n[1]).select(),
                                i.find("input").focus()) : i.find("select").focus()
                            }),
                            "?${1}"
                        }),
                        e || E()
                    }
                      , R = function() {
                        k = null,
                        S = null,
                        E = null,
                        A = null,
                        inlinerolls = null,
                        a = null,
                        w = null,
                        u = null,
                        h = null,
                        d20.engine.mode !== p && setMode(p),
                        p = null
                    };
                    s ? E() : k()
                }
            } else
                console.log("No document!")
        }
        ,
        $("#textchat-input").on("click", "button", function() {
            var e = $.trim(d20.textchat.$textarea.val());
            d20.textchat.doChatInput(e),
            d20.textchat.$textarea.val("").focus()
        });
        var m = !1
          , y = function(e) {
            var t = (new Date).getTime();
            m && t - m < 3e3 || d20.textchat.talktomyself || (m = t,
            d20.textchat.sendShout({
                type: "istyping",
                playerid: window.currentPlayer.id,
                content: e,
                time: (new Date).getTime()
            }))
        };
        d20.textchat.$textarea.bind("keyup", function() {
            var e = $(this).val();
            if (e.length > 1 && "#" != e.substring(0, 1)) {
                var t = !1;
                if ("/as " === e.substring(0, 4) || "/emas " === e.substring(0, 6)) {
                    var n = (e = e.replace("/as ", "").replace("/emas ", "")).match(/ /g);
                    if (null == n || n.length < 2)
                        return;
                    var i = e.match(/"/g);
                    if ('"' === e[0] && null !== i && i.length < 2)
                        return;
                    var o = e.match(/\w+|"[^"]+"/);
                    null != o && o.length && o.length > 0 && (t = '"' === o[0][0] ? o[0].substring(1, o[0].length - 1) : o[0])
                } else
                    "/ooc " === e.substring(0, 5) || "/o " === e.substring(0, 3) || "/desc " === e.substring(0, 6) || "/em " === e.substring(0, 4) || "/me " === e.substring(0, 4) || "/e " === e.substring(0, 3) ? t = d20.textchat.$speakingas.find("option:first-child").text() : "/" !== e.substring(0, 1) && (t = d20.textchat.$speakingas.find("option:selected").text());
                t && y(t)
            }
        }),
        d20.textchat.$textarea.bind("keydown", function(e) {
            if (13 === e.which) {
                if (a)
                    return !1;
                if (!0 === e.shiftKey)
                    return;
                $(this).parent().find("button").trigger("click"),
                e.preventDefault()
            }
        }),
        d20.textchat.$textarea.bind("keyup", "up", function() {
            var e = d20.textchat.commandhistory[d20.textchat.commandhistory.length + d20.textchat.commandIndex];
            "" != $(this).val() && $(this).val() != e || (Math.abs(d20.textchat.commandIndex) < d20.textchat.commandhistory.length + 1 && (d20.textchat.commandIndex = d20.textchat.commandIndex - 1),
            $(this).val(d20.textchat.commandhistory[d20.textchat.commandhistory.length + d20.textchat.commandIndex]))
        }),
        d20.textchat.$textarea.bind("keyup", "down", function() {
            var e = d20.textchat.commandhistory[d20.textchat.commandhistory.length + d20.textchat.commandIndex];
            "" != $(this).val() && $(this).val() != e || (d20.textchat.commandIndex < 0 && (d20.textchat.commandIndex = d20.textchat.commandIndex + 1),
            $(this).val(d20.textchat.commandhistory[d20.textchat.commandhistory.length + d20.textchat.commandIndex]))
        });
        var v = function(e, t) {
            return e.substring(0, t.selectionStart).match(/[\w\xe4\xf6\xfc\xc4\xd6\xdc\xdf#%{]+$/)
        }
          , b = function(e, t) {
            if (e.setSelectionRange)
                e.setSelectionRange(t, t);
            else if (e.createTextRange) {
                var n = e.createTextRange();
                n.collapse(!0),
                n.moveEnd("character", t),
                n.moveStart("character", t),
                n.select()
            }
        };
        d20.textchat.$textarea.autocomplete({
            delay: 100,
            autoFocus: !0,
            position: {
                my: "left top",
                at: "left bottom"
            },
            source: function(e, t) {
                var n = v(e.term, d20.textchat.$textarea[0]);
                if ("%" === (n = null != n ? n[0] : "")[0] && "{" !== n[1] && (n = "%{" + n.substring(1, n.length)),
                "#" == n.substring(0, 1)) {
                    var i = [];
                    d20.Campaign.players.each(function(e) {
                        e.macros.each(function(t) {
                            if ("" == t.get("name"))
                                return !0;
                            (e.id == window.currentPlayer.id || t.visibleToCurrentPlayer()) && i.push("#" + t.get("name"))
                        })
                    }),
                    t($.ui.autocomplete.filter(i, n))
                } else if ("/w " == e.term.substring(0, 3) && e.term.split(" ").length < 3) {
                    t($.ui.autocomplete.filter(_.union(["gm"], d20.Campaign.players.map(function(e) {
                        return e.get("displayname").split(" ")[0]
                    }), d20.Campaign.characters.map(function(e) {
                        var t = e.get("inplayerjournals").split(",");
                        return !!(window.is_gm || -1 !== _.indexOf(t, "all") || window.currentPlayer && -1 !== _.indexOf(t, window.currentPlayer.id)) && e.get("name").split(" ")[0]
                    })), n))
                } else if ("%{" === n.substring(0, 2)) {
                    i = [];
                    d20.Campaign.characters.each(function(e) {
                        e.currentPlayerControls() && e.abilities.each(function(t) {
                            -1 !== t.get("name").toLowerCase().indexOf(n.substring(2, n.lenght).toLowerCase()) && i.push("%{" + e.get("name") + "|" + t.get("name") + "}")
                        })
                    }),
                    t(i)
                } else
                    t([])
            },
            focus: function() {
                return !1
            },
            select: function(e, t) {
                t.item.value += " ";
                var n = v(this.value, this)[0]
                  , i = this.value.substring(0, this.selectionStart - n.length);
                this.value = i + t.item.value + this.value.substring(this.selectionStart, this.value.length);
                var o = i.length + t.item.value.length;
                return b(this, o),
                e.preventDefault(),
                !1
            },
            search: function() {
                return null != v(this.value, this)
            },
            open: function() {
                a = !0
            },
            close: function() {
                setTimeout(function() {
                    a = !1
                }, 250)
            }
        });
        var w = $("#textchat .content");
        d20.textchat.incoming = function(e, t, a, s) {
            var c = t.type;
            if ("api" === t.type)
                return;
            if (d20.tutorial && d20.tutorial.active && $(document).trigger("receivedChat", t),
            null === t.timestamp)
                t.timestamp = "";
            else {
                t.realtimestamp = t.timestamp;
                var u = t.timestamp
                  , d = Date.create(u)
                  , h = (new Date).getTime();
                t.timestamp = h - u < 864e5 ? d.format("{h}:{mm}{TT}") : d.format("{{Month}} {{dd}}, {{yyyy}} {h}:{mm}{TT}")
            }
            if (d20.Campaign && t.playerid != window.currentPlayer.id && (delete l[t.playerid],
            d20.textchat.updateWhoIsTyping()),
            "gmrollresult" == t.type) {
                if (!window.is_gm && t.playerid != window.currentPlayer.id)
                    return void console.log("ignoring message, not gm, and not original player.");
                c = "rollresult"
            }
            if ("whisper" == t.type)
                if (t.playerid == window.currentPlayer.id)
                    c = "whispersent";
                else {
                    if (c = "whisperreceived",
                    "gm" == t.target) {
                        if (!window.is_gm)
                            return
                    } else if (-1 === t.target.indexOf(window.currentPlayer.id))
                        return;
                    t
                }
            if (d20.Campaign) {
                var p = w.height()
                  , f = $(window).height()
                  , g = !1;
                p - d20.textchat.$textchat.scrollTop() - 200 < f && (g = !0)
            }
            if (t.inlinerolls !== undefined && t.inlinerolls.length > 0 && _.each(t.inlinerolls, function(e) {
                e.results !== undefined && e.results.total !== undefined && e.results.total % 1 != 0 && (e.results.total = parseFloat(e.results.total.toPrecision(12)))
            }),
            "rollresult" == c && t.origRoll) {
                c = "newroll";
                try {
                    var m = JSON.parse(t.content);
                    t.signature && (d20.textchat.verifyRoll(t.id, m, t.signature) ? (t.realtimestamp && new Date - t.realtimestamp < 1e4 && d20.dice_engine.newRoll(t.id),
                    t.passedSignature = !0) : t.failedSignature = !0),
                    m.total && m.total % 1 != 0 && (m.total = parseFloat(m.total.toPrecision(12))),
                    t.htmlcontent = d20.dice_formatter.getHtmlForResult(m),
                    t.sanitizedOrigRoll = d20.dice_formatter.replaceInlineRolls(t.origRoll.replace("<", "&lt;"), t, "")
                } catch (L) {
                    return
                }
            } else
                "rollresult" == c && "object" == typeof t.content && (t.content = t.content.origformula + "|" + t.content.formula + "|" + t.content.total);
            const y = $("#tmpl_chatmessage_" + c);
            if (s) {
                var v = w.find(".message[data-messageid=" + t.id + "]");
                v.find(".avatar").length > 0 ? t.showname = !0 : t.showname = !1
            } else
                (t.who !== n || i > 5) && (t.showname = !0,
                i = 0);
            if (t.rolltemplate || "rollresult" == c || "newroll" == c || "tokenroll" == c || "direct" == c || (t.content = Markdown.parse(t.content + "").autoLink()),
            t.rolltemplate) {
                for (var b, x = {}, k = /{{([\s\S]*?}?)}}/gi; null != (b = k.exec(t.content)); ) {
                    b.index === k.lastIndex && k.lastIndex++;
                    var E = b[1] + ""
                      , S = E.split("=");
                    x[S[0]] = E.substring(S[0].length + 1, E.length)
                }
                $.each(x, function(e, t) {
                    x[e] = t.replace(/\^{([^}]+)}/g, function(e, t) {
                        return t = $.trim(t),
                        i18n(t, '<span style="color: red;">[' + t + "]</span>")
                    });
                    var n = e.replace(/\^{([^}]+)}/g, function(e, t) {
                        return t = $.trim(t),
                        i18n(t, "[" + t + "]")
                    });
                    n !== e && (x[n] = x[e],
                    delete x[e])
                }),
                x["rollWasCrit()"] = function() {
                    return function(e, n, i) {
                        try {
                            var o = i.join(" ");
                            if (x[o] !== undefined && "string" == typeof x[o]) {
                                var r = x[o].split("$[[")[1].split("]]")[0];
                                if (t.inlinerolls[r] && d20.dice_formatter.checkForCrits(t.inlinerolls[r].results.rolls, "crit"))
                                    return n(e)
                            }
                        } catch (L) {
                            console.log("Error while checking for crit in roll...")
                        }
                        return null
                    }
                }
                ,
                x["^rollWasCrit()"] = function() {
                    return function(e, n, i) {
                        try {
                            var o = i.join(" ");
                            if (x[o] !== undefined && "string" == typeof x[o]) {
                                var r = x[o].split("$[[")[1].split("]]")[0];
                                if (t.inlinerolls[r] && !d20.dice_formatter.checkForCrits(t.inlinerolls[r].results.rolls, "crit"))
                                    return n(e)
                            }
                        } catch (L) {
                            console.log("Error while checking for crit in roll...")
                        }
                        return null
                    }
                }
                ,
                x["rollWasFumble()"] = function() {
                    return function(e, n, i) {
                        try {
                            var o = i.join(" ");
                            if (x[o] !== undefined && "string" == typeof x[o]) {
                                var r = x[o].split("$[[")[1].split("]]")[0];
                                if (t.inlinerolls[r] && d20.dice_formatter.checkForCrits(t.inlinerolls[r].results.rolls, "fumble"))
                                    return n(e)
                            }
                        } catch (L) {
                            console.log("Error while checking for fumble in roll...")
                        }
                        return null
                    }
                }
                ,
                x["^rollWasFumble()"] = function() {
                    return function(e, n, i) {
                        try {
                            var o = i.join(" ");
                            if (x[o] !== undefined && "string" == typeof x[o]) {
                                var r = x[o].split("$[[")[1].split("]]")[0];
                                if (t.inlinerolls[r] && !d20.dice_formatter.checkForCrits(t.inlinerolls[r].results.rolls, "fumble"))
                                    return n(e)
                            }
                        } catch (L) {
                            console.log("Error while checking for fumble in roll...")
                        }
                        return null
                    }
                }
                ,
                x["rollTotal()"] = function() {
                    return function(e, n, i) {
                        try {
                            var o = i[0]
                              , r = i[1];
                            if (lookingForTotal = r !== undefined && isNaN(r) ? t.inlinerolls[x[r].split("$[[")[1].split("]]")[0]].results.total : r,
                            x[o] !== undefined && "string" == typeof x[o]) {
                                var a = x[o].split("$[[")[1].split("]]")[0];
                                if (t.inlinerolls[a] && t.inlinerolls[a].results.total === parseInt(lookingForTotal, 10))
                                    return n(e)
                            }
                        } catch (L) {
                            console.log("Error while checking for roll total...")
                        }
                        return null
                    }
                }
                ,
                x["^rollTotal()"] = function() {
                    return function(e, n, i) {
                        try {
                            var o = i[0]
                              , r = i[1];
                            if (lookingForTotal = r !== undefined && isNaN(r) ? t.inlinerolls[x[r].split("$[[")[1].split("]]")[0]].results.total : r,
                            x[o] !== undefined && "string" == typeof x[o]) {
                                var a = x[o].split("$[[")[1].split("]]")[0];
                                if (t.inlinerolls[a] && t.inlinerolls[a].results.total !== parseInt(lookingForTotal, 10))
                                    return n(e)
                            }
                        } catch (L) {
                            console.log("Error while checking for roll total...")
                        }
                        return null
                    }
                }
                ,
                x["rollGreater()"] = function() {
                    return function(e, n, i) {
                        try {
                            var o = i[0]
                              , r = i[1];
                            if (lookingForTotal = r !== undefined && isNaN(r) ? t.inlinerolls[x[r].split("$[[")[1].split("]]")[0]].results.total : r,
                            x[o] !== undefined && "string" == typeof x[o]) {
                                var a = x[o].split("$[[")[1].split("]]")[0];
                                if (t.inlinerolls[a] && t.inlinerolls[a].results.total > parseInt(lookingForTotal, 10))
                                    return n(e)
                            }
                        } catch (L) {
                            console.log("Error while checking for roll total...")
                        }
                        return null
                    }
                }
                ,
                x["^rollGreater()"] = function() {
                    return function(e, n, i) {
                        try {
                            var o = i[0]
                              , r = i[1];
                            if (lookingForTotal = r !== undefined && isNaN(r) ? t.inlinerolls[x[r].split("$[[")[1].split("]]")[0]].results.total : r,
                            x[o] !== undefined && "string" == typeof x[o]) {
                                var a = x[o].split("$[[")[1].split("]]")[0];
                                if (t.inlinerolls[a] && t.inlinerolls[a].results.total <= parseInt(lookingForTotal, 10))
                                    return n(e)
                            }
                        } catch (L) {
                            console.log("Error while checking for roll total...")
                        }
                        return null
                    }
                }
                ,
                x["rollLess()"] = function() {
                    return function(e, n, i) {
                        try {
                            var o = i[0]
                              , r = i[1];
                            if (lookingForTotal = r !== undefined && isNaN(r) ? t.inlinerolls[x[r].split("$[[")[1].split("]]")[0]].results.total : r,
                            x[o] !== undefined && "string" == typeof x[o]) {
                                var a = x[o].split("$[[")[1].split("]]")[0];
                                if (t.inlinerolls[a] && t.inlinerolls[a].results.total < parseInt(lookingForTotal, 10))
                                    return n(e)
                            }
                        } catch (L) {
                            console.log("Error while checking for roll total...")
                        }
                        return null
                    }
                }
                ,
                x["^rollLess()"] = function() {
                    return function(e, n, i) {
                        try {
                            var o = i[0]
                              , r = i[1];
                            if (lookingForTotal = r !== undefined && isNaN(r) ? t.inlinerolls[x[r].split("$[[")[1].split("]]")[0]].results.total : r,
                            x[o] !== undefined && "string" == typeof x[o]) {
                                var a = x[o].split("$[[")[1].split("]]")[0];
                                if (t.inlinerolls[a] && t.inlinerolls[a].results.total >= parseInt(lookingForTotal, 10))
                                    return n(e)
                            }
                        } catch (L) {
                            console.log("Error while checking for roll total...")
                        }
                        return null
                    }
                }
                ,
                x["rollBetween()"] = function() {
                    return function(e, n, i) {
                        try {
                            var o = i[0]
                              , r = i[1]
                              , a = i[2];
                            if (lookingForTotal = r !== undefined && isNaN(r) ? t.inlinerolls[x[r].split("$[[")[1].split("]]")[0]].results.total : r,
                            lookingForTotal2 = a !== undefined && isNaN(a) ? t.inlinerolls[x[a].split("$[[")[1].split("]]")[0]].results.total : a,
                            x[o] !== undefined && "string" == typeof x[o]) {
                                var s = x[o].split("$[[")[1].split("]]")[0];
                                if (t.inlinerolls[s] && t.inlinerolls[s].results.total >= parseInt(lookingForTotal, 10) && t.inlinerolls[s].results.total <= parseInt(lookingForTotal2, 10))
                                    return n(e)
                            }
                        } catch (L) {
                            console.log("Error while checking for roll total...")
                        }
                        return null
                    }
                }
                ,
                x["^rollBetween()"] = function() {
                    return function(e, n, i) {
                        try {
                            var o = i[0]
                              , r = i[1]
                              , a = i[2];
                            if (lookingForTotal = r !== undefined && isNaN(r) ? t.inlinerolls[x[r].split("$[[")[1].split("]]")[0]].results.total : r,
                            lookingForTotal2 = a !== undefined && isNaN(a) ? t.inlinerolls[x[a].split("$[[")[1].split("]]")[0]].results.total : a,
                            x[o] !== undefined && "string" == typeof x[o]) {
                                var s = x[o].split("$[[")[1].split("]]")[0];
                                if (t.inlinerolls[s] && (t.inlinerolls[s].results.total < parseInt(lookingForTotal, 10) || t.inlinerolls[s].results.total > parseInt(lookingForTotal2, 10)))
                                    return n(e)
                            }
                        } catch (L) {
                            console.log("Error while checking for roll total...")
                        }
                        return null
                    }
                }
                ,
                x["allprops()"] = function() {
                    return function(e, t, n) {
                        try {
                            var i = "";
                            for (var o in x)
                                "name" !== o && -1 === n.indexOf(o) && "function" != typeof x[o] && (i += t(e.replace("{{key}}", ucfirst(o)).replace("{{value}}", x[o])));
                            return i
                        } catch (L) {
                            console.log("Error enumerating all properties")
                        }
                        return null
                    }
                }
                ;
                var C = "";
                if (d20.journal && d20.journal.customSheets && d20.journal.customSheets.rollTemplates[t.rolltemplate])
                    C = "<div class='sheet-rolltemplate-" + t.rolltemplate + "'>" + d20.journal.customSheets.rollTemplates[t.rolltemplate] + "</div>";
                else {
                    var T = $("#sheet-rolltemplate-" + t.rolltemplate);
                    0 === T.length ? console.error("Didn't find a roll template called '" + t.rolltemplate + "'") : C = "<div class='" + T.attr("id") + "'>" + T.html() + "</div>"
                }
                t.content = Mustache.render(C, x),
                t.content = Markdown.parse(t.content),
                t.content = d20.utils.htmlTranslator(t.content, !0)
            }
            let A = y.jqote(t);
            if ("tokenroll" === c) {
                const e = /<img\s.*src=\"(.*[\w\-]+\.webm(?:\?\d*)?)\"[^>]*>/i;
                A = A.replace(e, (e,t)=>`<video src="${t.replace("/med.webm", "/thumb.webm")}" draggable="false" muted autoplay loop />`)
            }
            var R, M = ":last-child";
            if (s ? (v.replaceWith(A),
            M = "[data-messageid=" + t.id + "]") : w.append(A),
            ("rollresult" == t.type || "gmrollresult" == t.type) && d20.Campaign && window.currentPlayer && window.currentPlayer.get("diceiconsenabled")) {
                w.find(".message" + M + " .rolled").draggable({
                    revert: !0,
                    distance: 10,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body",
                    scroll: !1
                }).addTouch();
                var P = w.find(".message" + M + " .formattedformula > .dicegrouping");
                P.find(".diceroll").length < 20 && P.sortable({
                    appendTo: document.body,
                    helper: "clone",
                    distance: 10,
                    items: "> .diceroll",
                    update: function(e) {
                        d20.textchat.updateDiceOrdering(t, e)
                    }
                }).addTouch(),
                P = null
            }
            if (d20.Campaign && window.currentPlayer && "newroll" == c && t.playerid == window.currentPlayer.id)
                try {
                    var I = $("#mylastrolls tbody tr").eq(0);
                    0 != I.length && $.trim(I.find("td.formula").text()) == t.origRoll || ($("#mylastrolls tbody").prepend($("#tmpl_recentroll").jqote(t)),
                    $("#mylastrolls tbody tr").eq(10).remove())
                } catch (L) {}
            if (!a && w.find(".message").length > 100 && w.find(".message").eq(0).remove(),
            s || (n = "emote" == t.type || "gmrollresult" == t.type || "whisper" == t.type ? "" : t.who,
            i++),
            d20.Campaign && (g || !1 === e)) {
                var O = w.height();
                d20.textchat.$textchat.scrollTop(O)
            }
            if (d20.Campaign && $("#chatbeepenabled").is(":checked") && (!o && !r || !d20.textchat.tabIsFocused && !d20.textchat.childWindow) && 0 != e && !d20.textchat.chatstartingup) {
                if ((new Date).getTime() - d20.textchat.lastChatBeep > 1e3) {
                    var D = new Audio;
                    D.src = "/images/sounds/beep." + (D.canPlayType("audio/ogg") ? "ogg" : "mp3"),
                    D.play(),
                    d20.textchat.lastChatBeep = (new Date).getTime()
                }
                d20.textchat.tabIsFocused || $("#textchattab").addClass("alertify")
            }
            (-1 !== document.body.className.indexOf("sidebarhidden") && $("#sidebarcontrol").addClass("alertify"),
            d20.textchat.chatstartingup) || (t.listenerid && (console.log("triggering mancerroll:" + t.listenerid),
            $(document).trigger("mancerroll:" + t.listenerid, t)),
            t.tdseed !== undefined ? R = t.id : t.inlinerolls !== undefined && t.inlinerolls.length > 0 && _.each(t.inlinerolls, function(e) {
                if (e.tdseed !== undefined)
                    return R = e.rollid,
                    !1
            }),
            R && (w.find(".message[data-messageid=" + t.id + "]").addClass("hidden3d"),
            d20.tddice.handleIncomingChatWith3DRoll(R, 1),
            setTimeout(function() {
                d20.textchat.showHidden3DRolls()
            }, d20.tddice.canRoll3D() ? 3e3 : 2e3),
            d20.textchat.allowed3drolls.push(R)))
        }
        ,
        d20.textchat.showHidden3DRolls = function() {
            var e = !1;
            if (d20.Campaign) {
                var t = w.height()
                  , n = $(window).height();
                t - d20.textchat.$textchat.scrollTop() - 200 < n && (e = !0)
            }
            if (w.find(".message.hidden3d").removeClass("hidden3d"),
            e) {
                var i = w.height();
                d20.textchat.$textchat.scrollTop(i)
            }
        }
        ,
        d20.textchat.verifyRoll = function(e, t, n) {
            var i = window.campaign_storage_path + "//" + e + "//" + t.total;
            return c.subjectPublicKeyRSA.verifyString(i, n)
        }
        ,
        d20.textchat.updateDiceOrdering = function(t, n) {
            var i = $(n.target)
              , o = parseInt(i.attr("data-groupindex"), 10)
              , r = JSON.parse(t.content)
              , a = [];
            i.find(".diceroll").each(function() {
                var e = parseInt($(this).attr("data-origindex"), 10);
                r.rolls[o] && r.rolls[o].results[e] ? a.push(r.rolls[o].results[e]) : console.log("ERROR: Unable to find group " + o + " or result " + e)
            }),
            r.rolls[o].results = a,
            e.child(t.id).child("content").set(JSON.stringify(r))
        }
        ,
        d20.textchat.updateWhoIsTyping = function() {
            var e = w.height()
              , t = $(window).height()
              , n = !1;
            e - d20.textchat.$textchat.scrollTop() < t - 150 && (n = !0);
            var i = _.values(l);
            if (0 == i.length)
                $("#whoistyping").hide();
            else {
                var o = "are";
                1 == i.length && (o = "is"),
                $("#whoistyping .names").text(i.join(", ").replace(/,$/, " and") + " " + o + " typing..."),
                $("#whoistyping").show()
            }
            if (n) {
                var r = w.height();
                d20.textchat.$textchat.scrollTop(r)
            }
        }
        ;
        var x, k = function(e) {
            if ("istyping" == e.type) {
                if (e.playerid == window.currentPlayer.id)
                    return;
                s[e.playerid] && clearTimeout(s[e.playerid]),
                l[e.playerid] = e.content,
                s[e.playerid] = setTimeout(function() {
                    s[e.playerid] = !1,
                    delete l[e.playerid],
                    d20.textchat.updateWhoIsTyping()
                }, 5e3),
                d20.textchat.updateWhoIsTyping()
            } else if ("shdw_update" == e.type || "shdw_kill" == e.type)
                d20.engine.handleShadows(e);
            else if ("steal_request" == e.type)
                d20.decks.steal_request(e);
            else if ("steal_response" == e.type)
                d20.decks.steal_response(e);
            else if ("measuring" == e.type)
                d20.engine.receiveMeasureUpdate(e);
            else if ("endmeasurement" == e.type)
                d20.engine.receiveEndMeasure(e);
            else if ("mapping" == e.type)
                e.currentLayer = e.currentLayer || "objects",
                e.api = !0,
                d20.engine.receiveMapping(e);
            else if ("api_reset_fog" == e.type)
                _.each(e.players, t=>{
                    let n = d20.Campaign.players.get(t)
                      , i = JSON.parse(n.get("adv_fow_revealed"));
                    delete i[e.pageid],
                    n.save({
                        adv_fow_revealed: JSON.stringify(i)
                    })
                }
                ),
                d20.engine.redrawScreenNextTick();
            else if ("clear_page_afow" == e.type)
                d20.engine.advanced_fog.clearPage(e.pageid);
            else if ("reset_local_afow" == e.type) {
                for (const e in d20.engine.advanced_fog.revealed_cells) {
                    const t = d20.engine.advanced_fog.revealed_cells[e];
                    for (const e in t)
                        t[e] = new Set
                }
                d20.engine.advanced_fog.visible_cells = {};
                for (let e of d20.Campaign.players.models)
                    e.trigger("change:adv_fow_revealed", e, e.get("adv_fow_revealed"));
                d20.engine.advanced_fog.updateAllVision(),
                d20.engine.redrawScreenNextTick()
            } else if ("afow_hide_local" === e.type) {
                const t = _.invoke(d20.Campaign.players.models, "get", "id");
                let n;
                window.is_gm && t.push("gm");
                for (const i of t)
                    if ((n = d20.engine.advanced_fog.revealed_cells[i]) && (n = n[e.page_id])) {
                        const t = e.cells.length;
                        for (let i = 0; i < t; ++i)
                            n["delete"](e.cells[i])
                    }
                d20.engine.advanced_fog.updateAllVision()
            } else if ("showhandout" == e.type)
                d20.journal.showHandoutFromShout(e);
            else if ("showcharacter" == e.type)
                d20.journal.showCharacterFromShout(e);
            else if ("showobject" == e.type) {
                if (!e.id)
                    return;
                d20.engine.zoomObject(e.id)
            } else if ("3droll" == e.type)
                d20.tddice && e.playerid !== window.currentPlayer.id && d20.tddice.remoteRoll(e);
            else if ("fx_start" == e.type || "fx_update" == e.type || "fx_kill" == e.type) {
                if (e.playerid === window.currentPlayer.id)
                    return;
                d20.fx.handleShout(e)
            } else if ("settingschanged" == e.type)
                (new Date).getTime() - e.time < 5e3 && window.location.reload();
            else if ("playclickhole" == e.type && e.content.length > 2)
                window.fakeLightly && window.fakeLightly("http://v.theonion.com/onionstudios/video/" + e.content[0] + "/640.mp4"),
                setTimeout(function() {
                    $("#lightly-overlay").hide()
                }, 1e3 * e.content[2] + 2e3);
            else if ("roll_received" === e.type)
                d20.dice_engine.handleRollReceived(e);
            else if ("play_anim_once" === e.type) {
                let t = d20.Campaign.activePage().thegraphics.get(e.id);
                t && (t = t.view.graphic) && t.isAnimated && t.restartAnimation(!0)
            }
        };
        d20.textchat.startup = function() {
            var n, i = new Firebase(window.FIREBASE_ROOT + window.campaign_storage_path + "/");
            t = i.child("shout"),
            e = i.child("chat"),
            textchatpopped = !1;
            var o = !1;
            d20.textchat.sendShout = function(e) {
                !o || "istyping" !== e.type && "measuring" !== e.type && "endmeasurement" !== e.type && "fx_start" !== e.type && "fx_update" !== e.type && "fx_kill" !== e.type && "play_anim_once" !== e.type && "afow_hide_local" !== e.type ? d20.tutorial && d20.tutorial.active ? k(e) : d20.textchat.shoutref.set(JSON.stringify(e)) : n.send(JSON.stringify({
                    t: "msg",
                    content: e
                }))
            }
            ,
            d20.textchat.shoutref = t,
            d20.textchat.chatstartingup = !0,
            t.on("value", function(e) {
                if (!d20.textchat.chatstartingup) {
                    var t = e.val();
                    t && k(JSON.parse(t))
                }
            });
            var r = []
              , a = function() {
                function e() {
                    d20.textchat.incoming(!1, {
                        who: "system",
                        type: "system",
                        content: $("#tmpl_welcome_message").jqote()
                    }),
                    "chrome63" === d20ext.videotype && d20.textchat.incoming(!1, {
                        who: "system",
                        type: "system",
                        content: "**" + i18n("chat_chrome63_warning") + "**"
                    }),
                    "chrome63" !== d20ext.videotype && "roll20" !== d20ext.videotype || d20.textchat.incoming(!1, {
                        who: "system",
                        type: "system",
                        content: "**" + i18n("chat_webrtc_deprecated") + "**"
                    })
                }
                for (var t = 0; t < r.length; t++)
                    d20.textchat.incoming(!d20.textchat.chatstartingup, r[t]);
                r = null,
                window.is_gm ? $.get("/campaigns/sharelink/" + window.campaign_id, function(t) {
                    d20.textchat.incoming(!1, {
                        who: "system",
                        type: "system",
                        content: i18n("chat_campaign_link") + "<div class='sharelink'><a href='" + t + "'>" + t + "</a></div><div style='font-size: 0.9em;'>(" + i18n("chat_campaign_link_hover_link") + ")</div>"
                    }),
                    e()
                }) : e(),
                d20.textchat.chatstartingup = !1
            }
              , s = _.debounce(a, 1e3)
              , l = e.limitToLast(100)
              , c = []
              , u = !1
              , d = 0
              , h = function(e) {
                var t = e.val();
                t.timestamp = e.getPriority(),
                t.id = e.key(),
                -1 === c.indexOf(t.id) ? (c.push(t.id),
                u = t.id,
                d = (new Date).getTime(),
                d20.textchat.chatstartingup ? (r.push(t),
                s()) : d20.textchat.incoming(!d20.textchat.chatstartingup, t)) : !d20.textchat.chatstartingup && (u !== t.id || (new Date).getTime() - d > 500) && d20.textchat.incoming(!0, t, !0, !0)
            };
            l.on("child_added", function(e) {
                h(e)
            }),
            l.on("child_changed", function(e) {
                h(e)
            }),
            l.once("value", function() {
                s()
            })
        }
        ,
        d20.textchat.opendialog = function() {
            x = $("#textchat").css("height"),
            $("#textchat").dialog({
                title: "Text Chat",
                beforeClose: function() {
                    $(this).dialog("destroy"),
                    $(this).appendTo("#rightsidebar"),
                    $(this).css("height", x).css("width", "auto"),
                    $(this).show()
                }
            })
        }
        ,
        d20.textchat.showPopout = function() {
            if (!0 !== textchatpopped) {
                var e = $("#textchat")
                  , t = $("#textchat-input")
                  , n = e.parent();
                d20.textchat.childWindow = window.open("/editor/popoutchat", "ChatPopout", "menubar=0,location=0,toolbar=0,status=0,scrollbars=1,width=300,height=800"),
                window.allChildWindows.push(d20.textchat.childWindow),
                d20.textchat.childWindow.onload = function() {
                    textchatpopped = !0,
                    d20.journal.customSheets && d20.journal.customSheets.styleel && (console.log("Setting style element in child window."),
                    $(d20.journal.customSheets.styleel).clone().appendTo(d20.textchat.childWindow.document.head)),
                    e.appendTo(d20.textchat.childWindow.document.getElementById("containerdiv")),
                    t.appendTo(d20.textchat.childWindow.document.body),
                    d20.textchat.$textarea.autocomplete("widget").appendTo(d20.textchat.childWindow.document.body),
                    d20.textchat.childWindow.document.title = "Roll20 Chat",
                    e.scrollTop(e[0].scrollHeight),
                    $("#rightsidebar").find("ul.tabmenu li").eq(1).find("a").trigger("click");
                    var n = function() {
                        return $(this).hasClass("tipsy-w") ? "w" : $(this).hasClass("tipsy-e") ? "e" : $(this).hasClass("tipsy-n") ? "n" : $(this).hasClass("tipsy-s") ? "s" : $(this).hasClass("tipsy-side") ? $(this).offset().left > $(document).scrollLeft() + $(window).width() / 2 ? "e" : "w" : $(this).offset().top < $(document).scrollTop() + $(window).height() / 2 ? "n" : "s"
                    };
                    $(d20.textchat.childWindow.document.body).find(".showtip").tipsy({
                        live: !0,
                        gravity: n,
                        opacity: .5,
                        html: !0,
                        containerel: $(d20.textchat.childWindow.document.body)
                    }),
                    $(d20.textchat.childWindow.document.body).find(".userscript-showtip").tipsy({
                        live: !0,
                        gravity: n,
                        opacity: 1,
                        html: !0,
                        filterhtml: !0,
                        userscript: !0,
                        containerel: $(d20.textchat.childWindow.document.body)
                    }),
                    r = !0,
                    $(d20.textchat.childWindow.document).on("click", "a", d20.utils.handleURL)
                }
                ,
                d20.textchat.childWindow.onbeforeunload = function() {
                    textchatpopped = !1,
                    setTimeout(function() {
                        $("#rightsidebar").find("a[href=#textchat]").trigger("click")
                    }, 100),
                    e.appendTo(n),
                    t.appendTo($("body")),
                    d20.textchat.$textarea.autocomplete("widget").appendTo($("body")),
                    e.scrollTop(e[0].scrollHeight),
                    window.allChildWindows = _.without(window.allChildWindows, d20.textchat.childWindow),
                    r = !1,
                    d20.textchat.childWindow = null
                }
                ,
                $(d20.textchat.childWindow).bind("focus", function() {
                    r = !0
                }),
                $(d20.textchat.childWindow).bind("blur", function() {
                    r = !1
                })
            }
        }
        ,
        $("#textchattab").on("dblclick", function() {
            d20.textchat.showPopout()
        }),
        $("#rightsidebar").resizable({
            handles: "w",
            alsoResize: "#textchat-input, #rightsidebar .tabmenu",
            minWidth: 300,
            start: function() {
                $("#editor-wrapper, #canvas-overlay").addClass("noshow")
            },
            resize: function() {},
            stop: function() {
                $("#editor-wrapper, #canvas-overlay").removeClass("noshow"),
                $(window).trigger("resize"),
                $("#rightsidebar").css("left", "").css("height", "100%")
            }
        })
    }),
    d20.journal = {
        compendiumPasteTarget: !1
    },
    $(function() {
        var e, t = $("#journal .searchbox input"), n = "<br><input><textarea><div><span><label><hr><img><b><i><strong><em><h1><h2><h3><h4><h5><h6><p><hr><table><tr><td><tbody><thead><th><tfoot><select><option><fieldset><button><ul><li><ol><caption>";
        d20.journal.possibletags = {};
        var i = function() {
            e && clearTimeout(e),
            e = setTimeout(function() {
                var t = (new Date).getTime();
                d20.journal.possibletags = {},
                d20.journal.refreshJournalList(!0),
                r(),
                console.log("Search took " + ((new Date).getTime() - t) + "ms"),
                e = !1
            }, 300)
        }
          , o = function(e) {
            return result = {},
            _.each(e, function(e, t) {
                try {
                    result[t] = JSON.parse(e)
                } catch (n) {
                    result[t] = e
                }
            }),
            result
        };
        t.inputClear().bind("keyup", function() {
            i()
        }),
        $("#journaltags").on("click", "li a", function() {
            t.val(("" === t.val() ? "" : t.val() + " ") + $.trim($(this).text())).trigger("keyup").focus(),
            $("#journal").trigger("click")
        });
        var r = function() {
            for (var e = _.sortBy(d20.journal.possibletags, function(e) {
                return e.count
            }), t = "<ul>", n = 0; n < e.length; n++)
                t += "<li><a href='javascript:void(0);'>" + e[n].tag + "</a> (" + e[n].count + ")</li>";
            t += "</ul>",
            0 == e.length && (t = "There are no tags set for the items listed below."),
            $("#journaltags .taglist").html(t)
        }
          , a = function(e, t, n, i, o, r) {
            e.charmancer.data[c] = e.charmancer.data[c] || {
                values: {},
                data: {}
            };
            var a = "comp_" === t.substring(0, 5) ? t.substring(5) : t
              , s = e.view.$charmancer.find("select[name='comp_" + a + "'], span[name='comp_" + a + "']")
              , l = s.length > 0 && $(s[0])
              , c = e.charmancer.currentStep
              , u = i.disable || []
              , d = e.charmancer.data[c].values[a] || ""
              , h = {}
              , p = "";
            o = o || !1,
            l && (p = l.is("select") ? "select" : "radio");
            var f = function(e, t, n, i) {
                i = i || "";
                var o = t.includes(i) ? t : t + i;
                return "" != e && (e += ":"),
                o && (o = o.split("~")[0]),
                "select" == p ? "<option class='sheet-compendium-opt' value=\"" + e + t.replace(/"/g, '"') + '" ' + n + ">" + o + "</option>" : "<label class='sheet-compendium-opt'><input type='radio' name='comp_" + a + "' value=\"" + e + t.replace(/"/g, '"') + '" ' + n + "><span>" + o + "</span></label>"
            }
              , g = function(e, t) {
                "select" == p ? e.val(t) : e.find("input[value='" + t + "']").prop("checked", !0)
            }
              , m = function() {
                if (o && r) {
                    var e = [];
                    l.find(".sheet-compendium-opt").each(function() {
                        e.push($(this).val())
                    }),
                    r.postMessage({
                        type: "attrreqfulfilled",
                        id: o,
                        data: e
                    })
                } else
                    "function" == typeof o && o()
            };
            if (d = i.selected == undefined ? d : i.selected,
            l && "string" == typeof n) {
                var y = e.charmancer.data[c].values || {};
                if (e.charmancer.cache[c][a] && e.charmancer.cache[c][a].terms == n)
                    l.html(e.charmancer.cache[c][a].html),
                    g(l, d),
                    h[l.attr("name")] = y[a],
                    d20.journal.notifyWorkersOfCharmancerChanges(e.id, h, "worker", i.silent),
                    m();
                else {
                    var v = d20.journal.lockCharmancerInput(e);
                    l.find(".sheet-compendium-opt").remove(),
                    (b = l.find(".sheet-custom")).remove(),
                    $.get(d20.compendium.compendiumBase + "compendium/compendium/globalsearch/" + COMPENDIUM_BOOK_NAME + "/?sharedCompendium=" + campaign_id + "&terms=" + n, function(t) {
                        var o = JSON.parse(t);
                        if (o = _.sortBy(o, function(e) {
                            return e.pagename
                        }),
                        _.each(o, function(t) {
                            var o = i.show_source ? " (" + t.initials + ")" : ""
                              , r = "";
                            -1 != u.indexOf(t.pagename) && t.pagename != _.last(d.split(":")) && (r = " disabled");
                            var s = f(t.category, t.pagename, r, o);
                            l.append(s),
                            e.charmancer.cache[c][a] = {
                                html: l.html(),
                                terms: n
                            }
                        }),
                        i.add) {
                            var r = "";
                            i.category && (r = i.category),
                            _.each(i.add, function(e) {
                                var t = "";
                                -1 != u.indexOf(e) && e != _.last(d.split(":")) && (t = " disabled");
                                var n = f(r, e, t);
                                l.append(n)
                            })
                        }
                        l.append(b),
                        g(l, d),
                        i.accept || !d && e.charmancer.data[c].values[a] == undefined || (h[l.attr("name")] = d,
                        d20.journal.notifyWorkersOfCharmancerChanges(e.id, h, "worker", i.silent)),
                        e.charmancer.cache[c][a] = {
                            html: l.html(),
                            terms: n
                        },
                        m(),
                        d20.journal.unlockCharmancerInput(e, v)
                    })
                }
            } else if (l) {
                var b, w = "";
                i.category && (w = i.category),
                l.find(".sheet-compendium-opt").remove(),
                (b = l.find("option.sheet-custom")).remove(),
                _.each(n, function(e) {
                    var t = "";
                    -1 != u.indexOf(e) && e != _.last(d.split(":")) && (t = " disabled");
                    var n = f(w, e, t);
                    l.append(n)
                }),
                i.add && _.each(i.add, function(e) {
                    var t = "";
                    -1 != u.indexOf(e) && e != _.last(d.split(":")) && (t = " disabled");
                    var n = f(w, e, t);
                    l.append(n)
                });
                d = n.length > 0 ? d : "";
                l.append(b),
                g(l, d),
                i.accept || !d && e.charmancer.data[c].values[a] == undefined || (h[l.attr("name")] = d,
                d20.journal.notifyWorkersOfCharmancerChanges(e.id, h, "worker", i.silent)),
                m()
            }
        }
          , s = function(e, t, n) {
            n || t === undefined || (e = html_sanitize(e, function(e) {
                var t = e.toString()
                  , n = "https://s3.amazonaws.com/files.d20.io";
                return t.substring(0, n.length) === n ? t : /^https?:\/\//.test(t) ? "http://imgsrv.roll20.net/?src=" + escape(t.replace("http://", "").replace("https://", "")) : ""
            }, function(e) {
                var t = e.split(" ");
                return _.each(t, function(e, n) {
                    "attr_" === e.substring(0, 5) || "sheet-" === e.substring(0, 6) || "repeating_" === e.substring(0, 10) || "roll_" === e.substring(0, 5) || "act_" == e.substring(0, 4) || "tokenaction" === e || "comp_" === e.substring(0, 5) ? t[n] = e : t[n] = "sheet-" + e
                }),
                t.join(" ")
            })),
            t = (((t || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join("");
            var i = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi
              , o = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
            return e.replace(o, "").replace(i, function(e, n) {
                return t.indexOf("<" + n.toLowerCase() + ">") > -1 ? e : ""
            })
        }
          , l = function(e, t) {
            e = (e = e.replace(/\/\*[^\*]+\*\//g, "")).replace(/([^{]+){[^}]*}/gi, function(e, t) {
                for (var n = (t = $.trim(t)).split(","), i = "", o = 0; o < n.length; o++)
                    n[o] = $.trim(n[o]),
                    "#" === n[o].substring(0, 1) && (n[o] = n[o].replace("#", ".")),
                    n[o].match(/^\.lang-[a-z]{2}( .*)?$/) ? n[o] = ".charsheet" + n[o] : n[o].match(/^\.charsheet(\.lang-[a-z]{2})?( .*)?$/) || "@font-face" === n[o] || ".sheet-rolltemplate-" === n[o].substring(0, 20) || ".withoutavatars .sheet-rolltemplate-" === n[o].substring(0, 36) || (n[o] = ".charsheet " + n[o]);
                return i = n.join(","),
                e = e.replace(t, i)
            });
            for (var n = [/(\bdata:\b|eval|cookie|\bwindow\b|\bparent\b|\bthis\b)/i, /behaviou?r|expression|moz-binding|@import|@charset|javascript|vbscript|[\<]|\\\w/i, /[\x7f-\xff]/, /[\x00-\x08\x0B\x0C\x0E-\x1F]/, /&\#/], i = 0; i < n.length; i++)
                e.match(n[i]) && (console.log(e.match(n[i])),
                console.error("Potential CSS security violation; character sheet template styling thrown out."),
                e = "");
            e = e.replace(/url[\s]*\([^\)]+\)/gi, function(e) {
                var t = (e = (e = e.replace(/\s/gi, "")).replace("url(", "")).split(")")
                  , n = "https://s3.amazonaws.com/files.d20.io";
                return (e = (e = (e = t[t.length - 2]).replace(/'/gi, "")).replace(/"/gi, "")).substring(0, n.length) === n ? "url('" + e + "')" : /^https?:\/\//.test(e) ? "url('http://imgsrv.roll20.net/?src=" + escape($.trim(e.replace("http://", "").replace("https://", ""))) + "')" : ""
            }),
            t = (((t || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join("");
            var o = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi
              , r = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
            return e.replace(r, "").replace(o, function(e, n) {
                return t.indexOf("<" + n.toLowerCase() + ">") > -1 ? e : ""
            })
        };
        t.autocomplete({
            source: function(e, t) {
                var n = e.term.split(/[ ]\s*/)
                  , i = n[n.length - 1];
                t(_.pluck(_.filter(d20.journal.possibletags, function(e) {
                    return e.tag.substring(0, i.length) === i
                }), "tag"))
            },
            select: function(e, t) {
                var n = this.value.split(/[ ]\s*/);
                return n.pop(),
                n.push(t.item.value),
                n.push(""),
                this.value = n.join(" "),
                !1
            },
            focus: function() {
                return !1
            }
        }),
        $("#journal .searchbox .trigger").popover({
            my: "right top",
            at: "right bottom"
        }),
        $("#journal .superadd").popover({
            my: "right top",
            at: "right bottom"
        }),
        d20.journal.refreshJournalList = function(e) {
            if (e) {
                console.log("Refresh Journal List!");
                var n, o, r = 0, a = 0;
                n = t.length > 0 ? (t.val() + "").toLowerCase().split(" ") : [""];
                var s = d20.Campaign.get("journalfolder");
                if ("" === s) {
                    o = [];
                    var l = [];
                    d20.Campaign.characters.each(function(e) {
                        l.push(e.toJSON())
                    }),
                    l = _.sortBy(l, function(e) {
                        return e.name
                    }),
                    o.push({
                        n: "Characters",
                        i: [],
                        id: generateUUID()
                    }),
                    _.each(l, function(e) {
                        o[0].i.push(e.id)
                    }),
                    l = null;
                    var c = [];
                    d20.Campaign.handouts.each(function(e) {
                        c.push(e.toJSON())
                    }),
                    c = _.sortBy(c, function(e) {
                        return e.name
                    }),
                    o.push({
                        n: "Handouts",
                        i: [],
                        id: generateUUID()
                    }),
                    _.each(c, function(e) {
                        o[1].i.push(e.id)
                    }),
                    c = null
                } else {
                    o = JSON.parse(s);
                    (new Date).getTime();
                    var u = [];
                    d20.Campaign.characters.each(function(e) {
                        if (-1 !== s.indexOf(e.id))
                            return !0;
                        u.push(e.toJSON())
                    }),
                    d20.Campaign.handouts.each(function(e) {
                        if (-1 !== s.indexOf(e.id))
                            return !0;
                        u.push(e.toJSON())
                    }),
                    u = _.sortBy(u, function(e) {
                        return e.name
                    }),
                    _.each(u, function(e) {
                        o.push(e.id)
                    })
                }
                var d = ""
                  , h = [];
                window.currentPlayer && "" !== window.currentPlayer.get("journalfolderstatus") && (h = window.currentPlayer.get("journalfolderstatus").split(","));
                var p = function(e) {
                    var t, i = e.id !== undefined && -1 !== h.indexOf(e.id + ""), o = e.n ? e.n : "";
                    t = e.i ? e.i : e;
                    var s = !1
                      , l = window.is_gm ? "dd-sortablehandle" : "dd-unsortable"
                      , c = function() {
                        e.i && (d += '<li class="dd-item dd-folder" data-globalfolderid="' + e.id + '">',
                        d += i ? '<button data-action="collapse" type="button" style="display: none;" class="' + l + '">Collapse</button><button data-action="expand" type="button" style="display: block;" class="dd-sortablehandle">Expand</button>' : '<button data-action="collapse" type="button" style="display: block;" class="' + l + '">Collapse</button><button data-action="expand" type="button" style="display: none;" class="dd-sortablehandle">Expand</button>',
                        d += '<div class="dd-handle ' + l + '">Drag</div><div class="dd-content"><div class="folder-title">' + d20ext.utils.strip_tags(e.n) + "</div></div>"),
                        d += i ? '<ol class="dd-list" style="display: none;">' : '<ol class="dd-list">',
                        s = !0
                    };
                    return _.each(t, function(e) {
                        var t = !1;
                        if (null === e)
                            return !0;
                        if ("object" == typeof e) {
                            var i = d + ""
                              , l = !!s;
                            s || c(),
                            p(e) || window.is_gm || (l || (s = !1),
                            d = i),
                            i = null
                        } else {
                            var u, h = e;
                            if ((u = d20.Campaign.characters.get(h)) || (u = d20.Campaign.handouts.get(h)),
                            !u)
                                return !0;
                            var f = u.get("inplayerjournals").split(",");
                            if (u.get("archived"))
                                return u.get("bio") !== undefined ? r++ : a++,
                                !0;
                            if (window.is_gm || -1 !== _.indexOf(f, "all") || window.currentPlayer && -1 !== _.indexOf(f, window.currentPlayer.id)) {
                                if (window.is_gm) {
                                    for (var g = 0; g < n.length; g++)
                                        "" != n[g] && -1 === u.get("name").toLowerCase().indexOf(n[g]) && -1 === u.get("tags").toLowerCase().indexOf(n[g]) && -1 === o.toLowerCase().indexOf(n[g]) && (t = !0);
                                    for (var m = u.tagsArray(), y = 0; y < m.length; y++)
                                        d20.journal.possibletags[m[y]] === undefined ? d20.journal.possibletags[m[y]] = {
                                            tag: m[y],
                                            count: 1
                                        } : d20.journal.possibletags[m[y]].count++
                                }
                                s || c();
                                var v = u.toJSON();
                                v.hidden = t,
                                d += $("#tmpl_existingitem").jqote(v)
                            }
                        }
                    }),
                    window.is_gm && !s && c(),
                    s && (0 === t.length && (d += "<li class='dd-item dd-item-dummy'><div class='dd-content'></div></li>"),
                    d += "</ol>",
                    e.i && (d += "</li>")),
                    s
                };
                p(o),
                window.is_gm && r > 0 && (d += "<div class='archiveentry character' data-itemid='archive'><span class='pictos' style='font-size: 1.5em; padding-right: 10px;'>I</span> <strong>" + r + "</strong> Archived Characters &raquo;</div>"),
                window.is_gm && a > 0 && (d += "<div class='archiveentry handout' data-itemid='archive'><span class='pictos' style='font-size: 1.5em; padding-right: 10px;'>I</span> <strong>" + a + "</strong> Archived Handouts &raquo;</div>"),
                $("#journalfolderroot").html(d),
                window.is_gm && (n.length > 1 || "" !== n[0]) && $("#journalfolderroot .dd-list").each(function() {
                    0 === $(this).find(".dd-item").not(".dd-item-hidden, .dd-item-dummy").length && $(this).parent("li").hide()
                }),
                window.is_gm && !window.is_playerapp ? $("#journalfolderroot .dd-item").draggable({
                    revert: !0,
                    distance: 10,
                    revertDuration: 0,
                    helper: "clone",
                    handle: ".namecontainer",
                    appendTo: "body",
                    scroll: !1,
                    start: function() {
                        $("#journalfolderroot").addClass("externaldrag")
                    },
                    stop: function() {
                        $("#journalfolderroot").removeClass("externaldrag")
                    }
                }).addTouch() : window.is_playerapp || $("#journalfolderroot .dd-item.character").each(function() {
                    var e = $(this).attr("data-itemid");
                    d20.Campaign.characters.get(e).currentPlayerControls() && $(this).draggable({
                        revert: !0,
                        distance: 10,
                        revertDuration: 0,
                        helper: "clone",
                        handle: ".namecontainer",
                        appendTo: "body",
                        scroll: !1,
                        start: function() {
                            $("#journalfolderroot").addClass("externaldrag")
                        },
                        stop: function() {
                            $("#journalfolderroot").removeClass("externaldrag")
                        }
                    }).addTouch()
                }),
                d20.journal.refreshSpeakingAsOptions()
            } else
                i()
        }
        ,
        window.is_gm && $("#journalfolderroot").on("change", function() {
            var e = $("#journalfolderroot").nestable("serialize");
            e && d20.Campaign.save({
                journalfolder: JSON.stringify(e)
            })
        });
        var c = function(e, t, n) {
            return n > 99 ? undefined : (_.each(e, function(e) {
                if (e && "object" == typeof e && e.id === t)
                    i = e;
                else if (e && "object" == typeof e && e.i !== undefined) {
                    var o = c(e.i, t, n + 1);
                    o !== undefined && (i = o)
                }
                if (i)
                    return !1
            }),
            i);
            var i
        };
        d20.journal.addItemToFolderStructure = function(e, t) {
            var n = d20.Campaign.get("journalfolder");
            if ("" !== n) {
                var i = JSON.parse(n);
                if (t && "root" !== t) {
                    var o = c(i, t, 0);
                    if (o === undefined || o.i === undefined)
                        return void console.log("ERROR: Could not find folder container for folder id " + t);
                    folderitems = o.i
                } else
                    folderitems = i;
                folderitems.unshift(e),
                d20.Campaign.save({
                    journalfolder: JSON.stringify(i)
                })
            }
        }
        ,
        d20.journal.addFolderToFolderStructure = function(e, t) {
            var n = d20.Campaign.get("journalfolder");
            "" === n && ($("#journalfolderroot").trigger("change"),
            n = d20.Campaign.get("journalfolder"));
            var i = JSON.parse(n);
            if (t && "root" !== t) {
                var o = c(i, t, 0);
                if (o === undefined || o.i === undefined)
                    return void console.log("ERROR: Could not find folder container for folder id " + t);
                folderitems = o.i
            } else
                folderitems = i;
            folderitems.unshift({
                n: e,
                i: [],
                id: generateUUID()
            }),
            d20.Campaign.save({
                journalfolder: JSON.stringify(i)
            })
        }
        ,
        $("#addnewjournalfolder").on("click", function() {
            var e = prompt("What do you want to call the new folder?");
            null != e && (d20.journal.addFolderToFolderStructure(e),
            $("#journal").trigger("click"))
        });
        var u, d = $("#journalmenu"), h = $("#journalitemmenu");
        $("#journalfolderroot").on("contextmenu", ".dd-content", function(e) {
            window.is_gm && ($(this).parent().hasClass("dd-folder") ? (d.show(),
            d.css({
                top: p(e, d) + "px",
                left: f(e, d) + "px"
            }),
            u = $(this).parent()) : $(this).parent().hasClass("dd-item") && (h.show(),
            h.css({
                top: p(e, h) + "px",
                left: f(e, h) + "px"
            }),
            $currentItemTarget = $(this).parent()),
            e.preventDefault(),
            e.stopPropagation())
        }),
        $("#journalmenu").on(mousedowntype, function() {
            return !1
        }),
        $("#journalmenu ul").on(mousedowntype, "li[data-action-type=deletefolder]", function() {
            confirm("Are you sure you want to delete this folder? All items in it will be moved to the root folder.") && (u.remove(),
            $("#journalfolderroot").trigger("change")),
            $("#journalmenu").hide()
        }),
        $("#journalmenu ul").on(mousedowntype, "li[data-action-type=addfolder]", function() {
            var e = prompt("What do you want to call the new folder?");
            if (null != e) {
                var t = u.attr("data-globalfolderid");
                t ? (3 === u.parents(".dd-folder").length && (t = u.parent().closest(".dd-folder").attr("data-globalfolderid")),
                $("#journalmenu").hide(),
                d20.journal.addFolderToFolderStructure(e, t)) : console.log("Did not find folder id")
            }
        }),
        $("#journalmenu ul").on(mousedowntype, "li[data-action-type=renamefolder]", function() {
            var e = prompt("What do you want to rename the folder to?");
            if (null != e) {
                var t = u.attr("data-globalfolderid");
                if (t) {
                    $("#journalmenu").hide();
                    var n = d20.Campaign.get("journalfolder");
                    "" === n && ($("#journalfolderroot").trigger("change"),
                    n = d20.Campaign.get("journalfolder"));
                    var i = JSON.parse(n)
                      , o = c(i, t);
                    o && (o.n = e),
                    d20.Campaign.save({
                        journalfolder: JSON.stringify(i)
                    })
                } else
                    console.log("Did not find folder id")
            }
        }),
        $("#journalmenu ul").on(mousedowntype, "li[data-action-type=addcharacter], li[data-action-type=addhandout]", function() {
            var e = u.attr("data-globalfolderid");
            if (e) {
                if (console.log("Folder: " + e),
                "addcharacter" === $(this).attr("data-action-type"))
                    d20.Campaign.characters.create({
                        name: d20.namegen() + " " + d20.namegen()
                    }, {
                        success: function(t) {
                            d20.journal.addItemToFolderStructure(t.id, e),
                            d20.journal.applyCharacterSheetDefaults(t)
                        }
                    });
                else
                    d20.Campaign.handouts.create({
                        name: "Mysterious Note"
                    }, {
                        success: function(t) {
                            d20.journal.addItemToFolderStructure(t.id, e)
                        }
                    });
                $("#journalmenu").hide(),
                $("#journal").trigger("click")
            } else
                console.log("Did not find folder id")
        }),
        $("#journalmenu ul").on(mousedowntype, "li[data-action-type=sortalpha]", function() {
            var e = u.attr("data-globalfolderid");
            if (e) {
                $("#journalmenu").hide();
                var t = d20.Campaign.get("journalfolder");
                "" === t && ($("#journalfolderroot").trigger("change"),
                t = d20.Campaign.get("journalfolder"));
                var n = JSON.parse(t)
                  , i = c(n, e);
                i && (i.i = _.sortBy(i.i, function(e) {
                    if (e && "object" == typeof e && e.n !== undefined)
                        return e.n;
                    if ("string" == typeof e) {
                        var t = d20.Campaign.characters.get(e);
                        return t || (t = d20.Campaign.handouts.get(e)),
                        t ? t.get("name") : "ZZZZZZ"
                    }
                })),
                d20.Campaign.save({
                    journalfolder: JSON.stringify(n)
                }),
                $("#journalmenu").hide()
            } else
                console.log("Did not find folder id")
        }),
        $("#journalitemmenu ul").on(mousedowntype, "li[data-action-type=showtoplayers]", function() {
            var e = $currentItemTarget.attr("data-itemid")
              , t = d20.Campaign.handouts.get(e);
            t || (t = d20.Campaign.characters.get(e)),
            t && t.broadcastToPlayers()
        }),
        $("#journalitemmenu ul").on(mousedowntype, "li[data-action-type=archiveitem]", function() {
            var e = $currentItemTarget.attr("data-itemid")
              , t = d20.Campaign.handouts.get(e);
            t || (t = d20.Campaign.characters.get(e)),
            t && t.save({
                archived: !0
            })
        }),
        $("#journalitemmenu ul").on(mousedowntype, "li[data-action-type=deleteitem]", function() {
            var e = $currentItemTarget.attr("data-itemid")
              , t = d20.Campaign.handouts.get(e);
            t || (t = d20.Campaign.characters.get(e)),
            t && t.safeDestroy()
        }),
        d.length > 0 && $("body").on(mousedowntype, function() {
            "none" !== d[0].style.display && (d[0].style.display = "none"),
            h.length > 0 && "none" !== h[0].style.display && (h[0].style.display = "none")
        }),
        $("#journalfolderroot").on(mousedowntype, ".dd-folder .dd-content", function(e) {
            if (e.which === undefined || 3 !== e.which)
                return $(this).siblings("button:visible").trigger("click"),
                !1
        }),
        $("#journalfolderroot").on("folderstatuschange", function() {
            var e = [];
            $("#journalfolderroot").find(".dd-folder").each(function() {
                $(this).find("> .dd-list").is(":visible") || e.push($(this).attr("data-globalfolderid"))
            }),
            window.currentPlayer.save({
                journalfolderstatus: e.join(",")
            })
        }),
        d20.journal.refreshHandoutsList = function(e) {
            e ? ($("#existinghandouts tbody").html($("#tmpl_existinghandouts").jqote({
                list: handouts,
                numarchived: numarchived
            })),
            window.is_gm && !window.is_playerapp && $("#existinghandouts tr").draggable({
                revert: !0,
                distance: 10,
                revertDuration: 0,
                helper: "clone",
                appendTo: "body",
                scroll: !1
            }).addTouch()) : i()
        }
        ,
        d20.journal.refreshSpeakingAsOptions = function() {
            var e = [];
            d20.Campaign.characters.each(function(t) {
                if (t.get("archived"))
                    return !0;
                var n = t.get("controlledby").split(",");
                (window.is_gm || -1 !== _.indexOf(n, "all") || window.currentPlayer && -1 !== _.indexOf(n, window.currentPlayer.id)) && e.push(t.toJSON())
            }),
            e = _.sortBy(e, function(e) {
                return e.name
            }),
            $("#speakingas").html($("#tmpl_speakingas_choices").jqote({
                characters: e
            })),
            $("#speakingas").val(window.currentPlayer.get("speakingas")),
            $("#player_displayname").val(window.currentPlayer.get("displayname")),
            d20.Campaign.players.forEach(function(e) {
                0 == d20.Campaign.get("disable_speakingas") && e.get("online") && e.updateAvatar(e.get("speakingas"))
            })
        }
        ,
        d20.journal.applyCharacterSheetDefaults = function(e, t) {
            if (!t && window.defaultsettings && window.defaultsettings.sheet && Object.keys(window.defaultsettings.sheet).length > 0)
                var n = Object.keys(window.defaultsettings.sheet);
            else if (t)
                n = t;
            if (n && n.length > 0) {
                _.each(n, function(t) {
                    var n = e.attribs.filter(function(e) {
                        return e.get("name") === t
                    });
                    if (n && n[0])
                        n[0].syncedSave({
                            current: window.defaultsettings.sheet[t]
                        }),
                        n[0].id;
                    else {
                        var i = e.attribs.create({
                            name: t
                        });
                        i.syncedSave({
                            current: window.defaultsettings.sheet[t]
                        }),
                        i.id
                    }
                }),
                d20.journal.notifyWorkersOfAttrChanges(e.id, n, "player")
            }
        }
        ;
        var p = function(e, t) {
            var n = e.pageY;
            return n + t.height() > window.innerHeight && (n = window.innerHeight - t.height()),
            n
        }
          , f = function(e, t) {
            var n = e.pageX;
            return n + t.width() > window.innerWidth && (n = window.innerWidth - t.width()),
            n
        };
        if ($("#speakingas").bind("change", function() {
            let e;
            e = d20.textchat.childWindow ? d20.textchat.childWindow.document.getElementById("speakingas").value : $("#speakingas").val(),
            window.currentPlayer.save({
                speakingas: e
            })
        }),
        $("#savenewplayername").bind("click", function() {
            window.currentPlayer.save({
                displayname: d20.utils.strip_tags($("#player_displayname").val())
            }),
            d20.journal.refreshSpeakingAsOptions()
        }),
        $("body").on("click", "#addnewcharacter", function() {
            d20.Campaign.characters.create({
                name: d20.namegen() + " " + d20.namegen()
            }, {
                success: function(e) {
                    d20.journal.addItemToFolderStructure(e.id),
                    d20.journal.applyCharacterSheetDefaults(e),
                    e.editview.showDialog()
                }
            });
            $("#journal").trigger("click")
        }),
        $("#journal").on("click", ".character", function() {
            var e = $(this).attr("data-itemid");
            if ("archive" != e) {
                var t = d20.Campaign.characters.get(e);
                t ? t.view.showDialog() : alert("ERROR: Unable to find character with ID " + e)
            } else
                window.is_gm && d20.journal.showArchiveDialog(d20.Campaign.characters, "Characters")
        }),
        $("body").on("click", ".editcharacter", function() {
            var e = $(this).parents(".ui-dialog-titlebar").siblings(".dialog").attr("data-characterid")
              , t = d20.Campaign.characters.get(e);
            if (t) {
                var n = t.view.$el.find("ul.nav li.active a").attr("data-tab");
                t.view.$el.dialog("close"),
                t.editview.showDialog(),
                _.defer(function() {
                    t.editview.$el.find("ul.nav li a[data-tab=" + n + "]").trigger("click")
                })
            } else
                alert("ERROR: Unable to find character to edit.")
        }),
        $("body").on("click", ".broadcastcharacter", function() {
            var e = $(this).parents(".ui-dialog-titlebar").siblings(".dialog").attr("data-characterid")
              , t = d20.Campaign.characters.get(e);
            t ? t.broadcastToPlayers() : alert("ERROR: Unable to find character to edit.")
        }),
        $(document).on("click", ".zoomoptions", function() {
            $(this).siblings(".zoomoptionsmenu").show()
        }),
        $(document).on("click", ".zoomoptionsmenu .zoomdisplay", function() {
            var e = $(this).parents(".ui-dialog-titlebar").siblings(".dialog");
            e.attr("data-handoutid") ? $zoomarea = e.find(".handoutviewer") : $zoomarea = e.find(".tab-content"),
            $zoomarea.attr("data-zoom", 100),
            $(this).text("100%"),
            $zoomarea.css({
                "-ms-transform": "scale(1)",
                "-webkit-transform": "scale(1)",
                transform: "scale(1)",
                width: "inherit"
            })
        }),
        $(document).on("click", ".zoomoptionsmenu .zoomin", function() {
            var e = $(this).siblings(".zoomdisplay")
              , t = $(this).parents(".ui-dialog-titlebar").siblings(".dialog");
            t.attr("data-handoutid") ? $zoomarea = t.find(".handoutviewer") : $zoomarea = t.find(".tab-content"),
            $zoomarea.attr("data-zoom") || $zoomarea.attr("data-zoom", 100),
            $zoomarea.attr("data-origwidth") || $zoomarea.attr("data-origwidth", $zoomarea.width());
            var n = $zoomarea.attr("data-zoom");
            switch (n = parseInt(n, 10)) {
            case 25:
                n = 33;
                break;
            case 33:
                n = 50;
                break;
            case 50:
                n = 67;
                break;
            case 67:
                n = 75;
                break;
            case 75:
                n = 90;
                break;
            case 90:
                n = 100;
                break;
            case 100:
                n = 110;
                break;
            case 110:
                n = 125;
                break;
            case 125:
                n = 150;
                break;
            case 150:
                n = 175;
                break;
            case 175:
                n = 200;
                break;
            case 200:
                n = 250;
                break;
            case 250:
                n = 300;
                break;
            case 300:
                n = 400;
                break;
            case 400:
                n = 500
            }
            $zoomarea.attr("data-zoom", n),
            e.text(n + "%");
            var i = 100 === n ? "inherit" : $zoomarea.attr("data-origwidth") * (n / 100);
            $zoomarea.css({
                "-ms-transform": "scale(" + n / 100 + ")",
                "-ms-transform-origin": "top left",
                "-webkit-transform": "scale(" + n / 100 + ")",
                "-webkit-transform-origin": "top left",
                transform: "scale(" + n / 100 + ")",
                "transform-origin": "top left",
                width: i
            })
        }),
        $(document).on("click", ".zoomoptionsmenu .zoomout", function() {
            var e = $(this).siblings(".zoomdisplay")
              , t = $(this).parents(".ui-dialog-titlebar").siblings(".dialog");
            t.attr("data-handoutid") ? $zoomarea = t.find(".handoutviewer") : $zoomarea = t.find(".tab-content"),
            $zoomarea.attr("data-zoom") || $zoomarea.attr("data-zoom", 100),
            $zoomarea.attr("data-origwidth") || $zoomarea.attr("data-origwidth", $zoomarea.width());
            var n = $zoomarea.attr("data-zoom");
            switch (n = parseInt(n, 10)) {
            case 33:
                n = 25;
                break;
            case 50:
                n = 33;
                break;
            case 67:
                n = 50;
                break;
            case 75:
                n = 67;
                break;
            case 90:
                n = 75;
                break;
            case 100:
                n = 90;
                break;
            case 110:
                n = 100;
                break;
            case 125:
                n = 110;
                break;
            case 150:
                n = 125;
                break;
            case 175:
                n = 150;
                break;
            case 200:
                n = 175;
                break;
            case 250:
                n = 200;
                break;
            case 300:
                n = 250;
                break;
            case 400:
                n = 300;
                break;
            case 500:
                n = 400
            }
            $zoomarea.attr("data-zoom", n),
            e.text(n + "%");
            var i = 100 === n ? "inherit" : $zoomarea.attr("data-origwidth") * (n / 100);
            $zoomarea.css({
                "-ms-transform": "scale(" + n / 100 + ")",
                "-ms-transform-origin": "top left",
                "-webkit-transform": "scale(" + n / 100 + ")",
                "-webkit-transform-origin": "top left",
                transform: "scale(" + n / 100 + ")",
                "transform-origin": "top left",
                width: i
            })
        }),
        $(document).click(function(e) {
            var t = e.target;
            $(t).is(".zoomoptionsmenu") || $(t).parents().is(".zoomoptionsmenu") || $(t).is(".zoomoptions") || $(t).parents().is(".zoomoptions") || $(".zoomoptionsmenu").hide()
        }),
        $(document).on("click", ".showpopout", function() {
            var e = $(this).parents(".ui-dialog-titlebar").siblings(".dialog");
            if (e.hasClass("characterdialog"))
                var t = e.attr("data-characterid")
                  , n = d20.Campaign.characters.get(t);
            else if (e.attr("data-handoutid")) {
                var i = e.attr("data-handoutid");
                n = d20.Campaign.handouts.get(i)
            }
            n && n.view.showPopout()
        }),
        d20.journal.showCharacterFromShout = function(e) {
            if ("all" === e.playerid || e.playerid === window.currentPlayer.id) {
                var t = d20.Campaign[e.jtype + "s"].get(e.jid);
                if (!t)
                    return;
                var n = t.get("inplayerjournals").split(",");
                (window.is_gm || -1 !== _.indexOf(n, "all") || window.currentPlayer && -1 !== _.indexOf(n, window.currentPlayer.id)) && t.view.showDialog(!0)
            }
        }
        ,
        $("#existingcharacters").on("refresh", function() {
            refreshCharactersList()
        }),
        $("body").on("click", "#addnewhandout", function() {
            d20.Campaign.handouts.create({}, {
                success: function(e) {
                    d20.journal.addItemToFolderStructure(e.id),
                    e.editview.showDialog()
                }
            });
            $("#journal").trigger("click")
        }),
        $("#journal").on("click", ".handout", function() {
            var e = $(this).attr("data-itemid");
            if ("archive" != e) {
                var t = d20.Campaign.handouts.get(e);
                t ? t.view.showDialog() : alert("ERROR: No handout found with the ID: " + e)
            } else
                window.is_gm && d20.journal.showArchiveDialog(d20.Campaign.handouts, "Handouts")
        }),
        $("body").on("click", ".edithandout", function() {
            var e = $(this).parents(".ui-dialog-titlebar").siblings(".dialog").attr("data-handoutid")
              , t = d20.Campaign.handouts.get(e);
            t ? (t.editview.showDialog(),
            t.view.$el.dialog("close")) : alert("ERROR: Unable to find handout to edit.")
        }),
        $("body").on("click", ".broadcasthandout", function() {
            var e = $(this).parents(".ui-dialog-titlebar").siblings(".dialog").attr("data-handoutid")
              , t = d20.Campaign.handouts.get(e);
            t ? t.broadcastToPlayers() : alert("ERROR: Unable to find handout to edit.")
        }),
        d20.journal.showHandoutFromShout = function(e) {
            if ("all" === e.playerid || e.playerid === window.currentPlayer.id) {
                var t = d20.Campaign[e.jtype + "s"].get(e.jid);
                if (!t)
                    return;
                var n = t.get("inplayerjournals").split(",");
                (window.is_gm || -1 !== _.indexOf(n, "all") || window.currentPlayer && -1 !== _.indexOf(n, window.currentPlayer.id)) && t.view.showDialog(!0)
            }
        }
        ,
        $("#existinghandouts").on("refresh", function() {
            refreshHandoutsList()
        }),
        d20.journal.showArchiveDialog = function(e, t) {
            var n = [];
            e.each(function(e) {
                e.get("archived") && n.push(e.toJSON())
            }),
            n = _.sortBy(n, function(e) {
                return e.name
            });
            var i = $($("#tmpl_archive").jqote({
                list: n
            }))
              , o = 700
              , r = $(window).height() - 300;
            r > o && (r = o),
            i.dialog({
                title: "Archived " + t,
                modal: !1,
                width: 400,
                zIndex: 10800,
                height: r,
                position: ["center", 20],
                beforeClose: function() {
                    $(this).dialog("destroy").remove()
                }
            }),
            i.on("click", ".restore", function() {
                var t = $(this).parents("tr").attr("data-objid")
                  , n = e.get(t);
                if (n) {
                    n.save({
                        archived: !1
                    });
                    var o = $(this).parents("table");
                    $(this).parents("tr").remove(),
                    0 == o.find("tr").length && i.dialog("destroy").remove()
                } else
                    console.log("No target found.")
            })
        }
        ,
        window.customcharsheet_html !== undefined) {
            d20.journal.useCustomSheets = !0,
            d20.journal.customSheets = {},
            console.log("Compiling sheet..."),
            d20.journal.customSheets.rollTemplates = {};
            var g = BASE64.decode(customcharsheet_html)
              , m = /(<rolltemplate [^>]+>)([\s\S]*?)(<\/rolltemplate>)/gi
              , y = /(class=\"sheet-rolltemplate-)([^\"]+)(\">)/i;
            g = g.replace(m, function(e) {
                var t = y.exec(e);
                if (t && t.length > 3) {
                    console.log("Found rolltemplate: " + t[2]);
                    var i = t[2]
                      , o = arguments[2];
                    o = s(o, n),
                    d20.journal.customSheets.rollTemplates[i] = o
                }
                return ""
            }),
            d20.journal.customSheets.charmancerTemplates = {},
            d20.journal.customSheets.charmancerRepeating = {};
            var v = /(<charmancer [^>]+>)([\s\S]*?)(<\/charmancer>)/gi
              , b = /(class=\"sheet-(charmancer|repeating)-)([^\"]+)(\">)/i;
            g = g.replace(v, function(e) {
                var t = b.exec(e);
                if (t && t.length > 4) {
                    console.log("Found Charactermancer " + ("charmancer" == t[2].toLowerCase() ? "Template" : "Repeating Section") + ": " + t[3]);
                    var i = t[3]
                      , o = arguments[2];
                    o = s(o, n),
                    "charmancer" == t[2].toLowerCase() ? d20.journal.customSheets.charmancerTemplates[i] = o : d20.journal.customSheets.charmancerRepeating[i.split(" ")[0]] = o
                }
                return ""
            }),
            d20.journal.customSheets.workerScripts = [];
            var w = /(<script [^>]+>)([\s\S]*?)(<\/script>)/gi
              , x = /(type=[\"|']text\/worker[\"|']>)/i;
            g = g.replace(w, function(e) {
                var t = x.exec(e);
                return t && -1 !== t[0].indexOf("text/worker") ? (console.log("Found webworker script"),
                d20.journal.customSheets.workerScripts.push(arguments[2]),
                "") : e
            }),
            d20.journal.customSheets.layouthtml = s(g, "<br><input><textarea><div><span><label><hr><img><b><i><strong><em><h1><h2><h3><h4><h5><h6><p><hr><table><tr><td><tbody><thead><th><tfoot><select><option><optgroup><fieldset><button><ul><li><ol><caption>");
            var k = $("<div class='root'>" + d20.journal.customSheets.layouthtml + "</div>");
            k = d20.utils.htmlTranslator(k),
            console.log("Finding sheet rolls..."),
            d20.journal.customSheets.availableRolls = {},
            d20.journal.customSheets.availableAttributes = {},
            d20.journal.customSheets.reservedAttributes = {},
            d20.journal.customSheets.tokenActions = [],
            d20.journal.customSheets.attrDeps = {};
            var E = /@{[^}]+}/g;
            d20.journal.updateSheetDeps = function(e, t) {
                var n = t.match(E);
                if (!n)
                    return !0;
                for (var i = 0; i < n.length; i++) {
                    var o = n[i].substring(2, n[i].length - 1).toLowerCase();
                    d20.journal.customSheets.attrDeps[o] || (d20.journal.customSheets.attrDeps[o] = []),
                    -1 === d20.journal.customSheets.attrDeps[o].indexOf(e.toLowerCase()) && d20.journal.customSheets.attrDeps[o].push(e.toLowerCase())
                }
            }
            ,
            k.find("button[type=roll]").each(function() {
                var e = $(this)
                  , t = e.parents("fieldset")
                  , n = t.length > 0 ? t.attr("class") + "_" : "";
                if (e.attr("name") !== undefined) {
                    var i = n + e.attr("name").substring(5, e.attr("name").length).toLowerCase();
                    d20.journal.customSheets.availableRolls[i] = e.val().split("\\n").join("\n"),
                    e.hasClass("tokenaction") && d20.journal.customSheets.tokenActions.push(i)
                }
                e.addClass("btn")
            }),
            d20.journal.customSheets.tokenActions = _.sortBy(d20.journal.customSheets.tokenActions, function(e) {
                return e
            });
            var S = function(e, t, n) {
                return !!(!d20.journal.customSheets.availableAttributes[e] || d20.journal.customSheets.availableAttributes[e] && t.val() && t.val() != n)
            };
            k.find('*[name^="attr_"]').each(function() {
                var e = $(this)
                  , t = e.parents("fieldset")
                  , n = "";
                if (t.length > 0) {
                    var i, o = t[0].classList;
                    _.each(o, function(e) {
                        if ("repeating_" === e.substring(0, 10))
                            return i = e.toLowerCase().replace("'", "&quot;"),
                            !1
                    }),
                    i && (n = i + "_")
                }
                var r = n + e.attr("name").substring(5, e.attr("name").length).toLowerCase();
                if ("input" === this.tagName.toLowerCase() && "checkbox" === e.attr("type") && e.val() !== undefined && S(r, e, undefined))
                    e.prop("checked") ? d20.journal.customSheets.availableAttributes[r] = e.val() || "" : d20.journal.customSheets.availableAttributes[r] = "0";
                else if ("input" === this.tagName.toLowerCase() && "radio" === e.attr("type") && e.val() !== undefined && S(r, e, undefined))
                    e.prop("checked") && (d20.journal.customSheets.availableAttributes[r] = e.val() || "");
                else if (e.prop("disabled")) {
                    if (!this.attributes.value)
                        return console.log("SHEET ERROR: Specified a disabled input without a valid formula in the value attribute."),
                        !0;
                    d20.journal.customSheets.availableAttributes[r] = this.attributes.value.nodeValue || "",
                    d20.journal.updateSheetDeps(r, d20.journal.customSheets.availableAttributes[r]),
                    e.attr("data-formula", this.attributes.value.nodeValue),
                    d20.journal.customSheets.reservedAttributes[r] = !0
                } else
                    "span" === this.tagName.toLowerCase() ? d20.journal.customSheets.availableAttributes[r] = d20.journal.customSheets.availableAttributes[r] : S(r, e, "") && (d20.journal.customSheets.availableAttributes[r] = e.val() || "");
                e.prop("disabled") || "string" != typeof e.val() || -1 === e.val().indexOf("@{") || d20.journal.updateSheetDeps(r, e.val())
            }),
            d20.journal.customSheets.layouthtml = k.html();
            var C = document.head || document.getElementsByTagName("head")[0]
              , T = document.createElement("style");
            A = l(BASE64.decode(customcharsheet_css)),
            T.type = "text/css",
            T.styleSheet ? T.styleSheet.cssText = A : T.appendChild(document.createTextNode(A)),
            C.appendChild(T),
            d20.journal.customSheets.styleel = T
        }
        if (window.compendium_css !== undefined) {
            console.log("Including compendium template css.");
            var A;
            C = document.head || document.getElementsByTagName("head")[0],
            T = document.createElement("style");
            A = BASE64.decode(compendium_css),
            T.type = "text/css",
            T.styleSheet ? T.styleSheet.cssText = A : T.appendChild(document.createTextNode(A)),
            C.appendChild(T)
        }
        if ($(document).on("submit", ".sheetform", function(e) {
            return e.preventDefault(),
            !1
        }),
        $(document).on("keydown", ".charsheet input", function(e) {
            13 === e.which && (e.preventDefault(),
            e.stopPropagation())
        }),
        d20.journal.customSheets) {
            d20.journal.customSheets.activeWorkers = [],
            _.each(d20.journal.customSheets.workerScripts, function(e) {
                var t;
                (t = window.is_playerapp ? new Worker("https://app.roll20.net/js/d20/sheetsandboxworker.js?" + (new Date).getTime()) : new Worker("/js/d20/sheetsandboxworker.js?" + (new Date).getTime())).addEventListener("message", function(e) {
                    if ("attrreq" === e.data.type) {
                        var i, r = {}, l = d20.Campaign.characters.get(e.data.id.split("//")[0]), c = e.data.id.split("//")[1];
                        i = "false" != c && c,
                        _.each(e.data.data, function(e) {
                            var t = !1
                              , n = !1
                              , o = "current"
                              , a = e = e || "";
                            if ("character_name" === e.toLowerCase())
                                return r[a] = l.get("name"),
                                !0;
                            if ("charactermancer_step" === e.toLowerCase())
                                return r[a] = l.get("mancerstep"),
                                !0;
                            if ("character_id" === e.toLowerCase())
                                return r[a] = l.id,
                                !0;
                            if ("_max" === e.substr(e.length - 4) && (o = "max",
                            e = e.substring(0, e.length - 4)),
                            "repeating_" === e.substring(0, 10)) {
                                var s = e.split("_");
                                isNaN(s[2]) && "-" !== s[2].substring(0, 1) && (e = i + "_" + s.splice(2, s.length).join("_"))
                            }
                            if (l.attribs.each(function(i) {
                                t || i.get("name").toLowerCase() === e.toLowerCase() && (i.get(o) !== undefined && "" !== i.get(o) && (r[a] = i.get(o),
                                n = !0),
                                t = !0)
                            }),
                            !n) {
                                var c = a;
                                "repeating_" === c.substring(0, 10) && c.indexOf("_-") > -1 && (c = c.replace(/_-.{19}/, "")),
                                c = c.toLowerCase(),
                                d20.journal.customSheets.availableAttributes[c] !== undefined && (r[a] = d20.journal.customSheets.availableAttributes[c])
                            }
                        }),
                        t.postMessage({
                            type: "attrreqfulfilled",
                            id: e.data.id,
                            data: r
                        })
                    } else if ("setattrs" === e.data.type) {
                        var u = e.data.data
                          , d = (l = d20.Campaign.characters.get(e.data.characterid),
                        function(e, t) {
                            var n;
                            return l.attribs.each(function(i) {
                                n || i.get("name").toLowerCase().substring(0, e.length) === e.toLowerCase() && (n = i.get("name").substring(0, e.length) + "_" + t)
                            }),
                            n || e.substring(0, e.lastIndexOf("_")).toLowerCase() + e.substr(-21) + "_" + t
                        }
                        );
                        if (l.activeCharmancer) {
                            var h = l.charmancer.charmancerEl;
                            _.each(u, function(e, t) {
                                "roll" == t.split("_")[0] && h.find("button[name=" + t + "]").val(e);
                                h.find("select[name='comp_" + t + "'], input[name='comp_" + t + "'], textarea[name='comp_" + t + "']").each(function() {
                                    var n = $(this);
                                    "checkbox" == n.attr("type") ? e == n.attr("value") ? n.prop("checked", !0) : n.prop("checked", !1) : "radio" == n.attr("type") ? (h.find("input[name='comp_" + t + "'][value='']").length || h.find("input[name='comp_" + t + "']").prop("checked", !1),
                                    h.find("input[name='comp_" + t + "'][value='" + e + "']").prop("checked", !0)) : n.val(e)
                                })
                            }),
                            d20.journal.notifyWorkersOfCharmancerChanges(l.id, u, "worker", e.data.options && e.data.options.silent, {
                                id: e.data.id
                            })
                        } else {
                            for (var p in u) {
                                var f = "current"
                                  , g = u[p]
                                  , m = !1;
                                if ("character_name" !== p.toLowerCase()) {
                                    if ("charactermancer_step" === p.toLowerCase() && l.save({
                                        mancerstep: g
                                    }),
                                    "_max" === p.substr(p.length - 4) && (f = "max",
                                    p = p.substring(0, p.length - 4)),
                                    "repeating_" === p.substring(0, 10)) {
                                        var y = p.split("_");
                                        e.data.repeatingfield && y.length > 2 && isNaN(y[2]) && "-" !== y[2].substring(0, 1) && (y = (p = e.data.repeatingfield + "_" + y.splice(2, y.length).join("_")).split("_")),
                                        y.length > 3 && (p = d(y.splice(0, 3).join("_"), y.join("_")));
                                        var v = p.split("_");
                                        if (v.length < 4 || "" === v[2] || isNaN(v[2]) && "-" !== v[2].substring(0, 1)) {
                                            console.log("SHEET WORKER ERROR: You attempted to set an attribute beginning with 'repeating_' but did not include a Row ID or Attribute Name in " + p);
                                            continue
                                        }
                                    }
                                    var b = {};
                                    if (b[f] = g,
                                    l.attribs.each(function(e) {
                                        m || e.get("name").toLowerCase() === p.toLowerCase() && (e.get(f) !== g && e.syncedSave(b),
                                        m = !0)
                                    }),
                                    !m)
                                        l.attribs.create({
                                            name: p
                                        }).syncedSave(b);
                                    e.data.options && e.data.options.silent || (l.view.changedByMe = "sheetworker")
                                } else
                                    l.save({
                                        name: d20.utils.strip_tags(g)
                                    }),
                                    l.view.$el.dialog("option", "title", "<button class='showpopout btn pictos' style='margin-right: 15px;'>|</button>" + d20.utils.strip_tags(g))
                            }
                            t.postMessage({
                                type: "setattrreqfulfilled",
                                id: e.data.id
                            })
                        }
                    } else if ("setdefaulttoken" === e.data.type) {
                        u = e.data.data;
                        if ((l = d20.Campaign.characters.get(e.data.characterid)).activeCharmancer)
                            return void console.log("SHEET WORKER ERROR: 'setDefaultToken' is not available while the Charactermancer is active.");
                        if (window.defaultsettings && window.defaultsettings.game && Object.keys(window.defaultsettings.game).length > 0) {
                            var w = ["bar1_value", "bar1_max", "bar2_value", "bar2_max", "bar3_value", "bar3_max", "aura1_square", "aura1_radius", "aura1_color", "aura2_square", "aura2_radius", "aura2_color", "tint_color", "showname", "showplayers_name", "playersedit_name", "showplayers_bar1", "playersedit_bar1", "showplayers_bar2", "playersedit_bar2", "showplayers_bar3", "playersedit_bar3", "showplayers_aura1", "playersedit_aura1", "showplayers_aura2", "playersedit_aura2", "light_radius", "light_dimradius", "light_angle", "light_otherplayers", "light_hassight", "light_losangle", "light_multiplier", "adv_fow_view_distance", "bar1_num_permission", "bar2_num_permission", "bar3_num_permission", "bar_location", "compact_bar"];
                            _.each(w, function(e) {
                                window.defaultsettings.game[e] != undefined && u[e] == undefined && (u[e] = window.defaultsettings.game[e])
                            })
                        }
                        var x = ["width", "height", "bar1_value", "bar1_max", "bar1_link", "bar2_value", "bar2_max", "bar2_link", "bar3_value", "bar3_max", "bar3_link", "imgsrc", "showname", "name", "aura1_radius", "aura1_color", "aura1_square", "aura2_radius", "aura2_color", "aura2_square", "tint_color", "status_dead", "statusmarkers", "showplayers_name", "showplayers_bar1", "showplayers_bar2", "showplayers_bar3", "showplayers_aura1", "showplayers_aura2", "playersedit_name", "playersedit_bar1", "playersedit_bar2", "playersedit_bar3", "playersedit_aura1", "playersedit_aura2", "light_radius", "light_dimradius", "light_otherplayers", "light_hassight", "light_angle", "light_losangle", "light_multiplier", "adv_fow_view_distance", "bar1_num_permission", "bar2_num_permission", "bar3_num_permission", "bar_location", "compact_bar"];
                        if (Object.keys(u).forEach(function(e) {
                            if (-1 === x.indexOf(e) && delete u[e],
                            e.indexOf("link") > -1) {
                                var t = "_max" == u[e].substr(-4) ? u[e].slice(0, -4) : u[e]
                                  , n = l.attribs.filter(function(e) {
                                    return e.get("name") === t
                                });
                                n.length > 0 && (u[e] = n[0].id)
                            }
                        }),
                        u.represents = l.id,
                        u.name = l.get("name"),
                        u.imgsrc && u.imgsrc.indexOf("files.d20.io/") > -1 ? u.imgsrc = u.imgsrc : u.imgsrc = l.get("avatar").replace("/original.", "/thumb.").replace("/thumb.webm", "/med.webm"),
                        u.imgsrc) {
                            var k = JSON.stringify(u);
                            l.updateBlobs({
                                defaulttoken: k
                            }),
                            l.save({
                                defaulttoken: (new Date).getTime()
                            })
                        }
                    } else if ("attrlist" === e.data.type) {
                        var E = (e.data.data + "").toLowerCase().replace("repeating_", "")
                          , S = (l = d20.Campaign.characters.get(e.data.id.split("//")[0]),
                        []);
                        l.attribs.each(function(e) {
                            var t = (e.get("name") + "").toLowerCase().split("_-")[0];
                            if ("repeating" == t.split("_")[0] && t.substring(10, t.length) == E) {
                                var n = e.get("name").split("_");
                                if (n.length > 2) {
                                    var i = n[2].toLowerCase();
                                    "" === i || isNaN(i) && "-" !== i.substring(0, 1) || -1 === S.indexOf(i) && S.push(i)
                                }
                            }
                        }),
                        t.postMessage({
                            type: "attrlistreqfulfilled",
                            id: e.data.id,
                            data: S
                        })
                    } else if ("removerepeatingrow" === e.data.type) {
                        var C = e.data.data + "_"
                          , T = C.split("_");
                        if ((l = d20.Campaign.characters.get(e.data.id.split("//")[0])).activeCharmancer)
                            return void console.log("SHEET WORKER ERROR: 'removeRepeatingRow' is not available while the Charactermancer is active.");
                        if (T < 3 || "" === T[2] || "-" !== T[2].substring(0, 1) && isNaN(T[2]))
                            return void console.log("SHEET WORKER ERROR: You attempted to delete a repeating row but passed an invalid row ID in " + C);
                        var A = [];
                        l.attribs.each(function(e) {
                            e.get("name").toLowerCase().substring(0, C.length) === C.toLowerCase() && (console.log("DESTROYING " + e.get("name")),
                            A.push(e))
                        });
                        for (var R = 0; R < A.length; R++)
                            A[R].destroy()
                    } else if ("forcerender" === e.data.type) {
                        (l = d20.Campaign.characters.get(e.data.id.split("//")[0])) && l.view && l.view.render()
                    } else if ("setsectionorder" === e.data.type) {
                        l = d20.Campaign.characters.get(e.data.id.split("//")[0]);
                        var M = e.data.id.split("//")[1]
                          , I = e.data.data;
                        if (!I || I.length < 1 || !M || "" === M)
                            return;
                        d = function(e) {
                            var t;
                            return l.attribs.each(function(n) {
                                if (-1 !== (n.get("name") + "").toLowerCase().indexOf(e)) {
                                    var i = n.get("name").split("_");
                                    if (i.length > 2) {
                                        var o = i[2];
                                        return "-" === o.substring(0, 1) && (t = o),
                                        !1
                                    }
                                    return !1
                                }
                            }),
                            t || e
                        }
                        ;
                        var O = [];
                        _.each(I, function(e) {
                            O.push(d(e))
                        });
                        var D = !1;
                        if (l.attribs.each(function(e) {
                            if (-1 !== (e.get("name") + "").toLowerCase().indexOf("_reporder_repeating_" + M))
                                return e.syncedSave({
                                    current: O.join(",")
                                }),
                                D = !0,
                                !1
                        }),
                        !D)
                            l.attribs.create({
                                name: "_reporder_repeating_" + M
                            }).syncedSave({
                                current: O.join(",")
                            });
                        l && l.view && l.view.updateSheetValues("all")
                    } else if ("getcompendiumpage" === e.data.type) {
                        var L = e.data.data;
                        l = d20.Campaign.characters.get(e.data.charid);
                        if ("" === L) {
                            if (l.activeCharmancer) {
                                var B = l.charmancer.currentStep;
                                l.charmancer.data[B].data = l.charmancer.data[B].data || {},
                                l.charmancer.data[B].data[e.data.field] && delete l.charmancer.data[B].data[e.data.field],
                                l.charmancer.get[B][e.data.field] && delete l.charmancer.get[B][e.data.field],
                                d20.journal.updateWorkerCharmancerData(l)
                            }
                            t.postMessage({
                                type: "attrreqfulfilled",
                                id: e.data.id,
                                data: {
                                    data: {}
                                }
                            })
                        } else {
                            if (l.activeCharmancer)
                                var F = d20.journal.lockCharmancerInput(l);
                            "string" == typeof L && (L = [L]),
                            $.ajax({
                                url: "/compendium/compendium/getPages",
                                data: {
                                    bookName: COMPENDIUM_BOOK_NAME,
                                    pages: L,
                                    sharedCompendium: campaign_id
                                },
                                cache: !1,
                                dataType: "JSON"
                            }).done(function(n) {
                                var i = [];
                                n = o(n);
                                if (l.activeCharmancer) {
                                    var r = []
                                      , a = l.charmancer.currentStep;
                                    _.each(n, function(e) {
                                        var t = o(e.data);
                                        r.push(t)
                                    }),
                                    1 === r.length && (r = r[0]),
                                    l.charmancer.get[a] = l.charmancer.get[a] || {},
                                    l.charmancer.get[a][e.data.field] = L,
                                    l.charmancer.data[a].data = l.charmancer.data[a].data || {},
                                    l.charmancer.data[a].data[e.data.field] = r,
                                    1 === Object.keys(n).length ? i = n[0] : _.each(n, e=>{
                                        i.push(e)
                                    }
                                    ),
                                    d20.journal.updateWorkerCharmancerData(l, {
                                        id: e.data.id,
                                        data: i
                                    }),
                                    d20.journal.unlockCharmancerInput(l, F)
                                } else
                                    1 === Object.keys(n).length ? i = n[0] : _.each(n, e=>{
                                        i.push(e)
                                    }
                                    ),
                                    t.postMessage({
                                        type: "attrreqfulfilled",
                                        id: e.data.id,
                                        data: i
                                    })
                            })
                        }
                    } else if ("getcompendiumquery" === e.data.type) {
                        var H = e.data.data;
                        if ((l = d20.Campaign.characters.get(e.data.charid)).activeCharmancer)
                            F = d20.journal.lockCharmancerInput(l);
                        $.ajax({
                            url: "/compendium/compendium/getPages",
                            data: {
                                bookName: COMPENDIUM_BOOK_NAME,
                                pages: H,
                                sharedCompendium: campaign_id,
                                query: !0
                            },
                            cache: !1,
                            dataType: "JSON"
                        }).done(function(n) {
                            var i = [];
                            _.each(n, function(t) {
                                try {
                                    t = JSON.parse(t)
                                } catch (e) {
                                    t = t
                                }
                                t.data.blobs = t.blobs,
                                i.push({
                                    name: t.name,
                                    data: t.data
                                })
                            }),
                            d20.journal.unlockCharmancerInput(l, F),
                            t.postMessage({
                                type: "attrreqfulfilled",
                                id: e.data.id,
                                data: i
                            })
                        })
                    } else if ("dropcompendiumdata" === e.data.type) {
                        if ((l = d20.Campaign.characters.get(e.data.id.split("//")[0])).activeCharmancer)
                            return void console.log("SHEET WORKER ERROR: 'dropCompendiumData' is not available while the Charactermancer is active.");
                        if (l && l.view && l.view.$charsheet) {
                            var z = _.clone(e.data.data.data);
                            z.Name = e.data.data.name,
                            z.Content = e.data.data.content,
                            z.data = e.data.data.data,
                            z.data.blobs = e.data.data.blobs,
                            z.data = JSON.stringify(z.data),
                            z.dropSubhead = e.data.data.dropSubhead;
                            var V = (K = l.view.$charsheet.find(".sheet-compendium-drop-target.sheet-" + e.data.id.split("//")[1])).length > 0 && $(K[0])
                              , N = function() {
                                t.postMessage({
                                    type: "attrreqfulfilled",
                                    id: e.data.id,
                                    data: ""
                                })
                            };
                            V ? V.find("*[accept]").each(function() {
                                var e = $(this)
                                  , t = e.attr("accept");
                                z[t] && ("input" === e[0].tagName.toLowerCase() && "checkbox" === e.attr("type") ? e.val() == z[t] ? e.attr("checked", "checked") : e.removeAttr("checked") : "input" === e[0].tagName.toLowerCase() && "radio" === e.attr("type") ? e.val() == z[t] ? e.attr("checked", "checked") : e.removeAttr("checked") : "select" === e[0].tagName.toLowerCase() ? e.find("option").each(function() {
                                    var e = $(this);
                                    e.val() !== z[t] && e.text() !== z[t] || e.attr("selected", "selected")
                                }) : $(this).val(z[t]),
                                l.view.saveSheetValues(this),
                                d20.journal.waitForSandboxProcessing(function() {
                                    N()
                                }))
                            }) : N()
                        } else
                            N()
                    } else if ("startcharactermancer" === e.data.type) {
                        var j = e.data.data
                          , U = !!((l = d20.Campaign.characters.get(e.data.id)) && l.view && l.view.$charsheet) && l.view.$charsheet
                          , q = !!(l && l.view && l.view.$charmancer) && l.view.$charmancer;
                        if (l.charmancer = {
                            currentStep: j,
                            data: JSON.parse(l.attributes.mancerdata),
                            cache: {}
                        },
                        !j)
                            return void console.log("ERROR: Tried to start charactermancer but no template was specified.");
                        if (!U || !q)
                            return void console.log("ERROR: Tried to start charactermancer but was unable to find a character model.");
                        l.charmancer.charmancerEl = q,
                        l.charmancer.data[j] = l.charmancer.data[j] || {
                            data: {},
                            values: {}
                        },
                        l.attributes.mancerget ? l.charmancer.get = JSON.parse(l.attributes.mancerget) : (console.log("MANCER GET NOT FOUND, BUILDING FROM DATA"),
                        l.charmancer.get = {},
                        _.each(l.charmancer.data, function(e, t) {
                            pagedata = e.data || {},
                            l.charmancer.get[t] = {},
                            _.each(pagedata, function(n, i) {
                                e.values && e.values[i] && (l.charmancer.get[t][i] = e.values[i])
                            })
                        })),
                        l.charmancer.get[j] = l.charmancer.get[j] || {};
                        var G = [];
                        _.each(l.charmancer.get, function(e) {
                            _.each(e, function(e) {
                                "string" == typeof e ? G.push(e) : G = G.concat(e)
                            })
                        }),
                        $.ajax({
                            url: "/compendium/compendium/getPages",
                            data: {
                                bookName: COMPENDIUM_BOOK_NAME,
                                pages: G,
                                sharedCompendium: campaign_id,
                                nocontent: !0
                            },
                            cache: !1,
                            dataType: "JSON"
                        }).done(function(e) {
                            e = o(e);
                            var t = {};
                            _.each(e, function(e) {
                                var n = e.data.Category + ":" + e.name;
                                t[n] = e.data
                            }),
                            _.each(l.charmancer.data, function(e, n) {
                                l.charmancer.data[n].data = {},
                                _.each(l.charmancer.get[n], function(e, i) {
                                    var r = o(t[e]);
                                    l.charmancer.data[n].data[i] = r
                                })
                            }),
                            _.each(d20.journal.customSheets.activeWorkers, function(e) {
                                e.postMessage({
                                    type: "setCharmancerData",
                                    data: l.charmancer.data,
                                    character: l.id
                                })
                            }),
                            l.view.$el.find('a[data-tab="charsheet"]').parent("li").hide(),
                            l.view.$el.find('a[data-tab="charmancer"]').trigger("click").parent("li").show(),
                            l.activeCharmancer = !0,
                            d20.journal.charmancerLoadStep(j, "worker", l)
                        }),
                        ga("send", {
                            hitType: "event",
                            eventCategory: "Charactermancer",
                            eventAction: "start"
                        })
                    } else if ("changecompendiumpage" === e.data.type) {
                        var W = e.data.data
                          , J = e.data.options || "content"
                          , X = ""
                          , Y = (l = d20.Campaign.characters.get(e.data.id),
                        "sheet-" === e.data.target.substring(0, 6) ? e.data.target.substring(6) : e.data.target)
                          , K = l.view.$charmancer.find(".sheet-compendium-page.sheet-" + Y);
                        "card_only" == J && (J = "content",
                        X = "&cardonly=true"),
                        (V = K.length > 0 && $(K[0])) && W && l.activeCharmancer && V.find("iframe").attr("src", d20.compendium.compendiumBase + "compendium/" + COMPENDIUM_BOOK_NAME + "/" + W + "?sharedCompendium=" + campaign_id + "&charmancer=true" + X + "#" + J)
                    } else if ("showchoices" === e.data.type) {
                        var Z = e.data.data;
                        (l = d20.Campaign.characters.get(e.data.id)).activeCharmancer && Z.each(function(e) {
                            var t = ("sheet-" === e.substring(0, 6) ? e.substring(6) : e).split(" ")
                              , n = t.pop();
                            t.push(n + ".sheet-choice"),
                            $targets = l.view.$charmancer.find(".sheet-" + t.join(" ")),
                            $targets.removeClass("sheet-choice"),
                            $targets.addClass("sheet-choice-showing")
                        })
                    } else if ("hidechoices" === e.data.type) {
                        Z = e.data.data;
                        (l = d20.Campaign.characters.get(e.data.id)).activeCharmancer && (Z == undefined ? ($targets = l.view.$charmancer.find(".sheet-choice-showing"),
                        $targets.removeClass("sheet-choice-showing"),
                        $targets.addClass("sheet-choice")) : Z.each(function(e) {
                            var t = ("sheet-" === e.substring(0, 6) ? e.substring(6) : e).split(" ")
                              , n = t.pop();
                            t.push(n + ".sheet-choice-showing"),
                            $targets = l.view.$charmancer.find(".sheet-" + t.join(" ")),
                            $targets.removeClass("sheet-choice-showing"),
                            $targets.addClass("sheet-choice")
                        }))
                    } else if ("setcharmancertext" === e.data.type) {
                        var Q = e.data.data;
                        if ((l = d20.Campaign.characters.get(e.data.id)).activeCharmancer || l.finalCharmancer)
                            for (var ee in Q) {
                                Y = "sheet-" === ee.substring(0, 6) ? ee.substring(6) : ee;
                                $targets = l.view.$charmancer.find(".sheet-" + Y),
                                (ie = $("<div></div>")).html(Q[ee]),
                                ie = d20.utils.htmlTranslator(ie),
                                $targets.html(s(ie.html(), n))
                            }
                    } else if ("addrepeatingsection" === e.data.type) {
                        var te = d20.journal.customSheets.charmancerRepeating[e.data.section]
                          , ne = (K = e.data.target,
                        B = (l = d20.Campaign.characters.get(e.data.charid)).charmancer.currentStep,
                        generateUUID().replace(/_/g, "Z"));
                        if (ne = e.data.name ? "repeating_" + ne + "_" + e.data.name : "repeating_" + ne + "_" + e.data.section,
                        l.activeCharmancer)
                            if (K = "sheet-" === K.substring(0, 6) ? K.substring(6) : K,
                            de = l.view.$charmancer.find(".sheet-" + K),
                            te)
                                if (de.length < 1)
                                    t.postMessage({
                                        type: "attrreqfulfilled",
                                        id: e.data.id,
                                        data: "Unable to find target element"
                                    });
                                else {
                                    var ie, oe = {};
                                    (ie = $("<div></div>")).html(te),
                                    ie = d20.utils.htmlTranslator(ie),
                                    $repsec = $('<div class="sheet-' + e.data.section + '"></div>'),
                                    $repsec.html(ie.html());
                                    var re = !1;
                                    _.each(l.charmancer.fillRepeating, function(e) {
                                        e.substr(31) != ne.substr(31) || re || (ne = e,
                                        re = !0)
                                    }),
                                    l.charmancer.fillRepeating = _.without(l.charmancer.fillRepeating, ne),
                                    $repsec.find('[name^="comp_"]').each(function() {
                                        var e = $(this).attr("name").substr(5);
                                        e = ne + "_" + e,
                                        $(this).attr("name", "comp_" + e),
                                        l.charmancer.data[B].values[e] && ("checkbox" == $(this).attr("type") || "radio" == $(this).attr("type") && $(this).val() == value ? ($(this).prop("checked", !0),
                                        oe[e] = l.charmancer.data[B].values[e]) : ($(this).val(l.charmancer.data[B].values[e]),
                                        oe[e] = l.charmancer.data[B].values[e]))
                                    }),
                                    $repsec.find('[name^="act_"]').each(function() {
                                        var e = $(this).attr("name").substr(4);
                                        e = ne + "_" + e,
                                        $(this).attr("name", "act_" + e)
                                    }),
                                    $repsec.find('[name^="roll_"]').each(function() {
                                        var e = $(this).attr("name").substr(5);
                                        e = ne + "_" + e,
                                        $(this).attr("name", "roll_" + e)
                                    }),
                                    l.charmancer.data[B].repeating = l.charmancer.data[B].repeating || [],
                                    l.charmancer.data[B].repeating.push(ne),
                                    l.charmancer.data[B].repeating = _.uniq(l.charmancer.data[B].repeating),
                                    l.save({
                                        mancerdata: d20.journal.fbCharmancerData(l)
                                    }),
                                    $repsec.addClass("sheet-" + ne),
                                    $repsec.attr("data-repeating", ne),
                                    de.append($repsec),
                                    d20.journal.notifyWorkersOfCharmancerChanges(l.id, oe, "worker"),
                                    t.postMessage({
                                        type: "attrreqfulfilled",
                                        id: e.data.id,
                                        data: ne
                                    })
                                }
                            else
                                t.postMessage({
                                    type: "attrreqfulfilled",
                                    id: e.data.id,
                                    data: "Unable to find repeating section: " + e.data.section
                                })
                    } else if ("clearrepeatingsections" === e.data.type) {
                        var ae = function(e) {
                            var t = [];
                            return l.charmancer.data[B].repeating = l.charmancer.data[B].repeating || [],
                            e.find("[data-repeating]").each(function() {
                                t.push($(this).attr("data-repeating"))
                            }),
                            e.find('[name^="comp_"]').each(function() {
                                var e = $(this).attr("name").substr(5);
                                l.charmancer.data[B].values[e] && delete l.charmancer.data[B].values[e]
                            }),
                            t
                        }
                          , se = (K = e.data.target,
                        e.data.repids)
                          , le = (B = (l = d20.Campaign.characters.get(e.data.charid)).charmancer.currentStep,
                        []);
                        if (l.activeCharmancer) {
                            if (de = l.view.$charmancer,
                            se)
                                _.each(se, function(e) {
                                    de = de.find('[data-repeating="' + e + '"]'),
                                    le.push(e),
                                    le = le.concat(ae(de))
                                });
                            else if (K) {
                                K = "sheet-" === e.data.target.substring(0, 6) ? e.data.target.substring(6) : e.data.target;
                                de = de.find(".sheet-" + K),
                                le = ae(de)
                            }
                            _.each(_.uniq(le), function(e) {
                                l.charmancer.data[B].repeating = _.without(l.charmancer.data[B].repeating, e),
                                $('[data-repeating="' + e + '"]').remove()
                            }),
                            d20.journal.updateCharmancerData(l, !0, {
                                id: e.data.id,
                                data: l.charmancer.data
                            })
                        }
                    } else if ("getrepeatingsections" === e.data.type) {
                        K = e.data.target;
                        if ((l = d20.Campaign.characters.get(e.data.charid)).activeCharmancer) {
                            var ce = function(e) {
                                var t = {}
                                  , n = e.attr("data-repeating");
                                return 0 == e.find("[data-repeating]").length ? t : (e.find("[data-repeating]").each(function() {
                                    $(this).parents("[data-repeating]").first().attr("data-repeating") == n && (t[$(this).attr("data-repeating")] = ce($(this)))
                                }),
                                t)
                            }
                              , ue = (se = [],
                            {})
                              , de = l.view.$charmancer;
                            if (e.data.target) {
                                K = "sheet-" === e.data.target.substring(0, 6) ? e.data.target.substring(6) : e.data.target;
                                de = l.view.$charmancer.find(".sheet-" + K)
                            }
                            de.find("[data-repeating]").each(function() {
                                se.push($(this).attr("data-repeating"))
                            }),
                            ue = ce(de),
                            t.postMessage({
                                type: "attrreqfulfilled",
                                id: e.data.id,
                                data: {
                                    list: se,
                                    tree: ue
                                }
                            })
                        }
                    } else if ("setcharmanceroptions" === e.data.type) {
                        var he = e.data.data;
                        J = e.data.options;
                        (l = d20.Campaign.characters.get(e.data.id)).activeCharmancer && a(l, e.data.target, he, J, e.data.reqid, t)
                    } else if ("disablecharmanceroptions" === e.data.type) {
                        var pe = e.data.data;
                        J = e.data.options;
                        if ((l = d20.Campaign.characters.get(e.data.id)).activeCharmancer) {
                            var fe = "comp_" === e.data.target.substring(0, 5) ? e.data.target.substring(5) : e.data.target
                              , ge = (V = (K = l.view.$charmancer.find("select[name='comp_" + fe + "'], span[name='comp_" + fe + "']")).length > 0 && $(K[0]),
                            "");
                            if (V && (ge = V.is("select") ? "select" : "radio"),
                            V) {
                                var me = ""
                                  , ye = function() {
                                    var e = "";
                                    if ("select" == ge)
                                        e = V.val();
                                    else {
                                        var t = V.find("input:checked");
                                        e = t.length > 0 ? $(t[0]).val() : ""
                                    }
                                    return e
                                }();
                                e.data.options.category && (me = J.category + ":"),
                                V.find("option, input").attr("disabled", !1),
                                _.each(pe, function(e) {
                                    var t = me + e;
                                    t != ye && V.find('[value="' + t.replace(/"/g, '"') + '"]').attr("disabled", !0)
                                })
                            }
                        }
                    } else if ("deletecharmancerdata" === e.data.type) {
                        var ve = e.data.data;
                        l = d20.Campaign.characters.get(e.data.id);
                        ve && ve.length > 0 ? (l.charmancer.data || (l.charmancer = {
                            data: JSON.parse(l.attributes.mancerdata)
                        }),
                        _.each(ve, function(e) {
                            "string" == typeof e ? l.charmancer.data[e] && delete l.charmancer.data[e] : _.each(e, function(e, t) {
                                l.charmancer.data[t] && _.each(e, function(e) {
                                    delete l.charmancer.data[t].values[e],
                                    l.charmancer.data[t].data[e] && delete l.charmancer.data[t].data[e]
                                })
                            })
                        })) : l.charmancer.data = {},
                        l.charmancer.currentStep && (l.charmancer.data[l.charmancer.currentStep] = l.charmancer.data[l.charmancer.currentStep] || {
                            values: {},
                            data: {}
                        },
                        l.charmancer.get[l.charmancer.currentStep] = l.charmancer.get[l.charmancer.currentStep] || {});
                        let n = {
                            mancerdata: d20.journal.fbCharmancerData(l)
                        };
                        l.charmancer.get && (n.mancerget = JSON.stringify(l.charmancer.get)),
                        l.save(n),
                        d20.journal.updateCharmancerData(l, !0),
                        t.postMessage({
                            type: "attrreqfulfilled",
                            id: e.data.reqid
                        })
                    } else if ("changecharmancerpage" === e.data.type) {
                        W = e.data.data,
                        l = d20.Campaign.characters.get(e.data.id);
                        d20.journal.customSheets.charmancerTemplates[W] ? (d20.journal.updateCharmancerData(l),
                        l.charmancer.currentStep = W,
                        d20.journal.charmancerLoadStep(W, "worker", l, {
                            id: e.data.reqid
                        })) : console.log("Charactermancer page: " + W + " not found.")
                    } else if ("finishcharactermancer" === e.data.type) {
                        h = (l = d20.Campaign.characters.get(e.data.characterid)).charmancer.charmancerEl;
                        l.finalCharmancer = !1,
                        l.view.$el.find('a[data-tab="charmancer"]').parent("li").hide(),
                        l.view.$el.find('a[data-tab="charsheet"]').trigger("click").parent("li").show(),
                        ga("send", {
                            hitType: "event",
                            eventCategory: "Charactermancer",
                            eventAction: "Finish"
                        })
                    }
                    P()
                }),
                window.customcharsheet_translation !== undefined && t.postMessage({
                    type: "loadTranslationStrings",
                    data: JSON.parse(BASE64.decode(window.customcharsheet_translation))
                }),
                t.postMessage({
                    type: "eval",
                    data: e
                }),
                d20.journal.customSheets.activeWorkers.push(t)
            });
            var R = [];
            d20.journal.waitForSandboxProcessing = function(e) {
                R.push(e)
            }
            ;
            var M = function() {
                var e = R;
                R = [],
                e.length > 0 && _.each(e, function(e) {
                    e()
                })
            }
              , P = _.debounce(M, 500);
            d20.journal.notifyWorkersOfButtonClick = function(e, t) {
                if (d20.journal.customSheets && d20.journal.customSheets.activeWorkers) {
                    var n = d20.Campaign.characters.get(e)
                      , i = [];
                    if (e,
                    n.activeCharmancer) {
                        var o = {
                            eventname: "clicked:" + t,
                            oattr: t,
                            currentstep: n.charmancer.currentStep
                        };
                        if ("repeating_" == t.substring(0, 10)) {
                            var r = n.charmancer.charmancerEl.find('[name="act_' + t + '"]');
                            o.eventname = "clicked:repeating_" + t.substr(31),
                            o.sourceSection = r.parents("[data-repeating]").first().attr("data-repeating"),
                            r.parents("[data-repeating]").each(function() {
                                var e = !1
                                  , t = "clicked:repeating_" + $(this).attr("data-repeating").substr(31);
                                if (_.each(i, function(n) {
                                    n.eventname == t && (e = !0)
                                }),
                                !e) {
                                    var n = _.clone(o);
                                    n.eventname = t,
                                    i.push(n)
                                }
                            })
                        }
                        i.push(o)
                    } else if ("repeating_" == t.substring(0, 10)) {
                        t.split("_");
                        i.push({
                            eventname: "clicked:" + t,
                            oattr: t
                        })
                    } else
                        i.push({
                            eventname: "clicked:" + t
                        });
                    _.each(d20.journal.customSheets.activeWorkers, function(t) {
                        t.postMessage({
                            type: "setActiveCharacter",
                            data: e
                        }),
                        _.each(i, function(e) {
                            t.postMessage({
                                type: "trigger",
                                data: e
                            })
                        }),
                        t.postMessage({
                            type: "setActiveCharacter",
                            data: !1
                        })
                    }),
                    P()
                }
            }
            ,
            d20.journal.notofyWorkersOfMancerRoll = function(e, t, n) {
                if (d20.journal.customSheets && d20.journal.customSheets.activeWorkers) {
                    var i = generateUUID();
                    d20.textchat.doChatInput(n, i),
                    $(document).on("mancerroll:" + i, function(n, o) {
                        $(document).off("mancerroll:" + i);
                        var r = d20.Campaign.characters.get(e)
                          , a = []
                          , s = [];
                        _.each(o.inlinerolls, function(e) {
                            var t = {
                                result: e.results.total
                            };
                            _.each(e.results.rolls, function(e) {
                                t.dice = _.pluck(e.results, "v")
                            }),
                            s.push(t)
                        });
                        var l = {
                            eventname: "mancerroll:" + t,
                            oattr: t,
                            data: s,
                            currentstep: r.charmancer.currentStep
                        };
                        if ("repeating_" == t.substring(0, 10)) {
                            var c = r.charmancer.charmancerEl.find('[name="roll_' + t + '"]');
                            l.eventname = "mancerroll:repeating_" + t.substr(31),
                            l.sourceSection = c.parents("[data-repeating]").first().attr("data-repeating"),
                            c.parents("[data-repeating]").each(function() {
                                var e = !1
                                  , t = "mancerroll:repeating_" + $(this).attr("data-repeating").substr(31);
                                if (_.each(a, function(n) {
                                    n.eventname == t && (e = !0)
                                }),
                                !e) {
                                    var n = _.clone(l);
                                    n.eventname = t,
                                    a.push(n)
                                }
                            })
                        }
                        a.push(l),
                        e,
                        _.each(d20.journal.customSheets.activeWorkers, function(t) {
                            t.postMessage({
                                type: "setActiveCharacter",
                                data: e
                            }),
                            _.each(a, function(e) {
                                t.postMessage({
                                    type: "trigger",
                                    data: e
                                })
                            }),
                            t.postMessage({
                                type: "setActiveCharacter",
                                data: !1
                            })
                        }),
                        P()
                    })
                }
            }
            ,
            d20.journal.notifyWorkersOfAttrChanges = function(e, t, n, i, o) {
                if (d20.journal.customSheets && d20.journal.customSheets.activeWorkers) {
                    e;
                    var r = d20.Campaign.characters.get(e);
                    if (-1 === t.indexOf("all")) {
                        var a = [];
                        _.each(t, function(e) {
                            var t = e;
                            if ("repeating_" === t.substring(0, 10)) {
                                var i = t.split("_");
                                if ("undefined" != typeof i[2] && "$" === i[2].substring(0, 1))
                                    return !0;
                                if (i.length > 3 && (!isNaN(i[2]) || "-" === i[2].substring(0, 1))) {
                                    var o = _.clone(i).splice(0, 3).join("_").toLowerCase()
                                      , s = !1;
                                    if (r.attribs.each(function(e) {
                                        s || e.get("name").toLowerCase().substring(0, o.length) === o && (s = !0)
                                    }),
                                    !s)
                                        return !0
                                }
                                a.push({
                                    eventname: "repeating_" + i[1] + "_" + i[2],
                                    oattr: e,
                                    sourcetype: n
                                })
                            }
                            a.push({
                                eventname: e,
                                oattr: e,
                                sourcetype: n
                            })
                        }),
                        a = _.uniq(a, !1, function(e) {
                            return e.eventname
                        }),
                        _.each(d20.journal.customSheets.activeWorkers, function(t) {
                            t.postMessage({
                                type: "setActiveCharacter",
                                data: e
                            }),
                            _.each(a, function(e) {
                                e.oattr && i && i[e.oattr] && (e.previous_value = i[e.oattr]),
                                e.oattr && o && o[e.oattr] && (e.updated_value = o[e.oattr]),
                                "compendium" == e.sourcetype && (e.sourcetype = "player",
                                e.triggerType = "compendium"),
                                t.postMessage({
                                    type: "trigger",
                                    data: e
                                })
                            }),
                            t.postMessage({
                                type: "setActiveCharacter",
                                data: !1
                            })
                        }),
                        P()
                    }
                }
            }
            ,
            d20.journal.notifyWorkersOfFirstOpen = function(e, t) {
                if (d20.journal.customSheets && d20.journal.customSheets.activeWorkers) {
                    e;
                    var n = t || "player";
                    _.each(d20.journal.customSheets.activeWorkers, function(t) {
                        t.postMessage({
                            type: "setActiveCharacter",
                            data: e
                        }),
                        t.postMessage({
                            type: "trigger",
                            data: {
                                eventname: "sheet:opened",
                                sourcetype: n
                            }
                        }),
                        t.postMessage({
                            type: "setActiveCharacter",
                            data: !1
                        })
                    }),
                    P()
                }
            }
            ,
            d20.journal.notifyWorkersOfCompendium = function(e) {
                d20.journal.customSheets && d20.journal.customSheets.activeWorkers && (e,
                _.each(d20.journal.customSheets.activeWorkers, function(t) {
                    t.postMessage({
                        type: "setActiveCharacter",
                        data: e
                    }),
                    t.postMessage({
                        type: "trigger",
                        data: {
                            eventname: "sheet:compendium-drop"
                        }
                    }),
                    t.postMessage({
                        type: "setActiveCharacter",
                        data: !1
                    })
                }),
                P())
            }
            ,
            d20.journal.notifyWorkersOfRowDeleted = function(e, t, n, i, o) {
                d20.journal.customSheets && d20.journal.customSheets.activeWorkers && (e,
                _.each(d20.journal.customSheets.activeWorkers, function(r) {
                    r.postMessage({
                        type: "setActiveCharacter",
                        data: e
                    }),
                    r.postMessage({
                        type: "trigger",
                        data: {
                            eventname: "remove:" + t + ":" + n,
                            oattr: t + "_" + n,
                            sourcetype: i,
                            removed_info: o
                        }
                    }),
                    r.postMessage({
                        type: "trigger",
                        data: {
                            eventname: "remove:" + t,
                            oattr: t + "_" + n,
                            sourcetype: i,
                            removed_info: o
                        }
                    }),
                    r.postMessage({
                        type: "setActiveCharacter",
                        data: !1
                    })
                }),
                P())
            }
            ,
            d20.journal.notifyWorkersOfCharmancerChanges = function(e, t, n, i, o) {
                e;
                var r = d20.Campaign.characters.get(e)
                  , a = r.charmancer.charmancerEl
                  , s = [];
                n = n || "player",
                r.charmancer.data[r.charmancer.currentStep] = r.charmancer.data[r.charmancer.currentStep] || {
                    values: {},
                    data: {}
                },
                r.charmancer.get[r.charmancer.currentStep] = r.charmancer.get[r.charmancer.currentStep] || {},
                d20.journal.customSheets && d20.journal.customSheets.activeWorkers && r.activeCharmancer && (_.each(t, function(e, n) {
                    var i = "comp_" === n.substring(0, 5) ? n.substring(5) : n;
                    t[n] = {
                        "new": e
                    },
                    r.charmancer.data[r.charmancer.currentStep].values[i] && (t[n].old = r.charmancer.data[r.charmancer.currentStep].values[i]),
                    _.each(r.charmancer.data, function(t, n) {
                        (t.values[i] || n == r.charmancer.currentStep) && (r.charmancer.data[n].values[i] = e,
                        "" !== e && e !== undefined || (delete r.charmancer.data[n].values[i],
                        r.charmancer.data[n].data && r.charmancer.data[n].data[i] && delete r.charmancer.data[n].data[i],
                        r.charmancer.get[n][i] && delete r.charmancer.get[n][i]))
                    })
                }),
                d20.journal.updateCharmancerData(r, !0, o),
                _.each(t, function(e, t) {
                    var i = (t = "comp_" === t.substring(0, 5) ? t : "comp_" + t).substring(5)
                      , o = {
                        eventname: i,
                        sourcetype: n,
                        oattr: i,
                        updated_value: e["new"],
                        previous_value: e.old,
                        currentstep: r.charmancer.currentStep,
                        mancer: "mancer"
                    };
                    if ("repeating" == i.substring(0, 9)) {
                        var l = a.find('[name="' + t + '"]');
                        o.eventname = "repeating_" + i.substr(31),
                        o.sourceSection = l.parents("[data-repeating]").first().attr("data-repeating"),
                        l.parents("[data-repeating]").each(function() {
                            var e = !1
                              , t = "repeating_" + $(this).attr("data-repeating").substr(31);
                            if (_.each(s, function(n) {
                                n.eventname == t && (e = !0)
                            }),
                            !e) {
                                var n = _.clone(o);
                                n.eventname = t,
                                s.push(n)
                            }
                        })
                    }
                    s.push(o)
                }),
                i || _.each(d20.journal.customSheets.activeWorkers, function(t) {
                    t.postMessage({
                        type: "setActiveCharacter",
                        data: e
                    }),
                    _.each(s, function(e) {
                        t.postMessage({
                            type: "trigger",
                            data: e
                        })
                    }),
                    t.postMessage({
                        type: "setActiveCharacter",
                        data: !1
                    })
                }),
                P())
            }
            ,
            d20.journal.setInactiveCharmancer = function(e) {
                if (d20.journal.customSheets && d20.journal.customSheets.activeWorkers) {
                    var t = d20.Campaign.characters.get(e);
                    t.charmancer = {},
                    t.activeCharmancer = !1
                }
            }
            ;
            var I = []
              , O = 0
        }
        if (d20.journal.customSheets) {
            d20.journal.charmancerLoadStep = function(e, t, n, i) {
                var o = n.charmancer.charmancerEl
                  , r = function(e) {
                    var t = e.charmancer.charmancerEl
                      , n = !0;
                    return t.find("[required]").each(function() {
                        var e = $(this).hasClass("sheet-choice") || $(this).parents(".sheet-choice").length > 0 || "";
                        (e || $(this).find("input[type=radio]").length || $(this).find("input[type=checkbox]").length || "" != $(this).val()) && (e || !$(this).find("input[type=radio]").length && !$(this).find("input[type=checkbox]").length || 0 != $(this).find("input:checked").length) || (n = !1,
                        $(this).focus())
                    }),
                    n
                };
                t = t || "worker";
                let s = {
                    mancerdata: d20.journal.fbCharmancerData(n),
                    mancerstep: n.charmancer.currentStep
                };
                if (n.charmancer.get && (s.mancerget = JSON.stringify(n.charmancer.get)),
                n.save(s),
                o.off("click"),
                o.on("click", "button.sheet-jump", function() {
                    document.body.scrollTop = 0,
                    o.parents(".dialog.characterdialog").scrollTop(0)
                }),
                n.charmancer.cache[e] = n.charmancer.cache[e] || {},
                n.charmancer.data[e] = n.charmancer.data[e] || {
                    values: {},
                    data: {}
                },
                n.charmancer.get[e] = n.charmancer.get[e] || {},
                n.charmancer.fillRepeating = n.charmancer.data[e].repeating ? n.charmancer.data[e].repeating : [],
                e && d20.journal.customSheets.charmancerTemplates[e]) {
                    var l = d20.utils.htmlTranslator(d20.journal.customSheets.charmancerTemplates[e]);
                    o.html(l),
                    o.attr("data-step", e),
                    d20.journal.unlockCharmancerInput(n, d20.journal.lockCharmancerInput(n)),
                    o.find("div.sheet-compendium-page").each(function() {
                        var e = $(this).attr("accept")
                          , t = $(this);
                        e && COMPENDIUM_BOOK_NAME && t.html('<iframe src="' + d20.compendium.compendiumBase + "compendium/" + COMPENDIUM_BOOK_NAME + "/" + e + "?sharedCompendium=" + campaign_id + "&charmancer=true#toc_1\" style='width: 100%; height: calc(100% - 5px);' frameborder='0'></iframe>")
                    });
                    var c = _.clone(n.charmancer.data[e].values);
                    o.find("select[accept], span[accept]").each(function() {
                        var t = $(this).attr("accept")
                          , i = $(this).attr("name").substr(5);
                        a(n, i, t, {
                            selected: n.charmancer.data[e].values[i],
                            silent: !0,
                            show_source: !0,
                            accept: !0
                        })
                    }),
                    _.each(c, function(e, t) {
                        var n = o.find("[name=comp_" + t + "]");
                        n.each(function(t) {
                            "checkbox" == n.attr("type") ? n.prop("checked", !0) : "radio" == n.attr("type") ? $(n[t]).val() == e && $(n[t]).prop("checked", !0) : n.val(e)
                        })
                    });
                    var u = []
                      , d = []
                      , h = [];
                    _.each(c, function(e, t) {
                        var n = o.find("[name=comp_" + t + "]");
                        n.hasClass("sheet-choice") || 0 != n.parents(".sheet-choice").length ? h.push(t) : n.attr("accept") ? u.push(t) : d.push(t)
                    }),
                    _.each(d20.journal.customSheets.activeWorkers, function(i) {
                        i.postMessage({
                            type: "setActiveCharacter",
                            data: n.id
                        }),
                        i.postMessage({
                            type: "trigger",
                            data: {
                                eventname: e,
                                sourcetype: t,
                                mancer: "page"
                            }
                        }),
                        i.postMessage({
                            type: "setActiveCharacter",
                            data: !1
                        })
                    });
                    var p = {};
                    _.each(u, function(t) {
                        "repeating_" !== t.substring(0, 10) && (p[t] = n.charmancer.data[e].values[t] || "")
                    }),
                    d20.journal.notifyWorkersOfCharmancerChanges(n.id, p, "worker"),
                    setTimeout(function() {
                        p = {},
                        _.each(d, function(t) {
                            "repeating_" !== t.substring(0, 10) && (p[t] = n.charmancer.data[e].values[t] || "")
                        }),
                        d20.journal.notifyWorkersOfCharmancerChanges(n.id, p, "worker"),
                        setTimeout(function() {
                            p = {},
                            _.each(h, function(t) {
                                "repeating_" !== t.substring(0, 10) && (p[t] = n.charmancer.data[e].values[t] || "")
                            }),
                            d20.journal.notifyWorkersOfCharmancerChanges(n.id, p, "worker")
                        }, 10)
                    }, 100),
                    o.on("click", "button[type=submit]", function(e) {
                        var t = D($(this));
                        r(t) && (d20.journal.updateCharmancerData(t),
                        t.charmancer.currentStep = $(e.target).val(),
                        d20.journal.charmancerLoadStep($(e.target).val(), "player", t))
                    }),
                    o.on("click", "button[type=back]", function(e) {
                        e.preventDefault();
                        var t = D($(this));
                        d20.journal.updateCharmancerData(t),
                        t.charmancer.currentStep = $(e.target).val(),
                        d20.journal.charmancerLoadStep($(e.target).val(), "player", t)
                    }),
                    o.on("click", "button[type=cancel]", function(e) {
                        e.preventDefault();
                        var t = D($(this));
                        t.activeCharmancer = !1,
                        _.each(d20.journal.customSheets.activeWorkers, function(n) {
                            n.postMessage({
                                type: "setActiveCharacter",
                                data: t.id
                            }),
                            n.postMessage({
                                type: "trigger",
                                data: {
                                    eventname: $(e.target).val(),
                                    mancer: "cancel"
                                }
                            }),
                            n.postMessage({
                                type: "setActiveCharacter",
                                data: !1
                            })
                        }),
                        t.view.$el.find('a[data-tab="charmancer"]').parent("li").hide(),
                        t.view.$el.find('a[data-tab="charsheet"]').trigger("click").parent("li").show(),
                        d20.journal.waitForSandboxProcessing(function() {
                            t.charmancer = {}
                        })
                    }),
                    o.on("click", "button[type=finish]", function(e) {
                        e.preventDefault();
                        var t = D($(this));
                        if (r(t)) {
                            d20.journal.updateCharmancerData(t);
                            let i = {
                                mancerdata: d20.journal.fbCharmancerData(t)
                            };
                            t.charmancer.get && (i.mancerget = JSON.stringify(t.charmancer.get)),
                            t.save(i),
                            t.charmancer.currentStep = "";
                            var n = d20.utils.htmlTranslator(d20.journal.customSheets.charmancerTemplates.final) || "Applying Charactermancer changes...";
                            o.html(n),
                            _.each(d20.journal.customSheets.activeWorkers, function(n) {
                                n.postMessage({
                                    type: "setActiveCharacter",
                                    data: t.id
                                }),
                                n.postMessage({
                                    type: "trigger",
                                    data: {
                                        eventname: $(e.target).val(),
                                        data: t.charmancer.data,
                                        mancer: "finish"
                                    }
                                }),
                                n.postMessage({
                                    type: "setActiveCharacter",
                                    data: !1
                                })
                            }),
                            t.charmancer = {},
                            t.activeCharmancer = !1,
                            t.finalCharmancer = !0
                        }
                    }),
                    i && d20.journal.updateWorkerCharmancerData(n, i)
                } else
                    console.log("ERROR: Charactermancer template " + e + " not found.")
            }
            ,
            d20.journal.updateCharmancerData = function(e, t, n) {
                if (e.charmancer.currentStep) {
                    var i = e.charmancer.charmancerEl;
                    e.charmancer.data[e.charmancer.currentStep] = e.charmancer.data[e.charmancer.currentStep] || {
                        values: {},
                        data: {}
                    },
                    e.charmancer.get[e.charmancer.currentStep] = e.charmancer.get[e.charmancer.currentStep] || {},
                    t || (choices = {},
                    i.find("input[name^='comp_'], select[name^='comp_'], textarea[name^='comp_']").each(function() {
                        "checkbox" == $(this).attr("type") || "radio" == $(this).attr("type") ? $(this).is(":checked") && (choices[$(this).attr("name").substring(5)] = $(this).val()) : "" != $(this).val() && (choices[$(this).attr("name").substring(5)] = $(this).val())
                    }),
                    e.charmancer.data[e.charmancer.currentStep].values = choices,
                    e.charmancer.data[e.charmancer.currentStep].data = e.charmancer.data[e.charmancer.currentStep].data || {}),
                    _.each(e.charmancer.data[e.charmancer.currentStep].data, function(t, n) {
                        e.charmancer.data[e.charmancer.currentStep].values[n] || (delete e.charmancer.data[e.charmancer.currentStep].data[n],
                        delete e.charmancer.get[e.charmancer.currentStep][n])
                    })
                }
                d20.journal.updateWorkerCharmancerData(e, n)
            }
            ,
            d20.journal.fbCharmancerData = function(e) {
                var t = {};
                return _.each(e.charmancer.data, function(e, n) {
                    "undefined" != n && n != undefined && (t[n] = {
                        values: e.values,
                        repeating: e.repeating
                    })
                }),
                JSON.stringify(t)
            }
            ,
            d20.journal.updateWorkerCharmancerData = function(e, t) {
                let n = {
                    mancerdata: d20.journal.fbCharmancerData(e)
                };
                e.save(n),
                _.each(d20.journal.customSheets.activeWorkers, function(n) {
                    n.postMessage({
                        type: "setCharmancerData",
                        data: e.charmancer.data,
                        character: e.id,
                        callback: t
                    })
                })
            }
            ,
            d20.journal.lockCharmancerInput = function(e) {
                var t = e.charmancer.charmancerEl
                  , n = generateUUID();
                return I.push(n),
                t.hasClass("locked") || (t.addClass("locked"),
                t.find("button, select").attr("disabled", !0)),
                O = setTimeout(function() {
                    t.hasClass("locked") && (console.log("Requests exceeded fallback timer, unlocking."),
                    I = [],
                    L(t))
                }, 15e3),
                n
            }
            ,
            d20.journal.unlockCharmancerInput = function(e, t) {
                var n = e.charmancer.charmancerEl;
                I = _.without(I, t),
                d20.journal.waitForSandboxProcessing(function() {
                    0 === I.length && (clearTimeout(O),
                    L(n))
                }),
                P()
            }
            ;
            var D = function(e) {
                var t = e.parents(".characterdialog").data("characterid");
                return d20.Campaign.characters.get(t)
            }
              , L = function(e) {
                e.hasClass("locked") && (e.removeClass("locked"),
                e.find("button, select").attr("disabled", !1))
            }
        }
        $("#compendiumpastebutton button").on(mousedowntype, function() {
            console.log("Do paste");
            var e = localStorage.getItem("compendiumclipboard");
            if (e) {
                e = JSON.parse(e),
                console.log(e);
                var t = d20.journal.compendiumPasteTarget.parents(".characterdialog").attr("data-characterid")
                  , n = d20.Campaign.characters.get(t);
                if (n)
                    return d20.journal.compendiumPasteTarget && e && d20.journal.compendiumPasteTarget.find("*[accept]").each(function() {
                        var t = $(this).attr("accept");
                        e[t] && ($(this).val(e[t]),
                        n.view.saveSheetValues(this))
                    }),
                    !1
            }
        }),
        $("#journalfolderroot").nestable()
    }),
    d20.player_settings = {},
    $(function() {
        function e(e) {
            var n = 105
              , i = t(e);
            return 255 - (.299 * i.R + .587 * i.G + .114 * i.B) < n ? "#000000" : "#ffffff"
        }
        function t(e) {
            var t = e.substring(1, 3)
              , n = e.substring(3, 5)
              , i = e.substring(5, 7);
            return {
                R: parseInt(t, 16),
                G: parseInt(n, 16),
                B: parseInt(i, 16)
            }
        }
        d20.player_settings.refreshRollsList = function() {
            var e = [];
            d20.Campaign.players.each(function(t) {
                t.macros.each(function(n) {
                    (t.id == window.currentPlayer.id || n.visibleToCurrentPlayer()) && e.push(n)
                })
            }),
            0 == (e = _.sortBy(e, function(e) {
                return e.get("name")
            })).length ? $("#existingmacros tbody").html("<tr><td>You don't have any macros yet! Click the Add button to make one!</td></tr>") : ($("#existingmacros tbody").html(""),
            _.each(e, function(e) {
                $("#existingmacros tbody").append($("#tmpl_existingmacros").jqote(e))
            }))
        }
        ,
        $("#addmacro").bind("click", function() {
            window.currentPlayer.macros.create({}, {
                success: function(e) {
                    $("#existingmacros tbody .macro[data-macroid=" + e.id + "]").find(".name").trigger("click")
                }
            })
        }),
        $("#existingmacros").on("click", ".macro .name", function() {
            var e = window.currentPlayer.macros.get($(this).parents(".macro").attr("data-macroid"));
            e && e.view.showDialog()
        }),
        $("#existingmacros").on("click", ".rollmacro", function() {
            var e = $(this).parents(".macro").attr("data-playerid")
              , t = d20.Campaign.players.get(e);
            if (t) {
                var n = t.macros.get($(this).parents(".macro").attr("data-macroid"));
                n && d20.textchat.doChatInput("#" + n.get("name"))
            }
            return !1
        }),
        $("#existingmacros").on("click", ".showinbar", function(e) {
            $(this).is(":checked") ? window.currentPlayer.addToMacroBar($(this).parents(".macro").attr("data-playerid") + "|" + $(this).parents(".macro").attr("data-macroid")) : window.currentPlayer.removeFromMacroBar($(this).parents(".macro").attr("data-macroid")),
            e.stopPropagation()
        }),
        $("#videoplayersize").bind("change", function() {
            var e = $(this).val();
            $("#playerzone").removeClass("largevideo").removeClass("smallvideo").removeClass("namesonly"),
            "large" == e && $("#playerzone").addClass("largevideo"),
            "small" == e && $("#playerzone").addClass("smallvideo"),
            "names" == e && $("#playerzone").addClass("namesonly"),
            window.currentPlayer && window.currentPlayer.save({
                videoplayersize: e
            })
        }).change(),
        $("#showmacrobar").bind("click", function() {
            $(this).is(":checked") ? ($("#playerzone").addClass("showmacrobar"),
            window.currentPlayer.save({
                showmacrobar: !0
            })) : ($("#playerzone").removeClass("showmacrobar"),
            window.currentPlayer.save({
                showmacrobar: !1
            }))
        }),
        d20.player_settings.refreshMacroBar = function() {
            $("#macrobar_macros").html("");
            var t = window.currentPlayer.getMacroBar();
            _.each(t, function(t) {
                var n, i = "macro";
                if (-1 !== t.indexOf("|")) {
                    var o = t.split("|")
                      , r = d20.Campaign.characters.get(o[0]);
                    if (r ? i = -1 !== o[1].indexOf("@@") ? "sheetroll" : "ability" : r = d20.Campaign.players.get(o[0]),
                    !r)
                        return !0;
                    if ("sheetroll" === i)
                        n = o[3] && "" !== o[3].charAt(0) ? decodeURIComponent(o[3]) : r.get("name") + ": " + decodeURIComponent(o[1].substring(2, o[1].length));
                    else {
                        if (!(a = "macro" == i ? r.macros.get(o[1]) : r.abilities.get(o[1])))
                            return !0;
                        if (a && "macro" === i) {
                            if (r !== window.currentPlayer && !a.visibleToCurrentPlayer())
                                return !0
                        } else if (a && "ability" === i && !a.collection.character.currentPlayerControls())
                            return !0;
                        n = o[3] && "" !== o[3].charAt(0) ? decodeURIComponent(o[3]) : ("ability" == i ? r.get("name") + ": " : "") + a.get("name") || "Untitled"
                    }
                } else {
                    var a;
                    (a = window.currentPlayer.macros.get(t)) && (n = a.get("name"))
                }
                n && (o[2] && "#" === o[2].charAt(0) && o[2].length > 1 ? (buttoncolor = o[2],
                textcolor = e(o[2]),
                textshadow = "#000000" === e(o[2]) ? "0 1px 1px rgba(255, 255, 255, 0.75)" : "0 1px 1px rgba(0, 0, 0, 0.75)") : (buttoncolor = "#f5f5f5",
                textcolor = "#333333",
                textshadow = "0 1px 1px rgba(255, 255, 255, 0.75)"),
                $("#macrobar_macros").append($("#tmpl_macrobar_box").jqote({
                    id: t,
                    name: n,
                    btncolor: buttoncolor,
                    txtcolor: textcolor,
                    txtshadow: textshadow
                })))
            })
        }
        ,
        d20.player_settings.debounced_refreshMacroBar = _.debounce(d20.player_settings.refreshMacroBar, 100),
        $("#macrobar_macros").sortable({
            helper: "original",
            tolerance: "pointer",
            placeholder: "emptybox",
            axis: "x",
            start: function() {
                $("#macrobar").addClass("sorting")
            },
            stop: function(e, t) {
                if (t && t.item && t.item.length && "button" === t.item[0].tagName.toLowerCase()) {
                    var n = $(t.item[0])
                      , i = n.attr("data-characterid");
                    if (-1 != i.indexOf("/")) {
                        repid = i.split("/")[1];
                        var o = (i = i.split("/")[0]) + "|@@" + repid
                    } else
                        o = i + "|@@" + encodeURIComponent(t.item[0].name.substring(5, t.item[0].name.length));
                    console.log(o),
                    n.replaceWith("<div class='macrobox' data-macroid='" + o + "'></div>");
                    var r = !0
                } else {
                    var a = t.position.top;
                    Math.abs(a) > 75 && $(t.item[0]).remove()
                }
                var s = []
                  , l = 0;
                $("#macrobar_macros .macrobox").each(function() {
                    s[l] = $(this).attr("data-macroid"),
                    l++
                }),
                window.currentPlayer.set({
                    macrobar: s.join(",")
                }).save(),
                $("#macrobar").removeClass("sorting"),
                r && d20.player_settings.refreshMacroBar()
            },
            sort: function(e, t) {
                var n = t.position.top;
                Math.abs(n) > 75 ? (t.item[0].style.opacity = .25,
                $(t.item[0]).find("button").addClass("btn-danger")) : (t.item[0].style.opacity = 1,
                $(t.item[0]).find("button").removeClass("btn-danger"))
            },
            distance: 15,
            scroll: !1
        }).addTouch(),
        $("#macrobar_macros, #secondary-toolbar .tokenactions").on("click", "button", function(e) {
            if ($(this).parents(".macrobox").length > 0)
                var t = $(this).parents(".macrobox").attr("data-macroid");
            else
                t = $(this).attr("data-macroid");
            var n, i = "macro";
            if (-1 !== t.indexOf("|")) {
                var o = t.split("|");
                if ("selected" === o[0])
                    i = "byname";
                else {
                    var r = d20.Campaign.characters.get(o[0]);
                    if (r ? -1 !== o[1].indexOf("@@") ? (i = "byname",
                    t = r.get("name") + "|" + o[1].substring(2, o[1].length)) : i = "ability" : r = d20.Campaign.players.get(o[0]),
                    !r)
                        return !0;
                    n = r.macros !== undefined ? r.macros.get(o[1]) : r.abilities.get(o[1])
                }
            } else
                n = window.currentPlayer.macros.get(t);
            e.shiftKey ? n && "macro" == i ? $("#existingmacros .macro[data-macroid=" + n.id + "] .name").trigger("click") : n && "ability" == i && (r.view.$el.is(":visible") || r.view.showDialog(),
            r.view.$el.find("ul.nav a[data-tab=attributesabilities]").trigger("click"),
            r.view.$el.find(".abil[data-abilid=" + n.id + "] .editabil").trigger("click"),
            r.view.$el.find(".abil[data-abilid=" + n.id + "] textarea").focus()) : "byname" == i ? (console.log(t),
            d20.textchat.doChatInput("%{" + t + "}")) : n && "macro" == i ? d20.textchat.doChatInput("#" + n.get("name")) : n && "ability" == i && d20.textchat.doChatInput("%{" + r.get("name") + "|" + n.get("name") + "}"),
            e.stopPropagation()
        });
        var n, i, o = $("#macromenu");
        ($("#macrobar_macros").on("contextmenu", "button", function(e) {
            $currentMacroTarget = $(this).parent(),
            $macroid = $currentMacroTarget.attr("data-macroid"),
            o.show(),
            o.css({
                top: e.pageY - o.height() + "px",
                left: e.pageX + "px"
            }),
            bgcolor = $(this).css("background"),
            $("#macromenu div.color_picker").css({
                "background-color": bgcolor
            }),
            e.preventDefault(),
            e.stopPropagation()
        }),
        $("#secondary-toolbar .tokenactions").on("contextmenu", "button", function(e) {
            e.preventDefault(),
            e.stopPropagation()
        }),
        $("#macromenu .macrocolor").colorPicker(),
        $("#macromenu .macrocolor").bind("change", function() {
            $("#macromenu").hide(),
            window.currentPlayer.changeMacroColor($macroid, $(this).val())
        }),
        $("#macromenu").on(mousedowntype, "li[data-action-type=renamemacro]", function() {
            $("#macromenu").hide();
            var e = prompt("What do you want to call your macro?");
            if (null != e) {
                var t = $currentMacroTarget.attr("data-macroid");
                t ? window.currentPlayer.addMacroNickname(t, e) : console.log("Did not find macro id")
            }
        }),
        $("body").on(mousedowntype, function() {
            "none" !== o[0].style.display && (o[0].style.display = "none")
        }),
        $("#macromenu").on(mousedowntype, "li[data-action-type=pickcolor]", function(e) {
            e.preventDefault(),
            e.stopPropagation()
        }),
        $("#enable3ddice").on("click", function() {
            window.currentPlayer.set({
                tddiceenabled: $(this).is(":checked")
            }).save(),
            $(this).is(":checked") && d20.tddice && d20.tddice.canRoll3D() && !d20.tddice.sceneInitialized && d20.tddice.addRenderer()
        }),
        $("#animations_enabled").change(function(e) {
            window.currentPlayer.save({
                animations_enabled: $(e.target).is(":checked")
            })
        }),
        $("#autoroll").on("click", function() {
            window.currentPlayer.set({
                disableagency: $(this).is(":checked")
            }).save()
        }),
        $("#disableagency").on("click", function() {
            window.currentPlayer.set({
                disableagency: !0
            }).save(),
            $("#autoroll").prop("checked", !0)
        }),
        $("#diceiconsenabled").on("click", function() {
            window.currentPlayer.save({
                diceiconsenabled: $(this).is(":checked")
            })
        }),
        $("#chatavatarsenabled").on("click", function() {
            window.currentPlayer.save({
                chatavatarsenabled: $(this).is(":checked")
            })
        }),
        $("#chattimestampsenabled").on("click", function() {
            window.currentPlayer.save({
                chattimestampsenabled: $(this).is(":checked")
            })
        }),
        $("#alphatokenactionsenabled").on("click", function() {
            window.currentPlayer.save({
                alphatokenactions: $(this).is(":checked")
            })
        }),
        $("#chatbeepenabled").on("click", function() {
            window.currentPlayer.save({
                chatbeepenabled: $(this).is(":checked")
            })
        }),
        $("#useAdvShortcuts").on("click", function() {
            window.currentPlayer.save({
                advShortcuts: $(this).is(":checked")
            })
        }),
        $("#usePopouts").on("click", function() {
            window.currentPlayer.save({
                usePopouts: $(this).is(":checked")
            })
        }),
        window.Detector.webgl || ($("#enable3ddice").prop("disabled", !0),
        $("#nowebglerror").show()),
        $("#clearChat").on("click", function() {
            $("#textchat .content .message").remove()
        }),
        window.is_gm && $("#resetPlayerStatus").on("click", function() {
            d20.Campaign.players.each(function(e) {
                e.save({
                    online: !1
                })
            })
        }),
        window.is_gm) && ($("#campaignsettings .bar1_color").on("change", function() {
            d20.Campaign.save({
                bar1_color: $(this).val()
            })
        }),
        $("#campaignsettings .bar2_color").on("change", function() {
            d20.Campaign.save({
                bar2_color: $(this).val()
            })
        }),
        $("#campaignsettings .bar3_color").on("change", function() {
            d20.Campaign.save({
                bar3_color: $(this).val()
            })
        }),
        $("#campaignsettings .markers_position").on("change", function() {
            d20.Campaign.save({
                markers_position: $(this).val()
            })
        }),
        $("#campaignsettings .disablespeakingas").on("change", function() {
            d20.Campaign.save({
                disable_speakingas: $(this).prop("checked")
            })
        }),
        $("#campaignsettings .videotech").on("change", function() {
            $.post("/campaigns/updatesetting/" + campaign_id + "/videotech", {
                newvalue: $("#campaignsettings .videotech").val()
            }, function(e) {
                "success" == e && d20.textchat.sendShout({
                    type: "settingschanged",
                    playerid: window.currentPlayer.id,
                    time: (new Date).getTime()
                })
            })
        }),
        $("#showqrcode").on("click", function() {
            n && n.dialog("destroy"),
            $tdialog = $("<div><img src='/campaigns/qrcode/" + window.campaign_id + "' style='width: 100%; height: 100%;' /></div>"),
            $tdialog.dialog({
                title: "Scannable Code",
                width: 525,
                height: 550,
                position: ["center", 30]
            })
        }),
        $("#applydefaultsettings").on("click", function() {
            if (i) {
                if (i.dialog("isOpen"))
                    return;
                i.dialog("open")
            } else {
                var e = "";
                if (e += "<div class='defaultsettings'><div class='warning' style='margin-bottom:10px;'><span style='color: red; background-color: rgb(247,235,235); padding: 5px; border-radius: 5px; font-size: 14px; margin-bottom: 2px;'>" + i18n("warning_default_settings", "WARNING: Default Settings will be applied to all characters, pages, and tokens in the game. Default attributes will be overwritten with the game's default settings. This action cannot be undone.") + "</span></div><div class='progressbar'></div><hr>",
                window.defaultsettings.sheet && (e += "<h4 style='margin-bottom:5px;'>" + i18n("default_character_sheet_settings", "Default Character Sheet Settings") + "</h4>",
                _.each(Object.keys(window.defaultsettings.sheet), function(t) {
                    if ("dndstyling" !== t) {
                        var n = window.charactersheet_useroptions.filter(function(e) {
                            return e.attribute === t
                        });
                        n[0] && n[0].description && n[0].displayname ? e += "<div class='useroptions' style='margin-bottom:5px;' title='" + i18n(n[0].descriptiontranslationkey, html_sanitize(n[0].description)) + "'><label><input class='sheet-default' type='checkbox' style='margin-right:5px;' data-attrname='" + t + "'><span style='font-weight:bold; margin-right: 5px;'>" + i18n(n[0].displaytranslationkey, n[0].displayname) + "</span></label></div>" : e += "<div class='useroptions' style='margin-bottom:5px;'><label><input class='sheet-default' type='checkbox' style='margin-right:5px;' data-attrname='" + t + "'><span style='font-weight:bold; margin-right: 5px;'>" + i18n(t, t) + "</span></label></div>"
                    }
                }),
                e += "<hr>"),
                window.defaultsettings.game) {
                    var t = ["width", "height", "scale_number", "scale_units", "background_color", "showgrid", "snapping_increment", "diagonaltype", "grid_type", "gridlabels", "gridcolor", "grid_opacity", "showdarkness", "adv_fow_enabled", "adv_fow_show_grid", "adv_fow_dim_reveals", "adv_fow_grid_size", "showlighting", "lightenforcelos", "lightupdatedrop", "lightrestrictmove", "lightglobalillum", "fog_opacity"];
                    e += "<h4 style='margin-bottom:5px;'>" + i18n("default_page_settings", "Default Page Settings") + "</h4>",
                    _.each(window.defaultsettings.game, function(n, i) {
                        t.indexOf(i) > -1 && (e += "<div class='useroptions' style='margin-bottom:5px;'><label><input class='page-default' type='checkbox' style='margin-right:5px;' data-attrname='" + i + "'><span style='font-weight:bold; margin-right: 5px;'>" + i18n(i, i) + "</span></label></div>")
                    }),
                    e += "<hr><h4 style='margin-bottom:5px;'>" + i18n("default_token_settings", "Default Token Settings") + "</h4>",
                    _.each(window.defaultsettings.game, function(t, n) {
                        d20.token_editor.tokenkeys.indexOf(n) > -1 && (e += "<div class='useroptions' style='margin-bottom:5px;'><label><input class='token-default' type='checkbox' style='margin-right:5px;' data-attrname='" + n + "'><span style='font-weight:bold; margin-right: 5px;'>" + i18n(n, n) + "</span></label></div>")
                    })
                }
                e += "</div>",
                (i = $(e)).dialog({
                    title: i18n("apply_default_settings", "Apply Default Settings"),
                    width: 525,
                    height: 550,
                    position: ["center", 30],
                    buttons: {
                        "Apply Settings": function() {
                            var e = []
                              , t = []
                              , n = []
                              , o = d20.Campaign.characters.models
                              , r = d20.Campaign.pages.models
                              , a = [];
                            if (r.each(function(e) {
                                if (!e.thegraphics)
                                    return !0;
                                e.thegraphics.each(function(e) {
                                    !0 !== e.get("isdrawing") && a.push(e)
                                })
                            }),
                            $(this).find("input.sheet-default:checked").each(function() {
                                e.push($(this).data("attrname"))
                            }),
                            $(this).find("input.page-default:checked").each(function() {
                                t.push($(this).data("attrname"))
                            }),
                            $(this).find("input.token-default:checked").each(function() {
                                n.push($(this).data("attrname"))
                            }),
                            e.length + t.length + n.length !== 0) {
                                var s = $(this).find(".progressbar")
                                  , l = function() {
                                    if (e.length > 0) {
                                        if (!o || 0 === o.length)
                                            return void alert("There are no characters in this game's journal");
                                        if (confirm("Are you sure you want to apply the selected " + e.length + " default character settings to all " + o.length + " characters in this game?")) {
                                            s.progressbar({
                                                value: 0,
                                                max: o.length,
                                                complete: function() {
                                                    s.progressbar("disable"),
                                                    c()
                                                }
                                            }),
                                            s.progressbar("enable");
                                            var t = function(n, r) {
                                                setTimeout(function() {
                                                    s.progressbar({
                                                        value: r + 1
                                                    }),
                                                    d20.journal.applyCharacterSheetDefaults(n, e),
                                                    r + 1 < o.length && i.dialog("isOpen") ? t(o[r + 1], r + 1) : r + 1 < o.length && !i.dialog("isOpen") && s.progressbar({
                                                        value: 0,
                                                        disabled: !0
                                                    })
                                                }, 500)
                                            };
                                            t(o[0], 0)
                                        }
                                    } else
                                        c()
                                }
                                  , c = function() {
                                    if (t.length > 0) {
                                        if (!r || 0 === r.length)
                                            return void alert("There are no pages in this game");
                                        if (confirm("Are you sure you want to apply the selected " + t.length + " default page settings to all " + r.length + " pages in this game?")) {
                                            s.progressbar({
                                                value: 0,
                                                max: r.length,
                                                complete: function() {
                                                    s.progressbar("disable"),
                                                    u()
                                                }
                                            }),
                                            s.progressbar("enable");
                                            var e = function(n, o) {
                                                setTimeout(function() {
                                                    s.progressbar({
                                                        value: o + 1
                                                    });
                                                    var a = {};
                                                    _.each(t, function(e) {
                                                        window.defaultsettings.game[e] != undefined && (a[e] = window.defaultsettings.game[e])
                                                    }),
                                                    n.set(a).save(),
                                                    o + 1 < r.length && i.dialog("isOpen") ? e(r[o + 1], o + 1) : o + 1 < r.length && !i.dialog("isOpen") && s.progressbar({
                                                        value: 0,
                                                        disabled: !0
                                                    })
                                                }, 500)
                                            };
                                            e(r[0], 0)
                                        }
                                    } else
                                        u()
                                }
                                  , u = function() {
                                    if (n.length > 0) {
                                        if (!a || 0 === a.length)
                                            return void alert("There are no tokens in this game");
                                        if (confirm("Are you sure you want to apply the selected " + n.length + " default token settings to all " + a.length + " tokens in this game?")) {
                                            s.progressbar({
                                                value: 0,
                                                max: a.length,
                                                complete: function() {
                                                    alert("Selected settings successfully applied."),
                                                    s.progressbar("disable"),
                                                    i.dialog("close")
                                                }
                                            }),
                                            s.progressbar("enable");
                                            var e = function(t, o) {
                                                setTimeout(function() {
                                                    s.progressbar({
                                                        value: o + 1
                                                    });
                                                    var r = {};
                                                    _.each(n, function(e) {
                                                        window.defaultsettings.game[e] != undefined && (r[e] = window.defaultsettings.game[e])
                                                    }),
                                                    t.set(r).save(),
                                                    o + 1 < a.length && i.dialog("isOpen") ? e(a[o + 1], o + 1) : o + 1 < a.length && !i.dialog("isOpen") && s.progressbar({
                                                        value: 0,
                                                        disabled: !0
                                                    })
                                                }, 500)
                                            };
                                            e(a[0], 0)
                                        }
                                    } else
                                        alert("Selected settings successfully applied."),
                                        s.progressbar("disable"),
                                        i.dialog("close")
                                };
                                l()
                            } else
                                alert("There are no default settings selected")
                        },
                        Cancel: function() {
                            $(this).dialog("close")
                        }
                    }
                })
            }
        }))
    }),
    $(document).ready(function() {
        function e() {
            return $(this).hasClass("tipsy-w") ? "w" : $(this).hasClass("tipsy-e") ? "e" : $(this).hasClass("tipsy-n") ? "n" : $(this).hasClass("tipsy-s") ? "s" : $(this).hasClass("tipsy-n-right") ? $(window).width() - $(this).offset().left < $(this).parents(".message").width() / 2 ? "ne" : "n" : $(this).hasClass("tipsy-side") ? $(this).offset().left > $(document).scrollLeft() + $(window).width() / 2 ? "e" : "w" : $(this).offset().top < $(document).scrollTop() + $(window).height() / 2 ? "n" : "s"
        }
        fabric.isTouchSupported || ($(".showtip").tipsy({
            live: !0,
            gravity: e,
            opacity: 1,
            html: !0
        }),
        $(".userscript-showtip").tipsy({
            live: !0,
            gravity: e,
            opacity: 1,
            html: !0,
            filterhtml: !0,
            userscript: !0
        }),
        $(".showjukeboxtip").tipsy({
            className: "jukeboxTip",
            live: !0,
            gravity: e,
            opacity: 1,
            html: !0
        })),
        $("body").on(clicktype, ".result .favorite", function() {
            var e = $(this).parents(".result");
            if ($(this).hasClass("is_favorite"))
                if (e.hasClass("imagelibrary"))
                    if ($(this).hasClass("useruploaded")) {
                        var t = this;
                        $("<div>This image was uploaded by you. If you delete it, it will show up as a blank space on any supports where it was used. Are you sure you want to delete this image?</div>").dialog({
                            title: "Confirm Image Deletion",
                            modal: !0,
                            zIndex: 10500,
                            buttons: {
                                Cancel: function() {
                                    $(this).dialog("destroy").remove()
                                },
                                "Yes, Delete": function() {
                                    $.post(d20.siteURL + "/image_library/remove_favorite/" + $(t).attr("data-imagelibrary-id")),
                                    e.fadeOut(function() {
                                        e.remove()
                                    }),
                                    $(this).dialog("destroy").remove()
                                }
                            },
                            beforeClose: function() {
                                $(this).dialog("destroy").remove()
                            }
                        })
                    } else
                        $.post(d20.siteURL + "/image_library/remove_favorite/" + $(this).attr("data-imagelibrary-id")),
                        e.fadeOut(function() {
                            e.remove()
                        });
                else
                    $("#manageimagelibrary").trigger("click");
            else {
                $(this).addClass("is_favorite");
                var n = $(this);
                $.post(d20.siteURL + "/image_library/add_favorite", {
                    imgsrc: $(this).parents(".result").find(".resultimage").attr("data-fullsizeurl"),
                    terms: $("#imagedialog .keywords").val(),
                    credit: $(this).parents(".result").find(".credit").html()
                }, function(e) {
                    n.attr("data-imagelibrary-id", e)
                })
            }
        })
    }),
    $(function() {
        $("body").on("click", "#opensearchsettings", function() {
            $("#searchsettings").dialog({
                modal: !0,
                title: "Search Settings",
                width: 375,
                buttons: {
                    OK: function() {
                        $(this).dialog("close")
                    }
                }
            })
        })
    });
    var add_token_to_canvas = function(e, t, n) {
        if ("file" === n)
            var i = Math.floor(d20.uploader.lastDropX / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom)
              , o = Math.floor(d20.uploader.lastDropY / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom);
        else {
            i = Math.floor(e.originalEvent.pageX / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom),
            o = Math.floor(e.originalEvent.pageY / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom);
            if (i > Math.floor(d20.engine.pageWidth / d20.engine.canvasZoom) || o > Math.floor(d20.engine.pageHeight / d20.engine.canvasZoom) || i < 0 || o < 0)
                return
        }
        var r, a, s, l, c = !1;
        if (e.altKey && (c = !0),
        "mass" === n ? (s = t.attr("data-fullsizeurl"),
        l = "") : "defaulttoken" === n ? (s = t.imgsrc,
        l = t.represents,
        c = !0) : "character" === n ? (l = $(t.draggable).attr("data-itemid"),
        (s = d20.Campaign.characters.get(l).get("avatar")) && "" !== s || (s = "/images/character.png")) : "file" === n ? (s = t.base.replace("/original.", "/med.") + "?" + Math.floor((new Date).getTime() / 1e3),
        l = "",
        c = !0) : "fallback" === n ? (l = t.represents,
        s = "/images/character.png") : (s = $(t.draggable).attr("data-fullsizeurl"),
        l = null != $(t.draggable).attr("data-represents") ? $(t.draggable).attr("data-represents") : ""),
        0 != d20.engine.snapTo && !1 === c && "map" != window.currentEditingLayer)
            r = d20.engine.snapTo,
            a = d20.engine.snapTo;
        else if ("mass" === n)
            r = t.find("img")[0].naturalWidth,
            a = t.find("img")[0].naturalHeight;
        else if ("defaulttoken" === n) {
            var u = d20.Campaign.activePage()
              , d = u && u.get("snapping_increment") && 0 != u.get("snapping_increment") ? u.get("snapping_increment") : 1;
            r = t.width * d,
            a = t.height * d
        } else if ("file" === n) {
            if ("number" != typeof t.width && (t.width = parseInt(json.width, 10),
            t.height = parseInt(json.height, 10)),
            t.width > t.height && t.width > d20.engine.pageWidth) {
                console.log("larger than page!");
                var h = t.height / t.width;
                t.width = d20.engine.pageWidth,
                t.height = t.width * h
            } else if (t.height > d20.engine.pageHeight) {
                console.log("larger than page!");
                h = t.width / t.height;
                t.height = d20.engine.pageHeight,
                t.width = t.height * h
            }
            r = t.width,
            a = t.height
        } else
            $(t.draggable).attr("data-width") ? (r = parseInt($(t.draggable).attr("data-width"), 10),
            a = parseInt($(t.draggable).attr("data-height"), 10)) : (r = $(t.draggable).find("img")[0].naturalWidth,
            a = $(t.draggable).find("img")[0].naturalHeight);
        var p = {
            x: i -= r / 2,
            y: o -= a / 2,
            width: r,
            height: a,
            imgsrc: s,
            imgwidth: r,
            imgheight: a,
            represents: l
        }
          , f = d20.Campaign.activePage().addImage(p, c, !1);
        if (["character", "defaulttoken", "fallback"].indexOf(n) > -1 && _.defer(function() {
            if ("character" === n || "fallback" === n) {
                var e = d20.Campaign.characters.get(p.represents);
                e && f.save({
                    name: e.get("name")
                })
            }
            "defaulttoken" === n && (defaulttoken_attr = {},
            _.each(t, function(e, t) {
                p[t] === undefined && -1 === ["left", "top", "page_id", "layer"].indexOf(t) && (defaulttoken_attr[t] = e)
            }),
            defaulttoken_attr.layer = window.currentEditingLayer,
            f.save(defaulttoken_attr))
        }),
        ["art", "mass", "character", "file", "fallback"].indexOf(n) > -1 && window.defaultsettings && window.defaultsettings.game && Object.keys(window.defaultsettings.game).length > 0) {
            var g = ["bar1_value", "bar1_max", "bar2_value", "bar2_max", "bar3_value", "bar3_max", "aura1_square", "aura1_radius", "aura1_color", "aura2_square", "aura2_radius", "aura2_color", "tint_color", "showname", "showplayers_name", "playersedit_name", "showplayers_bar1", "playersedit_bar1", "showplayers_bar2", "playersedit_bar2", "showplayers_bar3", "playersedit_bar3", "showplayers_aura1", "playersedit_aura1", "showplayers_aura2", "playersedit_aura2", "light_radius", "light_dimradius", "light_angle", "light_otherplayers", "light_hassight", "light_losangle", "light_multiplier", "adv_fow_view_distance", "bar1_num_permission", "bar2_num_permission", "bar3_num_permission", "bar_location", "compact_bar"]
              , m = {};
            _.each(g, function(e) {
                window.defaultsettings.game[e] != undefined && (m[e] = window.defaultsettings.game[e])
            }),
            f.set(m).save()
        }
        _.defer(function() {
            f.refreshTokenLinks()
        })
    }, notifyref, notifyInUse, lineDistance, shoutsById, $fxType, $fxColor, $fxEdit;
    $(document).ready(function() {
        $("#finalcanvas").droppable({
            accept: ".draggableresult, .draggablecard, .cardinhand, .diceroll, .character, .handout, .dd-dragel, .library-container.selected, .compendium-item",
            tolerance: "pointer",
            drop: function(e, t) {
                setTimeout(function() {
                    if (e.originalEvent.dropHandled)
                        console.log("Drop handled, returning...");
                    else {
                        console.log("drop on upper canvas");
                        var n = $(t.draggable);
                        if (n.hasClass("draggableresult"))
                            add_token_to_canvas(e, t, "art"),
                            $("#imagedialog .keywords").blur();
                        else if (t.helper && t.helper.hasClass("libraryviewhelper")) {
                            var i = d20.library.getSelected();
                            _.each(i.imageids, function(t) {
                                var n = $("#libraryview > .library-container[data-imageid=" + t + "]");
                                add_token_to_canvas(e, n, "mass")
                            })
                        } else if (n.hasClass("draggablecard") || n.hasClass("cardinhand")) {
                            var o = Math.floor(e.originalEvent.pageX / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom)
                              , r = Math.floor(e.originalEvent.pageY / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom);
                            if (o > Math.floor(d20.engine.pageWidth / d20.engine.canvasZoom) || r > Math.floor(d20.engine.pageHeight / d20.engine.canvasZoom) || o < 0 || r < 0)
                                return;
                            var a = $(t.draggable).attr("data-cardid");
                            if ($(".tipsy").remove(),
                            "nextcard" == a) {
                                var s = $(t.draggable).parents(".deckstack").attr("data-deckid")
                                  , l = d20.Campaign.decks.get(s);
                                if (!l)
                                    return void alert("ERROR: Unable to locate deck!");
                                var c = l.drawCard();
                                a = l.cardAtIndex(c).id,
                                $(t.draggable).parents(".deckstack").on("currentCardRemoved.nextcard", function() {
                                    l.finishDrawingCard(c, !0)
                                })
                            }
                            var u, d = d20.decks.cardByID(a);
                            if (!d)
                                return void console.log("ERROR: Unable to locate card " + a);
                            "true" === n.attr("data-resetdeckstack") && d.collection.deck.save({
                                currentCardShown: !1
                            }),
                            E = "faceup" == d.collection.deck.get("cardsplayed") ? 0 : 1,
                            e.shiftKey && (E = 0 == E ? 1 : 0),
                            u = 0 == E ? d.get("avatar") : d.collection.deck.get("avatar");
                            var h, p, f = n.find("img");
                            if (f.length > 0) {
                                var g = f[0].width
                                  , m = f[0].height
                                  , y = g / m;
                                g > m ? p = (h = 140) / y : h = (p = 140) * y
                            }
                            "" !== d.collection.deck.get("defaultwidth") && (h = parseInt(d.collection.deck.get("defaultwidth"), 10)),
                            "" !== d.collection.deck.get("defaultheight") && (p = parseInt(d.collection.deck.get("defaultheight"), 10)),
                            h && p || (console.log("ERROR: Cannot determine width/height. Using a default fallback."),
                            h = 140,
                            p = 140);
                            var v = {
                                x: o,
                                y: r,
                                width: h,
                                height: p,
                                imgsrc: u,
                                imgwidth: h,
                                imgheight: p,
                                cardid: a,
                                isdrawing: d.collection.deck.get("treatasdrawing"),
                                sides: [escape(d.get("avatar")), escape(d.collection.deck.get("avatar"))].join("|"),
                                currentSide: E
                            }
                              , b = n.parents(".cardgroup");
                            n.parents(".deckstack").trigger("currentCardRemoved"),
                            n.parents(".deckpile").trigger("chosenCardPlayed", n[0]),
                            n.remove();
                            var w = d20.Campaign.activePage().addImage(v, !0, !1);
                            if (!1 === d.collection.deck.get("treatasdrawing") && window.defaultsettings && window.defaultsettings.game && Object.keys(window.defaultsettings.game).length > 0) {
                                var x = {};
                                _.each(d20.token_editor.tokenkeys, function(e) {
                                    window.defaultsettings.game[e] != undefined && (x[e] = window.defaultsettings.game[e])
                                }),
                                w.set(x).save()
                            }
                            b.length > 0 && (b.trigger("postTabletopPlay", w),
                            b.trigger("sortupdate")),
                            d.collection.deck.updateDiscardPile()
                        } else if (n.hasClass("diceroll")) {
                            console.log("dice roll!");
                            o = Math.floor(e.originalEvent.pageX / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom),
                            r = Math.floor(e.originalEvent.pageY / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom);
                            if (o > Math.floor(d20.engine.pageWidth / d20.engine.canvasZoom) || r > Math.floor(d20.engine.pageHeight / d20.engine.canvasZoom) || o < 0 || r < 0)
                                return;
                            var k = n.attr("class").match(/(d[0-9]+)/i);
                            if (null !== k && d20.utils.defaultDiceTokens[k[0]] !== undefined) {
                                var E;
                                if ((E = parseInt(n.find(".didroll").text(), 10) - 1) < 0)
                                    return !1;
                                v = {
                                    x: o - 35,
                                    y: r - 35,
                                    width: 70,
                                    height: 70,
                                    imgsrc: unescape(d20.utils.defaultDiceTokens[k[0]][E]),
                                    imgwidth: 70,
                                    imgheight: 70,
                                    isdrawing: !0,
                                    sides: d20.utils.defaultDiceTokens[k[0]].join("|"),
                                    currentSide: E
                                };
                                var S = t.draggable.parents(".message").attr("data-playerid")
                                  , C = d20.Campaign.players.get(S);
                                C && (v.tint = C.get("color"))
                            }
                            w = d20.Campaign.activePage().addImage(v, !1, !1)
                        } else if (n.hasClass("character")) {
                            var T = n.attr("data-itemid")
                              , A = d20.Campaign.characters.get(T);
                            if (!window.is_gm && !A.currentPlayerControls())
                                return;
                            if (!A)
                                return void console.log("Unable to find character!");
                            "" !== A.get("defaulttoken") ? A._getLatestBlob("defaulttoken", function(t) {
                                var n = JSON.parse(t);
                                add_token_to_canvas(e, n, "defaulttoken")
                            }) : add_token_to_canvas(e, t, "character")
                        } else if (n.hasClass("handout")) {
                            if (!window.is_gm)
                                return;
                            var R = n.attr("data-itemid")
                              , M = d20.Campaign.handouts.get(R);
                            M ? M.broadcastToPlayers() : alert("ERROR: Unable to find handout to edit.")
                        } else if (n.hasClass("compendium-item")) {
                            if (!window.is_gm)
                                return;
                            o = Math.floor(e.originalEvent.pageX / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom),
                            r = Math.floor(e.originalEvent.pageY / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom);
                            if (o > Math.floor(d20.engine.pageWidth / d20.engine.canvasZoom) || r > Math.floor(d20.engine.pageHeight / d20.engine.canvasZoom) || o < 0 || r < 0)
                                return;
                            e.altKey && !0,
                            console.log("Compendium item dropped onto canvas!");
                            var P = $(t.helper[0]).attr("data-pagename")
                              , I = $(t.helper[0]).attr("data-subhead");
                            $.ajax({
                                url: "/compendium/compendium/getPages",
                                data: {
                                    bookName: COMPENDIUM_BOOK_NAME,
                                    pages: [P],
                                    sharedCompendium: campaign_id
                                },
                                cache: !1,
                                dataType: "JSON"
                            }).done(function(n) {
                                n = JSON.parse(n[0]);
                                var i, o, r = _.clone(n.data);
                                if (r.Name = n.name,
                                r.Content = n.content,
                                r.data = n.data,
                                r.data = JSON.stringify(r.data),
                                r.HTMLContent = n.htmlcontent,
                                r.dropSubhead = I,
                                r)
                                    if ("Monsters" === r.Category || "NPCs" === r.Category || "Beastiary" === r.Category || "Bestiary" === r.Category)
                                        if (d20.Campaign.characters.each(function(e) {
                                            e.get("name") === r.Name && (i = e)
                                        }),
                                        i)
                                            if ("" !== i.get("defaulttoken")) {
                                                if (!window.is_gm && !i.currentPlayerControls())
                                                    return;
                                                i._getLatestBlob("defaulttoken", function(t) {
                                                    var n = JSON.parse(t);
                                                    add_token_to_canvas(e, n, "defaulttoken")
                                                })
                                            } else {
                                                if (!window.is_gm && !i.currentPlayerControls())
                                                    return;
                                                var a = t;
                                                a.represents = i.id,
                                                add_token_to_canvas(e, a, "fallback")
                                            }
                                        else
                                            d20.Campaign.characters.create({
                                                name: r.Name,
                                                avatar: r.Token || ""
                                            }, {
                                                success: function(n) {
                                                    d20.journal.addItemToFolderStructure(n.id),
                                                    n.view.showDialog(undefined, "compendium_drop"),
                                                    n.updateBlobs({
                                                        bio: Markdown.parse(r.HTMLContent)
                                                    }),
                                                    n.save({
                                                        bio: (new Date).getTime()
                                                    });
                                                    var i = 0
                                                      , o = function(n) {
                                                        var a = n.view.$el.find(".sheet-compendium-drop-target.sheet-" + r.Category.toLowerCase());
                                                        n.view.$el.find(".charsheet").length > 0 && a.length > 0 ? (a.find("*[accept]").each(function() {
                                                            var e = $(this)
                                                              , t = e.attr("accept");
                                                            r[t] && ("input" === e[0].tagName.toLowerCase() && "checkbox" === e.attr("type") ? e.val() == r[t] ? e.prop("checked", !0) : e.prop("checked", !1) : "input" === e[0].tagName.toLowerCase() && "radio" === e.attr("type") ? e.val() == r[t] ? e.prop("checked", !0) : e.prop("checked", !1) : "select" === e[0].tagName.toLowerCase() ? e.find("option").each(function() {
                                                                var e = $(this);
                                                                e.val() !== r[t] && e.text() !== r[t] || e.prop("selected", !0)
                                                            }) : $(this).val(r[t]),
                                                            d20.journal.applyCharacterSheetDefaults(n),
                                                            n.view.saveSheetValues(this))
                                                        }),
                                                        setTimeout(function() {
                                                            d20.journal.waitForSandboxProcessing(function() {
                                                                d20.journal.notifyWorkersOfCompendium(n.id),
                                                                d20.journal.waitForSandboxProcessing(function() {
                                                                    if (window.is_gm || n.currentPlayerControls())
                                                                        if ("" !== n.get("defaulttoken"))
                                                                            n._getLatestBlob("defaulttoken", function(t) {
                                                                                var n = JSON.parse(t);
                                                                                n.imgsrc && "" !== n.imgsrc && add_token_to_canvas(e, n, "defaulttoken")
                                                                            });
                                                                        else {
                                                                            console.log("No default token, falling back to generic token");
                                                                            var i = t;
                                                                            i.represents = n.id,
                                                                            add_token_to_canvas(e, i, "fallback")
                                                                        }
                                                                })
                                                            })
                                                        }, 200)) : i < 11 && (i++,
                                                        setTimeout(function() {
                                                            o(n)
                                                        }, 500))
                                                    };
                                                    o(n)
                                                }
                                            });
                                    else if (d20.Campaign.handouts.each(function(e) {
                                        e.get("name") === r.Name && (o = e)
                                    }),
                                    o)
                                        o.view.showDialog();
                                    else
                                        d20.Campaign.handouts.create({
                                            name: r.Name,
                                            avatar: r.Token || ""
                                        }, {
                                            success: function(e) {
                                                console.log(e),
                                                d20.journal.addItemToFolderStructure(e.id),
                                                e.view.showDialog(),
                                                e.updateBlobs({
                                                    notes: Markdown.parse(r.HTMLContent)
                                                }),
                                                e.save({
                                                    notes: (new Date).getTime()
                                                })
                                            }
                                        })
                            })
                        }
                    }
                }, 50)
            }
        })
    }),
    $(document).keydown(function(e) {
        var t;
        if (8 == e.keyCode) {
            var n = e.srcElement || e.target;
            t = "INPUT" == n.tagName.toUpperCase() || "TEXTAREA" == n.tagName.toUpperCase() ? n.readOnly || n.disabled : !n.isContentEditable
        } else
            t = !1;
        t && e.preventDefault()
    }),
    $(document).ready(function() {
        var e = $("#finalcanvas");
        e.on("focus", function(t) {
            return t.preventDefault(),
            t.stopPropagation(),
            e.addClass("hasfocus"),
            !1
        }),
        e.on("blur", function() {
            e.removeClass("hasfocus")
        });
        var t = function() {
            return !!e.hasClass("hasfocus")
        };
        $(window).on("zoom", function() {
            console.log("zoom")
        }),
        $(document).bind("keydown", "backspace del", function() {
            if (!t())
                return;
            let e = d20.engine.selected();
            d20.engine.canvas.deactivateAllWithDispatch();
            for (let t = 0; t < e.length; t++)
                if (window.is_gm || "path" == e[t].type || "rect" == e[t].type || "text" == e[t].type || "image" == e[t].type && 1 == e[t].model.get("isdrawing") || "image" == e[t].type && e[t].model.currentPlayerControls()) {
                    if ("image" == e[t].type && "" !== e[t].model.get("cardid")) {
                        let n = d20.decks.cardByID(e[t].model.get("cardid")).collection.deck;
                        setTimeout(function() {
                            n.updateDiscardPile()
                        }, 100)
                    }
                    e[t].model.destroy()
                }
            return !1
        }),
        $(document).keydown(e=>{
            if ("." !== e.key)
                return;
            const t = d20.engine.selected();
            t.length > 1 && d20.engine.canvas.deactivateAllWithDispatch();
            for (const e of t)
                e.isAnimated && e.togglePause()
        }
        ),
        $(document).bind("keydown", "x", ()=>{
            if ("measure" === d20.engine.mode && d20.engine.last_measure) {
                var e = {
                    x: d20.engine.last_measure.down[0],
                    y: d20.engine.last_measure.down[1],
                    to_x: d20.engine.last_measure.down[2] ? d20.engine.last_measure.down[2] : d20.engine.last_measure.down[0],
                    to_y: d20.engine.last_measure.down[3] ? d20.engine.last_measure.down[3] : d20.engine.last_measure.down[1],
                    player: window.currentPlayer.id,
                    pageid: d20.engine.last_measure.page,
                    currentLayer: d20.engine.last_measure.layer,
                    waypoints: d20.engine.last_measure.waypoints,
                    sticky: !0,
                    flags: d20.engine.last_measure.flags,
                    hide: d20.engine.last_measure.hide
                };
                d20.engine.announceMeasure(e),
                d20.engine.redrawScreenNextTick(!0)
            } else {
                let e = d20.engine.selected();
                if (e.length > 0) {
                    let n = _.pluck(d20.engine.showLastPaths, "obj");
                    for (var t = 0; t < e.length; t++)
                        if (e[t].model && ("objects" === e[t].model.get("layer") || "gmlayer" === e[t].model.get("layer")) && "image" === e[t].model.get("type")) {
                            if (-1 !== n.indexOf(e[t]))
                                continue;
                            d20.engine.showLastPaths.push({
                                obj: e[t],
                                type: "selected"
                            })
                        }
                    d20.engine.redrawScreenNextTick()
                }
            }
        }
        ),
        $(document).bind("keydown", "space", function(e) {
            if (t())
                return e.preventDefault(),
                d20.engine.spacebar_event_fired++ || ($("#update-warning").fadeIn(),
                _.delay(()=>$("#update-warning:visible").fadeOut(), 15e3)),
                !0
        }),
        $(document).bind("keydown", "q alt+q", function(e) {
            if (t())
                return d20.engine.addWaypoint(e),
                e.preventDefault(),
                !1
        }),
        $(document).bind("keydown", "shift alt+shift", ()=>{
            if (t() && d20.engine.leftMouseIsDown && "measure" == d20.engine.mode && (d20.engine.measure.sticky = !0,
            !d20.engine.measurements[window.currentPlayer.id] || !d20.engine.measurements[window.currentPlayer.id].sticky)) {
                let e = {
                    x: d20.engine.measure.down[0],
                    y: d20.engine.measure.down[1],
                    to_x: d20.engine.measure.down[2] !== undefined ? d20.engine.measure.down[2] : d20.engine.measure.down[0],
                    to_y: d20.engine.measure.down[3] !== undefined ? d20.engine.measure.down[3] : d20.engine.measure.down[1],
                    player: window.currentPlayer.id,
                    pageid: d20.Campaign.activePage().id,
                    currentLayer: window.currentEditingLayer,
                    waypoints: d20.engine.measure.waypoints,
                    sticky: d20.engine.measure.sticky,
                    hide: d20.engine.measure.hide,
                    flags: d20.engine.measure.flags
                };
                d20.engine.announceMeasure(e)
            }
        }
        ),
        $(document).bind("keydown", "esc", function() {
            if ($("#lightly-overlay").is(":visible"))
                return $("#lightly-overlay").trigger("click"),
                !1;
            t() && ("polygon" == d20.engine.mode ? d20.engine.finishCurrentPolygon() : "fog-polygonreveal" == d20.engine.mode ? d20.engine.finishPolygonReveal() : "targeting" == d20.engine.mode ? $("#targetinginstructions .canceltargeting").trigger("click") : Object.keys(d20.engine.movingShadows).length > 0 ? (_.each(d20.engine.movingShadows, function(e) {
                e.waypoints = []
            }),
            d20.engine.redrawScreenNextTick()) : d20.engine.unselect())
        }),
        $(document).bind("keydown", "ctrl+a meta+a", function() {
            if (t())
                return setMode("select"),
                d20.engine.unselect(),
                d20.engine.selectAll(),
                !1
        }),
        $(document).bind("keydown", "ctrl+s meta+s", function() {
            return setMode("select"),
            !1
        }),
        $(document).bind("keydown", "ctrl+d meta+d", function() {
            return setMode("rect"),
            !1
        }),
        $(document).bind("keydown", "ctrl+f meta+f", function() {
            return setMode("path"),
            !1
        }),
        $(document).bind("keydown", "ctrl+g meta+g", function() {
            return setMode("text"),
            !1
        }),
        $(document).bind("keydown", "ctrl+l meta+l", function() {
            var e = d20.engine.selected();
            return 0 == e.length ? d20.engine.lightOnlySelected = !1 : d20.engine.lightOnlySelected = e,
            d20.engine.redrawScreenNextTick(),
            !1
        }),
        Mousetrap.bindGlobal("esc", function() {
            if ($("#tdagencyoverlay").is(":visible"))
                return $("#tdagencyoverlay").trigger("mouseup"),
                !1;
            $("input:focus, textarea:focus").blur(),
            d20.tddice && d20.tddice.handleInteraction && d20.tddice.handleInteraction()
        }),
        Mousetrap.bind("a", function() {
            return setMode("pan"),
            !1
        }),
        Mousetrap.bind("f r", function() {
            return setMode("rect"),
            !1
        }),
        Mousetrap.bind("f f", function() {
            return setMode("path"),
            !1
        }),
        Mousetrap.bind("f g", function() {
            return setMode("polygon"),
            !1
        }),
        Mousetrap.bind("f d", function() {
            return setMode("text"),
            !1
        }),
        $(document).bind("keydown", "q", ()=>{
            window.currentPlayer.get("advShortcuts") && (d20.engine.ruler_hotkeys.q.down = !0,
            d20.engine.ruler_hotkeys.q.exec(),
            _.delay(()=>d20.engine.ruler_hotkeys.q.down = !1, 1e3))
        }
        ),
        $(document).bind("keydown", "1", ()=>{
            window.currentPlayer.get("advShortcuts") && d20.engine.ruler_hotkeys.q.down && (d20.engine.ruler_hotkeys.q.down = !1,
            d20.engine.ruler_hotkeys.q1.exec())
        }
        ),
        $(document).bind("keydown", "2", ()=>{
            window.currentPlayer.get("advShortcuts") && d20.engine.ruler_hotkeys.q.down && (d20.engine.ruler_hotkeys.q.down = !1,
            d20.engine.ruler_hotkeys.q2.exec())
        }
        ),
        $(document).bind("keydown", "3", ()=>{
            window.currentPlayer.get("advShortcuts") && d20.engine.ruler_hotkeys.q.down && (d20.engine.ruler_hotkeys.q.down = !1,
            d20.engine.ruler_hotkeys.q3.exec())
        }
        ),
        $(document).bind("keydown", "3", ()=>{
            window.currentPlayer.get("advShortcuts") && d20.engine.ruler_hotkeys.q.down && (d20.engine.ruler_hotkeys.q.down = !1,
            d20.engine.ruler_hotkeys.q3.exec())
        }
        ),
        $(document).bind("keydown", "s", ()=>{
            window.currentPlayer.get("advShortcuts") && (d20.engine.ruler_hotkeys.q.down ? (d20.engine.ruler_hotkeys.q.down = !1,
            d20.engine.ruler_hotkeys.qs.exec()) : setMode("select"))
        }
        ),
        $(document).bind("keydown", "h", ()=>{
            window.currentPlayer.get("advShortcuts") && d20.engine.ruler_hotkeys.q.down && (d20.engine.ruler_hotkeys.q.down = !1,
            d20.engine.ruler_hotkeys.qh.exec())
        }
        ),
        Mousetrap.bind("d", function() {
            return $("#diceroller").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("w", function() {
            return $("#sidebarcontrol").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("c", function() {
            return $("#textchat-input").is(":visible") ? $("#textchat-input textarea").focus() : $("#rightsidebar .ui-tabs-nav a[href=#textchat]").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("j", function() {
            return $("#rightsidebar .ui-tabs-nav a[href=#journal]").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("/", function() {
            return $("#rightsidebar .ui-tabs-nav a[href=#journal]").trigger(clicktype),
            $("#journal .searchbox input").focus(),
            !1
        }),
        Mousetrap.bind("n", function() {
            return $("#rightsidebar .ui-tabs-nav a[href=#jukebox]").trigger(clicktype),
            !1
        }),
        Mousetrap.bind(";", function() {
            return $("#rightsidebar .ui-tabs-nav a[href=#deckstables]").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("[", function() {
            return $("#rightsidebar .ui-tabs-nav a[href=#mysettings]").trigger(clicktype),
            !1
        }),
        $(document).bind("keydown", "z", function() {
            if ($("#lightly-overlay").is(":visible"))
                $("#lightly-overlay").trigger("click");
            else if (t() && "select" === d20.engine.mode) {
                var e = d20.engine.selected();
                if (0 != e.length) {
                    var n = e[0];
                    d20.engine.zoomObject(n.model.id)
                }
            }
        }),
        $(document).bind("keydown", "shift+z", function() {
            if (t() && "select" === d20.engine.mode && window.is_gm) {
                var e = d20.engine.selected();
                if (0 != e.length) {
                    var n = e[0];
                    d20.textchat.sendShout({
                        type: "showobject",
                        id: n.model.id,
                        ts: (new Date).getTime()
                    })
                }
            }
        }),
        $(document).bind("keydown", "up alt+up", function(e) {
            if (t() && "select" === d20.engine.mode) {
                var n = d20.engine.selected();
                if (0 != n.length) {
                    var i = d20.engine.canvas.getActiveGroup()
                      , o = n[0];
                    i && (o = i);
                    var r = [o.left, o.top - (e.altKey ? 1 : d20.engine.snapTo)]
                      , a = d20.engine.checkMovement(o, [o.left, o.top], r);
                    return (3 === a || 2 === a) && (o.top = r[1],
                    o.top < 0 && (o.top = 0),
                    d20.engine.canvas.trigger("object:modified", {
                        target: o,
                        debounce: !0,
                        no_snap: !!e.altKey
                    }),
                    d20.engine.redrawScreenNextTick(),
                    !1)
                }
            }
        }),
        $(document).bind("keydown", "down alt+down", function(e) {
            if (t() && "select" === d20.engine.mode) {
                var n = d20.engine.selected();
                if (0 != n.length) {
                    var i = d20.engine.canvas.getActiveGroup()
                      , o = n[0];
                    i && (o = i);
                    var r = [o.left, o.top + (e.altKey ? 1 : d20.engine.snapTo)]
                      , a = d20.engine.checkMovement(o, [o.left, o.top], r);
                    if (3 !== a && 2 !== a)
                        return !1;
                    o.top = r[1];
                    var s = Math.floor(d20.engine.pageHeight / d20.engine.canvasZoom) - 5;
                    return o.top > s && (o.top = s),
                    d20.engine.canvas.trigger("object:modified", {
                        target: o,
                        debounce: !0,
                        no_snap: !!e.altKey
                    }),
                    d20.engine.redrawScreenNextTick(),
                    !1
                }
            }
        }),
        $(document).bind("keydown", "left alt+left", function(e) {
            if (t() && "select" === d20.engine.mode) {
                var n = d20.engine.selected();
                if (0 != n.length) {
                    var i = d20.engine.canvas.getActiveGroup()
                      , o = n[0];
                    i && (o = i);
                    var r = [o.left - (e.altKey ? 1 : d20.engine.snapTo), o.top]
                      , a = d20.engine.checkMovement(o, [o.left, o.top], r);
                    return (3 === a || 1 === a) && (o.left = r[0],
                    o.left < 0 && (o.left = 0),
                    d20.engine.canvas.trigger("object:modified", {
                        target: o,
                        debounce: !0,
                        no_snap: !!e.altKey
                    }),
                    d20.engine.redrawScreenNextTick(),
                    !1)
                }
            }
        }),
        $(document).bind("keydown", "right alt+right", function(e) {
            if (t() && "select" === d20.engine.mode) {
                var n = d20.engine.selected();
                if (0 != n.length) {
                    var i = d20.engine.canvas.getActiveGroup()
                      , o = n[0];
                    i && (o = i);
                    var r = [o.left + (e.altKey ? 1 : d20.engine.snapTo), o.top]
                      , a = d20.engine.checkMovement(o, [o.left, o.top], r);
                    if (3 !== a && 1 !== a)
                        return !1;
                    o.left = r[0];
                    var s = Math.floor(d20.engine.pageWidth / d20.engine.canvasZoom) - 5;
                    return o.left > s && (o.left = s),
                    d20.engine.canvas.trigger("object:modified", {
                        target: o,
                        debounce: !0,
                        no_snap: !!e.altKey
                    }),
                    d20.engine.redrawScreenNextTick(),
                    !1
                }
            }
        }),
        window.is_gm && ($(document).bind("keydown", "ctrl+u meta+u", function() {
            if ("select" != d20.engine.mode || !d20.Campaign.initiativewindow)
                return !1;
            for (var e = d20.engine.selected(), t = 0; t < e.length; t++)
                d20.Campaign.initiativewindow.addTokenToList(e[t].model.id);
            return !1
        }),
        $(document).bind("keydown", "ctrl+c meta+c", function() {
            if (t())
                return d20.clipboard.doCopy(),
                !1
        }),
        $(document).bind("keydown", "ctrl+v meta+v", function() {
            if (t())
                return d20.clipboard.doPaste(),
                !1
        }),
        $(document).bind("keydown", "ctrl+z meta+z", function() {
            if (t())
                if ("polygon" == d20.engine.mode)
                    d20.engine.polygonUndoLastPoint();
                else if ("fog-polygonreveal" == d20.engine.mode)
                    d20.engine.fogUndoLastPoint();
                else if (d20.undo)
                    return d20.undo.doUndo(),
                    !1
        }),
        $(document).bind("keydown", "ctrl+o meta+o", function() {
            return ("select" == d20.engine.mode || "drawselect" == d20.engine.mode) && "objects" != window.currentEditingLayer && ($("#editinglayer li.chooseobjects").trigger("click"),
            !1)
        }),
        $(document).bind("keydown", "ctrl+k meta+k", function() {
            return ("select" == d20.engine.mode || "drawselect" == d20.engine.mode) && "gmlayer" != window.currentEditingLayer && ($("#editinglayer li.choosegmlayer").trigger("click"),
            !1)
        }),
        $(document).bind("keydown", "ctrl+m meta+m", function() {
            return ("select" == d20.engine.mode || "drawselect" == d20.engine.mode) && "map" != window.currentEditingLayer && ($("#editinglayer li.choosemap").trigger("click"),
            !1)
        }),
        $(document).bind("keydown", "ctrl+shift+o meta+shift+o", function() {
            if ("select" != d20.engine.mode && "drawselect" != d20.engine.mode || "objects" == window.currentEditingLayer)
                return !1;
            var e = d20.engine.selected();
            return d20.engine.unselect(),
            _.each(e, function(e) {
                e.model.save({
                    layer: "objects"
                })
            }),
            $("#editinglayer li.chooseobjects").trigger("click"),
            !1
        }),
        $(document).bind("keydown", "ctrl+shift+k meta+shift+k", function() {
            if ("select" != d20.engine.mode && "drawselect" != d20.engine.mode || "gmlayer" == window.currentEditingLayer)
                return !1;
            var e = d20.engine.selected();
            return d20.engine.unselect(),
            _.each(e, function(e) {
                e.model.save({
                    layer: "gmlayer"
                })
            }),
            $("#editinglayer li.choosegmlayer").trigger("click"),
            !1
        }),
        $(document).bind("keydown", "ctrl+shift+m meta+shift+m", function() {
            if ("select" != d20.engine.mode && "drawselect" != d20.engine.mode || "map" == window.currentEditingLayer)
                return !1;
            var e = d20.engine.selected();
            return d20.engine.unselect(),
            _.each(e, function(e) {
                e.model.save({
                    layer: "map"
                })
            }),
            $("#editinglayer li.choosemap").trigger("click"),
            !1
        }),
        $(document).bind("keydown", "alt+left alt+right", function(e) {
            e.preventDefault()
        }),
        Mousetrap.bind("m", function() {
            return $("#editinglayer li.choosemap").trigger("click"),
            !1
        }),
        Mousetrap.bind("l m", function() {
            if ("select" != d20.engine.mode && "drawselect" != d20.engine.mode || "map" == window.currentEditingLayer)
                return !1;
            var e = d20.engine.selected();
            return d20.engine.unselect(),
            _.each(e, function(e) {
                e.model.save({
                    layer: "map"
                })
            }),
            $("#editinglayer li.choosemap").trigger("click"),
            !1
        }),
        Mousetrap.bind("o", function() {
            return $("#editinglayer li.chooseobjects").trigger("click"),
            !1
        }),
        Mousetrap.bind("l o", function() {
            if ("select" != d20.engine.mode && "drawselect" != d20.engine.mode || "objects" == window.currentEditingLayer)
                return !1;
            var e = d20.engine.selected();
            return d20.engine.unselect(),
            _.each(e, function(e) {
                e.model.save({
                    layer: "objects"
                })
            }),
            $("#editinglayer li.chooseobjects").trigger("click"),
            !1
        }),
        Mousetrap.bind("k", function() {
            return $("#editinglayer li.choosegmlayer").trigger("click"),
            !1
        }),
        Mousetrap.bind("l k", function() {
            if ("select" != d20.engine.mode && "drawselect" != d20.engine.mode || "gmlayer" == window.currentEditingLayer)
                return !1;
            var e = d20.engine.selected();
            return d20.engine.unselect(),
            _.each(e, function(e) {
                e.model.save({
                    layer: "gmlayer"
                })
            }),
            $("#editinglayer li.choosegmlayer").trigger("click"),
            !1
        }),
        Mousetrap.bind(",", function() {
            return $("#editinglayer li.choosewalls").trigger("click"),
            !1
        }),
        Mousetrap.bind("l ,", function() {
            if ("select" != d20.engine.mode && "drawselect" != d20.engine.mode || "walls" == window.currentEditingLayer)
                return !1;
            if (window.largefeats || window.xlfeats) {
                var e = d20.engine.selected();
                return d20.engine.unselect(),
                _.each(e, function(e) {
                    e.model.save({
                        layer: "walls"
                    })
                }),
                $("#editinglayer li.choosewalls").trigger("click"),
                !1
            }
        }),
        Mousetrap.bind("i", function() {
            return $("#rightsidebar .ui-tabs-nav a[href=#imagedialog]").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("r r", function() {
            return $("#fogcontrols .choosereveal").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("r g", function() {
            return $("#fogcontrols .choosepolygonreveal").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("r t", function() {
            return $("#fogcontrols .choosehide").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("y", function() {
            return $("#startrounds").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("u", function() {
            if ("select" != d20.engine.mode || !d20.Campaign.initiativewindow)
                return !1;
            for (var e = d20.engine.selected(), t = 0; t < e.length; t++)
                d20.Campaign.initiativewindow.addTokenToList(e[t].model.id);
            return !1
        }),
        Mousetrap.bind("p", function() {
            return $("#page-toolbar .handle").trigger(clicktype),
            !1
        }),
        Mousetrap.bind("N p", function() {
            window.Jukebox.playlist.each(function(e) {
                e.stop()
            })
        }),
        $(document).on("click", "#update-warning", ()=>$("#update-warning").hide()))
    }),
    $(function() {
        if (window.is_gm) {
            var e = !1;
            $("body").on("drop", function(e) {
                return console.log("Body drop!"),
                d20.engine.marketplaceDrop.lastDrop && d20.engine.marketplaceDrop.doDrop(e.originalEvent.pageX, e.originalEvent.pageY),
                !1
            }),
            $("#finalcanvas").dndUploader("init", {
                url: d20.library.libraryBase + "/image_library/newupload",
                method: "POST",
                allowMultiple: !0
            }),
            $("#finalcanvas").bind("uploadstarted", function() {
                console.log("uploadstarted EVENT"),
                e || (e = $("<div class='dialog' id='uploaddialog'><p class='status'>Uploading file, this may take a few minutes depending on the speed of your connection, please wait...</p><p><div class='progress progress-striped active'><div class='bar' style='width: 0%; height: 100%; background-color: #404040;'></div></div></p></div>")).dialog({
                    title: "Uploading...",
                    modal: !0,
                    zIndex: 10500
                })
            }),
            $("#finalcanvas").bind("uploadprogress", function(t, n) {
                e.find(".bar").css({
                    width: parseInt(n, 10) + "%"
                })
            }),
            $("#finalcanvas").bind("uploadcanceled uploadfailed", function() {
                e.dialog("destroy").remove(),
                e = !1,
                alert("Your upload failed. Your file may be too large (only files up to " + (!0 === window.largefeats ? "10" : "5") + " MB are accepted), or your connection may have been interrupted. Please try again.")
            }),
            $("#finalcanvas").bind("uploadcomplete", function(t, n) {
                if (t.stopPropagation(),
                "overquota" == n)
                    return e.dialog("destroy").remove(),
                    e = !1,
                    d20.utils.showOverQuota(),
                    !1;
                if ("badpdfconvert" == n)
                    return e.dialog("destroy").remove(),
                    e = !1,
                    d20.utils.showBadConvert(),
                    !1;
                e && (e.dialog("destroy").remove(),
                e = !1);
                var i = n;
                if (add_token_to_canvas(t, i, "file"),
                i) {
                    const e = i.base.replace("/original.", "/med.") + "?" + Math.floor((new Date).getTime() / 1e3)
                      , t = d20.utils.isVideo(e)
                      , n = t ? e : e.replace("/med.", "/thumb.")
                      , o = t ? e : e.replace("/med.", "/max.");
                    $("#recentuploads .dd-list").prepend("<li class='dd-item library-item draggableresult' data-fullsizeurl='" + o + "' data-imageid='" + i.imageid + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + n + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + i.filename + "</div></div></div></li>"),
                    $("#imagedialog #recentuploads .draggableresult").not(".ui-draggable").draggable({
                        handle: ".namecontainer",
                        revert: !0,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body"
                    }).addTouch()
                }
            })
        }
    }),
    $(function() {
        $(".standard_slider").each(function() {
            var e = $("" + $(this).attr("data-target"))
              , t = $(this);
            $(this).slider({
                value: e.val(),
                min: parseInt($(this).attr("data-min")),
                max: parseInt($(this).attr("data-max")),
                step: parseInt($(this).attr("data-step")),
                slide: function(t, n) {
                    e.val(n.value).trigger("change")
                }
            }),
            e.bind("keyup", function() {
                t.slider("value", e.val())
            })
        })
    }),
    $(function() {
        var e = !1
          , t = function(t) {
            if (!t || t.target == window) {
                console.log("window resize"),
                $("#editor-wrapper").addClass("noshow"),
                $(".canvas-container").css({
                    left: "0px",
                    top: "0px"
                });
                var n = $("body").hasClass("sidebarhidden") ? 0 : $("#rightsidebar").outerWidth();
                $("#editor-wrapper, #loading-overlay, #playerzone").css({
                    width: $(window).width() - n + "px"
                }),
                $("#secondary-toolbar").css({
                    "max-width": $("#editor-wrapper").width() - 90 + "px"
                }),
                $("#page-toolbar .handle").css({
                    right: n + 25 + "px"
                }),
                $("#zoomslider").css({
                    right: n + 34 + "px"
                }),
                $("#sidebarcontrol").css({
                    right: n + "px"
                }),
                $("#showndecks").css({
                    right: n + 35 + "px",
                    "max-height": $(window).height() - $("#playerzone").height() - $("#macrobar").height() - 60 + "px",
                    bottom: $("#playerzone .player").height() + $("#macrobar").height() + 25 + "px"
                }),
                d20.tutorial && d20.tutorial.active && $("#tutorial-toc").css({
                    right: n + 60 + "px"
                });
                var i = $("#editor-wrapper");
                newwidth = i[0].clientWidth,
                newheight = i[0].clientHeight,
                d20.engine.setCanvasSize(newwidth, newheight),
                $("#rightsidebar .ui-tabs-panel").css("height", $(window).height() - 40 + "px"),
                $("#textchat").css("height", $(window).height() - 165 + "px"),
                d20.tddice && d20.tddice.updateRendererSize && d20.tddice.updateRendererSize(),
                e && clearTimeout(e),
                e = setTimeout(function() {
                    $("#editor-wrapper").removeClass("noshow"),
                    e = !1
                }, 150)
            }
        };
        $(window).bind("resize", t),
        t(),
        window.allChildWindows = [],
        window.onbeforeunload = function(e) {
            window.allChildWindows.forEach(function(t) {
                try {
                    t.close()
                } catch (e) {
                    console.log(e)
                }
            })
        }
        ,
        $("#exitroll20game").on("click", function() {
            window.location = "/campaigns/exit_landing/" + window.campaign_id
        })
    }),
    $(document).on("click", "a", d20.utils.handleURL),
    $(document).lightly(),
    $("#editor-wrapper").on("click", function(e) {
        e.altKey && e.preventDefault()
    }),
    $("body").on("dblclick", ".ui-dialog-titlebar", function() {
        var e = $(this).parents(".ui-dialog");
        if (e.hasClass("dialog-collapsed")) {
            var t = e.position().top - 7 + "/" + (e.position().left - 38);
            if ((i = e.attr("data-prevpos")) !== undefined) {
                var n = i.split("/");
                e.css("top", n[0] + "px").css("left", n[1] + "px")
            }
            e.attr("data-prevpos", t),
            e.removeClass("dialog-collapsed")
        } else {
            var i;
            t = e.position().top + "/" + e.position().left;
            if ((i = e.attr("data-prevpos")) !== undefined) {
                n = i.split("/");
                e.css("top", n[0] + "px").css("left", n[1] + "px")
            }
            e.attr("data-prevpos", t),
            e.addClass("dialog-collapsed")
        }
    }),
    window.is_mobile && $("body").addTouchLive(".ui-dialog-titlebar"),
    $("body").on("click", "#openchatarchive", function() {
        window.open("/campaigns/chatarchive/" + window.campaign_id)
    }),
    d20.jukebox = {
        possibletags: [],
        playlistCurrentIdx: 0,
        playedPlaylistOnce: !1,
        sharedPlaylistSeed: 0,
        randomizer: {},
        lastFolderStructure: []
    },
    $(function() {
        $("#globalvolume").slider({
            value: 100
        }),
        $("#globalvolume").on("slidechange", function() {
            window.currentPlayer.save({
                globalvolume: $(this).slider("value")
            })
        }),
        $("#jukebox .superadd").popover({
            my: "right top",
            at: "right bottom"
        });
        $.jqotec("#tmpl_jukeboxfoldertitle");
        var e = $("#jukebox")
          , t = $("#jukeboxmenu")
          , n = $("#jukeboxitemmenu")
          , i = !1;
        const o = e=>{
            let t = !1;
            switch (e) {
            case "Tabletop Audio":
                t = "ttaudio";
                break;
            case "Battlebards":
                t = "battlebards";
                break;
            case "Incompetech":
                t = "incompetech";
                break;
            case "My Audio":
            default:
                t = !1
            }
            return t
        }
        ;
        d20.jukebox.refreshJukeboxList = function() {
            $(".jukeboxTip").remove();
            var t = "<h4>Now Playing</h4>"
              , n = 0;
            if (JSON.parse(d20.Campaign.get("jukeboxplaylistsactive")).forEach(e=>{
                if (console.log(e),
                "a" == e.playstyle) {
                    var i = [];
                    e.trackids.forEach(e=>{
                        var t = window.Jukebox.playlist.get(e);
                        t.get("playing") && i.push(t.get("title"))
                    }
                    ),
                    e.simultracks = i,
                    e.tracktitle = "",
                    e.volume = 0
                } else {
                    var r = window.Jukebox.playlist.find(t=>t.get("activeinlist") == e.id && t.get("playing"));
                    r ? (e.tracktitle = r.get("title"),
                    e.volume = r.get("volume"),
                    e.progress = r.progress || 0,
                    e.prettyPosition = r.prettyPosition || 0,
                    e.prettyDuration = r.prettyDuration || 0,
                    e.bucket = o(r.get("source")),
                    e.track_id = r.get("track_id"),
                    "My Audio" == r.get("source") ? e.storagekey = r.get("storagekey") : e.storagekey = !1) : (e.tracktitle = "",
                    e.volume = 0,
                    e.progress = 0,
                    e.prettyPosition = "00:00",
                    e.prettyDuration = "00:00",
                    e.bucket = !1,
                    e.track_id = "",
                    e.storagekey = !1)
                }
                t += $("#tmpl_jukeboxplaylistplaying").jqote(e),
                n++
            }
            ),
            window.Jukebox.playlist.each(function(e) {
                if (1 == e.get("playing") && !e.get("softstop") && !e.get("activeinlist")) {
                    console.log(e);
                    var i = e.toJSON();
                    i.progress = e.progress,
                    i.prettyDuration = e.prettyDuration,
                    i.prettyPosition = e.prettyPosition,
                    i.bucket = o(e.get("source")),
                    "My Audio" == e.get("source") ? i.storagekey = e.get("storagekey") : i.storagekey = !1,
                    t += $("#tmpl_jukeboxwhatsplaying").jqote(i),
                    n++
                }
            }),
            0 == n && (t += "<div class='playingitem'><em style='color: #777;'>Nothing, currently.</em></div>"),
            e.find("#jukeboxwhatsplaying").html(t),
            window.is_gm) {
                t = "",
                console.log("Refresh jukebox List!");
                var i, r, a = [];
                i = a.length > 0 ? (a.val() + "").toLowerCase().split(" ") : [""];
                var s = d20.Campaign.get("jukeboxfolder");
                if ("" === s)
                    r = [],
                    window.Jukebox.playlist.each(function(e) {
                        r.push(e.id)
                    });
                else {
                    r = JSON.parse(s);
                    (new Date).getTime();
                    var l = [];
                    window.Jukebox.playlist.each(function(e) {
                        if (-1 !== s.indexOf(e.id))
                            return !0;
                        l.push(e.toJSON())
                    }),
                    _.each(l, function(e) {
                        r.push(e.id)
                    })
                }
                d20.jukebox.lastFolderStructure = r;
                var c = [];
                window.currentPlayer !== undefined && "" !== window.currentPlayer.get("jukeboxfolderstatus") && (c = window.currentPlayer.get("jukeboxfolderstatus").split(","));
                var u = function(e) {
                    var n, o = e.id !== undefined && -1 !== c.indexOf(e.id + ""), r = e.n ? e.n : "";
                    n = e.i ? e.i : e;
                    var a = !1
                      , s = window.is_gm ? "dd-sortablehandle" : "dd-unsortable"
                      , l = function() {
                        e.i && (t += '<li class="dd-item dd-folder" data-globalfolderid="' + e.id + '">',
                        t += o ? '<button data-action="collapse" type="button" style="display: none;" class="' + s + '">Collapse</button><button data-action="expand" type="button" style="display: block;" class="dd-sortablehandle">Expand</button>' : '<button data-action="collapse" type="button" style="display: block;" class="' + s + '">Collapse</button><button data-action="expand" type="button" style="display: none;" class="dd-sortablehandle">Expand</button>',
                        t += '<div class="dd-handle ' + s + '">Drag</div><div class="dd-content"><div class="folder-title">' + d20ext.utils.strip_tags(e.n) + "</div>",
                        e.activeplaylists = JSON.parse(d20.Campaign.get("jukeboxplaylistsactive")),
                        e.activeplaylists || (d20.Campaign.set({
                            jukeboxplaylistsactive: "[]"
                        }),
                        e.activeplaylists = JSON.parse(d20.Campaign.get("jukeboxplaylistsactive"))),
                        t += $("#tmpl_jukeboxfoldertitle").jqote(e),
                        t += "</div>"),
                        t += o ? '<ol class="dd-list" style="display: none;">' : '<ol class="dd-list">',
                        a = !0
                    }
                      , d = [];
                    _.each(n, function(e) {
                        var n = !1;
                        if (null === e)
                            return !0;
                        if ("object" == typeof e) {
                            var o = t + ""
                              , s = !!a;
                            a || l(),
                            u(e) || window.is_gm || (s || (a = !1),
                            t = o),
                            o = null
                        } else {
                            var c, h = e;
                            if (!(c = window.Jukebox.playlist.get(h)))
                                return !0;
                            var p = c.get("playing");
                            if (window.is_gm || p) {
                                if (window.is_gm) {
                                    for (var f = 0; f < i.length; f++)
                                        "" != i[f] && -1 === c.get("title").toLowerCase().indexOf(i[f]) && -1 === c.get("tags").toLowerCase().indexOf(i[f]) && -1 === r.toLowerCase().indexOf(i[f]) && (n = !0);
                                    for (var g = c.tagsArray(), m = 0; m < g.length; m++)
                                        d20.jukebox.possibletags[g[m]] === undefined ? d20.jukebox.possibletags[g[m]] = {
                                            tag: g[m],
                                            count: 1
                                        } : d20.jukebox.possibletags[g[m]].count++
                                }
                                a || l();
                                var y = c.toJSON();
                                y.hidden = n,
                                d.push(y.id),
                                t += $("#tmpl_jukeboxfolderitem").jqote(y)
                            }
                        }
                    });
                    var h = d20.Campaign.getActivePlaylistByID(e.id);
                    if (h) {
                        var p = h.trackids[h.playingidx];
                        h.trackids = d;
                        var f = h.trackids.findIndex(p);
                        if (-1 !== f)
                            h.playingidx = f;
                        else {
                            h.playingidx = f,
                            d20.Campaign.stopPlaylistByID(h.id);
                            var g = window.Jukebox.playlist.get(p);
                            g && g.stop()
                        }
                        d20.Campaign.updateActivePlaylist(h)
                    }
                    return window.is_gm && !a && l(),
                    a && (0 === n.length && (t += "<li class='dd-item dd-item-dummy'><div class='dd-content'></div></li>"),
                    t += "</ol>",
                    e.i && (t += "</li>")),
                    a
                };
                if (u(r),
                e.find("#jukeboxfolderroot").html(t),
                window.Jukebox.playlist.each(function(t) {
                    e.find("#jukeboxfolderroot .jukeboxitem[data-itemid=" + t.id + "] .slider").val(100 * Math.pow(t.get("volume") / 100, .5))
                }),
                window.Jukebox.playlist.length > 0 && e.find("#jukebox").find(".instructions").remove(),
                window.is_gm && ($deprecatedItems = e.find("#jukeboxfolderroot").find(".soundcloud-deprecated"),
                $deprecatedItems.length > 0)) {
                    function d() {
                        confirm(i18n("jukebox_remove_deprecated_confirm")) && (_.each($deprecatedItems, function(e) {
                            var t = $(e).attr("data-itemid")
                              , n = window.Jukebox.playlist.get(t);
                            n && n.destroy()
                        }),
                        $removeContainer.hide())
                    }
                    $removeContainer = e.find("#jukeboxremovedeprecated"),
                    $removeContainer.show(),
                    $removebtn = $removeContainer.find("#remove_deprecated_button"),
                    $removebtn.off(mousedowntype).on(mousedowntype, d)
                }
                window.is_gm && (i.length > 1 || "" !== i[0]) && e.find("#jukeboxfolderroot .dd-list").each(function() {
                    0 === $(this).find(".dd-item").not(".dd-item-hidden, .dd-item-dummy").length && $(this).parent("li").hide()
                })
            }
        }
        ,
        window.is_gm && (e.find("#jukeboxfolderroot").on("change", function() {
            var t = e.find("#jukeboxfolderroot").nestable("serialize");
            t && d20.Campaign.save({
                jukeboxfolder: JSON.stringify(t)
            })
        }),
        e.find("#jukeboxfolderroot").on("click", ".exportplaylist", function() {
            let e = $(this).parents(".dd-content").find(".folder-title").text()
              , t = _.map($(this).parents(".dd-content").siblings(".dd-list").find(".jukeboxitem"), e=>window.Jukebox.playlist.get($(e).attr("data-itemid")))
              , n = [];
            t.forEach(e=>{
                let t = {};
                switch (e.attributes.source) {
                case "My Audio":
                    t.tags = "";
                    break;
                case "Battlebards":
                    t.tags = Object.values(BATTLEBARDS).find(t=>t[1] == e.attributes.track_id.replace(/-(\d|#)*$/, ""))[2];
                    break;
                case "Tabletop Audio":
                    t.tags = Object.values(TTAUDIO).find(t=>t[1] == e.attributes.track_id.replace(/-(\d|#)*$/, ""))[2];
                    break;
                case "Incompetech":
                    t.tags = Object.values(INCOMPETECH).find(t=>t[1] == e.attributes.track_id.replace(/-(\d|#)*$/, "") || t[1] == decodeURI(e.attributes.track_id.replace(/-(\d|#)*$/, "")))[2];
                    break;
                default:
                    t = !1
                }
                t && (t.title = e.attributes.title,
                t.id = e.attributes.track_id,
                t.source = e.attributes.source,
                n.push(t))
            }
            ),
            n.length && confirm('Add playlist "' + e + '" to your Library?') && $.post("/audio_library/exportlist", {
                listname: e,
                tracks: n
            }, ()=>{
                console.log("New Playlist Added"),
                $("#myplaylists_select").length && window.Jukebox.searchView.$el.trigger("myaudio:update")
            }
            )
        }),
        e.find("#jukeboxfolderroot").on("click", ".playstyle:not(.playstyle-disabled)", function() {
            switch ($(this).attr("data-val")) {
            case "s":
                $(this).attr("data-val", "a");
                break;
            case "a":
                $(this).attr("data-val", "o");
                break;
            case "o":
                $(this).attr("data-val", "b");
                break;
            default:
                $(this).attr("data-val", "s")
            }
            e.find("#jukeboxfolderroot").trigger("change")
        }));
        var r, a = function(e, t, n) {
            return n > 99 ? undefined : (_.each(e, function(e) {
                if (e && "object" == typeof e && e.id === t)
                    i = e;
                else if (e && "object" == typeof e && e.i !== undefined) {
                    var o = a(e.i, t, n + 1);
                    o !== undefined && (i = o)
                }
                if (i)
                    return !1
            }),
            i);
            var i
        };
        d20.jukebox.addItemToFolderStructure = function(e, t) {
            var n = d20.Campaign.get("jukeboxfolder");
            if ("" !== n) {
                var i = JSON.parse(n);
                if (t && "root" !== t) {
                    var o = a(i, t, 0);
                    if (o === undefined || o.i === undefined)
                        return void console.log("ERROR: Could not find folder container for folder id " + t);
                    folderitems = o.i
                } else
                    folderitems = i;
                folderitems.unshift(e),
                d20.Campaign.save({
                    jukeboxfolder: JSON.stringify(i)
                })
            }
        }
        ,
        d20.jukebox.addFolderToFolderStructure = function(t, n) {
            var i = d20.Campaign.get("jukeboxfolder");
            "" === i && (e.find("#jukeboxfolderroot").trigger("change"),
            i = d20.Campaign.get("jukeboxfolder"));
            var o = JSON.parse(i);
            if (n && "root" !== n) {
                var r = a(o, n, 0);
                if (r === undefined || r.i === undefined)
                    return void console.log("ERROR: Could not find folder container for folder id " + n);
                folderitems = r.i
            } else {
                folderitems = o;
                var s = generateUUID()
            }
            return folderitems.unshift({
                n: t,
                i: [],
                id: s,
                s: "s"
            }),
            d20.Campaign.save({
                jukeboxfolder: JSON.stringify(o)
            }),
            s
        }
        ,
        e.find("#addnewjukeboxfolder").on("click", function() {
            var t = prompt("What do you want to call the new folder?");
            null != t && (d20.jukebox.addFolderToFolderStructure(t),
            e.find("#jukebox").trigger("click"))
        });
        var s = e=>{
            var t = window.Jukebox.playlist.get(e);
            t.get("fadein") ? n.find("li[data-action-type=fadein]").addClass("active") : n.find("li[data-action-type=fadein]").removeClass("active"),
            t.get("fadeout") ? n.find("li[data-action-type=fadeout]").addClass("active") : n.find("li[data-action-type=fadeout]").removeClass("active")
        }
        ;
        e.find("#jukeboxfolderroot").on("click", ".jukeboxitem-menu", function() {
            window.is_gm && ($parent = $(this).parents(".jukeboxitem"),
            $parent.hasClass("dd-item") && (n.show(),
            n.show(),
            n.css({
                top: $(this).offset().top + $(this).height() + "px",
                left: $(this).offset().left - n.width() + 5 + "px"
            }),
            $currentItemTarget = $parent,
            s($currentItemTarget.attr("data-itemid"))))
        }),
        e.find("#jukeboxfolderroot").on("contextmenu", ".dd-content", function(e) {
            console.log($(this).parent()),
            window.is_gm && ($(this).parent().hasClass("dd-folder") ? (t.show(),
            t.css({
                top: c(e, t) + "px",
                left: u(e, t) + "px"
            }),
            r = $(this).parent()) : $(this).parent().hasClass("dd-item") && (n.show(),
            n.css({
                top: c(e, n) + "px",
                left: u(e, n) + "px"
            }),
            $currentItemTarget = $(this).parent(),
            s($currentItemTarget.attr("data-itemid"))),
            e.preventDefault(),
            e.stopPropagation())
        }),
        t.on(mousedowntype, function() {
            return !1
        }),
        t.find("ul").on(mousedowntype, "li[data-action-type=deletefolder]", function() {
            confirm("Are you sure you want to delete this playlist? All items in it will be moved to the root folder.") && (r.remove(),
            e.find("#jukeboxfolderroot").trigger("change")),
            t.hide()
        }),
        t.find("ul").on(mousedowntype, "li[data-action-type=deletefolderpropagate]", function() {
            if (confirm("Are you sure you want to delete this playlist and remove all included tracks from your game?")) {
                if (r.attr("data-globalfolderid")) {
                    let e = r.find(".jukeboxitem");
                    _.each(e, e=>{
                        var t = window.Jukebox.playlist.get($(e).attr("data-itemid"));
                        t && t.destroy()
                    }
                    )
                } else
                    console.warn("Did not find playlist id! Removing from folder structure.");
                r.remove(),
                e.find("#jukeboxfolderroot").trigger("change")
            }
            t.hide()
        }),
        t.find("ul").on(mousedowntype, "li[data-action-type=addfolder]", function() {
            var e = prompt("What do you want to call the new playlist?");
            if (null != e) {
                var n = r.attr("data-globalfolderid");
                n ? (t.hide(),
                d20.jukebox.addFolderToFolderStructure(e, n)) : console.warn("Did not find folder id")
            }
        }),
        t.find("ul").on(mousedowntype, "li[data-action-type=renamefolder]", function() {
            var n = prompt("What do you want to rename the folder to?");
            if (null != n) {
                var i = r.attr("data-globalfolderid");
                if (i) {
                    t.hide();
                    var o = d20.Campaign.get("jukeboxfolder");
                    "" === o && (e.find("#jukeboxfolderroot").trigger("change"),
                    o = d20.Campaign.get("jukeboxfolder"));
                    var s = JSON.parse(o)
                      , l = a(s, i);
                    l && (l.n = n),
                    d20.Campaign.save({
                        jukeboxfolder: JSON.stringify(s)
                    })
                } else
                    console.warn("Did not find folder id")
            }
        });
        var l = function(t) {
            var n = d20.Campaign.get("jukeboxfolder");
            "" === n && (e.find("#jukeboxfolderroot").trigger("change"),
            n = d20.Campaign.get("jukeboxfolder"));
            var i = JSON.parse(n)
              , o = a(i, t);
            o && (o.i = _.sortBy(o.i, function(e) {
                if (e && "object" == typeof e && e.n !== undefined)
                    return e.n;
                if ("string" == typeof e) {
                    var t = window.Jukebox.playlist.get(e);
                    return t ? t.get("title") : "ZZZZZZ"
                }
            })),
            d20.Campaign.save({
                jukeboxfolder: JSON.stringify(i)
            })
        }
          , c = function(e, t) {
            var n = e.pageY;
            return n + t.height() > window.innerHeight && (n = window.innerHeight - t.height()),
            n
        }
          , u = function(e, t) {
            var n = e.pageX;
            return n + t.width() > window.innerWidth && (n = window.innerWidth - t.width()),
            n
        };
        d20ext.sortRootJukeboxFolderAlpha = function() {
            var t = d20.Campaign.get("jukeboxfolder");
            "" === t && (e.find("#jukeboxfolderroot").trigger("change"),
            t = d20.Campaign.get("jukeboxfolder"));
            var n = JSON.parse(t);
            n = _.sortBy(n, function(e) {
                if (e && "object" == typeof e && e.n !== undefined)
                    return e.n;
                if ("string" == typeof e) {
                    var t = window.Jukebox.playlist.get(e);
                    return t ? t.get("title") : "ZZZZZZ"
                }
            }),
            d20.Campaign.save({
                jukeboxfolder: JSON.stringify(n)
            })
        }
        ,
        e.find("#sortrootjukeboxalpha").on("click", function() {
            confirm("Sort all root-level Jukebox tracks and playlists alphabetically?") && d20ext.sortRootJukeboxFolderAlpha()
        }),
        t.find("ul").on(mousedowntype, "li[data-action-type=sortalpha]", function() {
            var e = r.attr("data-globalfolderid");
            e ? (t.hide(),
            l(e)) : console.log("Did not find folder id")
        }),
        n.find("ul").on(mousedowntype, "li[data-action-type=deleteitem]", function() {
            var e = $currentItemTarget.attr("data-itemid")
              , t = window.Jukebox.playlist.get(e);
            t && t.destroy()
        }),
        n.find("ul").on(mousedowntype, "li[data-action-type=fadein]", function() {
            var e = $currentItemTarget.attr("data-itemid")
              , t = window.Jukebox.playlist.get(e);
            console.log("Fade In pressed on item: ", t),
            t.set({
                fadein: !t.get("fadein")
            }).save()
        }),
        n.find("ul").on(mousedowntype, "li[data-action-type=fadeout]", function() {
            var e = $currentItemTarget.attr("data-itemid")
              , t = window.Jukebox.playlist.get(e);
            console.log("Fade Out pressed on item: ", t),
            t.set({
                fadeout: !t.get("fadeout")
            }).save()
        }),
        t.length > 0 && $("body").on(mousedowntype, function() {
            "none" !== t[0].style.display && (t[0].style.display = "none"),
            "none" !== n[0].style.display && (n[0].style.display = "none")
        }),
        e.find("#jukeboxfolderroot").on("folderstatuschange", function() {
            var t = [];
            e.find("#jukeboxfolderroot").find(".dd-folder").each(function() {
                $(this).find("> .dd-list").is(":visible") || t.push($(this).attr("data-globalfolderid"))
            }),
            window.currentPlayer.save({
                jukeboxfolderstatus: t.join(",")
            })
        }),
        e.find("#jukeboxfolderroot").nestable({
            allowNestedFolders: !1
        }),
        d20.jukebox.stopAllTracks = function() {
            window.is_gm && (window.Jukebox.playlist.each(function(e) {
                1 == e.get("playing") && e.stop()
            }),
            d20.Campaign.save({
                jukeboxplaylistplaying: !1
            }))
        }
        ,
        d20.jukebox.showPopout = function() {
            if (!0 !== i) {
                var e = $("#jukebox")
                  , o = e.parent();
                d20.jukebox.childWindow = window.open("/editor/popoutjukebox", "JukeboxPopout", "menubar=0,location=0,toolbar=0,status=0,scrollbars=1,width=300,height=800"),
                window.allChildWindows.push(d20.jukebox.childWindow),
                d20.jukebox.childWindow.onload = function() {
                    i = !0,
                    e.appendTo(d20.jukebox.childWindow.document.getElementById("containerdiv")),
                    t.appendTo(d20.jukebox.childWindow.document.body),
                    n.appendTo(d20.jukebox.childWindow.document.body),
                    $(d20.jukebox.childWindow.document.body).on(mousedowntype, function() {
                        "none" !== t[0].style.display && (t[0].style.display = "none"),
                        "none" !== n[0].style.display && (n[0].style.display = "none"),
                        "none" !== $(d20.jukebox.childWindow.document.body).find("#superjukeboxadd")[0].style.display && ($(d20.jukebox.childWindow.document.body).find("#superjukeboxadd")[0].style.display = "none")
                    }),
                    $(d20.jukebox.childWindow.document.body).find("#addjukebox").on(mousedowntype, function(e) {
                        e.stopPropagation()
                    }),
                    $(d20.jukebox.childWindow.document.body).find("#addnewjukeboxfolder").on(mousedowntype, function(e) {
                        e.stopPropagation()
                    }),
                    d20.jukebox.childWindow.document.title = "Roll20 Jukebox",
                    console.log("Re-bind nestable"),
                    console.log($(d20.jukebox.childWindow.document.getElementById("jukeboxfolderroot")));
                    var o = $(d20.jukebox.childWindow.document.getElementById("jukeboxfolderroot"));
                    o.removeData("nestable"),
                    o.nestable({
                        allowNestedFolders: !1,
                        localdoc: d20.jukebox.childWindow.document
                    }),
                    popoutWindowIsFocused = !0,
                    d20.jukebox.refreshJukeboxList()
                }
                ,
                d20.jukebox.childWindow.onbeforeunload = function() {
                    i = !1,
                    setTimeout(function() {
                        $("#rightsidebar").find("a[href=#jukebox]").trigger("click")
                    }, 100),
                    e.appendTo(o),
                    t.appendTo($("body")),
                    n.appendTo($("body")),
                    window.allChildWindows = _.without(window.allChildWindows, d20.jukebox.childWindow),
                    popoutWindowIsFocused = !1,
                    d20.jukebox.childWindow = null
                }
                ,
                $(d20.jukebox.childWindow).bind("focus", function() {
                    popoutWindowIsFocused = !0
                }),
                $(d20.jukebox.childWindow).bind("blur", function() {
                    popoutWindowIsFocused = !1
                })
            }
        }
        ,
        $("#jukeboxtab").on("dblclick", function() {
            d20.jukebox.showPopout()
        })
    }),
    d20.decks = {},
    $(function() {
        d20.decks.cardByID = function(e) {
            var t = !1;
            return d20.Campaign.decks.each(function(n) {
                var i = n.cards.get(e);
                if (i)
                    return t = i,
                    !1
            }),
            t
        }
        ,
        d20.decks.doRefreshDecksList = function() {
            $("#existingdecks tbody").html(""),
            d20.Campaign.decks.each(function(e) {
                if (!window.is_gm && !e.get("showplayers"))
                    return !0;
                $("#existingdecks tbody").append($("#tmpl_existingdecks").jqote(e))
            })
        }
        ,
        d20.decks.refreshDiscardPiles = function() {
            d20.Campaign.decks.each(function(e) {
                if (!window.is_gm && !e.get("showplayers"))
                    return !0;
                e.discardpile.$el.is(":visible") && e.updateDiscardPile()
            })
        }
        ,
        d20.decks.refreshDecksList = _.debounce(d20.decks.doRefreshDecksList, 100);
        var e = function(e, t, n) {
            var i = e.get("currentIndex");
            if (t < 1 || t > 100)
                alert("You must draw between 1 and 100 cards at a time.");
            else {
                for (var o = 0; o < t; o++) {
                    var r = e.drawCard(i)
                      , a = e.cardAtIndex(r);
                    if (!a)
                        return e.finishDrawingCard(i, !0),
                        void alert("Ran out of cards in deck before drawing all cards!");
                    i = r,
                    d20.Campaign.hands.addCardToHandForPlayer(a, n),
                    console.log("Deck index is now: " + i)
                }
                console.log("Setting deck index to: " + i),
                e.finishDrawingCard(i, !0)
            }
        };
        $("#adddeck").bind("click", function() {
            if (window.is_gm)
                d20.Campaign.decks.create({
                    name: "New Deck"
                })
        }),
        $("#existingdecks").on("click", ".deck", function() {
            if (window.is_gm) {
                var e = $(this).attr("data-deckid")
                  , t = d20.Campaign.decks.get(e);
                t && t.editor.showDialog()
            }
        }),
        $("#existingdecks").on("click", ".toggledeck", function(e) {
            var t = $(this).parents(".deck").attr("data-deckid")
              , n = d20.Campaign.decks.get(t);
            n && (n.get("shown") ? (n.stack.hideDeck(),
            $(this).text("Show"),
            e.stopPropagation()) : (n.stack.showDeck(),
            $(this).text("Hide"),
            e.stopPropagation()))
        }),
        $("#showndecks").on("click", ".drawable .nextcard", function(t) {
            var n = $(this)
              , i = $(this).parents(".deckstack").attr("data-deckid");
            $(".tipsy").remove();
            var o = d20.Campaign.decks.get(i);
            if (o)
                if (t.shiftKey)
                    e(o, 1, window.currentPlayer);
                else {
                    var r = o.drawCard();
                    n.find(".back img").attr("src", o.imageForCardAtIndex(r)),
                    n.addClass("flipped"),
                    setTimeout(function() {
                        n.addClass("postflip"),
                        setTimeout(function() {
                            o.finishDrawingCard(r)
                        }, 450)
                    }, 450)
                }
            else
                alert("ERROR: Unable to locate deck!")
        }),
        $("#showndecks").on("click", ".shuffle", function() {
            var e = $(this).parents(".deckstack").attr("data-deckid")
              , t = d20.Campaign.decks.get(e);
            if (t) {
                var n = t.cards.length
                  , i = _.keys(t.findCardsInPlay()).length;
                $("<div><p>Are you sure you want to shuffle the deck?</p>" + (i != n || t.get("infinitecards") ? "" : "<p class='alert alert-danger'>All cards are in play, there are no cards to shuffle!</p>") + "</div>").dialog({
                    modal: !0,
                    title: "Shuffle Deck?",
                    buttons: {
                        Shuffle: function() {
                            t.shuffle(),
                            $(this).dialog("destroy").remove()
                        },
                        Cancel: function() {
                            $(this).dialog("destroy").remove()
                        }
                    },
                    beforeClose: function() {
                        $(this).dialog("destroy").remove()
                    }
                })
            } else
                alert("ERROR: Unable to locate deck!")
        }),
        $("#showndecks").on("click", ".recall", function() {
            var e = $(this).parents(".deckstack").attr("data-deckid")
              , t = d20.Campaign.decks.get(e);
            if (t) {
                var n = $("<div class='content'></div>");
                n.on("click", ".recall_playerhands", function() {
                    t.recallCards("hand"),
                    n.find(".shuffle").is(":checked") && t.shuffle(),
                    n.dialog("destroy")
                }),
                n.on("click", ".recall_table", function() {
                    t.recallCards("graphic"),
                    n.find(".shuffle").is(":checked") && t.shuffle(),
                    n.dialog("destroy")
                }),
                n.dialog({
                    title: i18n("recall_cards"),
                    modal: !0,
                    height: 350,
                    buttons: {
                        "Recall All": function() {
                            t.recallCards("all"),
                            n.find(".shuffle").is(":checked") && t.shuffle(),
                            n.dialog("destroy").remove()
                        },
                        Cancel: function() {
                            n.dialog("destroy").remove()
                        }
                    },
                    beforeClose: function() {
                        n.dialog("destroy").remove()
                    }
                }),
                n.html($("#tmpl_deckrecall").jqote(t.recallCount()))
            } else
                alert("ERROR: Unable to locate deck!")
        }),
        $("#showndecks").on("click", ".deal", function() {
            var e = $(this).parents(".deckstack").attr("data-deckid")
              , t = d20.Campaign.decks.get(e);
            if (t) {
                console.log(t);
                var n = $($("#tmpl_deckdeal").jqote(t)).dialog({
                    modal: !0,
                    title: i18n("deal_multiple_cards"),
                    width: 300,
                    buttons: {
                        Deal: function() {
                            var e, i = n.find(".toplayers").val() || "", o = parseInt(n.find(".numcards").val() || 0, 10), r = n.find("#dealToOffline").is(":checked");
                            t.save({
                                dealToOffline: r
                            }),
                            console.log(r);
                            var a = t.get("currentIndex");
                            if (o < 1 || o > 100)
                                alert(i18n("you_must_deal_cards"));
                            else if ((e = -1 !== _.indexOf(i, "all") ? r ? d20.Campaign.players.pluck("id") : d20.Campaign.players.filter(function(e) {
                                return e.get("online")
                            }).map(function(e) {
                                return e.id
                            }) : i).length < 1)
                                alert(i18n("you_must_deal_players"));
                            else {
                                for (var s = 0; s < e.length; s++)
                                    for (var l = d20.Campaign.players.get(e[s]), c = 0; c < o; c++) {
                                        var u = t.drawCard(a)
                                          , d = t.cardAtIndex(u);
                                        if (!d)
                                            return t.finishDrawingCard(a, !0),
                                            alert("Ran out of cards in deck before dealing cards to all players!"),
                                            void n.dialog("destroy").remove();
                                        a = u,
                                        d20.Campaign.hands.addCardToHandForPlayer(d, l),
                                        console.log("Deck index is now: " + a)
                                    }
                                console.log("Setting deck index to: " + a),
                                t.finishDrawingCard(a, !0),
                                n.dialog("destroy").remove()
                            }
                        },
                        Cancel: function() {
                            n.dialog("destroy").remove()
                        }
                    },
                    beforeClose: function() {
                        n.off(),
                        n.dialog("destroy").remove()
                    }
                });
                n.on("click", ".dealtoturn", function() {
                    var e = d20.Campaign.initiativewindow.cleanList()
                      , i = t.get("currentIndex");
                    e.length < 1 || e.length > 100 ? alert("There must be between 1 and 100 entries in the turn order to use this feature.") : (_.each(e, function(o, r) {
                        if (!o.formula) {
                            var a = t.drawCard(i)
                              , s = t.cardAtIndex(a);
                            if (!s)
                                return t.finishDrawingCard(i, !0),
                                alert("Ran out of cards in deck before dealing cards to all turns!"),
                                void n.dialog("destroy").remove();
                            i = a,
                            e[r].pr = s.getAbbreviation(),
                            console.log("Deck index is now: " + i)
                        }
                    }),
                    console.log("Setting deck index to: " + i),
                    t.finishDrawingCard(i, !0),
                    d20.Campaign.save({
                        turnorder: JSON.stringify(e)
                    }),
                    n.dialog("destroy").remove())
                }),
                n.find(".chosen").chosen()
            } else
                alert("ERROR: Unable to locate deck!")
        }),
        $("#showndecks").on("click", ".drawmultiple", function() {
            var t = $(this).parents(".deckstack").attr("data-deckid")
              , n = d20.Campaign.decks.get(t);
            if (n)
                var i = $($("#tmpl_deckdraw").jqote(n)).dialog({
                    modal: !0,
                    title: i18n("draw_multiple_cards"),
                    width: 300,
                    buttons: {
                        Draw: function() {
                            e(n, parseInt(i.find(".numcards").val(), 10), window.currentPlayer),
                            i.dialog("destroy").remove()
                        },
                        Cancel: function() {
                            i.dialog("destroy").remove()
                        }
                    },
                    beforeClose: function() {
                        i.dialog("destroy").remove()
                    }
                });
            else
                alert("ERROR: Unable to locate deck!")
        }),
        $("#showndecks").on("click", ".hidedeck", function() {
            var e = $(this).parents(".deckstack").attr("data-deckid");
            d20.Campaign.decks.get(e).stack.hideDeck()
        }),
        $("#showndecks").on("mouseup", ".currentcard", function(e) {
            e.preventDefault()
        }),
        $("#showndecks").on("click", ".discardpile", function() {
            var e = $(this).parents(".deckstack").attr("data-deckid")
              , t = d20.Campaign.decks.get(e);
            t ? t.discardpile.showDialog() : alert("ERROR: Unable to locate deck!")
        }),
        $("#showndecks").on("click", ".deckpile", function() {
            var e = $(this).parents(".deckstack").attr("data-deckid")
              , t = d20.Campaign.decks.get(e);
            t ? t.deckpile.showDialog() : alert("ERROR: Unable to locate deck!")
        }),
        d20.decks.appendAllHands = function() {
            d20.Campaign.hands.each(function(e) {
                "playerhand" == e.get("type") && $("#player_" + e.get("parentid")).find(".deckhands").append(e.view.$el)
            })
        }
        ,
        $("body").on("dragstart", ".draggablecard", function() {
            $(".tipsy").remove()
        }),
        $("#playerzone").on("click", ".cardinhand .steal", function() {
            var e = $(this).parents(".player")
              , t = $(this).parents(".cardinhand");
            if (t.hasClass("stealing"))
                return !1;
            t.addClass("stealing"),
            $(this).find("span").text(i18n("card_stealing"));
            var n = {
                time: (new Date).getTime(),
                type: "steal_request",
                handid: t.parents(".handcontainer").attr("data-handid"),
                requestedby: window.currentPlayer.id,
                cardid: t.attr("data-cardid"),
                targetplayer: e.attr("id").replace("player_", "")
            };
            d20.textchat.sendShout(n)
        }),
        d20.decks.steal_request = function(e) {
            if (window.currentPlayer && e.targetplayer == window.currentPlayer.id) {
                var t = $("#player_" + e.targetplayer).find(".handcontainer[data-handid=" + e.handid + "] .cardinhand[data-cardid=" + e.cardid + "]")[0];
                e.imgsrc = $(t).find("img").attr("src"),
                e.requester = d20.Campaign.players.get(e.requestedby).toJSON();
                $($("#tmpl_stealrequest").jqote(e)).dialog({
                    title: i18n("card_steal_request"),
                    width: 400,
                    buttons: [{
                        text: i18n("allow_card_steal"),
                        label: i18n("allow_card_steal"),
                        "class": "allowsteal",
                        click: function() {
                            var t = d20.Campaign.hands.get(e.handid)
                              , n = d20.decks.cardByID(e.cardid);
                            -1 != t.currentHandArray().indexOf(e.cardid) ? (t.removeCardsByID([n.id]),
                            d20.textchat.sendShout({
                                time: (new Date).getTime(),
                                type: "steal_response",
                                response: "granted",
                                handid: t.id,
                                cardid: n.id,
                                targetplayer: e.targetplayer,
                                requestedby: e.requestedby
                            }),
                            $(this).dialog("destroy").remove()) : $(this).parent().find("button.allowsteal").addClass("disabled").attr("title", i18n("card_missing"))
                        }
                    }, {
                        text: i18n("deny_card_steal"),
                        label: i18n("deny_card_steal"),
                        "class": "denysteal",
                        click: function() {
                            $(this).dialog("destroy").remove(),
                            d20.textchat.sendShout({
                                type: "steal_response",
                                response: "denied",
                                time: (new Date).getTime(),
                                handid: e.handid,
                                cardid: e.cardid,
                                targetplayer: e.targetplayer,
                                requestedby: e.requestedby
                            })
                        }
                    }],
                    beforeClose: function() {
                        $(this).dialog("destroy").remove()
                    }
                })
            }
        }
        ,
        d20.decks.steal_response = function(e) {
            if (window.currentPlayer && e.requestedby == window.currentPlayer.id && ("denied" === e.response && $("#player_" + e.targetplayer).find(".handcontainer[data-handid=" + e.handid + "] .cardinhand.stealing[data-cardid=" + e.cardid + "]").first().each(function() {
                $(this).find("span").text(i18n("card_steal_denied")),
                $(this).parents(".cardinhand").removeClass("stealing").addClass("stealdenied")
            }),
            "granted" === e.response)) {
                d20.Campaign.hands.get(e.handid);
                var t = d20.decks.cardByID(e.cardid);
                d20.Campaign.hands.addCardToHandForPlayer(t, window.currentPlayer)
            }
        }
    }),
    d20.rollabletables = {},
    d20.rollabletables.doRefreshTablesList = function() {
        $("#existingrollabletables tbody").html(""),
        d20.Campaign.rollabletables.each(function(e) {
            if (!window.is_gm && !e.get("showplayers"))
                return !0;
            $("#existingrollabletables tbody").append($("#tmpl_existingrollabletables").jqote(e))
        })
    }
    ,
    d20.rollabletables.refreshTablesList = _.debounce(d20.rollabletables.doRefreshTablesList, 100),
    $("#addrollabletable").bind("click", function() {
        window.is_gm && d20.Campaign.rollabletables.create()
    }),
    $("#existingrollabletables").on("click", ".rollabletable", function() {
        if (window.is_gm) {
            var e = $(this).attr("data-rollabletableid")
              , t = d20.Campaign.rollabletables.get(e);
            t && t.editor.showDialog()
        }
    }),
    $("#existingrollabletables").on("click", ".rolltable", function() {
        var e = $(this).parents(".rollabletable").attr("data-rollabletableid")
          , t = d20.Campaign.rollabletables.get(e);
        return t && d20.textchat.doChatInput("/roll 1t[" + t.get("name") + "]"),
        !1
    }),
    $("#existingrollabletables").on("click", ".tokentable", function() {
        var e = $(this).parents(".rollabletable").attr("data-rollabletableid")
          , t = d20.Campaign.rollabletables.get(e);
        if (t) {
            var n = d20.engine.currentCanvasOffset[0] + Math.floor(d20.engine.canvasWidth / 2)
              , i = d20.engine.currentCanvasOffset[1] + Math.floor(d20.engine.canvasHeight / 2);
            n > d20.engine.pageWidth / d20.engine.canvasZoom && (n = Math.floor(d20.engine.pageWidth / d20.engine.canvasZoom) - 70),
            i > d20.engine.pageHeight / d20.engine.canvasZoom && (i = Math.floor(d20.engine.pageHeight / d20.engine.canvasZoom) - 70),
            t.createToken(n, i)
        }
        return !1
    }),
    d20.getTableElementCount = function(e) {
        var t = d20.Campaign.rollabletables.findTableByName(e);
        if (t && (!0 === t.get("showplayers") || window.is_gm))
            return t.getWeightedArray().length;
        throw "No table found with that name!"
    }
    ,
    d20.getTableElementValue = function(e, t) {
        var n = d20.Campaign.rollabletables.findTableByName(e);
        if (n && (!0 === n.get("showplayers") || window.is_gm)) {
            var i = n.getWeightedArray();
            if (i[t] !== undefined) {
                var o = parseFloat(n.tableitems.get(i[t]).get("name"));
                return _.isFinite(o) ? o : 0
            }
        }
        return 0
    }
    ,
    d20.tddice = {
        sceneInitialized: !1,
        rendering: !1,
        rollid: !1,
        additionalRollQueue: {},
        allowClosingDice: !1,
        pauseRendering: !1,
        soundfx: []
    },
    $(function() {
        var e, t, n, i, o, r, a, s, l, c, u, d, h, geometries = {}, f = {}, materials = {}, m = $("#editor-wrapper"),
            y = document.getElementById("tdviewport"), v = [], b = 0, w = 0, x = 0, k = function () {
            return s.next()
        };
        d20.tddice.stopRendering = function() {
            console.log("STOP RENDERING"),
            d20.tddice.allowClosingDice = !1,
            d20.tddice.rendering = !1,
            d20.tddice.pauseRendering = !1,
            b = 0;
            for (var e = 0; e < v.length; e++)
                i.remove(v[e]),
                v[e].body && d20.tddice.world.remove(v[e].body),
                v[e] = null;
            v = [],
            d20.tddice.additionalRollQueue = {},
            x = 0,
            d20.tddice.rollid = !1,
            $(y).removeClass("open"),
            w = 0
        }
        ,
        d20.tddice.handleInteraction = function() {
            d20.tddice.allowClosingDice && d20.tddice.stopRendering()
        }
        ;
        var E, S = [], C = function(e, t, n) {
            var i = [];
            for (var o in e) {
                var r = T(t)
                  , a = {
                    x: -1 * t.x,
                    y: -1 * t.y,
                    z: 20
                }
                  , s = Math.abs(r.x / r.y);
                s > 1 ? a.y /= s : a.x *= s;
                var l = T(t)
                  , c = {
                    x: l.x * n,
                    y: l.y * n,
                    z: 10
                };
                minvel = 50,
                maxvel = 500,
                absx = Math.abs(c.x),
                absy = Math.abs(c.y),
                Math.max(absx, absy) < minvel && (absx >= absy ? c.x = c.x < 0 ? -1 * minvel : minvel : c.y = c.y < 0 ? -1 * minvel : minvel),
                Math.max(c.x, c.y) > maxvel && (c.x = c.x > maxvel ? maxvel : c.x,
                c.y = c.y > maxvel ? maxvel : c.y);
                var u = 12
                  , d = {
                    x: -(k() * r.y * 5 + u * r.y),
                    y: k() * r.x * 5 + u * r.x,
                    z: 0
                }
                  , h = {
                    x: k(),
                    y: k(),
                    z: k(),
                    a: k()
                };
                i.push({
                    pos: a,
                    velocity: c,
                    angle: d,
                    axis: h
                })
            }
            return i
        }, T = function(e) {
            var t = k() * Math.PI / 5 - Math.PI / 5 / 2
              , n = {
                x: e.x * Math.cos(t) - e.y * Math.sin(t),
                y: e.x * Math.sin(t) + e.y * Math.cos(t)
            };
            return n.x = e.x,
            n.y = e.y,
            0 == n.x && (n.x = .01),
            0 == n.y && (n.y = .01),
            n
        }, A = function(e, t) {
            e && (console.log("REDOING ALEA SEED"),
            s = Alea(e)),
            t && (l = t),
            d20.tddice.rendering || d20.tddice.startRendering();
            for (var n = l, i = Math.sqrt(n.x * n.x + n.y * n.y), o = (k() + 3.5) * i * .05, r = C(S, n, o), a = 0; a < S.length; a++)
                d20.tddice.createShape("d" + S[a].maxroll, r[a].pos, r[a].velocity, r[a].angle, r[a].axis, S[a].callback);
            new THREE.Color(+("0x" + c.replace("#", "")));
            S = []
        }, R = _.debounce(A, 10);
        d20.tddice.roller = function(e, t) {
            console.log("Roll d" + e),
                d20.tddice.rendering || 100 !== e && !geometries["d" + e] || b > 20 ? _.defer(function () {
                t(d20.textchat.diceengine.random(e) + 1)
            }) : (b++,
            c = window.currentPlayer.get("color"),
            S.push({
                maxroll: e,
                callback: t
            }),
            R())
        }
        ,
        d20.tddice.canRoll3D = function() {
            if (window.is_playerapp) {
                if (!window.currentPlayer.get("apptddiceenabled"))
                    return !1
            } else if (!window.currentPlayer.get("tddiceenabled"))
                return !1;
            return !!window.Detector.webgl
        }
        ,
        d20.tddice.doRemoteRoll = function(e, t) {
            x++,
            console.log("Executing sequence #" + e.s + " as " + x);
            for (var n = e.dice.split(","), i = 0; i < n.length; i++) {
                if (console.log(n[i]),
                "100" !== n[i] && !geometries["d" + n[i]])
                    return void console.log("NO GEOM FOR " + n[i]);
                S.push({
                    maxroll: n[i],
                    callback: !1,
                    player: e.player
                })
            }
            var o = d20.Campaign.players.get(e.player);
            c = o ? o.get("color") : "#A8A8A8",
            e.numcalcs && console.log("Expecting " + e.numcalcs + " calculations."),
            A(t ? e.seed : null, e.deltas)
        }
        ,
        d20.tddice.remoteRollQueue = {},
        d20.tddice.remoteRoll = function(e) {
            if (e.s !== undefined &&
                e.s > 1) {
                console.log("remote Roll!"),
                    d20.tddice.canRoll3D() &&
                    d20.tddice.remoteRollQueue[e.rollid] ? d20.tddice.remoteRollQueue[e.rollid].additionalrolls[e.s] = e : console.log("Already rendering, can't show dice roll!")
            } else {
                console.log("remote Roll!"),
                d20.tddice.canRoll3D() &&
                ("gmrollresult" != e.rolltype || window.is_gm) && (d20.tddice.remoteRollQueue[e.rollid] = e,
                    d20.tddice.remoteRollQueue[e.rollid].additionalrolls = [],
                d20.textchat && -1 !== d20.textchat.allowed3drolls.indexOf(e.rollid) && (console.log("We're allowed to roll this already!"),
                    d20.tddice.handleIncomingChatWith3DRoll(e.rollid, 1)))
            }
        }
        ,
        d20.tddice.handleIncomingChatWith3DRoll = function(e) {
            console.log("Incoming"),
            d20.tddice.canRoll3D() && (d20.tddice.rendering && d20.tddice.allowClosingDice && d20.tddice.handleInteraction(),
            d20.tddice.rendering ? console.log("Already rendering, ignoring.") : d20.tddice.remoteRollQueue[e] && !0 !== d20.tddice.remoteRollQueue[e].alreadyshown ? (d20.tddice.rollid = e,
            d20.tddice.doRemoteRoll(d20.tddice.remoteRollQueue[e], !0),
            d20.tddice.remoteRollQueue[e].alreadyshown = !0) : console.log("I don't know the info for " + e))
        }
        ,
        d20.tddice.updateRendererSize = function() {
            if (i) {
                var e = m.innerWidth()
                  , t = m.innerHeight();
                d = e / 2,
                h = t / 2;
                var n = e
                  , o = t;
                e > t ? n = t : t > e && (o = e),
                console.log("ADJUSTING WIDTH AND HEIGHT OF VIEWPORT"),
                d20.tddice.renderer.setSize(n, o),
                y.style.width = n + "px",
                y.style.height = o + "px"
            }
        }
        ,
        d20.tddice.startRendering = function() {
            d20.tddice.rendering = !0,
            d20.tddice.allowClosingDice = !1,
            i || (t(),
            d20.tddice.updateRendererSize()),
            $(y).addClass("open"),
            d20.tddice.rendering = !0,
            requestAnimationFrame(e)
        }
        ,
        d20.tddice.addRenderer = function() {
            if (!n) {
                n = d20.tddice.renderer = new THREE.WebGLRenderer({
                    antialias: !0,
                    alpha: !0
                }),
                u = n.getMaxAnisotropy(),
                window.is_playerapp ? n.shadowMapEnabled = !1 : n.shadowMapEnabled = !0,
                n.shadowMapSoft = !0,
                n.setSize(10, 10),
                y.appendChild(n.domElement),
                (r = new THREE.PerspectiveCamera(27,1,1,200)).position.z = 105,
                (o = new THREE.DirectionalLight(16777215,.6)).position.set(0, 0, 100),
                o.castShadow = !0,
                o.shadowCameraLeft = -60,
                o.shadowCameraTop = -60,
                o.shadowCameraRight = 60,
                o.shadowCameraBottom = 60,
                o.shadowCameraNear = 20,
                o.shadowCameraFar = 200,
                o.shadowBias = -1e-4,
                o.shadowMapWidth = 2048,
                o.shadowMapHeight = 2048,
                o.shadowDarkness = .75,
                a = new THREE.AmbientLight(12105912);
                var loader = new THREE.JSONLoader
                  , dir = "js/models/";
                window.is_playerapp || (dir = "/" + dir),
                loader.load(dir + "d4/d4tex2014.js?v=3", function(e, t) {
                    geometries.d4 = e,
                        materials.d4 = t
                }),
                loader.load(dir + "d6/d6tex2014.js?v=7", function(geometry, materials) {
                    geometries.d6 = geometry,
                        materials.d6 = materials
                }),
                loader.load(dir + "d6Fate/d6fatetex2014.js?v=7", function(e, t) {
                    geometries.df = e,
                        materials.df = t
                }),
                loader.load(dir + "d8/d8tex2014.js?v=3", function(e, t) {
                    geometries.d8 = e,
                        materials.d8 = t
                }),
                loader.load(dir + "d10/d10tex2014.js?v=4", function(e, t) {
                    geometries.d10 = e,
                        materials.d10 = t
                }),
                loader.load(dir + "d10Pct10s/d10pct10stex2014.js?v=1", function(e, t) {
                    geometries.dpct10s = e,
                        materials.dpct10s = t
                }),
                loader.load(dir + "d10Pct1s/d10pct1stex2014.js?v=1", function(e, t) {
                    geometries.dpct1s = e,
                        materials.dpct1s = t
                }),
                loader.load(dir + "d12/d12tex2014.js?v=3", function(e, t) {
                    geometries.d12 = e,
                        materials.d12 = t
                }),
                loader.load(dir + "d20/d20tex2014.js?v=3", function(e, t) {
                    geometries.d20 = e,
                        materials.d20 = t
                }),
                loader.load(dir + "d6/d6tex2014.js?v=4", function(e) {
                    f.d6 = e
                }),
                d20.tddice.sceneInitialized = !0
            }
        }
        ;
        var M, P = !1, I = function() {
            if (0 != v.length && r && r.position && !P && (E = 0,
            w++,
            _.each(v, function(e) {
                if (e.doneRolling)
                    return E++,
                    !0;
                !0 !== e.castShadow && (e.castShadow = !0);
                var t = e.body.angularVelocity
                  , n = e.body.velocity;
                if (Math.abs(t.x) < 1.5 && Math.abs(t.y) < 1.5 && Math.abs(t.z) < 1.5 && Math.abs(n.x) < 1.5 && Math.abs(n.y) < 1.5 && Math.abs(n.z) < .5 && e.position.z < 3)
                    return e.atRestStart || (e.atRestStart = w),
                    w - e.atRestStart > 2 && (e.doneRolling = !0),
                    !0;
                P = !1,
                e.atRestStart = !1;
                var i = 1;
                4 === e.maxroll && (i = -1);
                var o = new THREE.Raycaster(new THREE.Vector3(e.position.x,e.position.y,200 * i),new THREE.Vector3(0,0,-1 * i)).intersectObjects([e]);
                if (o.length > 0) {
                    var r = o[0].face.materialIndex;
                    e.lastRolled != r && (e.lastRolled = r)
                }
            }),
            E == v.length && !P)) {
                P = !0;
                for (var e = v.length, t = 0; t < e; t++) {
                    var n = v[t];
                    if (n.promise) {
                        if (n.lastRolled !== undefined && n.material.materials[n.lastRolled] !== undefined)
                            var i = parseInt(n.material.materials[n.lastRolled].name, 10);
                        else {
                            console.log("Couldn't read face!");
                            i = d20.textchat.diceengine.random(n.maxroll) + 1
                        }
                        i == n.maxroll && console.log("crit!"),
                        n.promise(i),
                        n.promise = null
                    } else
                        console.log("skip this one!")
                }
                if (console.log("returned all current rolls"),
                P)
                    if (console.log("Finsihed after " + w + " calculations."),
                    d20.tddice.remoteRollQueue[d20.tddice.rollid].additionalrolls[x + 1] !== undefined) {
                        for (t = 0; t < v.length; t++)
                            v[t].body && (d20.tddice.world.remove(v[t].body),
                            delete v[t].body);
                        d20.tddice.rendering = !1;
                        var o = d20.tddice.remoteRollQueue[d20.tddice.rollid].additionalrolls[x + 1];
                        d20.tddice.doRemoteRoll(o)
                    } else
                        d20.textchat.showHidden3DRolls(),
                        console.log("all done! cleanup!"),
                        d20.tddice.allowClosingDice = !0,
                        d20.tddice.pauseRendering = !0;
                else
                    console.log("Could have ended but decided not to!")
            }
        };
        new THREE.MeshFaceMaterial;
        d20.tddice.initScene = t = function() {
            if (d20.tddice.addRenderer(),
            i = new THREE.Scene,
            r.lookAt({
                x: 0,
                y: 0,
                z: 0
            }),
            i.add(r),
            o.target.position.copy(i.position),
            i.add(o),
            i.add(a),
            n.shadowMapEnabled)
                var e = ["uniform vec3 diffuse;", "uniform float opacity;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, "void main() {", "gl_FragColor = vec4( 1.0, 1.0, 1.0, 1.0 );", THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 - shadowColor.x );", "}"].join("\n");
            else
                e = ["uniform vec3 diffuse;", "uniform float opacity;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, "void main() {", "gl_FragColor = vec4( 1.0, 1.0, 1.0, 1.0 );", THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "gl_FragColor = vec4( 0.0, 0.0, 0.0, 0.0 );", "}"].join("\n");
            d20.tddice.world = new CANNON.World,
            d20.tddice.world.gravity.set(0, 0, -1400),
            d20.tddice.world.broadphase = new CANNON.NaiveBroadphase,
            d20.tddice.world.solver.iterations = 20,
            M = new CANNON.Material;
            var t = new CANNON.Material
              , s = new CANNON.Material;
            d20.tddice.world.addContactMaterial(new CANNON.ContactMaterial(t,M,{
                friction: .1,
                restitution: .1
            })),
            d20.tddice.world.addContactMaterial(new CANNON.ContactMaterial(s,M,{
                friction: 0,
                restitution: 1
            })),
            d20.tddice.world.addContactMaterial(new CANNON.ContactMaterial(M,M,{
                friction: .1,
                restitution: 1
            }));
            var l = new THREE.ShaderMaterial({
                uniforms: THREE.ShaderLib.basic.uniforms,
                vertexShader: THREE.ShaderLib.basic.vertexShader,
                fragmentShader: e,
                color: 255
            })
              , c = new THREE.Mesh(new THREE.PlaneGeometry(d,h,1,1),l);
            c.receiveShadow = !0;
            new THREE.MeshLambertMaterial({
                opacity: 0
            });
            i.add(c);
            var u, p = new CANNON.Body({
                mass: 0
            });
            p.addShape(new CANNON.Plane),
            p.material = t,
            d20.tddice.world.add(p),
            (u = new CANNON.Body({
                mass: 0
            })).addShape(new CANNON.Plane),
            u.material = s,
            u.quaternion.setFromAxisAngle(new CANNON.Vec3(1,0,0), Math.PI / 2),
            u.position.set(0, 24, 0),
            d20.tddice.world.add(u),
            (u = new CANNON.Body({
                mass: 0
            })).addShape(new CANNON.Plane),
            u.material = s,
            u.quaternion.setFromAxisAngle(new CANNON.Vec3(1,0,0), -Math.PI / 2),
            u.position.set(0, -24, 0),
            d20.tddice.world.add(u),
            (u = new CANNON.Body({
                mass: 0
            })).addShape(new CANNON.Plane),
            u.material = s,
            u.quaternion.setFromAxisAngle(new CANNON.Vec3(0,1,0), -Math.PI / 2),
            u.position.set(21, 0, 0),
            d20.tddice.world.add(u),
            (u = new CANNON.Body({
                mass: 0
            })).addShape(new CANNON.Plane),
            u.material = s,
            u.quaternion.setFromAxisAngle(new CANNON.Vec3(0,1,0), Math.PI / 2),
            u.position.set(-21, 0, 0),
            d20.tddice.world.add(u)
        }
        ;
        var O = 0
          , D = .025;
        e = d20.tddice.render = function() {
            if (d20.tddice.rendering && !d20.tddice.pauseRendering) {
                var t = (new Date).getTime();
                if ((t - O) / 1e3 > D) {
                    for (var o in d20.tddice.world.step(1 / 60),
                    i.children) {
                        var a = i.children[o];
                        a.body != undefined && (a.position.copy(a.body.position),
                        a.quaternion.copy(a.body.quaternion)),
                        !1 === i.children[o].visible && (i.children[o].visible = !0)
                    }
                    O = t,
                    I()
                }
                n.render(i, r),
                requestAnimationFrame(e)
            }
        }
        ,
        d20.tddice.createShape = function(e, t, n, o, r, a) {
            var s;
            P = !1;
            var l = [];
            l = "d100" === e ? ["dpct10s", "dpct1s"] : [e],
            _.each(l, function(e) {
                (s = new THREE.Mesh(geometries[e], new THREE.MeshFaceMaterial(materials[e]))).castShadow = !1;
                for (var l = new THREE.Color(+("0x" + c.replace("#", ""))), d = 0; d < s.material.materials.length; d++)
                    s.material.materials[d].color = l,
                    s.material.materials[d].ambient = l,
                    s.material.materials[d].uniforms && (s.material.materials[d].uniforms.tDiffuse.value.anisotropy = u);
                s.promise = a,
                "d6" === e ? s.scale.set(1.4, 1.4, 1.4) : s.scale.set(1.7, 1.7, 1.7),
                s.dicetype = e,
                s.maxroll = "dpct" === e ? 10 : parseInt(e.replace("d", ""), 10);
                for (var h = geometries[e].vertices, f = geometries[e].faces, m = [], y = [], b = 0; b < h.length; b++)
                    m.push(new CANNON.Vec3(h[b].x * s.scale.x,h[b].y * s.scale.y,h[b].z * s.scale.z));
                for (b = 0; b < f.length; b++)
                    y.push([f[b].a, f[b].b, f[b].c]);
                s.body = new CANNON.Body({
                    mass: 1e3
                }),
                s.body.material = M;
                var w = new CANNON.ConvexPolyhedron(m,y);
                s.body.addShape(w, 0),
                s.body.position.set(t.x + (20 * k() - 10), t.y, t.z + (20 * k() - 10)),
                s.body.quaternion.setFromAxisAngle(new CANNON.Vec3(r.x,r.y,r.z), r.a * Math.PI * 2),
                s.body.angularVelocity.set(o.x, o.y, o.z),
                s.body.velocity.set(n.x, n.y, n.z),
                s.body.linearDamping = .25,
                s.body.angularDamping = .25,
                s.body.isPlayingSound = !1,
                s.body.addEventListener("collide", function(e) {
                    diceid = e.contact.bj.id,
                    colidedwithid = e.contact.bi.id,
                    vel = e.contact.bj.velocity,
                    maxvel = Math.max(Math.abs(n.x), Math.abs(n.y)),
                    s.body.isPlayingSound || (s.body.isPlayingSound = !0,
                    W(diceid, s.dicetype, colidedwithid, maxvel))
                }),
                s.visible = !1,
                i.add(s),
                v.push(s),
                d20.tddice.world.add(s.body)
            })
        }
        ;
        var L = {}
          , B = [["D4_Hard_Roll_001.mp3", "D4_Hard_Roll_002.mp3", "D4_Hard_Roll_003.mp3", "D4_Hard_Roll_004.mp3"], ["D4_Medium_Roll_001.mp3", "D4_Medium_Roll_002.mp3", "D4_Medium_Roll_003.mp3", "D4_Medium_Roll_004.mp3"], ["D4_Soft_Roll_001.mp3", "D4_Soft_Roll_002.mp3", "D4_Soft_Roll_003.mp3", "D4_Soft_Roll_004.mp3"]]
          , F = [["D6_Hard_Roll_001.mp3", "D6_Hard_Roll_002.mp3", "D6_Hard_Roll_003.mp3", "D6_Hard_Roll_004.mp3"], ["D6_Medium_Roll_001.mp3", "D6_Medium_Roll_002.mp3", "D6_Medium_Roll_003.mp3", "D6_Medium_Roll_004.mp3"], ["D6_Soft_Roll_001.mp3", "D6_Soft_Roll_002.mp3", "D6_Soft_Roll_003.mp3", "D6_Soft_Roll_004.mp3"]]
          , H = [["D8_Hard_Roll_001.mp3", "D8_Hard_Roll_002.mp3", "D8_Hard_Roll_003.mp3", "D8_Hard_Roll_004.mp3"], ["D8_Medium_Roll_001.mp3", "D8_Medium_Roll_002.mp3", "D8_Medium_Roll_003.mp3", "D8_Medium_Roll_004.mp3"], ["D8_Soft_Roll_001.mp3", "D8_Soft_Roll_002.mp3", "D8_Soft_Roll_003.mp3", "D8_Soft_Roll_004.mp3"]]
          , z = [["D10_Hard_Roll_001.mp3", "D10_Hard_Roll_002.mp3", "D10_Hard_Roll_003.mp3", "D10_Hard_Roll_004.mp3"], ["D10_Medium_Roll_001.mp3", "D10_Medium_Roll_002.mp3", "D10_Medium_Roll_003.mp3", "D10_Medium_Roll_004.mp3"], ["D10_Soft_Roll_001.mp3", "D10_Soft_Roll_002.mp3", "D10_Soft_Roll_003.mp3", "D10_Soft_Roll_004.mp3"]]
          , V = [["D12_Hard_Roll_001.mp3", "D12_Hard_Roll_002.mp3", "D12_Hard_Roll_003.mp3", "D12_Hard_Roll_004.mp3"], ["D12_Medium_Roll_001.mp3", "D12_Medium_Roll_002.mp3", "D12_Medium_Roll_003.mp3", "D12_Medium_Roll_004.mp3"], ["D12_Soft_Roll_001.mp3", "D12_Soft_Roll_002.mp3", "D12_Soft_Roll_003.mp3", "D12_Soft_Roll_004.mp3"]]
          , N = [["D20_Hard_Roll_001.mp3", "D20_Hard_Roll_002.mp3", "D20_Hard_Roll_003.mp3", "D20_Hard_Roll_004.mp3"], ["D20_Medium_Roll_001.mp3", "D20_Medium_Roll_002.mp3", "D20_Medium_Roll_003.mp3", "D20_Medium_Roll_004.mp3"], ["D20_Soft_Roll_001.mp3", "D20_Soft_Roll_002.mp3", "D20_Soft_Roll_003.mp3", "D20_Soft_Roll_004.mp3"]]
          , j = ["D20_Long_Roll_001.mp3", "D20_Long_Roll_002.mp3", "D20_Long_Roll_003.mp3"]
          , U = [["Cup_Shake_1_Die_001.mp3", "Cup_Shake_1_Die_002.mp3", "Cup_Shake_1_Die_003.mp3"], ["Cup_Shake_2_Dice_001.mp3", "Cup_Shake_2_Dice_002.mp3", "Cup_Shake_2_Dice_003.mp3"], ["Cup_Shake_3_Dice_001.mp3", "Cup_Shake_3_Dice_002.mp3", "Cup_Shake_3_Dice_003.mp3"], ["Cup_Shake_5_Dice_001.mp3", "Cup_Shake_5_Dice_002.mp3", "Cup_Shake_5_Dice_003.mp3"], ["Cup_Shake_10_Dice_001.mp3", "Cup_Shake_10_Dice_002.mp3", "Cup_Shake_10_Dice_003.mp3"]]
          , q = B[0].concat(B[1], B[2], F[0], F[1], F[2], H[0], H[1], H[2], z[0], z[1], z[2], V[0], V[1], V[2], N[0], N[1], N[2], j, U[0], U[1], U[2], U[3], U[4])
          , G = function() {
            window.soundManager && window.soundManager.onready && window.soundManager.onready(function() {
                _.each(q, function(e) {
                    L[e] = soundManager.createSound({
                        id: "dicesound-" + e,
                        url: "https://s3.amazonaws.com/cdn.roll20.net/sounds/" + e,
                        multiShot: !0,
                        autoLoad: !0
                    })
                })
            })
        }
          , W = function(e, t, n, i) {
            "dicecup" == e ? diesounds = "1" == t ? U[0] : "2" == t ? U[1] : "3" == t ? U[2] : t <= "5" ? U[3] : U[4] : i > 150 ? diesounds = j : (velocity = i > 100 ? 0 : i > 55 ? 1 : 2,
            diesounds = "d4" == t ? B[velocity] : "d6" == t ? F[velocity] : "d8" == t ? H[velocity] : "d10" == t ? z[velocity] : "d12" == t ? V[velocity] : N[velocity]),
            mp3 = diesounds[Math.floor(Math.random() * diesounds.length)];
            var o = L[mp3];
            o ? o.play() : console.log("No sound to play")
        };
        d20.tddice.playsound = W,
        G()
    }),
    d20.apiclient = {},
    notifyref = !1,
    notifyInUse = function() {
        notifyref || (notifyref = new Firebase(window.FIREBASE_ROOT + "api-notifiers/" + window.campaign_storage_path)),
        notifyref.child("lastactive").set((new Date).getTime()),
        notifyref.child("activegms").child(window.currentPlayer.id).set(window.is_gm),
        setTimeout(notifyInUse, 3e5)
    }
    ,
    d20.apiclient.ready = function() {
        notifyInUse()
    }
    ,
    d20ext.transmogrifier = {},
    function() {
        var e;
        d20ext.transmogrifier.childLoaded = function() {
            e && e.find("iframe").css("height", e.find("iframe")[0].contentWindow.document.body.scrollHeight + 5 + "px")
        }
        ;
        var t = $(window).height() - 250;
        t > 800 && (t = 800),
        $("#transmogrifier").on("click", function() {
            e && e.dialog("destroy"),
            (e = $("<div><iframe src='/transmogrifier/app/" + window.campaign_id + "' frameborder=0 style='width: 710px; height: auto;'></iframe></div>")).dialog({
                title: "Transmogrifier",
                width: 775,
                height: t,
                position: ["center", 30],
                zIndex: 10799
            })
        })
    }(),
    d20.fx = {
        activefx: {},
        numactive: 0,
        time_delta: 0,
        last_update: 0,
        UPDATE_FREQ: 25
    },
    Object.defineProperty(d20.fx, "UPDATE_FREQ", {
        writable: !1,
        configurable: !1,
        enumerable: !0
    }),
    lineDistance = function(e, t) {
        var n = 0
          , i = 0;
        return n = t.x - e.x,
        n *= n,
        i = t.y - e.y,
        i *= i,
        Math.sqrt(n + i)
    }
    ,
    shoutsById = {},
    $fxType = $("#fxtools_type"),
    $fxColor = $("#fxtools_color"),
    $fxEdit = $("#fxtools_edit"),
    d20.fx.presetEffects = {
        beam: {
            name: "Beam",
            maxParticles: 3e3,
            size: 15,
            sizeRandom: 0,
            lifeSpan: 15,
            lifeSpanRandom: 0,
            emissionRate: 50,
            speed: 30,
            speedRandom: 7,
            angle: -1,
            angleRandom: 1,
            duration: 25
        },
        bomb: {
            name: "Bomb",
            maxParticles: 500,
            size: 15,
            sizeRandom: 5,
            lifeSpan: 15,
            lifeSpanRandom: 7,
            speed: 5,
            speedRandom: 2,
            angle: 270,
            angleRandom: 75,
            emissionRate: 75,
            duration: 10
        },
        bubbling: {
            name: "Bubbling",
            maxParticles: 200,
            size: 15,
            sizeRandom: 3,
            lifeSpan: 20,
            lifeSpanRandom: 5,
            speed: 7,
            speedRandom: 2,
            gravity: Vector.create(.01, .65),
            angle: 270,
            angleRandom: 35,
            emissionRate: 1
        },
        burn: {
            name: "Burn",
            maxParticles: 100,
            size: 35,
            sizeRandom: 15,
            lifeSpan: 10,
            lifeSpanRandom: 3,
            speed: 3,
            angle: 0,
            emissionRate: 12
        },
        burst: {
            name: "Burst",
            maxParticles: 100,
            size: 35,
            sizeRandom: 15,
            lifeSpan: 10,
            lifeSpanRandom: 3,
            speed: 3,
            angle: 0,
            emissionRate: 12,
            onDeath: "explode"
        },
        breath: {
            name: "Breath",
            maxParticles: 750,
            size: 20,
            sizeRandom: 10,
            lifeSpan: 25,
            lifeSpanRandom: 2,
            emissionRate: 25,
            speed: 15,
            speedRandom: 3,
            angle: -1,
            angleRandom: 30,
            duration: 25
        },
        explode: {
            name: "Explosion",
            maxParticles: 300,
            size: 35,
            sizeRandom: 10,
            duration: 10,
            sharpnessRandom: 10,
            sharpness: 20,
            lifeSpan: 20,
            lifeSpanRandom: 5,
            speed: 7,
            speedRandom: 1,
            angle: 0,
            angleRandom: 360,
            emissionRate: 1e4
        },
        glow: {
            name: "Glow",
            maxParticles: 500,
            size: 5,
            sizeRandom: 3,
            lifeSpan: 17,
            lifeSpanRandom: 5,
            emissionRate: 7,
            speed: 3,
            speedRandom: 2,
            angle: 270,
            angleRandom: 45
        },
        missile: {
            name: "Missile",
            maxParticles: 350,
            size: 7,
            sizeRandom: 3,
            lifeSpan: 7,
            lifeSpanRandom: 5,
            emissionRate: 50,
            speed: 7,
            speedRandom: 5,
            angle: 135,
            angleRandom: 0
        },
        nova: {
            name: "Nova",
            maxParticles: 500,
            size: 15,
            sizeRandom: 0,
            lifeSpan: 30,
            lifeSpanRandom: 0,
            emissionRate: 1e3,
            speed: 7,
            speedRandom: 0,
            angle: 0,
            angleRandom: 180,
            duration: 5
        },
        splatter: {
            name: "Splatter",
            maxParticles: 750,
            size: 7,
            sizeRandom: 3,
            lifeSpan: 20,
            lifeSpanRandom: 5,
            emissionRate: 3,
            speed: 7,
            speedRandom: 2,
            gravity: Vector.create(.01, .5),
            angle: -1,
            angleRandom: 20,
            duration: 10
        }
    },
    d20.fx.presetColors = {
        acid: {
            name: "Acid",
            startColour: [0, 35, 10, 1],
            startColourRandom: [0, 10, 10, .25],
            endColour: [0, 75, 30, 0],
            endColourRandom: [0, 20, 20, 0]
        },
        blood: {
            name: "Blood",
            startColour: [175, 0, 0, 1],
            startColourRandom: [20, 0, 0, 0],
            endColour: [175, 0, 0, 0],
            endColourRandom: [20, 0, 0, 0]
        },
        charm: {
            name: "Charm",
            startColour: [200, 40, 150, 1],
            startColourRandom: [25, 5, 20, .25],
            endColour: [200, 40, 150, 0],
            endColourRandom: [50, 10, 40, 0]
        },
        death: {
            name: "Death",
            startColour: [10, 0, 0, 1],
            startColourRandom: [5, 0, 0, .25],
            endColour: [20, 0, 0, 0],
            endColourRandom: [10, 0, 0, 0]
        },
        fire: {
            name: "Fire",
            startColour: [220, 35, 0, 1],
            startColourRandom: [62, 0, 0, .25],
            endColour: [220, 35, 0, 0],
            endColourRandom: [60, 60, 60, 0]
        },
        frost: {
            name: "Frost",
            startColour: [90, 90, 175, 1],
            startColourRandom: [0, 0, 0, .25],
            endColour: [125, 125, 255, 0],
            endColourRandom: [0, 0, 0, 0]
        },
        holy: {
            name: "Holy",
            startColour: [175, 130, 25, 1],
            startColourRandom: [20, 10, 0, .25],
            endColour: [175, 130, 50, 0],
            endColourRandom: [20, 20, 20, 0]
        },
        magic: {
            name: "Magic",
            startColour: [50, 50, 50, .5],
            startColourRandom: [150, 150, 150, .25],
            endColour: [128, 128, 128, 0],
            endColourRandom: [125, 125, 125, 0]
        },
        slime: {
            name: "Slime",
            startColour: [0, 250, 50, 1],
            startColourRandom: [0, 20, 10, .25],
            endColour: [0, 250, 50, 0],
            endColourRandom: [20, 20, 20, 0]
        },
        smoke: {
            name: "Smoke",
            startColour: [150, 150, 150, 1],
            startColourRandom: [10, 10, 10, .5],
            endColour: [200, 200, 200, 0],
            endColourRandom: [10, 10, 10, 0]
        },
        water: {
            name: "Water",
            startColour: [15, 15, 150, 1],
            startColourRandom: [5, 5, 25, .25],
            endColour: [10, 10, 100, 0],
            endColourRandom: [10, 10, 25, 0]
        }
    },
    d20.fx.handleShout = function(e) {
        if (shoutsById[e.content.id] && (clearTimeout(shoutsById[e.content.id]),
        delete shoutsById[e.content.id]),
        "fx_start" == e.type) {
            if (e.pageid !== d20.Campaign.activePage().id)
                return;
            "temporaryfx" === e.content.type ? d20.fx.spawnFxByDefinition(e.content.x, e.content.y, e.content.definition, e.content.velocityInfo, e.content.id) : d20.fx.spawnFx(e.content.x, e.content.y, e.content.type, e.content.velocityInfo, e.content.id, !0)
        } else
            "fx_update" == e.type ? (d20.fx.moveFx(e.content.id, e.content.x, e.content.y, !0, !0),
            shoutsById[e.content.id] = setTimeout(function() {
                d20.fx.killFx(e.content.id, !0)
            }, 1e4)) : "fx_kill" == e.type && d20.fx.killFx(e.content.id, !0)
    }
    ,
    d20.fx.spawnFxOnPath = function(e, t) {
        e._attachedFx && (_.each(e._attachedFx, function(e) {
            e.stop()
        }),
        delete e._attachedFx);
        var n, i = [], o = e.left - Math.floor(e.width / 2), r = e.top - Math.floor(e.height / 2);
        _.each(e.path, function(e, a) {
            if ("M" !== e[0] && "L" !== e[0])
                return !0;
            a > 0 && i.push(d20.fx.spawnFxBetweenPoints({
                x: n[1] + o,
                y: n[2] + r
            }, {
                x: e[1] + o,
                y: e[2] + r
            }, t)),
            n = e
        }),
        e._attachedFx = i
    }
    ,
    d20.fx.spawnFxBetweenPoints = function(e, t, n) {
        var i = Math.round(lineDistance(e, t))
          , o = (Math.ceil(420 / i),
        t.x - e.x)
          , r = t.y - e.y;
        return d20.fx.spawnFx(e.x, e.y, n + "|gravityx:" + .001 * o + ",gravityy:" + .001 * r + ",lifeSpan:40")
    }
    ,
    d20.fx.systemById = function(e) {
        return d20.fx.activefx[e]
    }
    ,
    d20.fx.moveFx = function(e, t, n, i, o) {
        var r = d20.fx.systemById(e);
        return i || d20.textchat.sendShout({
            type: "fx_update",
            playerid: window.currentPlayer.id,
            content: {
                x: t,
                y: n,
                id: e
            },
            time: (new Date).getTime()
        }),
        r && (t -= r.size / 2,
        n -= r.size / 2,
        o ? r.animatePosition = {
            x: t,
            y: n,
            rateX: Math.ceil(Math.abs(t - r.position.x) / 5),
            rateY: Math.ceil(Math.abs(n - r.position.y) / 5)
        } : (r.position.x = t,
        r.position.y = n,
        r.animatePosition && delete r.animatePosition)),
        r
    }
    ,
    d20.fx.killFx = function(e, t) {
        t || d20.textchat.sendShout({
            type: "fx_kill",
            playerid: window.currentPlayer.id,
            content: {
                id: e
            },
            time: (new Date).getTime()
        });
        var n = d20.fx.systemById(e);
        n && n.stop()
    }
    ,
    d20.fx.agencyFx = function(e, t, n) {
        if (!window.is_playerapp) {
            var i = function(e, t) {
                var n = 180 * Math.atan2(t, e) / Math.PI;
                return n < 0 && (n = 360 + n),
                n
            }
              , o = function(e, t) {
                return Math.sqrt(Math.pow(e, 2) + Math.pow(t, 2))
            }
              , r = function(e, t) {
                return (e - d20.engine.currentCanvasOffset[t ? 0 : 1]) * d20.engine.canvasZoom + d20.engine.paddingOffset[t ? 0 : 1]
            };
            if ($("#fxagencyoverlay").is(":visible"))
                return;
            $("#fxagencyoverlay").show();
            var a = {}
              , s = $("#fxagencyoverlay svg line")
              , l = $(window).width()
              , c = $(window).width()
              , u = r(t, !0)
              , d = r(n, !1)
              , h = {
                startx: u / l,
                starty: d / c
            };
            s.attr("x1", u).attr("y1", d).attr("x2", u).attr("y2", d),
            $("#fxagencyoverlay").on("mousemove", function(e) {
                s.attr("x2", e.clientX).attr("y2", e.clientY)
            }),
            $("#fxagencyoverlay").on("mouseup", function(t) {
                h.stopx = t.clientX / l,
                h.stopy = t.clientY / c,
                a.distance = o(h.stopx - h.startx, h.stopy - h.starty),
                a.angle = i(h.stopx - h.startx, h.stopy - h.starty),
                a.distance && a.angle && (s.attr("x1", 0).attr("y1", 0).attr("x2", 0).attr("y2", 0),
                $("#fxagencyoverlay").off().hide(),
                e(a))
            })
        }
    }
    ,
    d20.fx.handleClick = function(e, t) {
        var n = $fxType.val()
          , i = $fxColor.val()
          , o = "true" === $fxType.find(":selected").attr("data-aimed")
          , r = d20.fx.presetEffects[n] ? n + "-" + i : n;
        return o ? (d20.fx.agencyFx(function(n) {
            d20.fx.spawnFx(e, t, r, n)
        }, e, t),
        !1) : d20.fx.spawnFx(e, t, r)._id
    }
    ,
    d20.fx.changeFx = function() {
        var e = $fxType.val();
        "-" === e.substr(0, 1) ? ($fxColor.parent().hide(0),
        $fxEdit.parent().show(0)) : ($fxEdit.parent().hide(0),
        "newcustfx" === e ? ($fxColor.parent().hide(0),
        window.Campaign.custFx.create({}, {
            success: function(e) {
                $fxType.val(e.id),
                $fxEdit.parent().show(0),
                $fxEdit.trigger("click")
            }
        })) : "undefined" != typeof d20.fx.presetEffects[e] ? $fxColor.parent().show(0) : $fxColor.parent().hide(0))
    }
    ,
    d20.fx.buildFxList = function() {
        $fxEdit.on("click", function() {
            var e = window.Campaign.custFx.get($fxType.val());
            e && e.view.showDialog()
        }),
        $fxType.on("change", d20.fx.changeFx),
        $.each(d20.fx.presetEffects, function(e, t) {
            $fxType.append($("<option/>").attr("data-aimed", -1 === t.angle).text(t.name).val(e))
        }),
        $.each(d20.fx.presetColors, function(e, t) {
            $fxColor.append($("<option/>").text(t.name).val(e))
        });
        var e = $("#fxtools_type option");
        e.sort(function(e, t) {
            return e.text > t.text ? 1 : -1
        }),
        $fxType.empty().append(e),
        $fxType.val($fxType.children().first().val()),
        $fxType.append($("<option />").prop("disabled", !0).text("--Custom FX--")),
        $fxType.append($("<option />").val("newcustfx").text("[New Custom FX]")),
        d20.fx.changeFx()
    }
    ,
    d20.fx.refreshCustFxList = function() {
        var e = []
          , t = $fxType.val();
        d20.Campaign.custFx.each(function(t) {
            e.push(t)
        }),
        e = _.sortBy(e, function(e) {
            return e.get("name") || "Untitled"
        }),
        $fxType.find('[data-custom="true"]').remove(),
        _.each(e, function(e) {
            $fxType.append($("<option />").val(e.id).text(e.get("name") || "Untitled").attr("data-custom", !0).attr("data-aimed", -1 === e.get("definition").angle))
        }),
        $fxType.val(t)
    }
    ,
    d20.fx.getFX = function(e, t, n) {
        var i = t.substr(0, t.indexOf("-"))
          , o = t.substr(t.indexOf("-") + 1);
        if (t.startsWith("-")) {
            var r = window.Campaign.custFx.get(t).get("definition");
            if (e.maxParticles = r.maxParticles,
            e.size = r.size || 25,
            e.sizeRandom = r.sizeRandom || 15,
            e.lifeSpan = r.lifeSpan || 10,
            e.lifeSpanRandom = r.lifeSpanRandom || 3,
            e.emissionRate = r.emissionRate || 3,
            e.speed = r.speed || 3,
            e.speedRandom = r.speedRandom || 1.5,
            e.gravity = r.gravity || Vector.create(.01, .01),
            e.angle = (r.angle || 0) >= 0 ? r.angle : n.angle,
            e.angleRandom = "undefined" == typeof r.angleRandom ? 360 : r.angleRandom,
            e.duration = r.duration || 10,
            e.startColour = r.startColour || [220, 35, 0, 1],
            e.startColourRandom = r.startColourRandom || [62, 0, 0, .25],
            e.endColour = r.endColour || [220, 35, 0, 0],
            e.endColourRandom = r.endColourRandom || [60, 60, 60, 0],
            r.onDeath) {
                var a = $fxType.find(":contains(" + r.onDeath + ')[data-custom="true"]').first().val();
                a && a !== t && (e.onDeath = a + "|duration:10")
            }
        } else if (d20.fx.presetEffects[i]) {
            var s = d20.fx.presetEffects[i]
              , l = d20.fx.presetColors[o];
            e.maxParticles = s.maxParticles,
            e.size = s.size,
            e.sizeRandom = s.sizeRandom,
            e.lifeSpan = s.lifeSpan,
            e.lifeSpanRandom = s.lifeSpanRandom,
            e.emissionRate = s.emissionRate,
            e.speed = s.speed || 5,
            e.speedRandom = s.speedRandom || 1.5,
            e.gravity = s.gravity || Vector.create(.01, .01),
            e.angle = (s.angle || 0) >= 0 ? s.angle : n.angle,
            e.angleRandom = "undefined" == typeof s.angleRandom ? 360 : s.angleRandom,
            e.duration = s.duration,
            e.startColour = l.startColour,
            e.startColourRandom = l.startColourRandom,
            e.endColour = l.endColour,
            e.endColourRandom = l.endColourRandom,
            s.onDeath && (e.onDeath = s.onDeath + "-" + o)
        }
        return e
    }
    ,
    d20.fx.spawnFx = function(e, t, n, i, o, r) {
        var a = new cParticleSystem;
        a._id = o || generateUUID(),
        r || d20.textchat.sendShout({
            type: "fx_start",
            playerid: window.currentPlayer.id,
            content: {
                x: e,
                y: t,
                type: n,
                id: a._id,
                velocityInfo: i
            },
            pageid: d20.Campaign.activePage().id,
            time: (new Date).getTime()
        });
        var s = n.split("|")
          , l = s[0]
          , c = {};
        if (2 == s.length)
            for (var u = s[1].split(","), d = 0; d < u.length; d++) {
                var h = u[d].split(":");
                c[h[0]] = 0 == h.length || h[1]
            }
        for (var p in (a = d20.fx.getFX(a, l, i)).position = Vector.create(e - a.size / 2, t - a.size / 2),
        c.gravityx && (a.gravity = Vector.create(parseFloat(c.gravityx), parseFloat(c.gravityy)),
        delete c.gravityy,
        delete c.gravityx),
        c.duration && (a.duration = a.duration >= 0 ? a.duration : c.duration,
        delete c.duration),
        c)
            a[p] = parseFloat(c[p]);
        return a.init(),
        d20.fx.activefx[a._id] = a,
        d20.fx.numactive++,
        a
    }
    ,
    d20.fx.spawnFxByDefinition = function(e, t, n, i, o) {
        var r = new cParticleSystem;
        r._id = o || generateUUID();
        var a = n;
        if (console.log(n),
        r.maxParticles = a.maxParticles,
        r.size = a.size || 25,
        r.sizeRandom = a.sizeRandom || 15,
        r.lifeSpan = a.lifeSpan || 10,
        r.lifeSpanRandom = a.lifeSpanRandom || 3,
        r.emissionRate = a.emissionRate || 3,
        r.speed = a.speed || 3,
        r.speedRandom = a.speedRandom || 1.5,
        r.gravity = a.gravity || Vector.create(.01, .01),
        r.angle = (a.angle || 0) >= 0 ? a.angle : i.angle,
        r.angleRandom = "undefined" == typeof a.angleRandom ? 360 : a.angleRandom,
        r.duration = a.duration || 10,
        r.startColour = a.startColour || [220, 35, 0, 1],
        r.startColourRandom = a.startColourRandom || [62, 0, 0, .25],
        r.endColour = a.endColour || [220, 35, 0, 0],
        r.endColourRandom = a.endColourRandom || [60, 60, 60, 0],
        a.onDeath) {
            var s = $fxType.find(":contains(" + a.onDeath + ')[data-custom="true"]').first().val();
            s && s !== fxName && (r.onDeath = s + "|duration:10")
        }
        return r.position = Vector.create(e - r.size / 2, t - r.size / 2),
        console.log(r),
        r.init(),
        d20.fx.activefx[r._id] = r,
        d20.fx.numactive++,
        r
    }
    ,
    d20.fx.update = function(e) {
        if (0 === d20.fx.last_update ? d20.fx.last_update = e : d20.fx.time_delta += e - d20.fx.last_update,
        d20.fx.time_delta >= d20.fx.UPDATE_FREQ) {
            d20.fx.time_delta -= d20.fx.UPDATE_FREQ,
            d20.fx.last_update += d20.fx.UPDATE_FREQ;
            let e = !1;
            for (var t in d20.fx.activefx)
                d20.fx.activefx[t].update(1),
                0 == d20.fx.activefx[t].particleCount && 0 == d20.fx.activefx[t].active && (delete d20.fx.activefx[t],
                d20.fx.numactive--),
                e = !0;
            e && d20.engine.redrawScreenNextTick()
        }
    }
    ,
    d20.fx.reset = function() {
        d20.fx.last_update = performance.now(),
        d20.fx.time_delta = 0,
        d20.fx.activefx = {}
    }
    ,
    d20.fx.render = function(e) {
        if (!(d20.fx.numactive < 1)) {
            for (var t in d20.canvas_overlay.gl.prepareForGlDraw(0),
            d20.fx.activefx)
                d20.fx.activefx[t].renderGl(d20.engine.lightingctx, d20.engine.currentCanvasOffset[0], d20.engine.currentCanvasOffset[1], d20.engine.canvas.width, d20.engine.canvas.height);
            d20.canvas_overlay.gl.finishParticleRender(),
            d20.canvas_overlay.copyCanvas(e, d20.engine.lightingcanvas)
        }
    }
    ,
    $("#fxtools_spawnonobj").on(clicktype, function() {
        var e = d20.engine.selected();
        e.length > 0 && "path" == e[0].type && d20.fx.spawnFxOnPath(e[0], $("#fxtools_type").val())
    }),
    d20.fx.buildFxList(),
    d20.tutorial = {
        active: !1
    },
    function() {
        function e(e) {
            var t = $(window).scrollTop()
              , n = t + $(window).height()
              , i = $(window).scrollLeft()
              , o = i + $(window).width()
              , r = $(e).offset().top
              , a = r + $(e).height()
              , s = $(e).offset().left
              , l = s + $(e).width();
            return a <= n + 10 && r >= t - 10 && s >= i - 10 && l <= o + 10
        }
        function t(e) {
            $("#editor-wrapper").animate({
                scrollTop: Math.floor(e.get("top") * d20.engine.canvasZoom) - Math.floor(d20.engine.canvasHeight / 2) + 20 * d20.engine.canvasZoom,
                scrollLeft: Math.floor(e.get("left") * d20.engine.canvasZoom) - Math.floor(d20.engine.canvasWidth / 2) - 15 * d20.engine.canvasZoom
            })
        }
        var n = {
            1: {
                name: "Welcome to Roll20"
            },
            2: {
                name: "Drawing Tools"
            },
            3: {
                name: "Art Library"
            },
            4: {
                name: "Tokens"
            },
            5: {
                name: "Measurement"
            },
            6: {
                name: "Layers"
            },
            7: {
                name: "Communication"
            },
            8: {
                name: "Text Chat"
            },
            9: {
                name: "Dice GUI"
            },
            10: {
                name: "Page Toolbar"
            },
            11: {
                name: "Fog of War"
            },
            12: {
                name: "Journal"
            },
            13: {
                name: "Jukebox"
            },
            14: {
                name: "Turn Tracker"
            },
            15: {
                name: "Macros"
            },
            16: {
                name: "Card Decks"
            },
            17: {
                name: "Rollable Tables"
            },
            18: {
                name: "Settings"
            }
        }
          , o = [{
            group: 1,
            el: "#tutorial-center",
            text: "Welcome to Roll20.net, the free, easy way to play tabletop games online!",
            place: "top"
        }, {
            group: 1,
            el: "#tutorial-center",
            text: "Let\u2019s go over the Virtual Tabletop, or VTT, and the basic tools available to you in your free Roll20 account.",
            place: "top"
        }, {
            group: 1,
            el: "#tutorial-toc",
            text: "If you'd like to jump to a different section or start the tutorial over, those options are available from this tutorial menu at any time.",
            place: "left"
        }, {
            group: 1,
            el: "#tutorial-center",
            text: "You are logged in as a the Game Master or GM. This gives you complete control over the application and allows you to see everything going on inside your game.",
            place: "top"
        }, {
            group: 1,
            el: "#tutorial-center",
            text: "Your players are restricted to seeing and controlling only what you decide to show them.",
            place: "top"
        }, {
            group: 1,
            el: "#tutorial-center",
            text: "The VTT is the white gridlined area that takes up the majority of the Roll20 application.",
            place: "top"
        }, {
            group: 1,
            el: "#tutorial-center",
            text: "By default, players can see but not control everything placed on the Virtual Tabletop.",
            place: "top"
        }, {
            group: 1,
            el: "#tutorial-center",
            text: "The VTT is updated in real time. There is no \u201cEdit\u201d or \u201cPlay\u201d mode. Settings and objects are adjusted, added, or removed for your players as changes are made.",
            place: "top"
        }, {
            group: 1,
            el: "#tutorial-center",
            text: "Roll20 is system agnostic, meaning that it provides a wide array of tools to play any tabletop game.",
            place: "top"
        }, {
            group: 2,
            el: ".choosepath",
            text: "The first tool we'll examine is the Drawing Tool. Click the Freehand drawing tool icon from the VTT Toolbox dropdown menu to continue.",
            place: "right",
            waitfor: "mode:path",
            auto: !0,
            setup: function() {
                $("#drawingtools div.submenu").addClass("permaopen")
            },
            oncomplete: function() {
                $("#drawingtools div.submenu").removeClass("permaopen")
            }
        }, {
            group: 2,
            el: "#drawingtools",
            text: "You have selected the Freehand drawing tool, the default option for drawing tools. You can click anywhere on the tabletop to add a drawing. Add one now to proceed.",
            place: "right",
            waitfor: "add:path",
            auto: !0
        }, {
            group: 2,
            el: "#secondary-toolbar",
            text: "A secondary pop-up will appear after you click the drawing tool. This additional toolbox allows you to change the stroke width and fill color of your drawings.",
            place: "bottom"
        }, {
            group: 2,
            el: ".video",
            text: "The line color will default to your player color and can be changed at any time by clicking the color box next to your display name.",
            place: "right-top",
            oncomplete: function() {
                $("#drawingtools div.submenu").addClass("permaopen"),
                setMode("rect")
            }
        }, {
            group: 2,
            el: ".chooserect",
            text: "The Draw Shape tool allows you to quickly draw pre-made shapes. By default you'll draw a rectangle. Give it a try! Draw a rectangle on the VTT to continue.",
            place: "right",
            waitfor: "add:path",
            auto: !0,
            oncomplete: function() {
                $("#drawingtools div.submenu").removeClass("permaopen")
            }
        }, {
            group: 2,
            el: "#drawingtools",
            text: "Like many of the other tools, Draw Shape can provide different functionality by holding down the Shift or Alt keys.",
            place: "right"
        }, {
            group: 2,
            el: "#drawingtools",
            text: "The Shift key will cause your shape to snap to the grid, while the Alt key will draw a circle. Give it a try!",
            place: "right",
            waitfor: "add:path",
            oncomplete: function() {
                $("#drawingtools div.submenu").addClass("permaopen"),
                setMode("polygon")
            }
        }, {
            group: 2,
            el: ".choosepolygon",
            text: "The Polygon/Line tool draws lines and polygons by connecting vertices, joints or angles, on the VTT. Left clicking will start your polygon and each additional click will add a new vertex.",
            place: "right"
        }, {
            group: 2,
            el: ".choosepolygon",
            text: "You can right click, hit Esc, or click very close to the starting point to finish the polygon.",
            place: "right"
        }, {
            group: 2,
            el: ".choosepolygon",
            text: "Ctrl/Cmd + Z will undo each consecutive segment if you make a mistake. Add a polygon to continue.",
            place: "right",
            waitfor: "add:path",
            auto: !0,
            oncomplete: function() {
                $("#drawingtools div.submenu").removeClass("permaopen")
            }
        }, {
            group: 2,
            el: "#secondary-toolbar",
            text: "You can change the fill color of your polygons from the secondary drawing toolbox. The default fill color is transparent, represented by the gray and white checkered box. Try changing the fill color and adding a new polygon to your tabletop.",
            place: "right-bottom",
            waitfor: "add:path",
            auto: !0
        }, {
            group: 2,
            el: ".choosetext",
            text: "This is the Text Tool. It allows you to add text to the tabletop, useful for notes, messages, or labels.",
            place: "right",
            setup: function() {
                setMode("text"),
                $("#drawingtools div.submenu").addClass("permaopen")
            },
            oncomplete: function() {
                $("#drawingtools div.submenu").removeClass("permaopen")
            }
        }, {
            group: 2,
            el: "#secondary-toolbar",
            text: "This secondary text toolbox allows you to change the font style, size, and color. Add text to the VTT and then click the Next button to continue.",
            place: "bottom",
            waitfor: "add:text"
        }, {
            group: 2,
            el: "#select",
            text: "Objects are visible and persistent for everyone once the drawing is complete. The Select/Move tool lets you move and alter objects on the VTT.",
            place: "right-bottom",
            setup: function() {
                setMode("select")
            }
        }, {
            group: 2,
            el: "#select",
            text: "In select mode, you can click to highlight, resize, rotate, delete, or move objects on the VTT.",
            place: "right-bottom"
        }, {
            group: 2,
            el: "#select",
            text: "To select multiple objects, click on an empty part of the tabletop and drag to create a selection box around your objects. You can also hold the Shift key to select multiple objects without losing your previous selection.",
            place: "right-bottom"
        }, {
            group: 2,
            el: "#select",
            text: "If you want to only select drawings you can do so by holding down the Alt key while making your selection box. Hold Ctrl/Cmd to select only tokens. Try manipulating your drawings now.",
            place: "right-bottom",
            waitfor: "change:path",
            auto: !0
        }, {
            group: 2,
            el: "#drawingtools",
            text: "You can hover your mouse over the text tool on the toolbar and then click Clear Drawings from the menu to remove all drawings on your tabletop. This includes tokens you\u2019ve set to be drawings.",
            place: "right"
        }, {
            group: 2,
            el: "#drawingtools",
            text: "We've selected this option for you. Confirm the clear on the pop-up to continue.",
            place: "right",
            waitfor: "remove:path",
            auto: !0,
            setup: function() {
                $(".choosecleardrawings").trigger("click")
            }
        }, {
            group: 3,
            el: "#arttab",
            text: "The Art Library tab helps you search for images to use as tokens, portraits, and maps for your games. You can filter your search from the dropdown at the top of this tab.",
            place: "left-bottom",
            setup: function() {
                $("#ui-id-2").trigger("click")
            }
        }, {
            group: 3,
            el: "#imagedialog .keywords",
            text: "Roll20 will automatically search through any files you\u2019ve uploaded, popular RPG forums, sites on the web, and the Roll20 Marketplace.",
            place: "left-bottom"
        }, {
            group: 3,
            el: "#imagedialog .keywords",
            text: "Type the word <span style='color: #ed008c'>Archer</span> in the search box.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "The matches are based on the asset's name, the folder it is in, and any custom tags you add.",
            place: "left",
            setup: function() {
                0 === $("#imagedialog .keywords").val().length && ($("#imagedialog .keywords").val("Archer"),
                $("#imagedialog .keywords").focus(),
                $("#imagedialog .keywords").trigger("keyup"))
            }
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Marketplace assets come with a default set of tags their authors include.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Premium assets, with a gold background, can be expanded to show a massive inventory of art options that can be purchased directly from the Art Library tab.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Web Results, with a blue background, as well as assets from your Library or purchases from the Marketplace can be directly copied from a search into your folder structure by right-clicking.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Copy To Library will add the asset to the top of your folder structure. Copy To Folder adds it to an existing folder you've prepared.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Assets from your Library can also be opened in the folder view by left clicking on them.",
            place: "left"
        }, {
            group: 3,
            el: "#imagedialog .searchstyle",
            text: "The Search View button allows you to toggle the way search results are displayed, from a list view to a large icon view.",
            place: "left-bottom",
            setup: function() {
                $("html, #imagedialog").animate({
                    scrollTop: 0
                })
            }
        }, {
            group: 3,
            el: "#tutorial-center",
            text: "You can drag an image directly from the search onto the tabletop to add it to your game. Drag any image onto the VTT from the art library to continue.",
            place: "top",
            waitfor: "add:graphic",
            auto: !0,
            setup: function() {
                "true" === $("#libraryview").attr("data-isopen") && ($("#libraryview").dialog("close"),
                $("#libraryview").attr("data-isopen", "false"))
            }
        }, {
            group: 3,
            el: "#tutorial-center",
            text: "If the page's grid is enabled, the image will change dimensions to fit. If you wish to keep the original dimensions and size of your asset, hold the <span style='color: #ed008c'>Alt</span> key when dragging and dropping.",
            place: "top"
        }, {
            group: 3,
            el: "#switchtomarketplacelibrary",
            text: "The Premium Assets tab shows you all of your purchased Marketplace assets, the image packs you get as part of your subscription, and free assets that Roll20 provides to all users.",
            place: "left",
            setup: function() {
                $("#switchtomarketplacelibrary").trigger("click")
            }
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Premium Assets remains a static organized list of your important content. You can drag and drop assets from this list directly into your game.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "If you wish to re-organize your Premium Assets you can copy them to your folder structure in the same ways as your library search results. You can even copy entire sets directly into your folders.",
            place: "left"
        }, {
            group: 3,
            el: "#switchtouserlibrary",
            text: "The My Library tab shows all of the assets you've uploaded and the folder structure you can use to organize them.",
            place: "left",
            setup: function() {
                $("#switchtouserlibrary").trigger("click")
            }
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Your Recent Uploads is the home of your uploaded files. You add a file to your art library by dragging it onto the tabletop from outside the app.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Direct uploading supports JPG and PNG file formats.",
            place: "left"
        }, {
            group: 3,
            el: "#imagedialog .btn.showuploaddialog",
            text: "You can also upload files via the Upload button, to browse files on your computer.",
            place: "left",
            setup: function() {
                $("html, #imagedialog").animate({
                    scrollTop: 0
                })
            }
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Once you have the assets you want in your library, you can organize them in the folder structure.",
            place: "left"
        }, {
            group: 3,
            el: "#imagedialog .btn.showuploaddialog",
            text: "You can add folders to your library by clicking on the Add button, or right-clicking and selecting the Add Subfolder option.",
            place: "left-bottom",
            setup: function() {
                $("html, #imagedialog").animate({
                    scrollTop: 0
                })
            }
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "You can drag your art assets into any open folder by its handle, the three lines that appear when hovering over.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Then you can nest assets and folders up to five levels deep.",
            place: "left",
            setup: function() {
                $("html, #imagedialog").animate({
                    scrollTop: $("#imagedialog .recentuploadsfilter").offset().top - $(window).height() / 2
                })
            }
        }, {
            group: 3,
            el: "#imagedialog .recentuploadsfilter",
            text: "Selecting this button filters your Recent Uploads to only show files that are not already copied into your folder structure. This can help ensure you've organized all your files.",
            place: "left"
        }, {
            group: 3,
            el: "#recentuploads",
            text: "Be careful when deleting items from Recent Uploads. Once a file has been deleted from here, it's gone for good. That means it will disappear from all existing games you're using it in and there is no way to recover the image unless you upload it again and re-add it as you need.",
            place: "top"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "Clicking on an asset in your library will open a Folder View.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "From the folder view you can mass move assets, mass add or remove tags, or mass delete.",
            place: "left",
            setup: function() {
                "true" != $("#libraryview").attr("data-isopen") && $("#recentuploads").find(".dd-item").length > 0 && $("#recentuploads").find(".dd-item .dd-content").first().trigger("click")
            }
        }, {
            group: 3,
            el: "#libraryview .selected",
            text: "The asset you clicked on to open the Folder View will be highlighted. To select or un-select assets left-click on them.",
            place: "bottom",
            setup: function() {
                0 === $("#libraryview .selected").length && $("#libraryview .library-container").first().trigger("click")
            }
        }, {
            group: 3,
            el: "#tutorial-center",
            text: "You can rename a token by clicking on its name in the Folder View. You can also add or remove tags in the same way.",
            place: "top"
        }, {
            group: 3,
            el: "#tutorial-center",
            text: "When viewing your Recent Uploads in the Folder View you can also get meta data about your files, including the day they were uploaded, their file size, and your total storage quota and usage.",
            place: "top"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "With at least one item selected, you can drag items from your Folder View into your file structure to Mass Move.",
            place: "left"
        }, {
            group: 3,
            el: "#rightsidebar",
            text: "You can also add files to a folder by dragging them from your folder structure into the Folder View to append them to the beginning of that folder.",
            place: "left"
        }, {
            group: 3,
            el: "#tutorial-center",
            text: "The Folder View has a context menu, right-click, with tools to Select All items in the Folder View and Mass Delete Selected Items.",
            place: "top"
        }, {
            group: 3,
            el: "#tutorial-center",
            text: "If you're using the Folder View to organize a folder from your library and not your Recent Uploads, you can also Add Subfolders, Mass Add and Remove Tags, and Sort your folders alphabetically.",
            place: "top"
        }, {
            group: 4,
            el: "#tutorial-center",
            text: "The lines you drew earlier are considered drawings. They are simpler and are not as rigidly attached to the VTT grid as images.",
            place: "top",
            setup: function() {
                "true" === $("#libraryview").attr("data-isopen") && ($("#libraryview").dialog("close"),
                $("#libraryview").attr("data-isopen", "false"))
            }
        }, {
            group: 4,
            el: "#tutorial-center",
            text: "Images added to the VTT are considered \u201cTokens\u201d. Tokens have many features that drawings do not have, like radial bubbles, status icons, and can be paired to represent characters.",
            place: "top",
            setup: function() {
                a()
            }
        }, {
            group: 4,
            el: "#tutorial-center",
            text: "Click your token. The eight blue boxes around the token allow you to resize the image. The single blue box coming from the top of the token allows you to rotate your image. Give it a try! Rotate or resize your image to continue.",
            place: "top",
            waitfor: "change:graphic",
            auto: !0,
            oncomplete: function() {
                extoken = page.thegraphics.models[0],
                d20.engine.unselect(),
                d20.engine.select(extoken.view.graphic),
                t(extoken)
            }
        }, {
            group: 4,
            el: "#tutorial-center",
            text: "Clicking on your token will reveal its Radial Menus.",
            place: "bottom"
        }, {
            group: 4,
            el: ".button.button-3",
            text: "The colors for the three radial menu bubbles can be customized by visiting the My Settings tab discussed later in this tutorial.",
            place: "bottom"
        }, {
            group: 4,
            el: ".button.button-3",
            text: "The radial menu bubbles are good for tracking stats that might change regularly, like ammo or HP. These stats can be linked to an attribute once a character sheet has been assigned to the token.",
            place: "bottom",
            setup: function() {
                extoken = page.thegraphics.models[0],
                d20.engine.unselect(),
                d20.engine.select(extoken.view.graphic)
            }
        }, {
            group: 4,
            el: ".button.button-3",
            text: "Add numbers to the radial menu bubbles by clicking on the radial, adding a number and hitting Enter. Try updating a bubble to continue.",
            place: "bottom",
            waitfor: "change:graphic",
            auto: !0
        }, {
            group: 4,
            el: ".button.button-3",
            text: "You can also apply math to bubbles that already have a number. For example, if you were tracking hit points you could type '-1' after a hit and it would subtract one from the current total or '+5' after drinking a potion.",
            place: "bottom"
        }, {
            group: 4,
            el: ".button.button-2",
            text: "The Icon Menu is good for tracking conceptual ideas or status effects on a token. You can click to add any number of markers. Reselecting the marker from the menu removes the status icon.",
            place: "left"
        }, {
            group: 4,
            el: ".button.button-2",
            text: "Optionally you can hover over the icon in the menu and press the number keys, zero through nine, to add numbers to the icon marker. Give it a try! Add a status icon to your token from the icon menu to continue. ",
            place: "left",
            waitfor: "change:graphic",
            auto: !0,
            oncomplete: function() {
                extoken = page.thegraphics.models[0],
                d20.engine.unselect(),
                d20.engine.select(extoken.view.graphic)
            }
        }, {
            group: 4,
            el: ".button.button-1",
            text: "The Token Settings Menu allows you to set the player permissions for the token. You can access the token settings by clicking this icon or double-clicking the token.",
            place: "left"
        }, {
            group: 4,
            el: ".button.button-1",
            text: "By default players have no control over a token. If you are using characters from the journal in your game, a token can also be assigned to represent a specific character and share its attributes.",
            place: "left",
            oncomplete: function() {
                extoken = page.thegraphics.models[0],
                extoken.trigger("showtokeneditor")
            }
        }, {
            group: 4,
            el: ".basic.tab-pane .name",
            text: "This is what the token settings menu looks like when it's open. You can name your token from this box. To make the token's name visible to everyone from the VTT check the \u201cShow nameplate?\u201d checkbox.",
            place: "right"
        }, {
            group: 4,
            el: ".basic.tab-pane .name",
            text: "To update a field, like the name box, click on the field, type in the new value, and either press the enter key or click outside of the field. Give your token a name to continue.",
            place: "right",
            waitfor: "blur:.name",
            auto: !0
        }, {
            group: 4,
            el: ".basic.tab-pane .chzn-container",
            text: "In this box you can select which players can manipulate or use this token. By default only the GM can control a token until other players are added to this field. Some or all players can be given access.",
            place: "right"
        }, {
            group: 4,
            el: ".basic.tab-pane .represents",
            text: "If a player controls a character and the token has been set to represent that character, the player will automatically gain control over the token.",
            place: "right"
        }, {
            group: 4,
            el: ".basic.tab-pane .bar1_value",
            text: "You can also set the maximum for a radial attribute. The box to the left represents the current value displayed above the token. The box on the right represents the maximum value.",
            place: "left"
        }, {
            group: 4,
            el: ".basic.tab-pane .bar1_value",
            text: "Max attributes are useful for settings things like total hit points or the number of arrows that fit in a quiver. Once a max attribute is filled out the token will display a bar above, representing the ratio of current to maximum.",
            place: "left"
        }, {
            group: 4,
            el: ".basic.tab-pane .bar1_value",
            text: "Set the Max number for your Token's Bar 1 Radial Menu Bubble, then hit the Enter key or click outside of the field to continue.",
            place: "left",
            waitfor: "blur:.bar1_max",
            auto: !0
        }, {
            group: 4,
            el: ".basic.tab-pane .aura1_radius",
            text: "Up to two auras can be set to represent ranges, fields of vision, or other indicators. Auras can be circular or square, and have the same color options as players.",
            place: "left"
        }, {
            group: 4,
            el: ".basic.tab-pane .aura1_radius",
            text: "Auras default to circular unless the 'Square' checkbox is selected. They measure the radius of the aura by the same dimensions the tabletop uses for measurement, in this case feet, customizable from the Page Settings Menu discussed later in this tutorial.",
            place: "left"
        }, {
            group: 4,
            el: ".basic.tab-pane .aura1_radius",
            text: "Adding a numerical value to the box will automatically turn on the aura. Try adding a 10 foot aura now to continue.",
            place: "left",
            waitfor: "blur:.aura1_radius",
            auto: !0
        }, {
            group: 4,
            el: ".ui-dialog .ui-dialog-buttonset",
            text: "The 'Save Changes' button will save and impliment your changes. The 'Cancel' button will discard your changes. Go ahead and 'Save Changes' now to continue.",
            place: "left",
            waitfor: "change:graphic",
            auto: !0
        }, {
            group: 4,
            el: "#tutorial-center",
            text: "As you can see your named token now has both a status bar and an aura.",
            place: "top"
        }, {
            group: 5,
            el: "#measure",
            text: "The Measure Tool allows you to determine distances between locations on the VTT.",
            place: "right",
            setup: function() {
                $("#measure").trigger("click")
            }
        }, {
            group: 5,
            el: "#measure",
            text: "The measure tool uses the same units of measurement as the page, which can be adjusted from the Page Settings discussed later in this tutorial.",
            place: "right"
        }, {
            group: 5,
            el: "#measure",
            text: "Click and drag anywhere on the VTT to measure the distance from the starting point.",
            place: "right",
            waitfor: "measure",
            auto: !0
        }, {
            group: 5,
            el: "#measure",
            text: "With the grid turned on the measuring tool rigidly snaps to the page unit. By holding the Alt key, you can detach the measure tool to get a more granular measurement.",
            place: "right"
        }, {
            group: 5,
            el: "#tutorial-center",
            text: "Similar to the measure tool, you can check the distance of how far a token has been moved.",
            place: "top",
            setup: function() {
                a()
            }
        }, {
            group: 5,
            el: "#tutorial-center",
            text: "While moving a token with the select tool, you can press the Spacebar key to check the distance you've moved the token. Try measuring while you move with the Spacebar now to continue.",
            place: "top",
            waitfor: "change:graphic",
            auto: !0,
            setup: function() {
                $("#select").trigger("click"),
                extoken = page.thegraphics.models[0],
                d20.engine.unselect(),
                d20.engine.select(extoken.view.graphic)
            }
        }, {
            group: 5,
            el: "#tutorial-center",
            text: "You can also set waypoints by pressing the Spacebar key multiple times before setting the token down, creating a defined path for the token. Try moving the token and pressing the Spacebar multipletimes before setting the token down.",
            place: "top",
            waitfor: "change:graphic",
            auto: !0
        }, {
            group: 5,
            el: "#tutorial-center",
            text: "Pressing Spacebar after you've set a token down will show it's last movement, the starting point, and the distance it traveled.",
            place: "top"
        }, {
            group: 5,
            el: "#measure",
            text: "All players can see the measure tool and token path for a few seconds after you've finished measuring.",
            place: "right",
            setup: function() {
                d20.engine.canvas.fire("selection:cleared"),
                d20.engine.redrawScreenNextTick()
            }
        }, {
            group: 6,
            el: "#editinglayer",
            text: "The VTT is organized into several layers. The Token Layer is selected by default and is what players can see and interact with.",
            place: "right-bottom",
            setup: function() {
                a()
            }
        }, {
            group: 6,
            el: "#editinglayer",
            text: "The other layers we'll explore today are the GM Layer and the Maps and Background Layer.",
            place: "right-bottom"
        }, {
            group: 6,
            el: "#editinglayer",
            text: "There is one additional layer used for dynamic lighting effects that is only available to users with a premium subscription. We won't be covering dynamic lighting in this tutorial so for more information check out <a href='https://wiki.roll20.net/Dynamic_Lighting?utm_source=\troll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=dynamic%20lighting'>Dynamic Lighting</a> on the Roll20 Wiki.",
            place: "right-bottom",
            oncomplete: function() {
                $(".choosemap").trigger("click")
            }
        }, {
            group: 6,
            el: "#editinglayer",
            text: "The map layer is behind all other objects. Players can see images on the map layer but can never interact with them.",
            place: "right-bottom"
        }, {
            group: 6,
            el: "#tutorial-center",
            text: "We've selected the map & background layer for you. As you can see objects like drawings and tokens that were on the token layer are now semi-opaque and are no longer targetable. This ensures that as you add new elements to either layer you won't disrupt your work on the other.",
            place: "top",
            oncomplete: function() {
                $("#ui-id-2").trigger("click"),
                $("html, #imagedialog").animate({
                    scrollTop: 0
                })
            }
        }, {
            group: 6,
            el: "#rightsidebar",
            text: "You can add a background image to the tabletop by using the art library. Try searching for 'dungeon' making sure to switch your search to \u201cMaps, Tiles, Textures\u201d, or you can import your own map from the desktop. Drag and drop a background onto the map & background layer continue.",
            place: "left-bottom",
            waitfor: "add:graphic",
            auto: !0
        }, {
            group: 6,
            el: "#tutorial-center",
            text: "You can move and resize map pieces in the same way you were able to edit your token.",
            place: "top"
        }, {
            group: 6,
            el: "#tutorial-center",
            text: "Right clicking on your map reveals a context menu that will allow you to set the map as a drawing, flip, reorder layers, and much more. Try editing your map now.",
            place: "top",
            oncomplete: function() {
                $(".choosegmlayer").trigger("click")
            }
        }, {
            group: 6,
            el: "#editinglayer",
            text: "We've activated the GM Info Layer for you. This layer is unique in that the players will never be able to see or interact with anything on this layer, making it an ideal place to leave notes or labels with the text tool, stage hidden enemies, place traps, or other prepared events.",
            place: "right-bottom",
            oncomplete: function() {
                $(".chooseobjects").trigger("click")
            }
        }, {
            group: 6,
            el: "#editinglayer",
            text: "Switching back to the object & token layer essentially \u201clocks\u201d the GM and map layers, allowing you to move tokens without accidentally editing the map or your notes.",
            place: "right-bottom"
        }, {
            group: 6,
            el: "#editinglayer",
            text: "Items on the GM layer are slightly transparent, a setting that can be adjusted from the page settings menu and will be explained later in this tutorial.",
            place: "right-bottom"
        }, {
            group: 7,
            el: "#tutorial-center",
            text: "There are several ways to communicate with your players. You can \u201cping\u201d a location on the map by holding left click on the VTT.",
            place: "top"
        }, {
            group: 7,
            el: "#tutorial-center",
            text: "A circular \u201cping\u201d that is visible to all players will appear on the map. The color of the ping matches your player color.",
            place: "top"
        }, {
            group: 7,
            el: "#tutorial-center",
            text: "GM\u2019s can hold Shift and \u201dping\u201d to focus the map on the area for all players, drawing their focus.  \u201cPing\u201d or Shift-\u201dping\u201d anywhere on your map to continue.",
            place: "top",
            waitfor: "userSentPing",
            auto: !0,
            oncomplete: function() {
                a()
            }
        }, {
            group: 7,
            el: "#tutorial-center",
            text: "Pressing Z on a highlighted token or drawing will open a shadow box, allowing you to see your Token at high resolution.",
            place: "top"
        }, {
            group: 7,
            el: "#tutorial-center",
            text: "GM\u2019s can also hold Shift-Z to open the item for all players, useful for highlighting a piece of art or revealing previously unknown details. Press Z to reveal the shadow box to continue.",
            place: "top",
            waitfor: "keydown:90",
            auto: !0,
            setup: function() {
                extoken = page.thegraphics.models[0],
                d20.engine.unselect(),
                d20.engine.select(extoken.view.graphic),
                $("#finalcanvas").focus()
            }
        }, {
            group: 7,
            el: ".video",
            text: "Click anywhere on the VTT to close the shadow box.",
            place: "top-right",
            oncomplete: function() {
                $("#lightly-overlay").trigger("click")
            }
        }, {
            group: 7,
            el: "#tutorial-center",
            text: "Voice and video are the primary communication methods used on Roll20. The default method uses the internal video and voice options powered by WebRTC technology. Roll20 also supports Google Hangouts integration and is compatible with other 3rd Party Video or VOIP software.",
            place: "top"
        }, {
            group: 7,
            el: ".player",
            text: "Video and voice will automatically turn on as soon as one other player joins the game. The GM can choose to disable or change the size options for the video display from the My Settings tab discussed later in this tutorial.",
            place: "top-right"
        }, {
            group: 7,
            el: "#tutorial-center",
            text: "Players can use voice and video through Google Hangouts by selecting the dropdown arrow next to the Join Game button on the <a href='https://wiki.roll20.net/Game_Management?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=game%20details#Game_Details'>Game Detail's page</a>, outside of the VTT.",
            place: "top",
            oncomplete: function() {
                $("#ui-id-1").trigger("click")
            }
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "The Text Chat tab has many uses. It's primarily function is communicating in text between players.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "Chat is persistent, meaning it doesn't dissapear, between game sessions and can be reviewed any time from the <a href='https://wiki.roll20.net/Game_Management?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=chat%20archive#Menu'>Chat Archive</a> available from the Game Details page.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "In a normal game you would also be provided with a join link, visible only to the GM. This link is the key to getting into your game. Only share this link with players you would like to invite to play.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "If you kick a player out of a game, an option available from the <a href='https://wiki.roll20.net/Game_Management?utm_source=roll20&utm_medium=tutoril&utm_content=wiki&utm_campaign=kick%20player#Players'>Game Detail's</a> page, the join link will automatically change.",
            place: "left"
        }, {
            group: 8,
            el: "#textchat-input",
            text: "The are several ways to communicate through the chat box, from emotes to whispers and more.",
            place: "top"
        }, {
            group: 8,
            el: "#textchat-input",
            text: "You can speak as the GM or a character using the chat box. By default you'll speak Out of Character. Use the 'As:' dropdown menu to select a different character.",
            place: "top"
        }, {
            group: 8,
            el: "#textchat-input",
            text: "Emotes are formatted as center aligned, bold, italicized, and set in an orange font to highlight. Give it a try! Type <span style='color:#ed008c'>/em waves</span> and click the Send button or hit the Enter key to continue.",
            place: "top",
            waitfor: "receivedChat:emote",
            auto: !0
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "You can Whisper to other players or the GM in the Chat box. A whisper is a private message that no one else can see except the sender and the recipient.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "Type '/w name message' to whisper.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "For complex multiword names you can put the name in quotes. To whisper the GM of the game you can just type '/w gm'.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "There is a tab-auto-complete function for names to speed up this process. Once you start typing Roll20 will show you a list of players and characters to choose from. Hit tab to allow the autocomplete to fill in the selected choice.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "When new players join your game their names will be added to the auto complete list. Give it a try! Type <span style='color: #ed008c'>/w gm Hello!</span> to continue.",
            place: "left",
            waitfor: "receivedChat:whisper",
            auto: !0
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "You can talk out of character using the chat box. Type /ooc or /o and your text to speak as yourself. OOC entries always appear as the player rather than the Character you have selected in the \"Speaking As\" drop-down. Give it a try! Type <span style='color: #ed008c'>/ooc I love Roll20</span> to speak out of character.",
            place: "left",
            waitfor: "receivedChat:general",
            auto: !0
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "GM\u2019s have exclusive chat commands available, /desc, /as, and /emas.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "Adding text following the /desc command will appear as description not having been spoken by anyone.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "This is a great tool for the GM to describe or announce something in a scene without having to go out of character. Descriptions are formatted as center aligned, bold, italicized, and set in a black font with a light grey highlight.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "The GM can speak or emote as a character if an entry has been made in the Journal Tab. The GM uses the /as or /emas commands to quickly assume the identity of a character without having to change the 'As:' dropdown.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "You can use basic Markdown syntax in your text chat messages. You can use **text to bold**, *text to italicize*, and [link or image](url).",
            place: "left"
        }, {
            group: 8,
            el: "#textchat-input",
            text: "Give it a try! Click the Send button to continue.",
            place: "top",
            waitfor: "receivedChat:general",
            auto: !0,
            setup: function() {
                $("#textchat-input textarea").val("*I* **love** [Roll20](https://app.roll20.net)")
            }
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "Rolling dice in Roll20 is easy. You can use /roll or /r and then a dice formula to make a roll. Give it a try! Type <span style='color: #ed008c'>/r 1d20+5</span> and hit Send to continue.",
            place: "left",
            waitfor: "receivedChat:rollresult",
            auto: !0
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "If you want to roll in secret, you can use /gmroll plus a dice formula to perform a roll that only you and the GM can see. GM\u2019s can use /gmroll to roll in secret to themselves. Give it a try! Type <span style='color: #ed008c'>/gmroll 1d20+5</span> and hit Send to continue.",
            place: "left",
            waitfor: "receivedChat:gmrollresult",
            auto: !0
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "For a more compact roll representation, take advantage of inline dice rolls. Inline rolls can be used inside other types of chat messages like emotes or whispers.",
            place: "left"
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "Inline rolls can use normal dice formulas. They only show the result of the total roll in a compact format and feature critical/success color coding. Give it a try! Type <span style='color: #ed008c'>Attack: [[1d20+5]]</span> and hit Send to continue.",
            place: "left",
            waitfor: "receivedChat:general",
            auto: !0
        }, {
            group: 8,
            el: "#rightsidebar",
            text: "Hover your mouse over the result, the small yellow box in the chat, to see a tool tip with the full roll.",
            place: "left"
        }, {
            group: 9,
            el: "#diceroller",
            text: "The Dice Rolling GUI (Graphical User Interface) is an easy to use dice rolling tool. Click the d20 icon in the Toolbox to continue.",
            place: "right",
            waitfor: "click:#diceroller",
            auto: !0,
            setup: function() {
                $("#enable3ddice:checked").length > 0 && ($("#enable3ddice").trigger("click"),
                window.currentPlayer.save({
                    tddiceenabled: !1
                }))
            }
        }, {
            group: 9,
            el: ".basicroll",
            text: "Basic rolls can be performed from the GUI. Perform a basic roll by clicking on any of the quick roll buttons to continue.",
            place: "left",
            waitfor: "click:.basicroll",
            auto: !0
        }, {
            group: 9,
            el: ".numdice",
            text: "Advanced rolls such as adding a modifier can be performed from the GUI too. Change the options as needed. Perform an advanced such as 2d6+5 and hit Roll! to continue.",
            place: "left",
            waitfor: "click:.rolladvanced",
            auto: !0
        }, {
            group: 9,
            el: ".recentroll",
            text: "Your last 10 rolls are displayed in the GUI. Save time by clicking on commonly used formulas during your game.",
            place: "left"
        }, {
            group: 9,
            el: "#tutorial-center",
            text: "We've enabled 3D Dice which can be enabled or disabled from the My Settings tab at any time.",
            place: "top",
            setup: function() {
                $(".ui-dialog-titlebar-close").trigger("click"),
                0 === $("#enable3ddice:checked").length && ($("#enable3ddice").trigger("click"),
                window.currentPlayer.save({
                    tddiceenabled: !0
                }),
                d20.tddice.addRenderer())
            },
            dostepif: window.Detector.webgl
        }, {
            group: 9,
            el: "#tutorial-center",
            text: "Try out the 3D dice now by making a roll from the dice GUI or the chat tab. Follow the click and drag instructions to roll the dice and continue.",
            place: "top",
            waitfor: "receivedChat:rollresult",
            auto: !0,
            dostepif: window.Detector.webgl
        }, {
            group: 9,
            el: "#tutorial-center",
            text: "You can turn off Dice Agency, so that the 3D dice roll automatically without you having to 'throw' them. You can find this option in the My Settings tab or by clicking the 'Disable' option when prompted.",
            place: "top",
            dostepif: window.Detector.webgl
        }, {
            group: 9,
            el: "#tutorial-center",
            text: "You don't currently have WebGL enabled and so aren't able to take advantage of Roll20's 3D dice. Consider enabling WebGL in order to get the most out of your Roll20 experience.",
            place: "top",
            dostepif: !window.Detector.webgl
        }, {
            group: 9,
            el: "#tutorial-center",
            text: "Roll20 supports a wide array of dice mechanics. Visit our <a href='https://wiki.roll20.net/Dice_Reference?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=dice%20reference'>Dice Reference</a> Wiki for more information.",
            place: "top"
        }, {
            group: 10,
            el: ".handle.showtip",
            text: "Select the page icon to open the Page Toolbar dropdown.",
            place: "bottom",
            waitfor: "click:.handle.showtip",
            auto: !0
        }, {
            group: 10,
            el: ".pages.ui-sortable",
            text: "Pages are an excellent way to managing locations, settings, time, encounters, or content. The red Player Bookmark determines what page the players are on. You can click and drag the bookmark to move your players from page to page.",
            place: "bottom"
        }, {
            group: 10,
            el: ".video",
            text: "Once you have other players in your game, you can click and drag a player\u2019s portrait from the bottom of the VTT onto a page. This will split the party placing that player on a different page than the player bookmark. You can recombine the group by dragging their portraits back onto the player bookmark.",
            place: "right-top"
        }, {
            group: 10,
            el: ".availablepage",
            text: "Add new pages from the page toolbar. Click on the Create New Page button to add a new Untitled page to the end of your page list to continue.",
            place: "bottom-right",
            waitfor: "add:page",
            auto: !0
        }, {
            group: 10,
            el: "#page-toolbar",
            text: "You can rename your page by clicking on its name to enter edit mode.",
            place: "bottom"
        }, {
            group: 10,
            el: ".playerbookmark",
            text: "Hover over the page that has the player bookmark to access the Page Settings. Click the gear icon to continue.",
            place: "bottom",
            waitfor: "click:.settings",
            auto: !0
        }, {
            group: 10,
            el: ".ui-dialog",
            text: "You can use the page settings to change the dimensions of your scene, the unit of measurement, and the page's background color.",
            place: "left"
        }, {
            group: 10,
            el: ".ui-dialog",
            text: "You can also enable or disable the grid and change its settings, such as square or hex grids or the color and opacity of the grid lines.",
            place: "left"
        }, {
            group: 10,
            el: ".ui-dialog",
            text: "At the bottom of the page settings are options to archive or delete the page. An archived page isn't loaded normally with the game but can be recovered at any time. A deleted page is gone for good.",
            place: "left"
        }, {
            group: 10,
            el: ".ui-dialog",
            text: "Just above these buttons you can set the page's lighting options. Enable Fog of War by checking the box to continue.",
            place: "left",
            waitfor: "click:.darknessenabled",
            auto: !0,
            oncomplete: function() {
                $(".ui-button").trigger("click"),
                $(".handle.showtip").trigger("click")
            }
        }, {
            group: 11,
            el: "#fogcontrols",
            text: "With fog of war enabled the map appears semi-opaque. This opacity can be set from the page settings menu. To your players the page appears completely black. They are unable to see anything on the token or map layers.",
            place: "right",
            setup: function() {
                page = d20.Campaign.activePage(),
                !1 === page.attributes.showdarkness ? page.save({
                    showdarkness: !0,
                    fog_opacity: .35
                }) : page.save({
                    fog_opacity: .35
                })
            },
            oncomplete: function() {
                setMode("fog-reveal")
            }
        }, {
            group: 11,
            el: "#fogcontrols",
            text: "We've selected the Reveal tool for you. Click and drag on the tabletop to create a box to be revealed, making the area you select visible to all your players. Hold Shift to snap your reveal to the grid. Give it a try! Reveal a section of the VTT to continue.",
            place: "right",
            waitfor: "fogReveal",
            auto: !0,
            oncomplete: function() {
                setMode("fog-hide")
            }
        }, {
            group: 11,
            el: "#fogcontrols",
            text: "You can use the Hide Areas tool to cover any parts of the map you may have revealed. This will obscure that part of the map again for all of your players. Click and drag on the VTT to recover part of your revealed area to continue.",
            place: "right",
            waitfor: "fogHide",
            auto: !0
        }, {
            group: 11,
            el: "#fogcontrols",
            text: "There are two other options available from the fog of war toolbox. The Polygonal tool allows you to cut out pieces of fog in the same way the polygonal draw tool allowed you to create shapes. While the Reset Fog option blankets the map in perfect darkness again.",
            place: "right"
        }, {
            group: 11,
            el: "#tutorial-center",
            text: "Roll20 offers Dynamic Lighting features that will automatically adjust vision and lighting in real time. For more information visit our <a href='https://wiki.roll20.net/Dynamic_Lighting'>Dynamic Lighting</a> Wiki.",
            place: "top",
            oncomplete: function() {
                page = d20.Campaign.activePage(),
                !0 === page.attributes.showdarkness && page.save({
                    showdarkness: !1
                })
            }
        }, {
            group: 12,
            el: "#ui-id-3",
            text: "The Journal Tab allows GMs to create Handouts, Characters, and organize Folders for their game.",
            place: "left-bottom",
            setup: function() {
                $("#select").trigger("click"),
                $("#ui-id-3").trigger("click")
            }
        }, {
            group: 12,
            el: ".superadd",
            text: "The +Add button allows you to add a new item to the game\u2019s journal. Click the +Add button and then select a Handout to continue.",
            place: "left-top",
            waitfor: "add:handout",
            auto: !0
        }, {
            group: 12,
            el: ".ui-dialog",
            text: "From this pop-up you can rename the handout, add an image, or add public or private notes.",
            place: "left"
        }, {
            group: 12,
            el: ".textboxlist",
            text: "Tags can be added for quick searching items in your journal. Giving journal items common sets of tags is useful for categorizing and quickly sorting sets of related journal entries. Like adding the tags 'Monster' and 'Swamp' to a NPC troll.",
            place: "left"
        }, {
            group: 12,
            el: "#selN0M_chzn",
            text: "By default your players can't see journal entries you've added. From this option you can set which players can view the handout from their journal and give them editing privileges.",
            place: "left"
        }, {
            group: 12,
            el: ".ui-dialog .ui-dialog-buttonset",
            text: "To confirm your changes click the Save Changes button to continue.",
            place: "left",
            waitfor: "click:.ui-button",
            auto: !0
        }, {
            group: 12,
            el: ".edithandout",
            text: "Along the top of the handout are several buttons. The Edit button opens the popout you first saw when you created your handout.",
            place: "left-bottom"
        }, {
            group: 12,
            el: ".broadcasthandout",
            text: "The Show to Players button will open the handout for your players on their screens. This button will only show the handout to players who have permission to view it. If no players have permission, you'll be prompted to show it to All Players.",
            place: "left-bottom"
        }, {
            group: 12,
            el: ".showpopout",
            text: "The popout button will open the handout in a new window, outside of the main browser window the VTT is in. This is useful for opening multiple character sheets or handouts.",
            place: "bottom-right",
            oncomplete: function() {
                $(".ui-dialog-titlebar").dblclick()
            }
        }, {
            group: 12,
            el: ".ui-dialog-titlebar",
            text: "Another useful trick is minimizing journal items. You can minimize by double clicking the title bar of any popup. You can maximize the handout again by double clicking.",
            place: "bottom",
            oncomplete: function() {
                $(".ui-dialog-titlebar").dblclick()
            }
        }, {
            group: 12,
            el: ".ui-dialog-titlebar",
            text: "Close the handout by clicking the X in the top right of your handout to continue.",
            place: "bottom",
            waitfor: "click:.ui-dialog-titlebar-close",
            auto: !0
        }, {
            group: 12,
            el: "#rightsidebar",
            text: "From the Journal tab, you can also right click on a journal item to reveal a context menu. This menu allows you to quickly show the journal item to players or delete it.",
            place: "left"
        }, {
            group: 12,
            el: ".video",
            text: "You can also click and drag the handout to a player portrait along the bottom of the screen to add it to the player\u2019s journal and immediately open it on their screen. Give it a try! Click and drag the top handout to your portrait.",
            place: "top-right",
            oncomplete: function() {
                $(".ui-dialog-titlebar-close").trigger("click")
            }
        }, {
            group: 12,
            el: "#rightsidebar",
            text: "The colored dots to the right of journal items represent which players have viewing privilages. If a journal item is visible to all players it will have a light blue dot. Otherwise the dot will correspond with the player's color.",
            place: "left"
        }, {
            group: 12,
            el: ".superadd",
            text: "Characters have all of the same options as handouts, including show to players and pop out, plus a few more. Click the +Add button, then select Character from the drop down to continue.",
            place: "left-top",
            waitfor: "add:character",
            auto: !0
        }, {
            group: 12,
            el: ".bioinfo",
            text: "From this window you can edit all of the same properties available to handouts. Name, access, tags, player and GM notes, and even add an avatar picture.",
            place: "left"
        }, {
            group: 12,
            el: "#selMNE_chzn",
            text: "When you give a player control over a character they have control over all of its tokens and are granted access to view and edit the character sheet.",
            place: "left"
        }, {
            group: 12,
            el: "#selMNE_chzn",
            text: "You can add a character sheet to your game from the Game Settings dropdown on the game settings page, outside of the VTT. For more information on character sheets and a guide to adding them to your game check out the <a href'https://wiki.roll20.net/Character_Sheets?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=character%20sheets#Choosing_a_Character_Sheet'>Roll20 Wiki</a>.",
            place: "left"
        }, {
            group: 12,
            el: ".defaulttoken",
            text: "The Default Token field gives you the ability to select a token on the tabletop and use it as a template for future tokens for that character.",
            place: "right"
        }, {
            group: 12,
            el: ".defaulttoken",
            text: "This is an ideal way to quickly add tokens to a page that are tied to characters you've prepared in advance. Instead of needing to set up a token each time you wish to use that character you can instead use the default token attached to the character sheet.",
            place: "right",
            setup: function() {
                a()
            }
        }, {
            group: 12,
            el: ".defaulttoken",
            text: "We've selected your token for you. Click the \u201cUse Selected Token\u201d button from the Edit Character window.",
            place: "right",
            waitfor: "change:character",
            auto: !0,
            setup: function() {
                setTimeout(function() {
                    extoken = page.thegraphics.models[0],
                    d20.engine.select(extoken.view.graphic),
                    $("#finalcanvas").focus()
                }, 100)
            },
            oncomplete: function() {
                $(".ui-button").trigger("click"),
                setTimeout(function() {
                    $(".ui-dialog-titlebar-close").trigger("click")
                })
            }
        }, {
            group: 12,
            el: ".journalitem.character",
            text: "Now that the default token is saved you can click and drag the character's name from the journal onto the VTT in order to make a copy of the default token. Drag a new copy of your character's token onto the VTT to continue.",
            place: "left",
            waitfor: "add:graphic",
            auto: !0
        }, {
            group: 12,
            el: "#tutorial-center",
            text: "The default token isn't paired with the token on the VTT. Changes made to the table token won't be reflected or remembered by the default token, which acts like a template producing 'fresh' copies with the settings from when the default token was first saved to the character.",
            place: "top"
        }, {
            group: 12,
            el: "#tutorial-center",
            text: "To make changes to the default template you have to remove the existing default token and select a new one from the VTT with the updated setting you wish to save.",
            place: "top",
            oncomplete: function() {
                charobj = d20.Campaign.characters.models[0],
                charobj.view.showDialog()
            }
        }, {
            group: 12,
            el: "a[data-tab=bioinfo]",
            text: "There are 3 character tabs. The first is a Bio & Info tab, similar to the description section of handouts. The other two are Character Sheet and Abilities & Attributes.",
            place: "bottom-right",
            oncomplete: function() {
                $("a[data-tab=charsheet]").trigger("click")
            }
        }, {
            group: 12,
            el: "a[data-tab=charsheet]",
            text: "The character sheet tab is only visible if a character sheet has been set from the game settings page accessible from outside the VTT on the game details page.",
            place: "bottom-right"
        }, {
            group: 12,
            el: "a[data-tab=charsheet]",
            text: "Each community-made character sheet is wildly different and has been created to suit the needs of the system it was designed for.",
            place: "bottom-right",
            oncomplete: function() {
                $("a[data-tab=attributesabilities]").trigger("click")
            }
        }, {
            group: 12,
            el: ".attributesabilities .span6",
            text: "The Attributes & Abilities tab has two lists. Attributes are automatically populated from the character sheet and represent persistent stats attached to the character.",
            place: "bottom"
        }, {
            group: 12,
            el: ".attributesabilities .span6",
            text: "You can manually add attributes here and if you modify them from this page the changes will be reflected on the character sheet.",
            place: "bottom"
        }, {
            group: 12,
            el: ".attributesabilities .span6:nth-child(2)",
            text: "Abilities are personal macros that only apply to this character. They use slightly different syntax than regular macros and are called using a different method.",
            place: "bottom"
        }, {
            group: 12,
            el: ".attributesabilities .span6:nth-child(2)",
            text: "This is a great space for players to prepare and automate their most common rolls. Abilities are copied over between games if the character is transferred.",
            place: "bottom",
            oncomplete: function() {
                $(".ui-dialog-titlebar-close").trigger("click")
            }
        }, {
            group: 12,
            el: "#rightsidebar",
            text: "Folders can be added to the journal to help organize your characters and handouts.",
            place: "left"
        }, {
            group: 12,
            el: ".superadd",
            text: "To continue, add a folder by clicking the +Add button and selecting Folder. Name the folder <span style='color: #ed008c'>Important Locations</span> and click OK to add it to your journal.",
            place: "left-top",
            waitfor: "folderChange",
            auto: !0
        }, {
            group: 12,
            el: ".dd-item.dd-folder",
            text: "Right click on the folder to reveal a context menu allowing you to directly add subfolders, characters, or handouts, as well as sort, rename, or delete folders.",
            place: "left"
        }, {
            group: 12,
            el: "#rightsidebar",
            text: "You can also rearrange folders or journal items by click on the three horizontal bars (the handle) that appears when hovering over the journal item and repositioning the item before letting go.",
            place: "left"
        }, {
            group: 12,
            el: "#rightsidebar",
            text: "Give it a try! Hover your mouse over one of your handouts, grab the three horizontal bars, and drag your handout just below your new folder.",
            place: "left",
            waitfor: "folderChange",
            auto: !0
        }, {
            group: 12,
            el: "#rightsidebar",
            text: "Characters and handouts can be sorted together and journal items can be nested, folders inside folders, up to four levels deep.",
            place: "left"
        }, {
            group: 13,
            el: "#rightsidebar",
            text: "The Jukebox allows you to add background music, sound effects, and more by accessing a wide selection of prepared audio options.",
            place: "left",
            setup: function() {
                $("#ui-id-4").trigger("click")
            }
        }, {
            group: 13,
            el: "#jukebox > div > button",
            text: "Click the +Add button to continue.",
            place: "left",
            waitfor: "click:.superadd.btn",
            auto: !0
        }, {
            group: 13,
            el: "#superjukeboxadd",
            text: "Click the Track option to open the Add Sound popup.",
            place: "left",
            waitfor: "click:#superjukeboxadd",
            auto: !0
        }, {
            group: 13,
            el: "#jukebox_search",
            text: "Using the Search For dropdown, select Sound Effects, enter a keyword like <span style='color: #ed008c'>Water</span>.",
            place: "left"
        }, {
            group: 13,
            el: "#jukebox_search",
            text: "To preview the tracks press the play button, and click the + icon on the track you wish to add. Add a track to your game to continue.",
            place: "left",
            waitfor: "add:playlist",
            auto: !0,
            oncomplete: function() {
                $("a[data-tab=tabletopaudio]").trigger("click")
            }
        }, {
            group: 13,
            el: "#jukebox_search",
            text: "These preloaded Tabletop Audio tracks are a great way to add ambiance to your games. You can browse the tracks by genre from the dropdown above.",
            place: "left"
        }, {
            group: 13,
            el: "#jukeboxfolderroot",
            text: "You can rename the tracks in your jukebox for easy management. Click the track name and change it to something like <span style='color: #ed008c'>Water</span> and hit the Enter key on your keyboard to continue.",
            place: "left",
            waitfor: "change:playlist",
            auto: !0
        }, {
            group: 13,
            el: "#jukeboxfolderroot",
            text: "All players will hear the track playing. You can control the volume from the slider and set the track to repeat by checking the Loop icon.",
            place: "left",
            oncomplete: function() {
                $(".ui-dialog-titlebar-close").trigger("click")
            }
        }, {
            group: 13,
            el: "#jukeboxfolderroot",
            text: "Playlists act much like journal folders, letting you sort and organize your tracks.",
            place: "left"
        }, {
            group: 13,
            el: "#jukebox > div > button",
            text: "You can add as many playlists to your game as you'd like from the +Add button.",
            place: "left",
            waitfor: "click:.superadd.btn",
            auto: !0
        }, {
            group: 13,
            el: "#addnewjukeboxfolder",
            text: "Click the Playlist option to add a newplaylist to your jukebox. Name your playlist <span style='color: #ed008c'>Water Effects</span> and hit OK to continue.",
            place: "left",
            waitfor: "click:#addnewjukeboxfolder",
            auto: !0
        }, {
            group: 13,
            el: ".dd-folder .dd-content",
            text: "Playlists have a few features and limitations that folders don't. Play lists can not be nested, playlists inside playlists, the way folders can.",
            place: "left"
        }, {
            group: 13,
            el: ".playlistcontrols",
            text: "Playlists also have three play options, shuffle, play all, and back-to-back. You can cycle through these options by clicking the icon next to the playlist.",
            place: "left"
        }, {
            group: 13,
            el: ".playlistcontrols",
            text: "Shuffling playlists will randomly select tracks. The track order is synced amongst players, so the order of music will stay the same.",
            place: "left"
        }, {
            group: 13,
            el: ".playlistcontrols",
            text: "Tracks will continue to play indefinitely until you stop the playlist, select a different playlist, or play an individual track.",
            place: "left"
        }, {
            group: 13,
            el: ".playlistcontrols",
            text: "Play all will simultaniously play every track in the playlist. This is a good option for creating sound scapes or enivornments, such as a cave soundscape made of a track that has dripping water and another that has echoing footsteps. Be sure to loop the individual tracks if you wish them to repeat.",
            place: "left"
        }, {
            group: 13,
            el: ".playlistcontrols",
            text: "The last playlist option plays each track in turn, back to back. When the last track of the playlist is finished, it will loop back to the top of the playlist and play again.",
            place: "left"
        }, {
            group: 13,
            el: "#jukeboxwhatsplaying",
            text: "Unlike the folder system, your players don't see any of your tracks or playlists. The only thing they see is this Now Playing widget, which shows which songs are actively playing.",
            place: "left"
        }, {
            group: 13,
            el: "#jukeboxwhatsplaying",
            text: "As the GM you can also stop any tracks playing right from the widget instead of having to scroll through your playlists to find the active one.",
            place: "left"
        }, {
            group: 13,
            el: ".handle.showtip",
            text: "A useful tool for prepared GMs is to set pages to automatically play a playlist or track when the player bookmark is moved.",
            place: "bottom"
        }, {
            group: 13,
            el: ".handle.showtip",
            text: "You can set this option from the page settings menu in the page toolbar.",
            place: "bottom"
        }, {
            group: 14,
            el: "#startrounds",
            text: "The Turn Tracker tool aids you and your players with turn-based games by presenting an interactive list to the group. Once it is open, the turn tracker is visible to all of the players.",
            place: "right",
            setup: function() {
                d20.Campaign.save({
                    initiativepage: !1
                }),
                d20.Campaign.save({
                    turnorder: "[]"
                })
            }
        }, {
            group: 14,
            el: "#startrounds",
            text: "Players will only see tokens that have been given turns on this page. As the GM you will see all tokens for all pages. Click the turn tracker tool in the toolbox to continue.",
            place: "right",
            waitfor: "click:#startrounds",
            auto: !0
        }, {
            group: 14,
            el: "#tutorial-center",
            text: "Add a token to the turn order by right clicking on the token to open the context menu and then selecting Add Turn. You can add multiple turns per token.",
            place: "left",
            setup: function() {
                a()
            }
        }, {
            group: 14,
            el: "#tutorial-center",
            text: "Give it a try! Right click your token and select Add Turn to add it to the turn order.",
            place: "left",
            waitfor: "addedTurn",
            auto: !0
        }, {
            group: 14,
            el: "#initiativewindow",
            text: "Clicking the number next to the token will allow you to track a turn related value, like initiative. You can also drag a roll result directly from the text chat to update the turn tracker.",
            place: "right"
        }, {
            group: 14,
            el: "#initiativewindow",
            text: "Optionally there are roll macros that will automatically add the selected token to the tracker with the result of the macro\u2019s roll. Learn more from our <a href='https://wiki.roll20.net/Macros?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=macros#Rolling_For_Initiative'>Macros wiki</a>.",
            place: "right"
        }, {
            group: 14,
            el: ".ui-dialog .ui-dialog-buttonset button:nth-child(2)",
            text: "To advance the turn in the tracker, click the arrow button to move the current turn from the top to the bottom of the list. Give it a try! Click the arrow to continue.",
            place: "right",
            waitfor: "click:.ui-dialog-buttonset button:nth-child(2)",
            auto: !0,
            setup: function() {
                if (initlist = JSON.parse(d20.Campaign.attributes.turnorder),
                initlist.length < 4) {
                    for (i = initlist.length; i < 4; i++)
                        initlist[i] = {
                            id: initlist[0].id,
                            pr: Math.floor(10 * Math.random()) + 1
                        };
                    d20.Campaign.save({
                        turnorder: JSON.stringify(initlist)
                    })
                }
            }
        }, {
            group: 14,
            el: ".ui-dialog .ui-dialog-buttonset",
            text: "Click the gear icon to open the tracker options menu.",
            place: "top",
            waitfor: "click:.ui-dialog-buttonset button:nth-child(1)",
            auto: !0
        }, {
            group: 14,
            el: "#initiativewindow_settings",
            text: "The tracker can be sorted numerically, alphabetically, or by card suit.",
            place: "left"
        }, {
            group: 14,
            el: ".customentry",
            text: "You can also add Custom Items that are not tied to the page or a token. Custom items can be given a Round Calculation that will modify their value every time they reach the top of the tracker.",
            place: "left"
        }, {
            group: 14,
            el: ".customentry",
            text: "For example creating a custom item with a round calculation of +1 would make a good round counter. The counter would increase by one every time it rotated back to the top of the turn order.",
            place: "left"
        }, {
            group: 14,
            el: ".clearlist",
            text: "After the end of every turn or page change, the turn order should be cleared. Click the red Remove All Turns (Clear List) button to continue.",
            place: "bottom",
            waitfor: "click:.clearlist",
            auto: !0,
            oncomplete: function() {
                $(".ui-dialog-buttonset button:nth-child(1)").trigger("click"),
                $(".ui-dialog-titlebar-close").trigger("click"),
                d20.Campaign.save({
                    initiativepage: !1
                })
            }
        }, {
            group: 15,
            el: "#ui-id-5",
            text: "The Macros section is located at the top of the Collection tab.",
            place: "left-bottom",
            setup: function() {
                $("#ui-id-5").trigger("click"),
                $("html, #deckstables").animate({
                    scrollTop: 0
                })
            }
        }, {
            group: 15,
            el: "#existingmacros",
            text: "You have the option to set up Global Macros from this area. As the GM you can make these macros accessible to some or all of your players.",
            place: "left"
        }, {
            group: 15,
            el: "#existingmacros",
            text: "Players can also create their own macros. Player created macros are not attached to a particular character the way abilities are.",
            place: "left"
        }, {
            group: 15,
            el: "#addmacro",
            text: "A macro requires both a name and an action, which could be a commonly used roll or text. To continue click the +Add button.",
            place: "left-bottom",
            waitfor: "click:#addmacro",
            auto: !0
        }, {
            group: 15,
            el: ".ui-dialog .tokenizer",
            text: "Name your macro and add text, an emote, or a roll to the Actions field. An example would be <span style='color: #ed008c'>/me stabs with their dagger</span> or <span style='color: #ed008c'>/roll 1d20+10 vs AC</span>.",
            place: "left"
        }, {
            group: 15,
            el: ".ui-dialog .tokenizer",
            text: "You can have several actions, texts, emotes, and rolls in the same macro. Each action must be on its own line.",
            place: "left"
        }, {
            group: 15,
            el: ".ui-dialog .btn.testmacro",
            text: "After you've input an action, click the Test Macro button to continue.",
            place: "bottom",
            waitfor: "click:.btn.testmacro",
            auto: !0,
            oncomplete: function() {
                $("#ui-id-1").trigger("click"),
                $("html, #textchat").animate({
                    scrollTop: $("#textchat").prop("scrollHeight")
                })
            }
        }, {
            group: 15,
            el: "#rightsidebar",
            text: "The results of the macro are automatically output to the Chat Tab.",
            place: "left",
            oncomplete: function() {
                $("#ui-id-5").trigger("click")
            }
        }, {
            group: 15,
            el: ".ui-dialog .istokenaction",
            text: "You can set the macro to be a Token Action. This displays the macro as a quickly selectable button hovering near the top left of the VTT near the toolbox whenever you have a token selected, set the player visibility, or delete the macro from the Edit Macro popup.",
            place: "left"
        }, {
            group: 15,
            el: ".ui-dialog .ui-dialog-buttonset button:nth-child(1)",
            text: "Click Save Changes to add your macro the the My Settings tab.",
            place: "left",
            waitfor: "click:.ui-dialog-buttonset button:nth-child(1)",
            auto: !0
        }, {
            group: 15,
            el: "#existingmacros",
            text: "After you have saved your macro, you can roll it from the My Settings tab by clicking on the d20 icon to the left of the macro's name.",
            place: "left"
        }, {
            group: 15,
            el: "#existingmacros",
            text: "You can add your macro to the Macro Quickbar located at the bottom of the screen by clicking on the In Bar checkbox.",
            place: "left"
        }, {
            group: 15,
            el: ".bartoggle",
            text: "Check the In Bar option to continue.",
            place: "left",
            waitfor: "click:.bartoggle",
            auto: !0
        }, {
            group: 15,
            el: "#macrobar_macros",
            text: "The macro quickbar is a useful place to store your most common rolls and access them at the touch of a button.",
            place: "right-top"
        }, {
            group: 15,
            el: "#macrobar_macros",
            text: "While hovering over a quickbar macro a small handle will appear to the right of the macro. Clicking and dragging that handle allows you to sort your macros in any order that works best for your game.",
            place: "right-top"
        }, {
            group: 15,
            el: "#macrobar_macros",
            text: "You can also right click on your quickbar macros to open a context menu with options to rename your macros or give them a color for better organization.",
            place: "right-top"
        }, {
            group: 15,
            el: "#existingmacros",
            text: "There are many options to customize macros, including nesting macros, calling abilities, selected and targeted macros, and much more. Please refer to our <a href='https://wiki.roll20.net/Macros?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=macros'>Macros wiki</a> to learn more.",
            place: "left"
        }, {
            group: 16,
            el: "#ui-id-5",
            text: "Decks of cards are available on the Collection tab.",
            place: "left-bottom",
            setup: function() {
                $("#ui-id-5").trigger("click"),
                $(d20.Campaign.decks).each(function(e) {
                    !0 === d20.Campaign.decks.models[e].attributes.shown && d20.Campaign.decks.models[e].save({
                        shown: !1
                    })
                })
            }
        }, {
            group: 16,
            el: "#existingdecks",
            text: "Every game has the traditional deck of 54 playing cards by default. You can show a deck by selecting the Show button which will make it visible to you and all of your players. Give it a try! Continue by clicking the Show button.",
            place: "left",
            waitfor: "click:.btn.toggledeck",
            auto: !0
        }, {
            group: 16,
            el: "#showndecks",
            text: "Decks that have been shown are visible along the right hand side of the VTT.",
            place: "top"
        }, {
            group: 16,
            el: "#showndecks",
            text: "Hover your mouse over the deck to reveal a context menu. This menu allows you to deal or recall cards as well as shuffle or hide the deck. To continue click the Shuffle option and confirm the shuffle in the popup.",
            place: "top",
            waitfor: "change:deck",
            auto: !0
        }, {
            group: 16,
            el: "#showndecks",
            text: "Hover your mouse over the deck. You should notice a card move up as you hover. Click and drag this card from the deck onto the VTT to continue.",
            place: "top",
            waitfor: "add:graphic",
            auto: !0
        }, {
            group: 16,
            el: ".video",
            text: "You can also drop cards onto a player portrait to deal to the player.",
            place: "top-right"
        }, {
            group: 16,
            el: "#tutorial-center",
            text: "Right click the card on the VTT to reveal its context menu. There you will find options like flipping the card over, putting the card into your hand, or using it to add a turn to the turn tracker.",
            place: "top"
        }, {
            group: 16,
            el: "#existingdecks",
            text: "Access the Card Menu by clicking the deck's name in the Decks & Tables tab.",
            place: "left",
            waitfor: "click:#existingdecks tr.deck",
            auto: !0
        }, {
            group: 16,
            el: ".playerscandraw",
            text: "You can edit the default behavior of a deck. These options include whether cards are drawn face up or down, if the player's hands are visible to each other, and much more.",
            place: "left"
        }, {
            group: 16,
            el: ".ui-dialog-buttonset",
            text: "Give it a try! Adjust any settings you desire and click Save Changes to continue.",
            place: "left",
            waitfor: "click:.ui-dialog-buttonset button:nth-child(1)",
            auto: !0
        }, {
            group: 16,
            el: "#existingdecks",
            text: "Players also have other options with cards, including stealing cards from each other, playing cards face up or down, and more. Check out our <a href='https://wiki.roll20.net/Card_Decks_and_Rollable_Tables?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=decks'>Card Deck wiki</a> for more information, including details on creating your own custom decks.",
            place: "left"
        }, {
            group: 17,
            el: "#ui-id-5",
            text: "The last group on the Collection tab are Rollable Tables.",
            place: "left-bottom",
            setup: function() {
                ($("#ui-id-5").trigger("click"),
                d20.Campaign.rollabletables.length < 1) && d20.Campaign.rollabletables.create({
                    name: "Example-Table",
                    showplayers: !0,
                    id: "-JwckdXhGhOq66Pxt8CR"
                }).tableitems.reset([{
                    id: "-JwckjGkDol1pNX_nslE",
                    avatar: "https://s3.amazonaws.com/files.staging.d20.io/images/37/tbRr3EhexsmNXLf0BG0LTw/med.png?1439498093",
                    id: "-JwckjGkDol1pNX_nslE",
                    name: "Rock"
                }, {
                    id: "-JwclTFJOiV8tYoOO9Gx",
                    avatar: "https://s3.amazonaws.com/files.staging.d20.io/images/38/_RLVKkuiAmyuCkrN4hDPOg/med.png?1439498119",
                    id: "-JwclTFJOiV8tYoOO9Gx",
                    name: "Scissors"
                }, {
                    id: "-JwclYPib8kYd8IiUFHm",
                    avatar: "https://s3.amazonaws.com/files.staging.d20.io/images/39/Z4zHrraGXYsfeYxtfVxmdg/med.png?1439498131",
                    id: "-JwclYPib8kYd8IiUFHm",
                    name: "Paper"
                }])
            }
        }, {
            group: 17,
            el: "#existingrollabletables",
            text: "Unlike decks there are no default rollable tables, but one has been included here as an example.",
            place: "left"
        }, {
            group: 17,
            el: "#existingrollabletables",
            text: "Rollable Tables can be used to create a result from a weighted list or randomly generate a token.",
            place: "left"
        }, {
            group: 17,
            el: "#existingrollabletables",
            text: "Rollable Tables are useful for fulfilling certain system mechanics, creating random tokens (such as randomly choosing from a pool of similar monster tokens), or tokens that have multiple images (such as a shape changer).",
            place: "left"
        }, {
            group: 17,
            el: ".rollabletable",
            text: "The Roll button will roll the table based on the table\u2019s weighted items. Give it a try! Click the Roll button to continue.",
            place: "left",
            waitfor: "click:.btn.rolltable",
            auto: !0,
            oncomplete: function() {
                $("#ui-id-1").trigger("click"),
                $("html, #textchat").animate({
                    scrollTop: $("#textchat").prop("scrollHeight")
                })
            }
        }, {
            group: 17,
            el: "#ui-id-1",
            text: "The table's result will be displayed in the text chat.",
            place: "left-bottom"
        }, {
            group: 17,
            el: "#textchat-input textarea",
            text: "You can roll tables directly from the chat with the syntax of '/roll 1t[table-name]'. For example you could roll the Example-Table twice by typing <span style='color: #ed008c'>/r 2t[Example-Table]</span>.",
            place: "left-top",
            oncomplete: function() {
                $("#ui-id-5").trigger("click")
            }
        }, {
            group: 17,
            el: "#existingrollabletables",
            text: "The Token button will create a new token from the roll result and place it on the table top. Give it a try! Continue by clicking Token to add the roll table Token to the VTT.",
            place: "left",
            waitfor: "click:.btn.tokentable",
            auto: !0
        }, {
            group: 17,
            el: "#tutorial-center",
            text: "Right click the rollable table token to reveal a context menu. Options are similar to the token and shape context menus with an additional \u201cMulti-Sided\u201d option. Use this to option to quickly change graphics for your tokens.",
            place: "right"
        }, {
            group: 17,
            el: "#existingrollabletables",
            text: "Add new tables using the +Add button and edit tables by clicking on the rollable table's name to open the table editor window. Items can be added to the list, each with their own name, image, and table weight.",
            place: "left"
        }, {
            group: 17,
            el: "#rightsidebar",
            text: "Rollable tables are very flexible tools. More information on this feature can be found on our <a href='https://wiki.roll20.net/Card_Decks_and_Rollable_Tables?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=rollable%20tables#Rollable_Tables'>Rollable Tables wiki</a>.",
            place: "left"
        }, {
            group: 18,
            el: "#ui-id-6",
            text: "Each player has their own settings accessible through the My Settings tab.",
            place: "left-bottom",
            setup: function() {
                $("#ui-id-6").trigger("click")
            },
            oncomplete: function() {
                $("html, #mysettings").animate({
                    scrollTop: $("#globalvolume").offset().top - $(window).height() / 2
                })
            }
        }, {
            group: 18,
            el: "#rightsidebar",
            text: "You can adjust the Master Volume slider to control your personal internal audio, music, and sound effect volume. This will not adjust the volume for your players who control their master volume from this same menu.",
            place: "left",
            oncomplete: function() {
                $("html, #mysettings").animate({
                    scrollTop: $("#videoplayersize").offset().top - $(window).height() / 2
                })
            }
        }, {
            group: 18,
            el: "#rightsidebar",
            text: "The My Settings menu also has options to adjust your video and voice preferences, including Avatar Size.",
            place: "left"
        }, {
            group: 18,
            el: "#rightsidebar",
            text: "Experienced users may find the Advanced Keyboard Shortcuts a critical time saver. Advanced shortcuts allow you to swap objects between layers or select tools at the touch of a button.",
            place: "left"
        }, {
            group: 18,
            el: "#rightsidebar",
            text: "To learn more about the other options listed in this tab, visit our <a href='https://wiki.roll20.net/My_Settings?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=my%20settings'>My Settings wiki</a>.",
            place: "left"
        }, {
            group: 19,
            el: "#tutorial-center",
            text: "Thank you for completing the Roll20 Tutorial!",
            place: "top",
            setup: function() {
                $("#ui-id-6").trigger("click"),
                $("html, #mysettings").animate({
                    scrollTop: $("#exitroll20game").offset().top
                })
            }
        }, {
            group: 19,
            el: "#exitroll20game",
            text: "Visit our <a href='https://wiki.roll20.net/Main_Page?utm_source=roll20&utm_medium=tutorial&utm_content=wiki&utm_campaign=main%20page'>wiki</a> for more insight into Roll20. To complete the tutorial, click the Exit Game button. Happy Rolling!",
            place: "bottom",
            waitfor: "We believe in nothing, Lebowski. Nothing. And tomorrow we come back and we cut off your chonson.",
            auto: !0,
            setup: function() {
                $.post("/editor/add_tutorial_achievement/")
            }
        }];
        d20.tutorial.begin = function() {
            for (var e in d20.tutorial.active = !0,
            d20.Campaign.activePage().path_semaphore.incr(),
            $("<div id='tutorial-center'></div>").appendTo("body"),
            $tutorial_toc = $("<div id='tutorial-toc'><p>Tutorial<span id='tutorial-hide' data-alt-text='show'>hide</span></p><div id='tutorial-content'><ul></ul></div></div>"),
            $tutorial_toc.appendTo("body"),
            $("#tutorial-hide").on("click", function() {
                var e = $(this).data("alt-text");
                $(this).data("alt-text", $(this).text()),
                $(this).text(e),
                $("#tutorial-content").slideToggle("fast")
            }),
            n)
                $tutorial_toc.find("ul").append("<li data-groupid='" + e + "'>" + n[e].name + "</li>");
            $tutorial_toc.on("click", "li", function() {
                $("#drawingtools div.submenu").hasClass("permaopen") && $("#drawingtools div.submenu").removeClass("permaopen");
                var e = 0
                  , t = !1
                  , n = parseInt($(this).attr("data-groupid"), 10);
                _.each(o, function(i) {
                    t || (i.group !== undefined && i.group === n && (t = !0,
                    l(e)),
                    e++)
                })
            }),
            tcenter = $("#tutorial-center").offset(),
            page = d20.Campaign.activePage(),
            l(0),
            d20.textchat.talktomyself = !0
        }
        ,
        checkcount = 0;
        var r = function(t, n) {
            if (checkcount > 30)
                return console.log("CANNOT FIND ELEMENT"),
                void (checkcount = 0);
            !1 === e(t.element) ? (t.position(n),
            t.show(),
            checkcount++,
            setTimeout(function() {
                r(t, n)
            }, 100)) : checkcount = 0
        }
          , a = function() {
            page = d20.Campaign.activePage();
            var e = Math.floor(d20.engine.currentCanvasOffset[0]) - d20.engine.paddingOffset[0];
            e += $(window).width() / 2,
            e += 15;
            var n = Math.floor(d20.engine.currentCanvasOffset[1]) - d20.engine.paddingOffset[1];
            n += $(window).height() / 2,
            n += 105,
            page.thegraphics.length < 1 ? (page.thegraphics.create({
                imgsrc: "https://s3.amazonaws.com/files.d20.io/marketplace/24942/ZV3yO__eTZQdD0zD5JLYhg/max.png?1377959792",
                top: n,
                left: e,
                height: 70,
                width: 70
            }),
            extoken = page.thegraphics.models[0],
            t(extoken)) : (extoken = page.thegraphics.models[0],
            extoken.save({
                top: n,
                left: e,
                lastmove: ""
            }),
            t(extoken))
        }
          , s = new Tooltip("Loading...")
          , l = function(e) {
            console.log("Show tutorial step " + e);
            var t = o[e];
            $("#tutorial-toc li").removeClass("active"),
            $("#tutorial-toc li[data-groupid=" + t.group + "]").addClass("active"),
            t.dostepif !== undefined && setTimeout(function() {
                !1 === t.dostepif && o.length - 1 > e && setTimeout(function() {
                    l(e + 1)
                })
            }),
            t.setup !== undefined && setTimeout(function() {
                t.setup()
            });
            var n = t.text + "<div id='activetutorialbutton' style='text-align: right; margin-top: 5px; display: none;'><a href='javascript:void(0);'>Next &rarr;</a></div>";
            s.content(n),
            s.place(t.place || "top"),
            s.position($(t.el)[0]),
            s.show(),
            r(s, $(t.el)[0]);
            var i = !1
              , a = function() {
                if (!i) {
                    if (i = !0,
                    !0 === t.auto)
                        return o.length - 1 > e && setTimeout(function() {
                            l(e + 1)
                        }, 100),
                        void (t.oncomplete !== undefined && setTimeout(function() {
                            t.oncomplete()
                        }, 1e3));
                    $("#activetutorialbutton").show()
                }
            };
            if (t.waitfor) {
                var c = t.waitfor.split(":");
                if ("mode" === c[0])
                    var u = setInterval(function() {
                        d20.engine.mode === c[1] && (a(),
                        clearInterval(u))
                    }, 100);
                else if ("add" === c[0] || "change" === c[0] || "remove" === c[0]) {
                    var d;
                    "path" === c[1] ? d = d20.Campaign.activePage().thepaths : "token" === c[1] || "graphic" === c[1] ? d = d20.Campaign.activePage().thegraphics : "text" === c[1] ? d = d20.Campaign.activePage().thetexts : "character" === c[1] ? d = d20.Campaign.characters : "handout" === c[1] ? d = d20.Campaign.handouts : "page" === c[1] ? d = d20.Campaign.pages : "playlist" === c[1] ? d = window.Jukebox.playlist : "deck" === c[1] ? d = d20.Campaign.decks : "rollabletable" === c[1] && (d = d20.Campaign.rollabletables);
                    var h = function() {
                        console.log("Heard " + c[0]),
                        d.off(c[0], h),
                        a()
                    };
                    d.on(c[0], h)
                } else if (-1 !== ["blur", "click"].indexOf(c[0])) {
                    h = function() {
                        console.log("Heard " + c[0]),
                        $(c[1]).off(c[0], h),
                        a()
                    }
                    ;
                    $(c[1]).on(c[0], h)
                } else if ("keydown" === c[0]) {
                    h = function(e) {
                        e.which === parseInt(c[1], 10) && (console.log("Heard " + c[0]),
                        $(document).off(c[0], h),
                        a())
                    }
                    ;
                    $(document).on("keydown", h)
                } else if (-1 !== ["userSentPing", "fogReveal", "fogHide", "folderChange", "addedTurn", "measure"].indexOf(c[0])) {
                    h = function() {
                        console.log("Heard " + c[0]),
                        $(document).off(c[0], h),
                        a()
                    }
                    ;
                    $(document).on(c[0], h)
                } else if ("receivedChat" === c[0]) {
                    h = function(e, t) {
                        console.log("Heard " + c[0]),
                        console.log(t),
                        t.type === c[1] && ($(document).off(c[0], h),
                        a())
                    }
                    ;
                    $(document).on(c[0], h)
                }
            } else
                a();
            $("#activetutorialbutton").on("click", function() {
                $("#activetutorialbutton").off(),
                console.log("Click!"),
                s.hide(),
                t.oncomplete !== undefined && setTimeout(function() {
                    t.oncomplete()
                }),
                o.length - 1 > e && setTimeout(function() {
                    l(e + 1)
                }, 100)
            })
        }
          , c = function() {
            d20.tutorial.begin(),
            d20.Campaign.decks.reset([{
                name: "Playing Cards",
                currentDeck: "",
                currentIndex: -1,
                currentCardShown: !0,
                showplayers: !0,
                playerscandraw: !0,
                avatar: "http://files.d20.io/images/1433/med.png?1335737429",
                shown: !1,
                players_seenumcards: !0,
                players_seefrontofcards: !1,
                gm_seenumcards: !0,
                gm_seefrontofcards: !1,
                infinitecards: !1,
                cardSequencer: -1,
                cardsplayed: "faceup",
                defaultheight: "",
                defaultwidth: "",
                discardpilemode: "none",
                discardPile: "",
                deckpilemode: "none",
                treatasdrawing: !0,
                id: "A778E120-672D-49D0-BAF8-8646DA3D3FAC",
                showhands: !0
            }]),
            d20.Campaign.decks.trigger("add"),
            d20.Campaign.decks.first().cards.reset([{
                name: "Six of Hearts",
                avatar: "http://files.d20.io/images/1464/med.png?1335737697",
                placement: 99,
                id: "0E7F0D1B-48B9-4B89-B848-76ECC494D3E1"
            }, {
                name: "Eight of Hearts",
                avatar: "http://files.d20.io/images/1466/med.png?1335737714",
                placement: 99,
                id: "110C9DF1-360D-40CC-ADAB-1D99F7FC302A"
            }, {
                name: "Seven of Hearts",
                avatar: "http://files.d20.io/images/1465/med.png?1335737705",
                placement: 99,
                id: "1252C24A-32B6-499E-A212-355ACAF3C732"
            }, {
                name: "Ace of Hearts",
                avatar: "http://files.d20.io/images/1472/med.png?1335737762",
                placement: 99,
                id: "13401808-636C-41AA-B7F0-A34D7ED987BF"
            }, {
                name: "Five of Spades",
                avatar: "http://files.d20.io/images/1476/med.png?1335737796",
                placement: 99,
                id: "190FCDB6-0271-481F-9F1A-BBC127287E39"
            }, {
                name: "Black Joker",
                avatar: "http://files.d20.io/images/1486/med.png?1335737876",
                placement: 99,
                id: "1E728ADC-33D0-4CD9-A1DE-D345C250845D"
            }, {
                name: "Six of Clubs",
                avatar: "http://files.d20.io/images/1438/med.png?1335737473",
                placement: 99,
                id: "2257A8D3-74C0-405A-A1EF-504EC2382D09"
            }, {
                name: "Seven of Clubs",
                avatar: "http://files.d20.io/images/1439/med.png?1335737481",
                placement: 99,
                id: "2AFEBEF8-3706-4F25-A3B9-2ECE232E1EC5"
            }, {
                name: "King of Hearts",
                avatar: "http://files.d20.io/images/1471/med.png?1335737754",
                placement: 99,
                id: "2D55728D-BC3C-41CF-9516-6E55D66ABBEE"
            }, {
                name: "Five of Diamonds",
                avatar: "http://files.d20.io/images/1450/med.png?1335737569",
                placement: 99,
                id: "33DA353A-C68E-4227-96C5-FA0F0F31341B"
            }, {
                name: "Five of Clubs",
                avatar: "http://files.d20.io/images/1437/med.png?1335737465",
                placement: 99,
                id: "34C6DEF9-ADEF-4F6B-9404-19B0861871C7"
            }, {
                name: "King of Diamonds",
                avatar: "http://files.d20.io/images/1458/med.png?1335737641",
                placement: 99,
                id: "3567727D-69A1-4B57-B08A-023412437248"
            }, {
                name: "Queen of Spades",
                avatar: "http://files.d20.io/images/1483/med.png?1335737852",
                placement: 99,
                id: "3666790F-C0DA-43AD-8E8E-23F59F00A0CF"
            }, {
                name: "Ten of Hearts",
                avatar: "http://files.d20.io/images/1468/med.png?1335737729",
                placement: 99,
                id: "36D907D6-B340-4809-A033-216C8BCF7159"
            }, {
                name: "Jack of Hearts",
                avatar: "http://files.d20.io/images/1469/med.png?1335737737",
                placement: 99,
                id: "41B8D164-53E3-4825-B34A-90516FDDECA8"
            }, {
                name: "Ten of Spades",
                avatar: "http://files.d20.io/images/1481/med.png?1335737835",
                placement: 99,
                id: "4288EF3F-19A8-4DB2-B8E9-BFBAD14A9500"
            }, {
                name: "Ten of Diamonds",
                avatar: "http://files.d20.io/images/1455/med.png?1335737614",
                placement: 99,
                id: "4C00B0FB-566A-4B3B-987A-C1851E593AA5"
            }, {
                name: "Ten of Clubs",
                avatar: "http://files.d20.io/images/1442/med.png?1335737503",
                placement: 99,
                id: "51403249-45D7-45C8-B87E-2863DA016499"
            }, {
                name: "Six of Diamonds",
                avatar: "http://files.d20.io/images/1451/med.png?1335737579",
                placement: 99,
                id: "5B37E3FE-B99A-4594-92D9-E2C2C0008FFF"
            }, {
                name: "Queen of Diamonds",
                avatar: "http://files.d20.io/images/1457/med.png?1335737632",
                placement: 99,
                id: "5F602642-A624-4877-B1B9-5715DF8D02B0"
            }, {
                name: "Three of Diamonds",
                avatar: "http://files.d20.io/images/1448/med.png?1335737552",
                placement: 99,
                id: "61C9F0F0-BFE4-4ED5-8A55-2B75274702AD"
            }, {
                name: "Two of Hearts",
                avatar: "http://files.d20.io/images/1460/med.png?1335737667",
                placement: 99,
                id: "64CC77BB-4565-496A-8871-94BF93401B67"
            }, {
                name: "Ace of Diamonds",
                avatar: "http://files.d20.io/images/1459/med.png?1335737651",
                placement: 99,
                id: "65965D14-1AFA-45F1-B106-8235361F7C15"
            }, {
                name: "Seven of Spades",
                avatar: "http://files.d20.io/images/1478/med.png?1335737811",
                placement: 99,
                id: "67388D62-EDF6-4A1F-935A-43EE6BD41FD8"
            }, {
                name: "Three of Clubs",
                avatar: "http://files.d20.io/images/1435/med.png?1335737450",
                placement: 99,
                id: "68AC642B-9C27-42E7-93B0-920B9164C622"
            }, {
                name: "Nine of Hearts",
                avatar: "http://files.d20.io/images/1467/med.png?1335737721",
                placement: 99,
                id: "6A6C3284-EFF1-449C-A02B-B7B0FDF7A5D5"
            }, {
                name: "King of Clubs",
                avatar: "http://files.d20.io/images/1445/med.png?1335737528",
                placement: 99,
                id: "6C8DF866-9243-4575-8F88-19C27AB39D27"
            }, {
                name: "Four of Spades",
                avatar: "http://files.d20.io/images/1475/med.png?1335737788",
                placement: 99,
                id: "855E050F-EA2D-4B32-901D-56BB7E4B5857"
            }, {
                name: "Seven of Diamonds",
                avatar: "http://files.d20.io/images/1452/med.png?1335737590",
                placement: 99,
                id: "8E949576-4946-4AC4-9522-D3E4C4E50741"
            }, {
                name: "Jack of Clubs",
                avatar: "http://files.d20.io/images/1443/med.png?1335737512",
                placement: 99,
                id: "901BFB44-C41A-450F-B35D-868BCDE6CCFE"
            }, {
                name: "King of Spades",
                avatar: "http://files.d20.io/images/1484/med.png?1335737860",
                placement: 99,
                id: "9E920B87-A20E-42BA-B6E0-DD9022AE1DD2"
            }, {
                name: "Jack of Spades",
                avatar: "http://files.d20.io/images/1482/med.png?1335737844",
                placement: 99,
                id: "9FCC0D54-ACC0-4C6F-AB0F-3422851A90BE"
            }, {
                name: "Four of Clubs",
                avatar: "http://files.d20.io/images/1436/med.png?1335737458",
                placement: 99,
                id: "9FFA798A-11F0-46DA-9807-9DC13FE366E4"
            }, {
                name: "Nine of Spades",
                avatar: "http://files.d20.io/images/1480/med.png?1335737829",
                placement: 99,
                id: "A5AD4508-1C42-40F3-BE37-4812C8012D65"
            }, {
                name: "Eight of Diamonds",
                avatar: "http://files.d20.io/images/1453/med.png?1335737598",
                placement: 99,
                id: "A9B74EFD-47F1-4CC7-B472-7478D6D70C50"
            }, {
                name: "Five of Hearts",
                avatar: "http://files.d20.io/images/1463/med.png?1335737690",
                placement: 99,
                id: "AB23A388-7747-4F7A-8F24-5220CCE2D25A"
            }, {
                name: "Queen of Clubs",
                avatar: "http://files.d20.io/images/1444/med.png?1335737521",
                placement: 99,
                id: "AE50176D-2206-4738-B229-9886EB3DA253"
            }, {
                name: "Three of Spades",
                avatar: "http://files.d20.io/images/1474/med.png?1335737781",
                placement: 99,
                id: "B4CF2B55-F81E-4508-9AE1-8019B0F04E7E"
            }, {
                name: "Four of Hearts",
                avatar: "http://files.d20.io/images/1462/med.png?1335737682",
                placement: 99,
                id: "B8F435D9-9B46-4F54-A1A1-1EEDCD099FC2"
            }, {
                name: "Six of Spades",
                avatar: "http://files.d20.io/images/1477/med.png?1335737804",
                placement: 99,
                id: "BBC550AA-8E90-4DBD-B6BF-CC4EE5358DF4"
            }, {
                name: "Four of Diamonds",
                avatar: "http://files.d20.io/images/1449/med.png?1335737560",
                placement: 99,
                id: "BBF9DF2E-F7B8-4F74-B7A1-91CF426C582E"
            }, {
                name: "Two of Clubs",
                avatar: "http://files.d20.io/images/1434/med.png?1335737442",
                placement: 99,
                id: "C0062CB1-16E7-49AC-84D1-CB6213C9F2AF"
            }, {
                name: "Eight of Spades",
                avatar: "http://files.d20.io/images/1479/med.png?1335737819",
                placement: 99,
                id: "C1E084D4-EC4F-4BF7-B9D3-BE99FAED12CF"
            }, {
                name: "Three of Hearts",
                avatar: "http://files.d20.io/images/1461/med.png?1335737674",
                placement: 99,
                id: "C8E365C7-C67E-4E71-BB17-68468C9E626F"
            }, {
                name: "Nine of Diamonds",
                avatar: "http://files.d20.io/images/1454/med.png?1335737606",
                placement: 99,
                id: "C98763E1-4BB5-4D13-A1EC-3F7357F9CC4B"
            }, {
                name: "Jack of Diamonds",
                avatar: "http://files.d20.io/images/1456/med.png?1335737624",
                placement: 99,
                id: "CB1B06E8-D1CE-4838-B4B7-B658132999CB"
            }, {
                name: "Nine of Clubs",
                avatar: "http://files.d20.io/images/1441/med.png?1335737495",
                placement: 99,
                id: "CB38D043-5B95-4813-B039-60253A020CD6"
            }, {
                name: "Ace of Clubs",
                avatar: "http://files.d20.io/images/1446/med.png?1335737536",
                placement: 99,
                id: "D949193A-FC9B-48FC-8CAD-5BD4071A7E18"
            }, {
                name: "Two of Spades",
                avatar: "http://files.d20.io/images/1473/med.png?1335737774",
                placement: 99,
                id: "E18687DE-9AFD-4F78-BC4D-7DDBC7943528"
            }, {
                name: "Eight of Clubs",
                avatar: "http://files.d20.io/images/1440/med.png?1335737488",
                placement: 99,
                id: "EB0BD770-5E05-4488-AC58-88196BD442A1"
            }, {
                name: "Queen of Hearts",
                avatar: "http://files.d20.io/images/1470/med.png?1335737745",
                placement: 99,
                id: "EB7D24C2-30B9-4D96-890A-1C064C90D050"
            }, {
                name: "Ace of Spades",
                avatar: "http://files.d20.io/images/1485/med.png?1335737869",
                placement: 99,
                id: "EFDB047C-C683-4623-86D5-DBA4E4ED058E"
            }, {
                name: "Red Joker",
                avatar: "http://files.d20.io/images/1487/med.png?1335737884",
                placement: 99,
                id: "F2D8AE23-CF91-4CEA-BC17-AEB643A17BC9"
            }, {
                name: "Two of Diamonds",
                avatar: "http://files.d20.io/images/1447/med.png?1335737545",
                placement: 99,
                id: "F92A58C4-8349-426D-9930-98AB387981BD"
            }]),
            d20.Campaign.decks.first().cards.trigger("add")
        }
          , u = function() {
            d20.Campaign && d20.Campaign.activePage() ? c() : setTimeout(u, 1e3)
        };
        !0 === window.DO_TUTORIAL && u()
    }(),
    d20.compendium = {},
    $(function() {
        function e() {
            $(".dd-content").each(function() {
                $(this).siblings(".atribs").length ? ($(this).addClass("dynamic"),
                $(this).before('<div class="expandcontroller down">click to preview details</div>')) : $(this).addClass("static")
            })
        }
        if ("development" === d20ext.environment ? d20.compendium = {
            compendiumBase: "http://app.roll20.local:5000/"
        } : "devlocal" === d20ext.environment ? d20.compendium = {
            compendiumBase: "http://localhost:5000/"
        } : "staging" === d20ext.environment ? d20.compendium = {
            compendiumBase: "https://app.roll20staging.net/"
        } : "beta" === d20ext.environment ? d20.compendium = {
            compendiumBase: "https://app.roll20dev.net/"
        } : d20.compendium = {
            compendiumBase: "https://app.roll20.net/"
        },
        window.COMPENDIUM_BOOK_NAME) {
            var t = $("#compendium .searchroot")
              , n = $("#compendium .compendiumindex")
              , i = $("#compendium .searchbox input")
              , o = "";
            t.nestable(),
            t.nestable("collapseAll");
            var r = !1
              , a = {}
              , s = function(e) {
                o = e.replace(/"/g, "").split("Category:")[1] || "";
                var c = !1
                  , u = !1
                  , d = "";
                if (-1 != templateCategories.indexOf(o) ? ($("#advancedSearch").show(),
                c = !0) : $("#advancedSearch").hide(),
                "" != o) {
                    var h = COMPENDIUM_TIMESTAMP.split(":");
                    d = h[0] + o,
                    u = !!localStorage[d] && localStorage[d];
                    try {
                        u = JSON.parse(u)
                    } catch (p) {
                        console.log(p),
                        u = !1
                    }
                    u && (u.expansions == h[2] && u.timestamp == parseInt(h[1]) || (u = !1))
                }
                r || (e.length < 3 ? (n.show(),
                t.hide()) : (r = !0,
                n.hide(),
                t.show(),
                t.html("<p>Searching...</p>"),
                u ? (console.log("Using locally stored data"),
                a.results = JSON.parse(u.listResults),
                $.get(d20.compendium.compendiumBase + "compendium/compendium/gettemplates/" + COMPENDIUM_BOOK_NAME + "/?sharedCompendium=" + campaign_id + "&terms=" + escape(e), function(t) {
                    a.templates = JSON.parse(t),
                    l({}),
                    r = !1,
                    e != i.val() && s(i.val())
                }).fail(function(e) {
                    403 == e.status ? t.html("<p>You do not have access to this compendium.</p>") : t.html("<p>An error has occurred.</p>")
                })) : (console.log("Fetching data from db"),
                $.get(d20.compendium.compendiumBase + "compendium/compendium/globalsearch/" + COMPENDIUM_BOOK_NAME + "/?sharedCompendium=" + campaign_id + "&template=true&terms=" + escape(e), function(t) {
                    if (a = JSON.parse(t),
                    l({}),
                    r = !1,
                    c) {
                        var n = {
                            timestamp: a.timestamp,
                            expansions: a.expansions,
                            listResults: JSON.stringify(a.results),
                            columnNames: a.columns,
                            sortRules: a.sortables
                        };
                        localStorage.removeItem("columnNames"),
                        localStorage.removeItem("customList"),
                        localStorage.removeItem("customStyle"),
                        localStorage.removeItem("listResults");
                        try {
                            localStorage.setItem(d, JSON.stringify(n))
                        } catch (p) {
                            console.log("Unable to cache list data")
                        }
                    }
                    e != i.val() && s(i.val())
                }).fail(function(e) {
                    403 == e.status ? t.html("<p>You do not have access to this compendium.</p>") : t.html("<p>An error has occurred.</p>")
                }))))
            }
              , l = function(n) {
                var i = {}
                  , o = a.results;
                _.isEmpty(n) || (o = a.results.filter(function(e) {
                    var t = !0;
                    return Object.keys(n).length > 0 && $.each(n, function(n, i) {
                        var o = "Name" === n ? e.n.toLowerCase() : e.f[i.num]
                          , r = i.value
                          , a = i.type;
                        switch (i.match) {
                        case "Any":
                            if ("text" === a && -1 === o.indexOf(r))
                                t = !1;
                            else if ("array" === a) {
                                var s = !1;
                                $(r).each(function(e, t) {
                                    "" === t && "" === o ? s = !0 : "" !== t && -1 !== o.indexOf(t) && (s = !0)
                                }),
                                t = s
                            }
                            break;
                        case "Exact":
                            if ("text" === a && o !== r)
                                t = !1;
                            else if ("array" === a) {
                                s = !0;
                                o = o.split(","),
                                0 == _.intersection(o, r).length && (s = !1),
                                t = s
                            }
                            break;
                        case "Inverse":
                            if ("text" === a && -1 !== o.indexOf(r))
                                t = !1;
                            else if ("array" === a) {
                                s = !1;
                                $(r).each(function(e, t) {
                                    "" === t && "" === o ? s = !0 : "" !== t && -1 !== o.indexOf(t) && (s = !0)
                                }),
                                t = !s
                            }
                        }
                        return t
                    }),
                    t
                })),
                0 === o.length ? t.html("<p>No results found.</p>") : (_.each(o, function(e) {
                    i[e.a[0]] === undefined && (i[e.a[0]] = i[e.a[0]] || []),
                    e.j = e.a[4],
                    e.v = e.a[4],
                    e.v !== e.n && (e.v = e.n + ": " + e.v),
                    i[e.a[0]].push(e)
                }),
                u(i, a.templates),
                e())
            }
              , c = _.debounce(function() {
                d20.Campaign.compendiumfilters.clearFilters(),
                s(i.val())
            }, 500);
            i.on("keyup", function(e) {
                (13 === e.which || i.val().length > 2 || "" == i.val()) && c()
            }),
            i.addClear();
            var u = function(e, n) {
                var i = "";
                for (var r in i += "<ol class='dd-list'>",
                e) {
                    var a = o ? " solo" : "";
                    function s(e, t) {
                        var n = '<ul class="atribs closed">';
                        return _.each(e, function(e, i) {
                            n += '<li class="atribsitem"><span class="atrib-label">' + t[i] + ": </span>" + e + "</li>"
                        }),
                        n += "</ul>"
                    }
                    i += "<li class='dd-item dd-folder" + a + "'>",
                    i += "<button class='dd-unsortable' data-action='collapse' type='button'>Collapse</button>",
                    i += "<button class='dd-unsortable' data-action='expand' type='button' style='display: none;'>Expand</button>",
                    i += "<div class='dd-content" + a + "'>",
                    i += "<div class='folder-title'>" + r + "</div>",
                    i += "</div>",
                    i += "<ol class='dd-list'>",
                    e[r] = _.sortBy(e[r], function(e) {
                        return e.v
                    }),
                    _.each(e[r], function(e) {
                        var t = "";
                        e.c && (t = "expansion" + _.last(e.c)),
                        e.n != e.v ? i += "<li class='dd-item compendium-item compendium-subhead inapp " + t + "' data-pagename=\"" + encodeURIComponent(r + ":" + e.n) + '" data-uniquename="' + encodeURIComponent(r + ":" + e.n) + "#h-" + encodeURIComponent(e.j) + '"data-subhead="' + e.j + "\"><div class='dd-content'>" : i += "<li class='dd-item compendium-item inapp " + t + "' data-pagename=\"" + encodeURIComponent(r + ":" + e.n) + '" data-uniquename="' + encodeURIComponent(r + ":" + e.n) + "#h-" + encodeURIComponent(e.j) + "\"><div class='dd-content'>",
                        e.a[3] && (i += "<div class='token'><img src='" + e.a[3] + "' draggable='false'></div>"),
                        i += "<div class='namecontainer'>" + e.v + "</div>",
                        "" != e.a[5] && (i += "<div class='sourcefooter'>" + e.a[5] + "</div>"),
                        i += "</div>",
                        -1 != Object.keys(n).indexOf(r) ? i += '<div class="atribs closed listResult booktemplate ' + t + '" data-name="' + e.n + '" data-category="' + r + '"></div>' : e.listColumns && (i += s(e.listColumns, e.columnNames)),
                        i += "</li>"
                    }),
                    i += "</ol>",
                    i += "</li>"
                }
                i += "</ol>",
                t.html(i),
                t.nestable("serialize"),
                t.find(".compendium-item:not(.compendium-subhead)").draggable({
                    revert: !0,
                    distance: 10,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body",
                    scroll: !1
                }).addTouch()
            };
            $("#advancedSearch").click(function() {
                d20.Campaign.compendiumfilters.showWindow(o)
            }),
            window.addEventListener("filter", function() {
                l(d20.Campaign.compendiumfilters.getFilters())
            }, !1),
            t.on("click", ".dd-content", function(e) {
                e.stopPropagation();
                var t = $(this).find(".namecontainer").text();
                t && d20.utils.openCompendiumPage(COMPENDIUM_BOOK_NAME, t, $(this).parent().attr("data-uniquename"))
            }),
            t.on("click", ".atribsitem-link", function(e) {
                e.stopPropagation();
                var t = $(this).siblings(".namecontainer").text();
                t && d20.utils.openCompendiumPage(COMPENDIUM_BOOK_NAME, t, $(this).parent().attr("data-uniquename"))
            }),
            t.on("click", ".expandcontroller", function() {
                var e = $(this).siblings(".atribs");
                if (e.hasClass("closed")) {
                    if (e.hasClass("booktemplate") && "" == e.html()) {
                        var t = e.data("name")
                          , n = e.data("category")
                          , i = _.find(a.results, function(e) {
                            return e.n == t
                        });
                        e.append(processResult(i, a.templates[n].layout, "card", a.templates[n].attrorder))
                    }
                    e.slideDown(500).removeClass("closed").addClass("open"),
                    $(this).removeClass("down").addClass("up")
                } else
                    e.removeClass("open").addClass("closed").slideUp(500),
                    $(this).removeClass("up").addClass("down")
            }),
            n.on("click", ".dd-item", function() {
                var e = $(this).find(".dd-content").text();
                i.val('Category:"' + e + '"'),
                c()
            }),
            n.length > 0 && $.get(d20.compendium.compendiumBase + "compendium/" + COMPENDIUM_BOOK_NAME + "/_CatIndex.json?sharedCompendium=" + campaign_id, function(e) {
                var t = "<ol class='dd-list'>";
                _.each(e, function(e) {
                    t += "<li class='dd-item'><div class='dd-content'>" + e + "</div></li>"
                }),
                t += "</ol>",
                $("#compendium .compendiumindex").html(t)
            })
        }
    });
    var processResult = function(e, t, n, i) {
        var o = e.p || e.n
          , r = function(t, n, i) {
            var a = function(e) {
                if (-1 != e.indexOf("[[")) {
                    var t = (e = e.split("[[")).shift()
                      , n = (e = e.join("[[").split("]]")).shift()
                      , i = e.join("]]");
                    e = t + (n = "" == n.replace(/\s/g, "").match(/.*/) ? "\u2014" : n) + a(i)
                }
                return e
            }
              , s = function(e, n) {
                if (-1 != e.indexOf("{{" + n + ".replace")) {
                    var i = t[n].toString()
                      , o = (e = e.split(c + n + ".replace(")).shift();
                    e = e.join(c + n + ".replace(").split(")" + u);
                    var r = JSON.parse(e.shift());
                    for (x in r)
                        i == x && (i = r[x]);
                    var a = e.join(")" + u);
                    e = o + i + s(a, n)
                }
                return e
            }
              , l = function(e) {
                return new RegExp((c + e + u).split("[").join("\\[").split("]").join("\\]"),"g")
            }
              , c = i ? "{{[" : "{{"
              , u = i ? "]}}" : "}}"
              , d = _.uniq(n.match(l("!.+?")));
            _.each(d, function(e) {
                if (-1 != n.indexOf(e)) {
                    n = n.split(e),
                    e = e.replace(c + "!", "").replace(u, "");
                    var i = n.shift()
                      , a = n[0].split(c + "/" + e + u);
                    n = a.shift();
                    var s = a.join(c + "/" + e + u);
                    n = n.split(c + "else" + u);
                    var d = "";
                    if ("\u2014" != t[e]) {
                        var h = {};
                        if ("object" != typeof t[e])
                            try {
                                h = JSON.parse(t[e])
                            } catch (f) {
                                console.log("Error: " + f.name),
                                console.log(o),
                                console.log(e)
                            }
                        else
                            h = t[e];
                        Array.isArray(h) || (h = [h]);
                        var p = _.uniq(n[0].match(l("[.+?]")));
                        p = p.map(function(e) {
                            return e.split(".")[0].replace(/{|\[|\]|}|!|#|\//g, "")
                        }),
                        p = _.uniq(p),
                        _.each(h, function(e) {
                            _.each(p, function(t) {
                                e[t] || (e[t] = "\u2014")
                            }),
                            d += r(e, n[0], !0)
                        })
                    } else
                        n.length > 1 && (d = n[1]);
                    n = i + d + s
                }
            });
            var h = _.uniq(n.match(l("@.+?")));
            return _.each(h, function(e) {
                n = n.split(e),
                e = e.replace(c + "@", "").replace(u, "");
                var i = n.shift()
                  , r = n[0].split(c + "/" + e + u);
                n = r.shift();
                var a = r.join(c + "/" + e + u)
                  , s = "";
                if ("\u2014" != t[e]) {
                    var l = [];
                    if ("object" != typeof t[e])
                        try {
                            l = JSON.parse(t[e])
                        } catch (d) {
                            console.log("Error: " + d.name),
                            console.log(o),
                            console.log(e)
                        }
                    else
                        l = t[e];
                    Array.isArray(l) || (l = [l]),
                    _.each(l, function(e, t) {
                        s += n.split("{{[val]}}").join(e).split("{{[index]}}").join(t)
                    })
                } else
                    n.length > 1 && (s = "");
                n = i + s + a
            }),
            _.each(_.keys(t), function(i) {
                var o = "Source" == i ? e.a[2] : t[i];
                if (-1 != (n = n.split(c + i + u).join(o)).indexOf(c + "#" + i + u)) {
                    var r = [(n = n.split(c + "#" + i + u)).shift()];
                    _.each(n, function(e) {
                        e = e.split(c + "/" + i + u),
                        r.push("\u2014" == o ? e[1] : e.join(""))
                    }),
                    n = r.join("")
                }
                n = s(n, i)
            }),
            a(n)
        }
          , a = function(e) {
            var t = {
                expansion: _.last(e)
            };
            return _.each(i, function(n, i) {
                t[n] = e[i]
            }),
            t
        };
        pagedata = 0 == i ? e.c : a(e.c),
        t = (t = r(pagedata, t, !1)).replace(/{{Name}}/g, o);
        var s = "" == pagedata.expansion ? "" : " expansion" + pagedata.expansion
          , l = "card" == n ? "card" : "listResult booktemplate closed " + n + s
          , c = $("<div></div>").addClass(l).html(t);
        return "list" == n && c.attr("data-name", o),
        c.find(".content").html(""),
        c.prop("outerHTML")
    };
    "development" === d20ext.environment ? d20.library = {
        libraryBase: "http://app.roll20.local:5000"
    } : "devlocal" === d20ext.environment ? d20.library = {
        libraryBase: "http://localhost:5000"
    } : "staging" === d20ext.environment ? d20.library = {
        libraryBase: "https://app.roll20staging.net"
    } : d20.library = {
        libraryBase: "https://app.roll20.net"
    },
    d20.library.lastMultipleDragInfo = [],
    d20.library.recentuploadspage = 0,
    $(function() {
        function e() {
            $(this).get(0).play()
        }
        function t() {
            $(this).get(0).pause()
        }
        "beta" === d20ext.environment && $.ajaxPrefilter(function(e) {
            -1 === e.url.indexOf("app.roll20.net") || -1 === e.url.indexOf("image_library") && -1 === e.url.indexOf("compendium") || (e.crossDomain = {
                crossDomain: !0
            },
            e.xhrFields = {
                withCredentials: !0
            })
        });
        var n = $("#imagedialog #libraryfolderroot")
          , i = $("#imagedialog #marketplacelibrary")
          , o = $("#imagedialog #userlibrary")
          , r = $("#imagedialog #recentuploads")
          , a = $("#imagedialog #librarysearchroot")
          , s = ($("#imagedialog input.keywords"),
        $("#imagedialog #marketplaceresults"))
          , l = $("#imagedialog #libraryresults")
          , c = $("#imagedialog #googleresults")
          , u = $("#finalcanvas");
        n.nestable({
            dropOutsideListHandler: function(e, t, n) {
                if (0 !== t.length && t[0] === u[0] && (console.log("Dropped outside list!"),
                n.hasClass("draggableresult"))) {
                    var i = n.attr("data-fullsizeurl")
                      , o = Math.floor(e.originalEvent.pageX / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[0] - d20.engine.paddingOffset[0] / d20.engine.canvasZoom)
                      , r = Math.floor(e.originalEvent.pageY / d20.engine.canvasZoom + d20.engine.currentCanvasOffset[1] - d20.engine.paddingOffset[1] / d20.engine.canvasZoom)
                      , a = !1;
                    e.altKey && (a = !0);
                    var s = d20.engine.snapTo
                      , l = d20.engine.snapTo;
                    0 != d20.engine.snapTo && !1 === a && "map" != window.currentEditingLayer ? (s = d20.engine.snapTo,
                    l = d20.engine.snapTo) : n.attr("data-width") ? (s = parseInt(n.attr("data-width"), 10),
                    l = parseInt(n.attr("data-height"), 10)) : (s = n.find("img")[0].naturalWidth,
                    l = n.find("img")[0].naturalHeight);
                    var c = {
                        x: o,
                        y: r,
                        width: s,
                        height: l,
                        imgsrc: i,
                        imgwidth: s,
                        imgheight: l
                    };
                    d20.Campaign.activePage().addImage(c, a, !1)
                }
            }
        }),
        a.nestable(),
        $("#imagedialog .keywords").bind("keyup", function() {
            d20.lazySearch()
        }),
        $("#imagedialog .searchbox").on("click", "a", function() {
            "" != $("#imagedialog .keywords").val() && ($("#imagedialog .keywords").val(""),
            n.show(),
            a.hide()),
            "switchtomarketplacelibrary" === this.id && ($(this).hasClass("active") || ($("#marketplacelibrary").show(),
            $("#userlibrary").hide(),
            $("#recentuploads").hide(),
            $(this).addClass("active"),
            $("#switchtouserlibrary").removeClass("active")),
            window.currentPlayer && window.currentPlayer.save({
                librarytab: "marketplace"
            })),
            "switchtouserlibrary" === this.id && ($(this).hasClass("active") || ($("#marketplacelibrary").hide(),
            $("#userlibrary").show(),
            $("#recentuploads").show(),
            $(this).addClass("active"),
            $("#switchtomarketplacelibrary").removeClass("active")),
            window.currentPlayer && window.currentPlayer.save({
                librarytab: "library"
            }))
        }),
        window.currentPlayer && "library" === window.currentPlayer.get("librarytab") ? $("#switchtouserlibrary").trigger("click") : $("#switchtomarketplacelibrary").trigger("click"),
        $("#imagedialog").on("click", ".addlibraryfolder", function() {
            var e = prompt("What do you want to call the new folder?");
            null != e && ("" == (e = d20ext.utils.strip_tags(e, "<span><br><strong><em>")) && (e = "Placeholder Folder Name"),
            d20.library.addFolder(e, "root", $("#userlibrary")))
        }),
        $("#imagedialog").on("click", ".showuploaddialog", function() {
            d20.library.showUploadDialog()
        }),
        $("#imagedialog").on("click", ".recentuploadsfilter", function() {
            window.currentPlayer && ($(this).hasClass("filtered") ? (window.currentPlayer.save({
                recentuploadsfilter: !1
            }),
            $(this).switchClass("filtered", "notfiltered")) : (window.currentPlayer.save({
                recentuploadsfilter: !0
            }),
            $(this).switchClass("notfiltered", "filtered")),
            d20.library.buildRecentUploads())
        }),
        $("#imagedialog").on("click", ".searchstyle", function() {
            window.currentPlayer && ($(this).hasClass("filtered") ? (window.currentPlayer.save({
                bigsearchstyle: !1
            }),
            $(this).switchClass("filtered", "notfiltered"),
            $("#librarysearchroot").removeClass("fullsizesearch")) : (window.currentPlayer.save({
                bigsearchstyle: !0
            }),
            $(this).switchClass("notfiltered", "filtered"),
            $("#librarysearchroot").addClass("fullsizesearch")),
            d20.library.buildRecentUploads())
        }),
        $("#imagedialog").on("click", ".searchinfotoggle", function() {
            $("#searchinfo").is(":visible") ? $("#searchinfo").hide() : $("#searchinfo").show()
        }),
        $("#userlibrary").on("click", ".dd-content", function() {
            var e = $(this).closest(".dd-folder")
              , t = $(this).parent().attr("data-folderid") ? "folder" : "item"
              , n = "folder" === t ? $(this).parent().attr("data-folderid") : $(this).parent().attr("data-imageid");
            d20.library.doRenderFolder(e, "", t, n)
        }),
        $("#recentuploads").on("click", ".dd-content", function() {
            var e = $(this).parent().attr("data-imageid");
            d20.library.doRecentUploads(e)
        }),
        $("#libraryresults").on("click", ".libraryresult.library-item .dd-content", function() {
            var e = $(this).parent().attr("data-foldertags");
            if ("" === e)
                var t = [];
            else
                t = e.split(",");
            if (t && t.length > 0) {
                var n, i = "item", o = $(this).parent().attr("data-imageid");
                d20.library.doRenderFolder(n, t[0], i, o)
            } else {
                o = $(this).parent().attr("data-imageid");
                d20.library.doRecentUploads(o)
            }
        }),
        $("#libraryview").on("click", ".library-imgcontainer", function() {
            $(this).parent().toggleClass("selected")
        }),
        $("#libraryview").on("dblclick", ".library-imgcontainer", function() {
            var e = $(this).parents(".folder");
            if (e.length) {
                var t = $("#userlibrary").find("*[data-folderid='" + e.attr("data-folderid") + "']");
                d20.library.doRenderFolder(t, e.attr("data-folderid"), "folder", $("#libraryview").attr("data-folderid"))
            }
        }),
        $("#libraryview").on("click", ".library-labelcontainer", function() {
            $(this).after("<input type='text' style='width: calc(100% + 10px); margin-left: -10px;' class='libraryeditbox editbox' value='" + $(this).text() + "'' />"),
            $(this).hide(),
            $(this).next(".editbox").focus()
        }),
        $("#libraryview").on("blur", ".libraryeditbox", function() {
            var e = $(this).closest(".library-container");
            if (e.hasClass("folder"))
                d20.library.renameFolder($(this).val(), e.attr("data-folderid"), e, !0);
            else {
                var t = e.index();
                d20.library.renameItem($(this).val(), e.attr("data-imageid"), e, e.find(".library-labelcontainer").text(), $("#libraryview").attr("data-folderid"), !0, t)
            }
        }),
        $("#libraryview").on("keydown", ".editbox", function(e) {
            13 !== e.which && 27 !== e.witch || $(this).trigger("blur")
        }),
        $("#libraryview").on("click", function() {
            var e = $(this).find(".textboxlist:not('.noedit')");
            e.find(".input").hide(),
            e.addClass("noedit")
        }),
        $("#libraryview").on("click", ".upcontainer", function() {
            $.get(d20.library.libraryBase + "/image_library/fetchfolderinfo/" + $("#libraryview").attr("data-folderid"), function(e) {
                var t = JSON.parse(e)
                  , n = $("#userlibrary").find("*[data-folderid='" + t.parent + "']");
                d20.library.doRenderFolder(n, t.parent, "folder", $("#libraryview").attr("data-folderid"))
            })
        }),
        $("#libraryview").on({
            mouseenter: e,
            mouseleave: t
        }, ".library-animation"),
        d20.library.renderLibraryView = function(e, t, n) {
            $("#libraryview").attr("data-isopen", !0);
            var i = "";
            if (_.each(e, function(e) {
                "folder" === e.t ? i += "<div class='library-container folder' data-folderid='" + e.id + "'><div class='library-imgcontainer'><span class='pictos' style='cursor: default;'>o</span></div><div class='library-labelcontainer'><span>" + e.n + "</span></div><div class='editbox'><span></span></div><div style='clear: both;'></div></div>" : "item" === e.t && (i += "<div class='library-container item' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "'><div class='library-imgcontainer'>",
                e.fullsize_url.includes(".webm") ? i += "\t\t\t\t\t<video class='library-animation' src='" + e.fullsize_url.replace("max.webm", "thumb.webm") + "' loop muted></video> \t\t\t\t\t<img src='/v2/images/animIcon.png'>" : i += "<img src='" + e.img_url + "'>",
                i += "</div><div class='library-labelcontainer'><span>" + e.n + "</span></div><div class='yourtags editbox' data-imageid='" + e.id + "' data-editable='true' style='position: relative;'></div><div style='clear: both;'></div></div>")
            }),
            "root" != $("#libraryview").attr("data-folderid") && (i += "<div class='upcontainer' style='cursor: pointer; position: absolute; top: 10px; right: 10px;'><span class='pictos gouplevel' title='Go up a level in the folder structure'>{</span></div>"),
            $("#libraryview").html(i),
            "folder" === t)
                $("*[data-folderid=" + n + "]").addClass("selected"),
                $("#libraryview").scrollTo("*[data-folderid=" + n + "]");
            else if ("item" === t)
                $("*[data-imageid=" + n + "]").addClass("selected"),
                $("#libraryview").scrollTo("*[data-imageid=" + n + "]");
            else if ("massdrop" === t) {
                var o = JSON.parse(n);
                _.each(o, function(e) {
                    "folder" === e.t ? $("*[data-folderid=" + e.id + "]").addClass("selected") : "item" === e.t && $("*[data-imageid=" + e.id + "]").addClass("selected")
                }),
                o[0] && ("folder" === o[0].t ? $("#libraryview").scrollTo("*[data-folderid=" + o[0].id + "]") : "item" === o[0].t && $("#libraryview").scrollTo("*[data-imageid=" + o[0].id + "]"))
            }
            d20.library.processView()
        }
        ,
        $("#libraryview").droppable({
            accept: ".draggableresult, .dd-dragel",
            tolerance: "pointer",
            drop: function(e, t) {
                e.preventDefault(),
                e.stopPropagation(),
                e.originalEvent.dropHandled = !0,
                console.log("drop on library view");
                var i = $(t.draggable)
                  , o = $("#libraryview").attr("data-folderid")
                  , r = "root" === o ? $("#userlibrary") : $("#userlibrary *[data-folderid='" + o + "']")
                  , a = i.attr("data-oldparent")
                  , s = $("*[data-folderid='" + a + "']")
                  , l = i.hasClass("libraryfolder") ? "folder" : "item";
                if (itemid = "folder" === l ? i.attr("data-folderid") : i.attr("data-imageid"),
                o !== a && "recentuploads" !== o && i.hasClass("draggableresult"))
                    if (i.parents("#userlibrary").length > 0) {
                        var c = []
                          , u = 0
                          , d = i.attr("data-oldindex")
                          , h = "";
                        if (0 === s.length && (s = $("#userlibrary")),
                        i.hasClass("libraryfolder")) {
                            var p = html_sanitize(i.children(".dd-content").children(".folder-title").text());
                            c.push({
                                id: i.attr("data-folderid"),
                                n: p,
                                t: "folder"
                            })
                        } else if (i.hasClass("library-item")) {
                            var f = i.find("img").prop("src")
                              , g = html_sanitize(i.find(".namecontainer").text());
                            c.push({
                                id: i.attr("data-imageid"),
                                n: g,
                                t: "item",
                                fullsize_url: i.attr("data-fullsizeurl"),
                                img_url: f
                            })
                        }
                        $.post(d20.library.libraryBase + "/image_library/movelibraryitem/", {
                            appid: itemid,
                            parent: o,
                            type: l,
                            oldparent: a,
                            newindex: u,
                            oldindex: d,
                            placedafterid: h,
                            itemstructure: JSON.stringify(c)
                        }, function(e) {
                            if (!x(e, "move")) {
                                var t = "";
                                c[0] && "folder" === c[0].t ? t = "<div class='library-container folder' data-folderid='" + c[0].id + "'><div class='library-imgcontainer'><span class='pictos' style='cursor: default;'>o</span></div><div class='library-labelcontainer'><span>" + c[0].n + "</span></div><div class='editbox'><span></span></div><div style='clear: both;'></div></div>" : c[0] && "item" === c[0].t && (t = "<div class='library-container item' data-fullsizeurl='" + c[0].fullsize_url + "' data-imageid='" + c[0].id + "'><div class='library-imgcontainer'><img src='" + c[0].img_url + "'></div><div class='library-labelcontainer'><span>" + c[0].n + "</span></div><div class='yourtags editbox' data-imageid='" + c[0].id + "' data-editable='true' style='position: relative;'></div><div style='clear: both;'></div></div>"),
                                $("#libraryview").prepend(t),
                                i.remove(),
                                r && "true" === r.attr("data-content") && (c[0] && "item" === c[0].t && (r.children(".dd-list").prepend("<li class='dd-item library-item draggableresult recentupload' data-fullsizeurl='" + c[0].fullsize_url + "' data-imageid='" + c[0].id + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + c[0].img_url.replace("thumb.webm", "sample.png") + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + c[0].n + "</div></div></div></li>"),
                                d20.library.buildRecentUploads()),
                                c[0] && "folder" === c[0].t && r.children(".dd-list").prepend("<li class='dd-item dd-folder dd-collapsed libraryfolder' data-folderid='" + c[0].id + "'><button class='dd-sortablehandle' data-action='collapse' type='button' style='display: none;'>Collapse</button><button class='dd-sortablehandle' data-action='expand' type='button'>Expand</button><div class='dd-content'><div class='folder-title'>" + c[0].n + "</div></div><ol class='dd-list'></ol>"),
                                $("#imagedialog #userlibrary .draggableresult").draggable({
                                    handle: ".namecontainer",
                                    revert: !0,
                                    revertDuration: 0,
                                    helper: "clone",
                                    appendTo: "body",
                                    start: function() {
                                        n.addClass("externaldrag"),
                                        $(this).attr("data-oldindex", $(this).index()),
                                        $(this).parents(".libraryfolder").length > 0 ? $(this).attr("data-oldparent", $(this).parent().closest(".libraryfolder").attr("data-folderid")) : $(this).attr("data-oldparent", "root")
                                    },
                                    stop: function() {
                                        n.removeClass("externaldrag")
                                    }
                                }).addTouch())
                            }
                        })
                    } else {
                        var m = $("#imagedialog .keywords").val();
                        p = r ? html_sanitize(r.children(".dd-content").children(".folder-title").text()) : html_sanitize($("#libraryview").parent().find("span.ui-dialog-title").text().substring(2));
                        d20.library.doCopyToFolder(p, o, l, itemid, html_sanitize(i.find(".namecontainer").text()), i.find("img").prop("src"), i, m)
                    }
            }
        }),
        d20.library.renderRecentView = function(e, t, n) {
            if ($("#libraryview").attr("data-isopen", !0),
            e.length > 0) {
                var i = "";
                i += "<div style='color: red; background-color: rgb(247,235,235); padding: 5px; border-radius: 5px; font-size: 14px; margin-bottom: 2px;'><em>WARNING: Items deleted from the Recent Uploads folder are permanently removed from Roll20. Images will dissapear from all games they're being used in and the image will no longer count towards your total storage quota. This action cannot be undone.</em></div>",
                i += "<div class='quota' style='text-align: right;'><em>Level: </em><span class='highestbadgelevel'></span> <em style='margin-left: 20px;'>Storage Quota: </em><span class='storagequota'></span></div>",
                _.each(e, function(e) {
                    var t = new Date(parseInt(e.upload_date, 10));
                    i += "<div class='library-container item' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "'><div class='library-imgcontainer'><img src='" + e.image_url + "'></div><div class='library-labelcontainer'><span>" + e.name + "</span></div><div class='yourtags editbox' data-imageid='" + e.id + "' data-editable='true' style='position: relative;'></div><div class='metadata'><span>" + ("null" != e.upload_date && null != e.upload_date ? t.format("{yyyy}-{MM}-{dd}") : "") + "</span><span>" + ("null" != e.file_size && null != e.file_size ? e.file_size : "") + "</span></div><div style='clear: both;'></div></div>"
                }),
                $("#libraryview").html(i),
                $("*[data-imageid=" + t + "]").addClass("selected"),
                $("#libraryview").scrollTo("*[data-imageid=" + t + "]"),
                d20.library.processView(),
                d(),
                $("#libraryview").off("infinitescroll.scrollpage-library"),
                $("#libraryview").off("scroll.is-library"),
                $("#libraryview").infinitescroll({
                    url: d20.library.libraryBase + "/image_library/fetchorphanassets/" + n,
                    appendTo: $("#libraryview"),
                    container: $("#libraryview"),
                    page: d20.library.recentuploadspage + 1,
                    precheck: function() {
                        return $("#libraryview").attr("data-isopen")
                    },
                    eventsuffix: "-library",
                    triggerAt: 50,
                    requestType: "get",
                    callback: function(e) {
                        var t = JSON.parse(e)
                          , n = "";
                        _.each(t, function(e) {
                            var t = new Date(parseInt(e.upload_date, 10));
                            n += "<div class='library-container item' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "'><div class='library-imgcontainer'><img src='" + e.image_url + "'></div><div class='library-labelcontainer'><span>" + e.name + "</span></div><div class='yourtags editbox' data-imageid='" + e.id + "' data-editable='true' style='position: relative;'></div><div class='metadata'><span>" + ("null" != e.upload_date && null != e.upload_date ? t.format("{yyyy}-{MM}-{dd}") : "") + "</span><span>" + ("null" != e.file_size && null != e.file_size ? e.file_size : "") + "</span></div><div style='clear: both;'></div></span></div></div>"
                        }),
                        50 === t.length && (n += "<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Loading Recent Uploads...</div>"),
                        $("#libraryview").find(".alert").remove(),
                        $("#libraryview").append(n),
                        d20.library.processView()
                    }
                })
            }
        }
        ,
        d20.library.doRenderFolder = function(e, t, n, i) {
            var o = "";
            if (e || 0 === (e = $("#userlibrary").find("*[data-folderid='" + t + "']")).length && (e = !1),
            e) {
                t = e.attr("data-folderid");
                (o = html_sanitize(e.children(".dd-content").children(".folder-title").text())) || (o = "My Library"),
                t || (t = "root")
            } else
                $.get(d20.library.libraryBase + "/image_library/fetchfolderinfo/" + t, function(e) {
                    var t = JSON.parse(e);
                    o = html_sanitize(t.name)
                });
            if ($("#libraryview").attr("data-folderid", t),
            $("#libraryview").off("infinitescroll.scrollpage-library"),
            $("#libraryview").off("scroll.is-library"),
            e && "true" === e.attr("data-content")) {
                var r = [];
                _.each(e.children(".dd-list").children("li"), function(e) {
                    if ($item = $(e),
                    $item.hasClass("dd-folder")) {
                        var t = html_sanitize($item.children(".dd-content").children(".folder-title").text());
                        r.push({
                            id: $item.attr("data-folderid"),
                            n: t,
                            t: "folder"
                        })
                    } else {
                        var n = $item.find("img").prop("src");
                        t = html_sanitize($item.find(".namecontainer").text());
                        r.push({
                            id: $item.attr("data-imageid"),
                            n: t,
                            t: "item",
                            fullsize_url: $item.attr("data-fullsizeurl"),
                            img_url: n
                        })
                    }
                }),
                "true" === $("#libraryview").attr("data-isopen") && d20.library.renderLibraryView(r, n, i),
                $("#libraryview").dialog({
                    title: "<span class='pictos showtip tipsy' style='font-size: 1.1em; cursor: help; position: absolute; right: 35px;' title='The Folder view allows you to select multiple assets at the same time. Click on the asset to select it. Once selected you can move grouped assets, tag grouped items, or mass delete items and folders.'>?</span> " + o,
                    width: "610px",
                    height: .85 * $(window).height(),
                    zIndex: 10600,
                    open: function() {
                        d20.library.renderLibraryView(r, n, i)
                    },
                    beforeClose: function() {
                        $("#libraryview").attr("data-isopen", !1)
                    }
                })
            } else
                $.get(d20.library.libraryBase + "/image_library/fetchlibraryfolder/" + t, function(t) {
                    if (!x(t)) {
                        var r = JSON.parse(t);
                        e && (k(e, r),
                        e.attr("data-content", !0)),
                        "true" === $("#libraryview").attr("data-isopen") && d20.library.renderLibraryView(r, n, i),
                        $("#libraryview").dialog({
                            title: "<span class='pictos showtip tipsy' style='font-size: 1.1em; cursor: help; position: absolute; right: 35px;' title='The Folder view allows you to select multiple assets at the same time. Click on the asset to select it. Once selected you can move grouped assets, tag grouped items, or mass delete items and folders.'>?</span> " + o,
                            width: "610px",
                            height: .85 * $(window).height(),
                            zIndex: 10600,
                            open: function() {
                                d20.library.renderLibraryView(r, n, i)
                            },
                            beforeClose: function() {
                                $("#libraryview").attr("data-isopen", !1)
                            }
                        })
                    }
                })
        }
        ,
        d20.library.doRecentUploads = function(e) {
            $("#libraryview").attr("data-folderid", "recentuploads");
            var t = !1;
            window.currentPlayer && (t = window.currentPlayer.get("recentuploadsfilter"));
            var n = [];
            _.each($("#recentuploads .dd-list li"), function(e) {
                $item = $(e);
                var t = $item.find("img").prop("src")
                  , i = html_sanitize($item.find(".namecontainer").text());
                n.push({
                    id: $item.attr("data-imageid"),
                    name: i,
                    t: "item",
                    fullsize_url: $item.attr("data-fullsizeurl"),
                    image_url: t,
                    file_size: $item.attr("data-filesize"),
                    upload_date: $item.attr("data-uploaddate")
                })
            }),
            "true" === $("#libraryview").attr("data-isopen") ? d20.library.renderRecentView(n, e, t) : $("#libraryview").dialog({
                title: "<span class='pictos showtip tipsy' style='font-size: 1.1em; cursor: help; position: absolute; right: 35px;' title='The Folder view allows you to select multiple assets at the same time. Click on the asset to select it. Once selected you can move grouped assets, tag grouped items, or mass delete items and folders.'>?</span> Recent Uploads",
                width: "610px",
                height: .85 * $(window).height(),
                zIndex: 10600,
                open: function() {
                    d20.library.renderRecentView(n, e, t)
                },
                beforeClose: function() {
                    $("#libraryview").attr("data-isopen", !1),
                    $("#libraryview").off("infinitescroll.scrollpage-library"),
                    $("#libraryview").off("scroll.is-library")
                }
            })
        }
        ,
        d20.library.processView = function() {
            var e;
            window.yourTagViews = Array(),
            $(".yourtags:not(:has(*))").each(function() {
                var e = new window.YourTagsView({
                    el: $(this)
                });
                window.yourTagViews.push(e)
            }),
            $("#libraryview .library-container").draggable({
                revert: !0,
                distance: 10,
                revertDuration: 0,
                cursorAt: {
                    left: -20,
                    top: 10
                },
                helper: function() {
                    var e = d20.library.getSelected();
                    return 0 === e.count ? (d20.library.lastMultipleDragInfo = [],
                    "<div></div>") : "<div class='libraryviewhelper'>" + e.count + " Items</div>"
                },
                appendTo: "body",
                scroll: !1,
                zIndex: 1e6,
                start: function(t) {
                    $("#recentuploads").addClass("nestable-nodrop"),
                    $("#imagedialog").on("mouseenter", function() {
                        $("#imagedialog").off("mouseenter"),
                        (e = $("<li data-massdrop='true'></li>")).addClass("dd-item"),
                        e.appendTo($("#userlibrary > ol.dd-list")),
                        $("#libraryfolderroot").data("nestable").dragStart(t, e)
                    })
                },
                stop: function() {
                    $("#recentuploads").removeClass("nestable-nodrop"),
                    $("#imagedialog").off("mouseenter")
                }
            }).addTouch()
        }
        ;
        var d = function() {
            $.get(d20.library.libraryBase + "/image_library/fetchquota/", function(e) {
                var t = JSON.parse(e);
                $("#libraryview .quota .highestbadgelevel").text(t.level),
                $("#libraryview .quota .storagequota").text(t.curquota + "MB / " + t.quota + "MB"),
                t.curquota > t.quota ? $("#libraryview .quota .storagequota").addClass("red") : $("#libraryview .quota .storagequota").hasClass("red") && $("#libraryview .quota .storagequota").removeClass("red")
            })
        }
          , h = function() {
            n.hide(),
            a.show(),
            $("#switchtouserlibrary").removeClass("active"),
            $("#switchtomarketplacelibrary").removeClass("active"),
            $("#imagedialog").unbind("scroll.is");
            for (var e = $("#imagedialog .searchbox .searchtype").val(), t = ($("#searchsettings input[name=webimages]").is(":checked"),
            0); t < d20.searchRequests.length; t++)
                d20.searchRequests[t].abort();
            var i = encodeURIComponent($("#imagedialog .keywords").val());
            if ("" == (i = i.substring(0, 2e3)))
                return n.show(),
                a.hide(),
                window.currentPlayer && ("marketplace" === window.currentPlayer.librarytab ? $("#switchtomarketplacelibrary").trigger("click") : $("#switchtouserlibrary").trigger("click")),
                !0;
            s.html("<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Searching Purchases...</div>"),
            d20.searchRequests.push($.get(d20.library.libraryBase + "/image_library/search_marketplace/" + e + "/" + i, function(e) {
                var t = JSON.parse(e)
                  , n = "";
                n += "<ol class='dd-list'>",
                s.html(""),
                _.isEmpty(t) || (_.each(["purchases", "ttfsets", "prosets", "free"], function(e) {
                    if (t[e]) {
                        fname = "free" === e ? "Free Assets" : "purchases" === e ? "Marketplace Purchases" : "prosets" === e ? "Subscription Sets" : "ttfsets" === e ? "Backer Sets" : e,
                        n += "<li class='dd-item dd-folder'>",
                        n += "<button class='dd-unsortable' data-action='collapse' type='button'>Collapse</button>",
                        n += "<button class='dd-unsortable' data-action='expand' type='button' style='display: none;'>Expand</button>",
                        n += "<div class='dd-content'>",
                        n += "<div class='folder-title'>" + fname + "</div>",
                        n += "</div>",
                        n += "<ol class='dd-list'>";
                        var i = [];
                        for (var o in t[e])
                            i.push([o, t[e][o]]);
                        i.sort(function(e, t) {
                            return e[1] < t[1] ? -1 : e[1] > t[1] ? 1 : 0
                        }),
                        _.each(i, function(e) {
                            n += "<li class='dd-item dd-folder tokenset' data-setid='" + e[0] + "' >",
                            n += "<button class='dd-unsortable' data-action='collapse' type='button'>Collapse</button>",
                            n += "<button class='dd-unsortable' data-action='expand' type='button' style='display: none;'>Expand</button>",
                            n += "<div class='dd-content'>",
                            n += "<div class='folder-title'>" + e[1][0].setname + "</div>",
                            n += "</div>",
                            n += "<ol class='dd-list'>",
                            _.each(e[1], function(e) {
                                e.image_url.includes(".webm") ? n += "<li class='dd-item library-item draggableresult' data-fullsizeurl='" + e.fullsize_url + "' data-itemid='" + e.id + "'><div class='dd-content'><div class='token'><img src='" + e.image_url.replace("thumb.webm", "sample.png") + "' draggable='false'><img class='animIndicator' src='/v2/images/animIcon.png'></div><div class='name'><div class='namecontainer'>" + e.credit + "</div></div></div></li>" : n += "<li class='dd-item library-item draggableresult' data-fullsizeurl='" + e.fullsize_url + "' data-itemid='" + e.id + "'><div class='dd-content'><div class='token'><img src='" + e.image_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.credit + "</div></div></div></li>"
                            }),
                            n += "</ol>"
                        }),
                        n += "</ol>",
                        n += "</li>"
                    }
                }),
                t.marketplace && t.marketplace.length > 0 && (n += "<li class='dd-item dd-folder'>",
                n += "<button class='dd-unsortable' data-action='collapse' type='button'>Collapse</button>",
                n += "<button class='dd-unsortable' data-action='expand' type='button' style='display: none;'>Expand</button>",
                n += "<div class='dd-content marketplacead'>",
                n += "<div class='folder-title'>Premium Assets</div>",
                n += "</div>",
                n += "<ol class='dd-list'>",
                _.each(t.marketplace, function(e, t) {
                    t < 3 ? e.image_url.includes(".webm") ? n += "<li class='dd-item library-item marketplacead'><div class='dd-content'><div class='token'><a class='buyart' data-href='" + e.buy_url + "'><img src='" + e.image_url.replace("thumb.webm", "sample.png") + "' draggable='false'><img class='animIndicator' src='/v2/images/animIcon.png'></a></div><div class='name'><div class='namecontainer'><a class='buyart' data-href='" + e.buy_url + "'>" + e.credit + "</a></div></div></div></li>" : n += "<li class='dd-item library-item marketplacead'><div class='dd-content'><div class='token'><a class='buyart' data-href='" + e.buy_url + "'><img src='" + e.image_url + "' draggable='false'></a></div><div class='name'><div class='namecontainer'><a class='buyart' data-href='" + e.buy_url + "'>" + e.credit + "</a></div></div></div></li>" : e.image_url.includes(".webm") ? n += "<li style='display: none;' class='dd-item library-item marketplacead'><div class='dd-content'><div class='token'><a class='buyart' data-href='" + e.buy_url + "'><img src='" + e.image_url.replace("thumb.webm", "sample.png") + "' draggable='false'><img class='animIndicator' src='/v2/images/animIcon.png'></a></div><div class='name'><div class='namecontainer'><a class='buyart' data-href='" + e.buy_url + "'>" + e.credit + "</a></div></div></div></li>" : n += "<li style='display: none;' class='dd-item library-item marketplacead'><div class='dd-content'><div class='token'><a class='buyart' data-href='" + e.buy_url + "'><img src='" + e.image_url + "' draggable='false'></a></div><div class='name'><div class='namecontainer'><a class='buyart' data-href='" + e.buy_url + "'>" + e.credit + "</a></div></div></div></li>"
                }),
                t.marketplace.length > 3 && (n += "<a class='expandsearch' href='javascript:void(0);'>More Premium Assets &raquo</a>"),
                n += "</ol>",
                n += "</li>")),
                n += "</ol>",
                s.html(n),
                $("#imagedialog #marketplaceresults .draggableresult").draggable({
                    handle: ".dd-content",
                    revert: !0,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body"
                }).addTouch()
            })),
            l.html("<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Searching your Library...</div>"),
            d20.searchRequests.push($.post(d20.library.libraryBase + "/image_library/usersearch", {
                keywords: i
            }, function(e) {
                var t = JSON.parse(e);
                l.html("");
                var n = "";
                n += "<ol class='dd-list'>",
                t.length > 0 ? (n += "<li class='dd-item dd-folder libraryresult'>",
                n += "<button class='dd-unsortable' data-action='collapse' type='button'>Collapse</button>",
                n += "<button class='dd-unsortable' data-action='expand' type='button' style='display: none;'>Expand</button>",
                n += "<div class='dd-content'>",
                n += "<div class='folder-title'>From your Library</div>",
                n += "</div>",
                n += "<ol class='dd-list libraryresultfolder'>",
                _.each(t, function(e) {
                    e.image_url.includes(".webm") ? n += "<li class='dd-item library-item draggableresult libraryresult' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "' data-foldertags='" + e.foldertags.join(",") + "'><div class='dd-content'><div class='token'><img src='" + e.image_url.replace("thumb.webm", "sample.png") + "' draggable='false'><img class='animIndicator' src='/v2/images/animIcon.png'></div><div class='name'><div class='namecontainer'>" + e.credit + "</div></div></div></li>" : n += "<li class='dd-item library-item draggableresult libraryresult' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "' data-foldertags='" + e.foldertags.join(",") + "'><div class='dd-content'><div class='token'><img src='" + e.image_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.credit + "</div></div></div></li>"
                }),
                n += "</ol>",
                n += "</li>") : n += "<div class='alert white'>No results found in your library for those keywords.</div>",
                n += "</ol>",
                l.html(n),
                $("#imagedialog #libraryresults .draggableresult").draggable({
                    handle: ".dd-content",
                    revert: !0,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body"
                }).addTouch()
            })),
            c.html("<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Searching the Web...</div>"),
            d20.searchRequests.push($.get(d20.library.libraryBase + "/image_library/websearch/" + e + "/" + escape(i) + "/1", function(t) {
                var n = JSON.parse(t);
                c.html("");
                var o = "";
                o += "<ol class='dd-list'>",
                n.length > 0 ? (o += "<li class='dd-item dd-folder googleresult'>",
                o += "<button class='dd-unsortable' data-action='collapse' type='button'>Collapse</button>",
                o += "<button class='dd-unsortable' data-action='expand' type='button' style='display: none;'>Expand</button>",
                o += "<div class='dd-content'>",
                o += "<div class='folder-title'>From the Web <small>Powered by Google</small></div>",
                o += "</div>",
                o += "<ol class='dd-list googleresultfolder'>",
                _.each(n, function(e) {
                    o += "<li class='dd-item library-item draggableresult googleresult' data-fullsizeurl='" + e.fullsize_url + "'><div class='dd-content'><div class='token'><img src='" + e.image_url.replace("thumb.webm", "sample.png") + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.credit + "</div></div></div></li>"
                }),
                o += "</ol>",
                o += "</li>",
                $("#imagedialog").infinitescroll({
                    url: d20.library.libraryBase + "/image_library/websearch/" + e + "/" + escape(i),
                    appendTo: c.find(".dd-list"),
                    container: a,
                    precheck: function() {
                        return $("#arttab").hasClass("ui-state-active") && a.is(":visible")
                    },
                    triggerAt: 50,
                    requestType: "get",
                    callback: function(e) {
                        $("#imagedialog #googleresults .alert").remove();
                        var t = JSON.parse(e)
                          , n = "";
                        _.each(t, function(e) {
                            n += "<li class='dd-item library-item draggableresult googleresult' data-fullsizeurl='" + e.fullsize_url + "'><div class='dd-content'><div class='token'><img src='" + e.image_url.replace("thumb.webm", "sample.png") + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.credit + "</div></div></div></li>"
                        });
                        var i = c.find(".googleresultfolder");
                        i.append(n),
                        i.append("<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Looking on the web...</div>"),
                        $("#imagedialog #googleresults .draggableresult").not(".ui-draggable").draggable({
                            handle: ".dd-content",
                            revert: !0,
                            revertDuration: 0,
                            helper: "clone",
                            appendTo: "body"
                        }).addTouch()
                    }
                })) : o += "<div class='alert white'>No results found on the web for those keywords.</div>",
                o += "</ol>",
                c.html(o),
                $("#imagedialog #googleresults .draggableresult").draggable({
                    handle: ".dd-content",
                    revert: !0,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body"
                }).addTouch(),
                setTimeout(function() {
                    ga("send", {
                        hitType: "event",
                        eventCategory: "Web Image Search",
                        eventAction: "In-app",
                        eventLabel: escape(i.toLowerCase())
                    })
                }, 0)
            }))
        };
        d20.lazySearch = _.debounce(h, 500),
        d20.searchRequests = [],
        i.on("click", ".tokenset .dd-unsortable[data-action='expand']", function() {
            var e = $(this).parent(".tokenset");
            if (!(e.find("ol.dd-list").length > 0)) {
                e.append("<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Loading Set...</div>");
                var t = e.attr("data-setid");
                d20.searchRequests.push($.get(d20.library.libraryBase + "/image_library/fetchsetresults/" + t, function(t) {
                    var i = JSON.parse(t)
                      , o = "";
                    o += "<ol class='dd-list'>",
                    _.each(i, function(e, t) {
                        e.image_url.includes(".webm") ? o += "<li class='dd-item library-item draggableresult' data-fullsizeurl='" + e.fullsize_url + "' data-itemid='" + t + "'><div class='dd-content'><div class='token'><img src='" + e.image_url.replace("thumb.webm", "sample.png") + "' draggable='false'><img class='animIndicator' src='/v2/images/animIcon.png'></div><div class='name'><div class='namecontainer'>" + e.name + "</div></div></div></li>" : o += "<li class='dd-item library-item draggableresult' data-fullsizeurl='" + e.fullsize_url + "' data-itemid='" + t + "'><div class='dd-content'><div class='token'><img src='" + e.image_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.name + "</div></div></div></li>"
                    }),
                    o += "</ol>",
                    e.children(".alert").remove(),
                    e.append(o),
                    window.is_gm && !window.is_playerapp && $("#marketplacelibrary .library-item").not(".ui-draggable").draggable({
                        handle: ".dd-content",
                        revert: !0,
                        distance: 10,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body",
                        scroll: !1,
                        start: function() {
                            n.addClass("externaldrag")
                        },
                        stop: function() {
                            n.removeClass("externaldrag")
                        }
                    }).addTouch()
                }))
            }
        }),
        o.on("click", ".libraryfolder button[data-action='expand']", function() {
            var e = $(this).parent(".libraryfolder")
              , t = e.attr("data-folderid");
            "true" !== e.attr("data-content") && (e.append("<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Loading Set...</div>"),
            $.get(d20.library.libraryBase + "/image_library/fetchlibraryfolder/" + t, function(t) {
                if (!x(t)) {
                    var n = JSON.parse(t);
                    e.children(".alert").remove(),
                    k(e, n)
                }
            }),
            e.attr("data-content", !0))
        }),
        $("body").append("<img id='fullsizepopup' src='' style='display: none;'>"),
        $("body").append("<video id='fullsizeanimpopup' src='' style='display: none;' autoplay='true' loop muted></video>");
        var p = $("body").find("#fullsizepopup")
          , f = $("body").find("#fullsizeanimpopup");
        n.add(a).on({
            mouseenter: function() {
                if ($("body .ui-draggable-dragging").length > 0)
                    return;
                if ($(this).parents("#librarysearchroot.fullsizesearch").length > 0)
                    return;
                var e = $(this).find("img").attr("src");
                let t = e.includes("sample.png");
                var i = p;
                t && (i = f,
                e = e.replace("sample.png", "thumb.webm")),
                i.attr("src") != e && i.attr("src", e);
                var o = i.width() + 50
                  , r = i.height() / 2;
                n.add(a).on("mousemove", function(e) {
                    if (50 === o || 0 === r)
                        return o = i.width() + 50,
                        void (r = i.height() / 2);
                    i.css({
                        position: "absolute",
                        "z-index": "100000",
                        "max-width": "256px",
                        "max-height": "256px",
                        left: e.clientX - o,
                        top: e.clientY - r
                    }).show()
                }),
                $(this).on("mousedown", function() {
                    n.add(a).off("mousemove"),
                    f.hide(),
                    p.hide()
                })
            },
            mouseleave: function() {
                n.add(a).off("mousemove"),
                f.hide(),
                p.hide()
            }
        }, ".library-item"),
        a.on("click", ".expandsearch", function() {
            $(this).siblings().show(),
            $(this).hide()
        });
        var g, m = $("#librarymenu"), y = $("#libraryitemmenu"), v = $("#librarycopymenu"), b = $("#libraryviewmenu"), w = $("#libraryrecentviewmenu");
        $("#libraryfolderroot").on("contextmenu", ".dd-content", function(e) {
            window.is_gm && ($(this).parents("#userlibrary").length > 0 && ($(this).parent().hasClass("dd-folder") ? (m.show(),
            m.css({
                top: E(e, m) + "px",
                left: S(e, m) + "px"
            }),
            g = $(this).parent()) : $(this).parent().hasClass("dd-item") && (y.show(),
            y.css({
                top: E(e, y) + "px",
                left: S(e, y) + "px"
            }),
            $currentItemTarget = $(this).parent())),
            $(this).parents("#marketplacelibrary").length > 0 && ($currentTarget = $(this).parent(),
            ($currentTarget.attr("data-itemid") || $currentTarget.attr("data-setid")) && (v.find("li[data-action-type='permdelete']").hide(),
            v.find("li[data-action-type='renameitem']").hide(),
            v.show(),
            v.css({
                top: E(e, v) + "px",
                left: S(e, v) + "px"
            }))),
            e.preventDefault(),
            e.stopPropagation())
        }),
        $("#librarysearchroot").on("contextmenu", ".googleresult, .library-item, .dd-folder", function(e) {
            e.preventDefault(),
            e.stopPropagation(),
            $(this).hasClass("marketplacead") || $(this).hasClass("dd-folder") && !$(this).hasClass("tokenset") || ($currentTarget = $(this),
            $(this).hasClass("library-item") && $(this).parents("#libraryresults").length > 0 ? (v.find("li[data-action-type='permdelete']").show(),
            v.find("li[data-action-type='renameitem']").show()) : (v.find("li[data-action-type='permdelete']").hide(),
            v.find("li[data-action-type='renameitem']").hide()),
            v.show(),
            v.css({
                top: E(e, v) + "px",
                left: S(e, v) + "px"
            }))
        }),
        $("#recentuploads").on("contextmenu", ".library-item", function(e) {
            $currentTarget = $(this),
            v.find("li[data-action-type='permdelete']").show(),
            v.find("li[data-action-type='renameitem']").show(),
            v.show(),
            v.css({
                top: E(e, v) + "px",
                left: S(e, v) + "px"
            }),
            e.preventDefault(),
            e.stopPropagation()
        }),
        $("#libraryview").on("contextmenu", function(e) {
            $currentTarget = $(this),
            "recentuploads" === $("#libraryview").attr("data-folderid") ? (w.show(),
            w.css({
                top: E(e, w) + "px",
                left: S(e, w) + "px"
            })) : (b.show(),
            b.css({
                top: E(e, b) + "px",
                left: S(e, b) + "px"
            })),
            e.preventDefault(),
            e.stopPropagation()
        }),
        $("#librarymenu ul").on(mousedowntype, "li[data-action-type=addfolder]", function() {
            $("#librarymenu").hide();
            var e = prompt("What do you want to call the new folder?");
            if (null != e) {
                var t = g.attr("data-folderid");
                t && "recentuploads" !== t || (t = "root");
                var n = g;
                3 === g.parents(".dd-folder").length && (t = (n = g.parent().closest(".dd-folder")).attr("data-folderid")),
                d20.library.addFolder(e, t, n)
            }
        }),
        $("#librarymenu ul").on(mousedowntype, "li[data-action-type=renamefolder]", function() {
            var e = prompt("What do you want to rename the new folder?");
            if (null != e) {
                var t = g.attr("data-folderid");
                t && "recentuploads" !== t || (t = "root"),
                $("#librarymenu").hide(),
                d20.library.renameFolder(e, t, g)
            }
        }),
        $("#librarymenu ul").on(mousedowntype, "li[data-action-type=deletefolder]", function() {
            if (confirm("Are you sure you want to delete this folder?")) {
                var e = g.attr("data-folderid");
                e && "recentuploads" !== e || (e = "root");
                var t = g.index();
                $("#librarymenu").hide(),
                d20.library.deleteFolder(e, g, t)
            }
        }),
        $("#librarymenu ul").on(mousedowntype, "li[data-action-type=sortalpha]", function() {
            var e = g.attr("data-folderid");
            e && "recentuploads" !== e || (e = "root"),
            $("#librarymenu").hide(),
            d20.library.sortFolder(e, g)
        }),
        $("#libraryitemmenu ul").on(mousedowntype, "li[data-action-type=deleteitem]", function() {
            $("#libraryitemmenu").hide();
            var e = $currentItemTarget.attr("data-imageid");
            if (e) {
                var t = $currentItemTarget.parent().closest(".libraryfolder")
                  , n = "";
                t.length > 0 ? n = t.attr("data-folderid") : (t = $("#userlibrary"),
                n = "root");
                var i = $currentItemTarget.index();
                $currentItemTarget.remove();
                var o = 0 === t.children(".dd-list").children('*[data-imageid="' + e + '"]').length;
                d20.library.deleteItem(e, o, n, i)
            } else
                console.log("ERROR: Cannot find item.")
        }),
        $("#libraryitemmenu ul").on(mousedowntype, "li[data-action-type=renameitem]", function() {
            $("#libraryitemmenu").hide();
            var e = prompt("What do you want to rename the item?");
            if (null != e) {
                var t = $currentItemTarget.attr("data-imageid");
                if (t) {
                    var n = $currentItemTarget.find(".namecontainer").text()
                      , i = $currentItemTarget.parent().closest(".libraryfolder").attr("data-folderid") ? $currentItemTarget.parent().closest(".libraryfolder").attr("data-folderid") : "root"
                      , o = $currentItemTarget.index();
                    d20.library.renameItem(e, t, $currentItemTarget, n, i, !1, o)
                }
            }
        }),
        $("#librarycopymenu ul").on(mousedowntype, "li[data-action-type=renameitem]", function() {
            $("#librarycopymenu").hide();
            var e = prompt("What do you want to rename the item?");
            if (null != e) {
                var t = $currentTarget.attr("data-imageid");
                if (t) {
                    var n = $currentTarget.find(".namecontainer").text()
                      , i = "recentuploads"
                      , o = $currentTarget.index();
                    d20.library.renameItem(e, t, $currentTarget, n, i, !1, o)
                }
            }
        }),
        $("#librarycopymenu ul").on(mousedowntype, "li[data-action-type=copyasset]", function() {
            $("#librarycopymenu").hide();
            var e = ""
              , t = "";
            if ($currentTarget.hasClass("dd-folder"))
                var n = html_sanitize($currentTarget.find(".folder-title").text());
            else
                n = html_sanitize($currentTarget.find(".namecontainer").text());
            var i = "";
            if ($currentTarget.hasClass("dd-folder") ? (e = "folder",
            t = $currentTarget.attr("data-setid")) : $currentTarget.hasClass("googleresult") ? (e = "item",
            t = "googleresult",
            i = $currentTarget.attr("data-fullsizeurl")) : $currentTarget.attr("data-imageid") ? (e = "item",
            t = $currentTarget.attr("data-imageid"),
            i = $currentTarget.find("img").prop("src")) : (e = "item",
            t = $currentTarget.attr("data-itemid"),
            i = $currentTarget.find("img").prop("src")),
            t) {
                var o = $("#imagedialog .keywords").val();
                d20.library.copyAsset(e, t, n, i, $currentTarget, o)
            } else
                console.log("ERROR: No ID found.")
        }),
        $("#librarycopymenu ul").on(mousedowntype, "li[data-action-type=copyassetfolder]", function(e) {
            e.preventDefault(),
            e.stopPropagation();
            var t = ""
              , n = "";
            if ($currentTarget.hasClass("dd-folder"))
                var i = html_sanitize($currentTarget.find(".folder-title").text());
            else
                i = html_sanitize($currentTarget.find(".namecontainer").text());
            var o = "";
            $currentTarget.hasClass("dd-folder") ? (t = "folder",
            n = $currentTarget.attr("data-setid")) : $currentTarget.hasClass("googleresult") ? (t = "item",
            n = "googleresult",
            o = $currentTarget.attr("data-fullsizeurl")) : $currentTarget.attr("data-imageid") ? (t = "item",
            n = $currentTarget.attr("data-imageid"),
            o = $currentTarget.find("img").prop("src")) : (t = "item",
            n = $currentTarget.attr("data-itemid"),
            o = $currentTarget.find("img").prop("src")),
            n ? $.get(d20.library.libraryBase + "/image_library/fetchfolderlist/", function(e) {
                jsonobj = JSON.parse(e),
                $("#copytofolderinput").show(),
                $("#copytofolderinput").focus(),
                $("#copytofolderinput").autocomplete({
                    delay: 100,
                    autoFocus: !0,
                    position: {
                        my: "left top",
                        at: "left bottom",
                        collision: "fit"
                    },
                    source: function(e, t) {
                        var n = e.term
                          , i = [];
                        _.each(jsonobj, function(e) {
                            i.push({
                                label: e.path,
                                value: e.n,
                                id: e.id
                            })
                        }),
                        t($.ui.autocomplete.filter(i, n))
                    },
                    minLength: 2,
                    focus: function() {
                        return !1
                    },
                    select: function(e, r) {
                        var a = $("#imagedialog .keywords").val();
                        $("#copytofolderinput").autocomplete("close"),
                        $("#copytofolderinput").hide(),
                        setTimeout(function() {
                            $("#copytofolderinput").val("")
                        }, 200),
                        $("#librarycopymenu").hide(),
                        d20.library.doCopyToFolder(r.item.value, r.item.id, t, n, i, o, $currentTarget, a)
                    },
                    open: function() {
                        autoCompleteOpen = !0
                    },
                    close: function() {
                        setTimeout(function() {
                            autoCompleteOpen = !1
                        }, 250)
                    }
                })
            }) : console.log("ERROR: No ID found.")
        }),
        $("#librarycopymenu").on("keydown", "#copytofolderinput", function(e) {
            27 === e.which && ($("#copytofolderinput").autocomplete("close"),
            $("#copytofolderinput").hide(),
            setTimeout(function() {
                $("#copytofolderinput").val("")
            }, 200),
            $("#librarycopymenu").hide())
        }),
        $("#libraryviewmenu ul").on(mousedowntype, "li[data-action-type=selectall]", function() {
            $("#libraryview .library-container:not(.selected)").length > 0 ? $("#libraryview .library-container:not(.selected)").addClass("selected") : $("#libraryview .selected").removeClass("selected")
        }),
        $("#libraryrecentviewmenu ul").on(mousedowntype, "li[data-action-type=selectall]", function() {
            $("#libraryview .library-container:not(.selected)").length > 0 ? $("#libraryview .library-container:not(.selected)").addClass("selected") : $("#libraryview .selected").removeClass("selected")
        }),
        $("#libraryviewmenu ul").on(mousedowntype, "li[data-action-type=addfolder]", function() {
            var e = prompt("What do you want to call the new folder?");
            if (null != e) {
                var t = $("#libraryview").attr("data-folderid");
                t && "recentuploads" !== t || (t = "root");
                var n = $("#userlibrary").find("*[data-folderid='" + t + "']");
                3 === n.parents(".dd-folder").length && (t = (n = n.parent().closest(".dd-folder")).attr("data-folderid")),
                d20.library.addFolder(e, t, n, !0)
            }
        }),
        $("#libraryviewmenu ul").on(mousedowntype, "li[data-action-type=sortalpha]", function() {
            var e = $("#libraryview").attr("data-folderid");
            e && "recentuploads" !== e || (e = "root");
            var t = $("#userlibrary").find("*[data-folderid='" + e + "']");
            d20.library.sortFolder(e, t, !0)
        }),
        $("#libraryviewmenu ul").on(mousedowntype, "li[data-action-type=massdelete]", function() {
            var e = d20.library.getSelected();
            if (0 !== e.count) {
                if (confirm("Are you sure you want to delete the " + e.count + " selected items from this folder?")) {
                    var t = [];
                    $("#libraryview .library-container").each(function(e, n) {
                        $(n).hasClass("selected") && t.push(e)
                    }),
                    $("#libraryview .selected").remove();
                    var n = $("#userlibrary").find("*[data-folderid='" + $("#libraryview").attr("data-folderid") + "']");
                    if (n && "true" === n.attr("data-content") || "root" === $("#libraryview").attr("data-folderid")) {
                        var i = n.children(".dd-list").children();
                        _.each(i, function(e, n) {
                            t.indexOf(n) > -1 && e.remove()
                        })
                    }
                    d20.library.massDelete($("#libraryview").attr("data-folderid"), e.folderids, e.imageids, t)
                }
            } else
                alert("No items selected to delete.")
        }),
        $("#libraryviewmenu ul").on(mousedowntype, "li[data-action-type=masstag]", function() {
            var e = d20.library.getSelected();
            if (0 !== e.count) {
                var t = prompt("What tag do you want to add to these " + e.count + " items?");
                null != t && $.post(d20.library.libraryBase + "/image_library/masstag/", {
                    ids: _.uniq(e.imageids),
                    tagname: t
                }, function() {
                    $.get(d20.library.libraryBase + "/image_library/fetchlibraryfolder/" + $("#libraryview").attr("data-folderid"), function(e) {
                        if (!x(e)) {
                            var t = JSON.parse(e);
                            "true" === $("#libraryview").attr("data-isopen") && d20.library.renderLibraryView(t, "", "")
                        }
                    })
                })
            } else
                alert("No items selected to tag.")
        }),
        $("#libraryviewmenu ul").on(mousedowntype, "li[data-action-type=massremovetag]", function() {
            var e = d20.library.getSelected();
            if (0 !== e.count) {
                var t = prompt("What tag do you want to remove from these " + e.count + " items?");
                null != t && $.post(d20.library.libraryBase + "/image_library/massremovetag/", {
                    ids: _.uniq(e.imageids),
                    tagname: t
                }, function() {
                    $.get(d20.library.libraryBase + "/image_library/fetchlibraryfolder/" + $("#libraryview").attr("data-folderid"), function(e) {
                        if (!x(e)) {
                            var t = JSON.parse(e);
                            "true" === $("#libraryview").attr("data-isopen") && d20.library.renderLibraryView(t, "", "")
                        }
                    })
                })
            } else
                alert("No items selected to remove tags from.")
        }),
        $("#libraryrecentviewmenu ul").on(mousedowntype, "li[data-action-type=permdelete]", function() {
            var e = d20.library.getSelected();
            0 !== e.count ? confirm("Are you sure you want to delete the " + e.count + " selected items? These items will be permanently removed from your library. This action cannot be undone.") && d20.library.permDelete(e) : alert("No items selected to delete.")
        }),
        $("#librarycopymenu ul").on(mousedowntype, "li[data-action-type=permdelete]", function() {
            var e = $currentTarget.attr("data-imageid");
            if (e) {
                if (confirm("Are you sure you want to delete " + html_sanitize($currentTarget.find(".namecontainer").text()) + "? This item will be permanently removed from your library and all games it's used in. This action cannot be undone.")) {
                    var t = {
                        count: 1,
                        imageids: [e],
                        folderids: []
                    };
                    d20.library.permDelete(t),
                    $currentTarget.remove()
                }
            } else
                console.log("ERROR: No ID found.")
        }),
        $("body").on(mousedowntype, function() {
            "none" !== m[0].style.display && (m[0].style.display = "none"),
            y.length > 0 && "none" !== y[0].style.display && (y[0].style.display = "none"),
            v.length > 0 && ("none" !== v[0].style.display && (v[0].style.display = "none"),
            $("#copytofolderinput").hide(),
            setTimeout(function() {
                $("#copytofolderinput").val("")
            }, 200),
            $("#librarycopymenu").hide()),
            "none" !== b[0].style.display && (b[0].style.display = "none"),
            "none" !== w[0].style.display && (w[0].style.display = "none")
        }),
        $("#libraryfolderroot").on("change", function(e, t) {
            var i, o = (f = $(t)).parent().closest(".libraryfolder"), r = f.hasClass("libraryfolder") ? "folder" : "item", a = [], s = "", l = "", c = f.attr("data-oldparent"), u = $("*[data-folderid='" + c + "']"), d = t.getAttribute("data-massdrop"), h = f.attr("data-oldindex"), p = "", f = $(t);
            if (s = "folder" === r ? f.attr("data-folderid") : f.attr("data-imageid"),
            o.length > 0 ? l = o.attr("data-folderid") : f.parents("#recentuploads").length > 0 ? (o = $("#recentuploads"),
            l = "recentuploads",
            f.addClass("recentupload")) : (o = $("#userlibrary"),
            l = "root"),
            0 === u.length && (u = $("#userlibrary")),
            "recentuploads" != l) {
                if (i = f.index(),
                l === c && parseInt(i, 10) === parseInt(h, 10))
                    return;
                var g = f.prev();
                p = "";
                if (f.hasClass("libraryfolder")) {
                    var m = html_sanitize(f.children(".dd-content").children(".folder-title").text());
                    a.push({
                        id: f.attr("data-folderid"),
                        n: m,
                        t: "folder"
                    })
                } else if (f.hasClass("library-item")) {
                    var y = f.find("img").prop("src")
                      , v = html_sanitize(f.find(".namecontainer").text());
                    let e = {
                        id: f.attr("data-imageid"),
                        n: v,
                        t: "item",
                        fullsize_url: f.attr("data-fullsizeurl"),
                        img_url: y
                    };
                    a.push(e)
                }
                g && g.hasClass("libraryfolder") ? p = g.attr("data-folderid") : g && g.hasClass("library-item") && (p = g.attr("data-imageid"))
            }
            if (d) {
                if (0 === d20.library.lastMultipleDragInfo.length)
                    return void f.remove();
                if (r = "massdrop",
                "root" === (c = $("#libraryview").attr("data-folderid")))
                    u = $("#userlibrary");
                else
                    u = $("*[data-folderid='" + c + "']");
                s = JSON.stringify(d20.library.lastMultipleDragInfo),
                h = [],
                $("#libraryview .library-container").each(function(e, t) {
                    $(t).hasClass("selected") && h.push(e)
                });
                p = "";
                if ((g = f.prev()) && g.hasClass("libraryfolder") ? p = g.attr("data-folderid") : g && g.hasClass("library-item") && (p = g.attr("data-imageid")),
                c === l) {
                    var b = u.children(".dd-list").children()
                      , w = [];
                    _.each(b, function(e) {
                        $(e).is(".library-item, .libraryfolder") && w.push(e)
                    }),
                    _.each(w, function(e, t) {
                        h.indexOf(t) > -1 && e.remove()
                    })
                } else if (u && "true" === u.attr("data-content") || "root" === c) {
                    b = u.children(".dd-list").children();
                    _.each(b, function(e, t) {
                        h.indexOf(t) > -1 && e.remove()
                    })
                } else if ("recentuploads" === c && window.currentPlayer && !0 === window.currentPlayer.get("recentuploadsfilter")) {
                    b = $("#recentuploads").children(".dd-list").children();
                    _.each(b, function(e, t) {
                        h.indexOf(t) > -1 && e.remove()
                    })
                }
                var k = "";
                ("recentuploads" != c || window.currentPlayer && !0 === window.currentPlayer.get("recentuploadsfilter")) && $("#libraryview .selected").remove(),
                _.each(d20.library.lastMultipleDragInfo, function(e) {
                    "item" === e.t && (k += "<li class='dd-item library-item draggableresult' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + e.img_url.replace("thumb.webm", "sample.png") + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.n + "</div></div></div></li>"),
                    "folder" === e.t && (k += "<li class='dd-item dd-folder dd-collapsed libraryfolder' data-folderid='" + e.id + "'>",
                    k += "<button class='dd-sortablehandle' data-action='collapse' type='button' style='display: none;'>Collapse</button>",
                    k += "<button class='dd-sortablehandle' data-action='expand' type='button'>Expand</button>",
                    k += "<div class='dd-content'>",
                    k += "<div class='folder-title'>" + e.n + "</div>",
                    k += "</div>",
                    k += "<ol class='dd-list'>",
                    k += "</ol>")
                }),
                f.replaceWith(k),
                $("#userlibrary").find(".draggableresult").not(".ui-draggable").draggable({
                    handle: ".namecontainer",
                    revert: !0,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body",
                    start: function() {
                        n.addClass("externaldrag")
                    },
                    stop: function() {
                        n.removeClass("externaldrag")
                    }
                }).addTouch()
            }
            $.post(d20.library.libraryBase + "/image_library/movelibraryitem/", {
                appid: s,
                parent: l,
                type: r,
                oldparent: c,
                newindex: i,
                oldindex: h,
                placedafterid: p,
                itemstructure: JSON.stringify(a)
            }, function(e) {
                x(e, "move") || ("true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === l && d20.library.doRenderFolder(o, l, r, s),
                "true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === c && "recentuploads" != c && d20.library.doRenderFolder(u, c, r, s))
            })
        }),
        d20.library.buildLibraryIndex = function() {
            n.show(),
            $.get(d20.library.libraryBase + "/image_library/marketplace_purchases_index", function(e) {
                var t = JSON.parse(e)
                  , o = "";
                for (var r in o += "<ol class='dd-list'>",
                t) {
                    fname = "free" === r ? "Free Assets" : "purchases" === r ? "Marketplace Purchases" : "prosets" === r ? "Subscription Sets" : "ttfsets" === r ? "Backer Sets" : r,
                    o += "<li class='dd-item dd-folder dd-collapsed'>",
                    o += "<button class='dd-unsortable' data-action='collapse' type='button'>Collapse</button>",
                    o += "<button class='dd-unsortable' data-action='expand' type='button' style='display: none;'>Expand</button>",
                    o += "<div class='dd-content'>",
                    o += "<div class='folder-title'>" + fname + "</div>",
                    o += "</div>",
                    o += "<ol class='dd-list'>";
                    var a = [];
                    for (var s in t[r])
                        a.push([s, t[r][s]]);
                    a.sort(function(e, t) {
                        return e[1] < t[1] ? -1 : e[1] > t[1] ? 1 : 0
                    }),
                    _.each(a, function(e) {
                        o += "<li class='dd-item dd-folder dd-collapsed tokenset' data-setid='" + e[0] + "' >",
                        o += "<button class='dd-unsortable' data-action='collapse' type='button' style='display: none;'>Collapse</button>",
                        o += "<button class='dd-unsortable' data-action='expand' type='button'>Expand</button>",
                        o += "<div class='dd-content'>",
                        o += "<div class='folder-title'>" + e[1] + "</div>",
                        o += "</div>"
                    }),
                    o += "</ol>",
                    o += "</li>"
                }
                o += "</ol>",
                i.html(o),
                n.nestable("serialize"),
                n.nestable("collapseAll")
            }),
            $.get(d20.library.libraryBase + "/image_library/fetchroot", function(e) {
                var t = JSON.parse(e)
                  , i = "";
                i += "<div><button class='btn addlibraryfolder' style='float: right;'><span class='pictos'>o</span> Add</button><button class='btn showuploaddialog' style='float: right; margin-right: 15px;'><span class='pictos'>c</span> Upload</div><div class='clear'></div>",
                i += "<ol class='dd-list' style='min-height: 15px;'>",
                _.each(t, function(e) {
                    "item" === e.t && (e.fullsize_url.includes(".webm") ? i += "<li class='dd-item library-item draggableresult' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + e.img_url.replace("thumb.webm", "sample.png") + "' draggable='false'><img class='animIndicator' src='/v2/images/animIcon.png'></div><div class='name'><div class='namecontainer'>" + e.n + "</div></div></div></li>" : i += "<li class='dd-item library-item draggableresult' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + e.img_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.n + "</div></div></div></li>"),
                    "folder" === e.t && (i += "<li class='dd-item dd-folder dd-collapsed libraryfolder' data-folderid='" + e.id + "'>",
                    i += "<button class='dd-sortablehandle' data-action='collapse' type='button' style='display: none;'>Collapse</button>",
                    i += "<button class='dd-sortablehandle' data-action='expand' type='button'>Expand</button>",
                    i += "<div class='dd-content'>",
                    i += "<div class='folder-title'>" + e.n + "</div>",
                    i += "</div>",
                    i += "<ol class='dd-list'>",
                    i += "</ol>")
                }),
                i += "</ol>",
                i += "<div class='clear' style='height: 15px;'></div><div class='tabcontainer' style='min-width: 265px;'><span class='pictos'>F</span> Recent Uploads<span style='float:right; cursor:pointer;' class='pictos recentuploadsfilter' title='Filter out items already in your library'>|</span></div>",
                o.html(i),
                $("#imagedialog #userlibrary .draggableresult").draggable({
                    handle: ".namecontainer",
                    revert: !0,
                    revertDuration: 0,
                    helper: "clone",
                    appendTo: "body",
                    start: function() {
                        n.addClass("externaldrag"),
                        $(this).attr("data-oldindex", $(this).index()),
                        $(this).parents(".libraryfolder").length > 0 ? $(this).attr("data-oldparent", $(this).parent().closest(".libraryfolder").attr("data-folderid")) : $(this).attr("data-oldparent", "root")
                    },
                    stop: function() {
                        n.removeClass("externaldrag")
                    }
                }).addTouch()
            })
        }
        ,
        d20.library.buildLibraryIndex(),
        d20.library.buildRecentUploads = function() {
            r.html("<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Loading Recent Uploads...</div>");
            var e = !1;
            window.currentPlayer && (e = window.currentPlayer.get("recentuploadsfilter")),
            $.get(d20.library.libraryBase + "/image_library/fetchorphanassets/" + e + "/1", function(t) {
                var i = JSON.parse(t);
                if (d20.library.recentuploadspage = 1,
                i.length > 0) {
                    var o = "";
                    o += "<ol class='dd-list'>",
                    _.each(i, function(e) {
                        e.image_url.includes(".webm") ? o += "<li class='dd-item library-item draggableresult recentupload' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "' data-filesize='" + e.file_size + "' data-uploaddate='" + e.upload_date + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + e.image_url.replace("thumb.webm", "sample.png") + "' draggable='false'><img class='animIndicator' src='/v2/images/animIcon.png'></div><div class='name'><div class='namecontainer'>" + e.name + "</div></div></div></li>" : o += "<li class='dd-item library-item draggableresult recentupload' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "' data-filesize='" + e.file_size + "' data-uploaddate='" + e.upload_date + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + e.image_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.name + "</div></div></div></li>"
                    }),
                    o += "</ol>",
                    r.html(o),
                    n.nestable("serialize"),
                    $("#imagedialog #recentuploads .draggableresult").draggable({
                        handle: ".namecontainer",
                        revert: !0,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body",
                        start: function() {
                            n.addClass("externaldrag")
                        },
                        stop: function() {
                            n.removeClass("externaldrag")
                        }
                    }).addTouch(),
                    $("#imagedialog").off("infinitescroll.scrollpage-library"),
                    $("#imagedialog").off("scroll.is-library"),
                    $("#imagedialog").infinitescroll({
                        url: d20.library.libraryBase + "/image_library/fetchorphanassets/" + e,
                        appendTo: r.find(".dd-list"),
                        container: n,
                        precheck: function() {
                            return $("#arttab").hasClass("ui-state-active") && $("#switchtouserlibrary").hasClass("active")
                        },
                        eventsuffix: "-library",
                        triggerAt: 50,
                        requestType: "get",
                        callback: function(e) {
                            var t = JSON.parse(e);
                            d20.library.recentuploadspage += 1;
                            var i = "";
                            _.each(t, function(e) {
                                i += "<li class='dd-item library-item draggableresult recentupload' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "' data-filesize='" + e.file_size + "' data-uploaddate='" + e.upload_date + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + e.image_url.replace("thumb.webm", "sample.png") + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.name + "</div></div></div></li>"
                            }),
                            50 === t.length && (i += "<div class='alert orange'><img src='/images/load.gif' width='15' height='15' /> Loading Recent Uploads...</div>");
                            var o = r.find(".dd-list");
                            o.find(".alert").remove(),
                            o.append(i),
                            $("#imagedialog #recentuploads .draggableresult").not(".ui-draggable").draggable({
                                handle: ".namecontainer",
                                revert: !0,
                                revertDuration: 0,
                                helper: "clone",
                                appendTo: "body",
                                start: function() {
                                    n.addClass("externaldrag")
                                },
                                stop: function() {
                                    n.removeClass("externaldrag")
                                }
                            }).addTouch()
                        }
                    })
                } else
                    r.find(".alert").remove()
            })
        }
        ,
        d20.library.validateFolderStructure = function() {
            window.is_gm && $.post(d20.library.libraryBase + "/image_library/validatefolderstructure/", {
                isgm: window.is_gm
            }, function(e) {
                "reload" === e && (console.log("RESCUING ORPHANED FOLDERS"),
                d20.library.buildLibraryIndex())
            })
        }
        ,
        d20.library.showUploadDialog = function() {
            var e = $("<div class='uploaddialog'></div>").html($("#tmpl_uploaddialog").html())
              , t = e.find(".avatar");
            t.dndUploader({
                url: "/image_library/newupload",
                method: "POST",
                allowMultiple: !0
            }),
            e.find(".manual").on("change", function() {
                t.trigger("triggermanual")
            }),
            t.bind("uploadcomplete", function(t, n) {
                if (t.stopPropagation(),
                "overquota" == n)
                    return d20.utils.showOverQuota(),
                    !1;
                (n.multiUploadTotal === undefined || n.multiUploadNum >= n.multiUploadTotal - 1) && (e.find(".progress").remove(),
                d20.library.buildRecentUploads()),
                e.find(".completed").text("Upload complete. Uploaded files are available under your Recent Uploads to add to the tabletop.")
            }),
            e.dialog({
                zIndex: 11e3,
                width: 400,
                height: 400,
                title: "Upload Files...",
                beforeClose: function() {
                    $(this).dialog("destroy")
                }
            })
        }
        ,
        d20.library.addFolder = function(e, t, n, i) {
            var o = generateUUID();
            $.post(d20.library.libraryBase + "/image_library/addlibraryfolder/", {
                appid: o,
                parent: t,
                name: e,
                items: "[]"
            }, function(r) {
                if (!x(r, "add")) {
                    ("root" === t || n.attr("data-content") && "true" === n.attr("data-content")) && k(n, [{
                        n: e,
                        t: "folder",
                        id: o
                    }]);
                    var a = n.attr("data-folderid");
                    a || (a = "root"),
                    ("true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === a || i) && $("#libraryview").prepend("<div class='library-container folder' data-folderid='" + o + "'><div class='library-imgcontainer'><span class='pictos' style='cursor: default;'>o</span></div><div class='library-labelcontainer'><span>" + e + "</span></div><div class='editbox'><span></span></div><div style='clear: both;'></div></div>")
                }
            })
        }
        ,
        d20.library.renameFolder = function(e, t, n, i) {
            "" == (e = d20ext.utils.strip_tags(e, "<span><br><strong><em>")) && (e = "Another Placeholder Folder Name"),
            $.post(d20.library.libraryBase + "/image_library/renamelibraryfolder/", {
                appid: t,
                name: e
            }, function(o) {
                if (!x(o, "rename"))
                    if (i) {
                        var r = n.children(".library-labelcontainer")
                          , a = n.children(".libraryeditbox");
                        r.text(e),
                        r.show(),
                        a.remove(),
                        $("#userlibrary").find("*[data-folderid=" + t + "]").children(".dd-content").children(".folder-title").text(e)
                    } else {
                        n.children(".dd-content").children(".folder-title").text(e);
                        var s = n.parent().closest(".dd-folder").attr("data-folderid");
                        if (s || (s = "root"),
                        "true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === s)
                            (r = $("#libraryview *[data-folderid=" + t + "]").children(".library-labelcontainer")).text(e)
                    }
            })
        }
        ,
        d20.library.deleteFolder = function(e, t, n) {
            var i = t.parent().closest(".dd-folder").attr("data-folderid");
            i || (i = "root"),
            $.post(d20.library.libraryBase + "/image_library/deletelibraryfolder/", {
                appid: e,
                localparentid: i,
                deleteindex: n
            }, function(n) {
                x(n, "delete"),
                "true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === i ? $("#libraryview *[data-folderid=" + e + "]").remove() : "true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === e ? $("#libraryview").dialog("close") : $("#userlibrary *[data-folderid=" + $("#libraryview").attr("data-folderid") + "]").parents("*[data-folderid=" + e + "]").length && $("#libraryview").dialog("close"),
                t.remove(),
                r.empty(),
                d20.library.buildRecentUploads()
            })
        }
        ,
        d20.library.sortFolder = function(e, t, n) {
            $.get(d20.library.libraryBase + "/image_library/sortlibraryfolder/" + e, function(i) {
                if (!x(i, "sort")) {
                    if (n) {
                        var o = $("#libraryview").attr("data-imageid");
                        $.get(d20.library.libraryBase + "/image_library/fetchlibraryfolder/" + e, function(e) {
                            if (!x(e)) {
                                var t = JSON.parse(e);
                                "true" === $("#libraryview").attr("data-isopen") && d20.library.renderLibraryView(t, "folder", o)
                            }
                        })
                    }
                    var r = JSON.parse(i);
                    t.children(".dd-list").empty(),
                    ("root" == e || t.attr("data-content") && "true" == t.attr("data-content")) && k(t, r)
                }
            })
        }
        ,
        d20.library.deleteItem = function(e, t, n, i) {
            $.post(d20.library.libraryBase + "/image_library/deletelibraryitem/", {
                appid: e,
                removetag: t,
                parent: n,
                deleteindex: i
            }, function(e) {
                x(e, "delete") || ((window.currentPlayer && !0 === window.currentPlayer.get("recentuploadsfilter") || -1 === $currentItemTarget.attr("data-fullsizeurl").indexOf("marketplace")) && d20.library.buildRecentUploads(),
                "true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === n && $("#libraryview").children().eq(i).remove())
            })
        }
        ,
        d20.library.renameItem = function(e, t, n, i, o, r, a) {
            $.post(d20.library.libraryBase + "/image_library/renamelibraryitem/", {
                appid: t,
                name: e,
                oldname: i,
                parent: o,
                index: a
            }, function(s) {
                if (!x(s, "rename"))
                    if (r) {
                        var l = n.children(".library-labelcontainer")
                          , c = n.children(".libraryeditbox");
                        l.text(e),
                        l.show(),
                        c.remove(),
                        "recentuploads" === o ? $("#recentuploads").find("*[data-imageid=" + t + "]").find(".namecontainer").text(e) : $("#userlibrary").find("*[data-imageid=" + t + "]").find(".namecontainer").text(e),
                        (d = n.find(".textboxlist-bit:contains('" + i + "')")).length > 0 ? d.text(e) : n.find(".textboxlist-bits").append("<li class='textboxlist-bit textboxlist-bit-box textboxlist-bit-box-deleteable'>" + e + "<a href='#' class='textboxlist-bit-box-deletebutton'</a></li>")
                    } else {
                        n.find(".namecontainer").text(e);
                        var u = n.parent().closest(".dd-folder").attr("data-folderid");
                        if (u || (u = "root"),
                        "true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === u) {
                            var d, h = $("#libraryview").children().eq(a);
                            if (h && h.attr("data-imageid") === t)
                                h.children(".library-labelcontainer").text(e),
                                0 === (d = h.find(".textboxlist-bit").filter(function() {
                                    return $(this).text() === e
                                })).length && (h.find(".yourtags").empty(),
                                d20.library.processView())
                        }
                        n.parents("#libraryresults").length > 0 && d20.library.buildRecentUploads()
                    }
            })
        }
        ,
        d20.library.copyAsset = function(e, t, i, r, a, s) {
            var l = generateUUID();
            $.post(d20.library.libraryBase + "/image_library/copy_asset_to_library/", {
                type: e,
                id: t,
                name: i,
                url: r,
                newid: l,
                keywords: s
            }, function(e) {
                if (!x(e, "copy")) {
                    var t = JSON.parse(e);
                    "item" === t.t && (o.children(".dd-list").prepend("<li class='dd-item library-item draggableresult recentupload' data-fullsizeurl='" + t.fullsize_url + "' data-imageid='" + t.id + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + t.img_url.replace("thumb.webm", "sample.png") + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + t.n + "</div></div></div></li>"),
                    d20.library.buildRecentUploads()),
                    "folder" === t.t && o.children(".dd-list").prepend("<li class='dd-item dd-folder dd-collapsed libraryfolder' data-folderid='" + l + "'><button class='dd-sortablehandle' data-action='collapse' type='button' style='display: none;'>Collapse</button><button class='dd-sortablehandle' data-action='expand' type='button'>Expand</button><div class='dd-content'><div class='folder-title'>" + t.n + "</div></div><ol class='dd-list'></ol>"),
                    $("#imagedialog #userlibrary .draggableresult").not(".ui-draggable").draggable({
                        handle: ".namecontainer",
                        revert: !0,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body",
                        start: function() {
                            n.addClass("externaldrag"),
                            $(this).attr("data-oldindex", $(this).index()),
                            $(this).parents(".libraryfolder").length > 0 ? $(this).attr("data-oldparent", $(this).parent().closest(".libraryfolder").attr("data-folderid")) : $(this).attr("data-oldparent", "root")
                        },
                        stop: function() {
                            n.removeClass("externaldrag")
                        }
                    }).addTouch()
                }
            })
        }
        ,
        d20.library.doCopyToFolder = function(e, t, i, o, r, a, s, l) {
            var c = generateUUID();
            $.post(d20.library.libraryBase + "/image_library/copy_asset_to_library/", {
                type: i,
                id: o,
                name: r,
                url: a,
                newid: c,
                foldername: e,
                folderid: t,
                keywords: l
            }, function(e) {
                if (!x(e, "copy")) {
                    var r = JSON.parse(e)
                      , a = $("#libraryfolderroot *[data-folderid=" + r.parentid + "]");
                    if (a && "true" === a.attr("data-content") && ("item" === r.t && (a.children(".dd-list").prepend("<li class='dd-item library-item draggableresult recentupload' data-fullsizeurl='" + r.fullsize_url + "' data-imageid='" + r.id + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + r.img_url.replace("thumb.webm", "sample.png") + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + r.n + "</div></div></div></li>"),
                    d20.library.buildRecentUploads()),
                    "folder" === r.t && a.children(".dd-list").prepend("<li class='dd-item dd-folder dd-collapsed libraryfolder' data-folderid='" + c + "'><button class='dd-sortablehandle' data-action='collapse' type='button' style='display: none;'>Collapse</button><button class='dd-sortablehandle' data-action='expand' type='button'>Expand</button><div class='dd-content'><div class='folder-title'>" + r.n + "</div></div><ol class='dd-list'></ol>"),
                    $("#imagedialog #userlibrary .draggableresult").not(".ui-draggable").draggable({
                        handle: ".namecontainer",
                        revert: !0,
                        revertDuration: 0,
                        helper: "clone",
                        appendTo: "body",
                        start: function() {
                            n.addClass("externaldrag"),
                            $(this).attr("data-oldindex", $(this).index()),
                            $(this).parents(".libraryfolder").length > 0 ? $(this).attr("data-oldparent", $(this).parent().closest(".libraryfolder").attr("data-folderid")) : $(this).attr("data-oldparent", "root")
                        },
                        stop: function() {
                            n.removeClass("externaldrag")
                        }
                    }).addTouch()),
                    "true" === $("#libraryview").attr("data-isopen") && $("#libraryview").attr("data-folderid") === t) {
                        var s = $("#userlibrary").find("*[data-folderid='" + t + "']");
                        d20.library.doRenderFolder(s, t, i, o)
                    }
                }
            })
        }
        ,
        d20.library.getSelected = function() {
            var e = []
              , t = [];
            return d20.library.lastMultipleDragInfo = [],
            _.each($("#libraryview .library-container.selected"), function(n) {
                if (n.hasAttribute("data-folderid")) {
                    t.push(n.getAttribute("data-folderid"));
                    var i = d20ext.utils.strip_tags($(n).children(".library-labelcontainer").text(), "<span><br><strong><em>");
                    "" == i && (i = "Another Placeholder Name"),
                    d20.library.lastMultipleDragInfo.push({
                        n: i,
                        t: "folder",
                        id: n.getAttribute("data-folderid")
                    })
                } else if (n.hasAttribute("data-imageid")) {
                    e.push(n.getAttribute("data-imageid"));
                    var o = $(n).children(".library-labelcontainer").text()
                      , r = $(n).find("img").attr("src");
                    d20.library.lastMultipleDragInfo.push({
                        n: o,
                        t: "item",
                        id: n.getAttribute("data-imageid"),
                        fullsize_url: n.getAttribute("data-fullsizeurl"),
                        img_url: r
                    })
                }
            }),
            {
                count: e.length + t.length,
                imageids: e,
                folderids: t
            }
        }
        ,
        d20.library.massDelete = function(e, t, n, i) {
            $.post(d20.library.libraryBase + "/image_library/massdelete/", {
                parentid: e,
                folderids: t,
                imageids: n,
                deleteindex: i
            }, function(t) {
                var n;
                x(t, "delete") || (d20.library.buildRecentUploads(),
                "recentuploads" === e ? n = $("#recentuploads") : 0 === (n = $("#userlibrary *[data-folderid=" + e + "]")).length && (n = $("#userlibrary")),
                n && "true" === n.attr("data-content") && n.children(".dd-list").children().eq(i).remove())
            })
        }
        ,
        d20.library.permDelete = function(e) {
            $("#libraryview .selected").remove(),
            _.each(e.imageids, function(e) {
                $("#libraryfolderroot *[data-imageid=" + e + "]").remove()
            }),
            _.each(e.folderids, function(e) {
                $("#libraryfolderroot *[data-folderid=" + e + "]").remove()
            }),
            $.post(d20.library.libraryBase + "/image_library/permdelete/", {
                ids: e
            }, function(e) {
                x(e, "delete")
            })
        }
        ;
        var x = function(e, t) {
            var n = "";
            switch (e) {
            case "notfound":
                n = "Failed to " + t + " folder. This folder was not found.";
                break;
            case "parentnotfound":
                n = "Failed to " + t + " folder. This folder's parent was not found.";
                break;
            case "itemnotfound":
                n = "Failed to " + t + " item. This item was not found.";
                break;
            case "itemparentnotfound":
                n = "Failed to " + t + " item. This item's parent was not found.";
                break;
            case "selfmove":
                n = "Failed to " + t + " folder. You attempted to move a folder into itself.";
                break;
            case "recentuploadsmove":
                n = "Failed to" + t + " item. You attempted to move a copy into the Recent Uploads. Delete the copy instead."
            }
            if ("" != n) {
                if (console.log(n),
                alert(n),
                d20.library.buildLibraryIndex(),
                d20.library.buildRecentUploads(),
                "true" === $("#libraryview").attr("data-isopen")) {
                    var i = $("#userlibrary *[data-folderid='" + $("#libraryview").attr("data-folderid") + "'");
                    i.length > 0 ? i.children(".dd-content").trigger("click") : "root" === $("#libraryview").attr("data-folderid") && $("#userlibrary").children(".dd-list").children(".library-item").length > 0 ? $("#userlibrary").children(".dd-list").children(".library-item").first().children(".dd-content").trigger("click") : $("#libraryview").dialog("close")
                }
                return !0
            }
            return !1
        }
          , k = function(e, t) {
            var i = "";
            _.each(t, function(e) {
                "item" === e.t ? e.fullsize_url.includes(".webm") ? i += "<li class='dd-item library-item draggableresult' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + e.img_url.replace("thumb.webm", "sample.png") + "' draggable='false'><img class='animIndicator' src='/v2/images/animIcon.png'></div><div class='name'><div class='namecontainer'>" + e.n + "</div></div></div></li>" : i += "<li class='dd-item library-item draggableresult' data-fullsizeurl='" + e.fullsize_url + "' data-imageid='" + e.id + "'><div class='dd-handle dd-sortablehandle'>Drag</div><div class='dd-content'><div class='token'><img src='" + e.img_url + "' draggable='false'></div><div class='name'><div class='namecontainer'>" + e.n + "</div></div></div></li>" : "folder" === e.t && (i += "<li class='dd-item dd-folder dd-collapsed libraryfolder' data-folderid='" + e.id + "'>",
                i += "<button class='dd-sortablehandle' data-action='collapse' type='button' style='display: none;'>Collapse</button>",
                i += "<button class='dd-sortablehandle' data-action='expand' type='button'>Expand</button>",
                i += "<div class='dd-content'>",
                i += "<div class='folder-title'>" + e.n + "</div>",
                i += "</div>",
                i += "<ol class='dd-list'>",
                i += "</ol>")
            }),
            e.children(".dd-list").prepend(i),
            e.find(".draggableresult").not(".ui-draggable").draggable({
                handle: ".namecontainer",
                revert: !0,
                revertDuration: 0,
                helper: "clone",
                appendTo: "body",
                start: function() {
                    n.addClass("externaldrag"),
                    $(this).attr("data-oldindex", $(this).index()),
                    $(this).parents(".libraryfolder").length > 0 ? $(this).attr("data-oldparent", $(this).parent().closest(".libraryfolder").attr("data-folderid")) : $(this).attr("data-oldparent", "root")
                },
                stop: function() {
                    n.removeClass("externaldrag")
                }
            }).addTouch()
        }
          , E = function(e, t) {
            var n = e.pageY;
            return n + t.height() > window.innerHeight && (n = window.innerHeight - t.height()),
            n
        }
          , S = function(e, t) {
            var n = e.pageX;
            return n + t.width() > window.innerWidth && (n = window.innerWidth - t.width()),
            n
        };
        window.YourTag = Backbone.Model.extend({
            defaults: {
                tokenid: 0,
                tag: ""
            },
            nofirebase: !0
        }),
        window.YourTagCollection = Backbone.Collection.extend({
            model: YourTag,
            nofirebase: !0,
            url: "/browse/yourtags/0"
        }),
        window.YourTagView = Backbone.View.extend({
            _template: $.jqotec("#tmpl_yourtag"),
            events: {
                click: "destroy"
            },
            initialize: function() {
                _.bindAll(this, "render"),
                this.model.bind("change", this.render)
            },
            render: function() {
                $(this.el).html(this._template(this.model.toJSON()))
            },
            destroy: function() {
                $(this.el).remove(),
                this.model.destroy()
            }
        }),
        window.YourTagsView = Backbone.View.extend({
            _template: $.jqotec("#tmpl_yourtags"),
            events: {
                "click .textboxlist.noedit": "toggleEditing"
            },
            initialize: function() {
                _.bindAll(this, "render", "addAll", "initTextboxlist", "addFromBitBox", "removeFromBitBox", "beginEditing", "stopEditing");
                var e = this;
                if (this.editable = $(this.el).attr("data-editable"),
                this.editing = !1,
                this.YourTags = new YourTagCollection,
                this.$el.attr("data-imageid") !== undefined ? (this.tokenid = $(this.el).attr("data-imageid"),
                this.YourTags.url = d20.library.libraryBase + "/image_library/yourtags/" + this.tokenid) : console.log("ERROR: NO IMAGEID FOUND"),
                $(this.el).html(this._template(this)),
                this.input = $(this.el).find("input"),
                this.textboxlist = new $.TextboxList(this.input,{
                    encode: function() {},
                    decode: function() {},
                    startEditableBit: !1,
                    inBetweenEditableBits: !1,
                    unique: !0,
                    plugins: {
                        autocomplete: {
                            minLength: 3,
                            queryRemote: !0,
                            remote: {
                                url: d20.library.libraryBase + "/image_library/yourtag_autocomplete"
                            }
                        }
                    }
                }),
                this.YourTags.bind("refresh", this.addAll),
                0 != this.tokenid)
                    if (_.isUndefined(window.BOOTSTRAP_YOUR_TAGS) || _.isUndefined(BOOTSTRAP_YOUR_TAGS[this.tokenid]))
                        this.YourTags.fetch({
                            success: function() {
                                e.addAll()
                            }
                        });
                    else {
                        for (var t = 0; t < BOOTSTRAP_YOUR_TAGS[this.tokenid].length; t++)
                            this.YourTags.add(BOOTSTRAP_YOUR_TAGS[this.tokenid][t]);
                        this.addAll()
                    }
                if (this.textboxlist.addEvent("bitBoxAdd", this.addFromBitBox),
                this.textboxlist.addEvent("bitBoxRemove", this.removeFromBitBox),
                this.stopEditing(),
                "true" == $(this.el).attr("data-hide-edit-button") && $(this.el).find(".add").hide(),
                "true" == $(this.el).attr("data-auto-edit") && this.toggleEditing(!0),
                $(this.el).attr("data-initial-tags")) {
                    var n = JSON.parse($(this.el).attr("data-initial-tags"));
                    for (t = 0; t < n.length; t++)
                        console.log("adding " + n[t].tag),
                        this.textboxlist.add(n[t].tag)
                }
                $(this.el).on("click", function(e) {
                    e.stopPropagation()
                })
            },
            render: function() {},
            addFromBitBox: function(e, t) {
                if (this.editing || t) {
                    var n = this.YourTags.create({
                        tag: e.getValue()[1]
                    });
                    e.setValue([n.cid, n.get("tag"), e.getValue()[2]])
                }
            },
            removeFromBitBox: function(e) {
                var t;
                this.YourTags.each(function(n) {
                    n.cid === e.getValue()[0] && (t = n)
                }),
                t != undefined && t.destroy()
            },
            addAll: function() {
                this.YourTags.each(this.initTextboxlist)
            },
            initTextboxlist: function(e) {
                "f|" != e.get("tag").substring(0, 2) && this.textboxlist.add(e.get("tag"), e.cid)
            },
            toggleEditing: function(e) {
                this.editing ? (this.stopEditing(),
                this.editing = !1) : (this.beginEditing(e),
                this.editing = !0)
            },
            beginEditing: function(e) {
                $(this.el).find(".textboxlist").removeClass("noedit").find("input").show(),
                void 0 !== e && 1 == e || setTimeout(this.textboxlist.focusLast, 0)
            },
            stopEditing: function() {
                $(this.el).find(".textboxlist input").hide(),
                $(this.el).find(".textboxlist").addClass("noedit")
            }
        })
    }),
    "roll20-fm" === d20ext.videotype && (fm.websync.client.enableMultiple = !0,
    function(e) {
        var t = function() {
            function t(e) {
                this.joinedSignalling = !1,
                this.joinedLocal = !1,
                this.iceServers = [new fm.icelink.IceServer("turn:" + d20ext.webrtcSetup.ip,d20ext.webrtcSetup.turn_user,d20ext.webrtcSetup.turn_pw)],
                this.videoConfigs = {
                    high: new fm.icelink.VideoConfig(200,200,30),
                    medium: new fm.icelink.VideoConfig(200,200,15),
                    low: new fm.icelink.VideoConfig(150,150,15),
                    vlow: new fm.icelink.VideoConfig(150,150,7)
                },
                this.localMedia = null,
                this.layoutManager = null,
                this.remoteMedia = {},
                this.remoteLayout = {},
                this.remoteConnection = {},
                this.remoteBroadcast = {},
                this.soundMeters = {},
                this.audioLevels = {},
                this.broadcastType = null,
                this.receiveType = null,
                this.webrtcRef = new Firebase(window.FIREBASE_ROOT + window.campaign_storage_path + "/webrtc"),
                this.webrtcOfferRef = this.webrtcRef.child("offer"),
                this.webrtcAnswerRef = this.webrtcRef.child("answer"),
                this.webrtcCandidateRef = this.webrtcRef.child("candidate"),
                this.webrtcMessageRef = this.webrtcRef.child("message"),
                this.webrtcOnlineRef = this.webrtcRef.child("online"),
                this.webrtcWhisperRef = this.webrtcRef.child("whisper"),
                this.webrtcVideoQualityRef = this.webrtcRef.child("settings").child("videoQuality"),
                this.webrtcWhisperPermissionsRef = this.webrtcRef.child("settings").child("whisperPermissions"),
                this.webrtcBroadcastRef = this.webrtcRef.child("settings").child("broadcast"),
                this.webrtcMutedAudioRef = this.webrtcRef.child("settings").child("muted").child("audio"),
                this.webrtcMutedVideoRef = this.webrtcRef.child("settings").child("muted").child("video"),
                this.videoQuality = null,
                this.inputSources = {
                    audio: {},
                    video: {}
                },
                this.outputSources = {
                    audio: {}
                },
                this.audioOutput = window.localStorage.getItem("WebRTC-AudioOutput"),
                this.audioInput = window.localStorage.getItem("WebRTC-AudioInput"),
                this.videoInput = window.localStorage.getItem("WebRTC-VideoInput"),
                this.muted = !1,
                this.mutedVideo = !1,
                this.eventHandlersLoaded = !1,
                this.draggableVideo = {
                    handle: ".player-handle",
                    containment: "#playerzone",
                    scroll: !1,
                    start: function() {
                        $(this).find(".player-handle").attr("style", "display: block;")
                    },
                    stop: function() {
                        var t = $(this);
                        t.find(".player-handle").attr("style", "");
                        var n = t.attr("id").substr(7)
                          , i = {
                            top: ((t.position().top + $("#playerzone").offset().top) / $("#editor-wrapper").height()).toFixed(4),
                            left: ((t.position().left + $("#playerzone").offset().left) / $("#editor-wrapper").width()).toFixed(4)
                        };
                        window.is_gm && ((o = JSON.parse(e.Campaign.get("videopos")))[n] = i,
                        e.Campaign.save({
                            videopos: JSON.stringify(o)
                        }));
                        if ("player" === e.Campaign.get("controlsvideopos")) {
                            var o = v(i);
                            t.attr("style", "left: " + o.left + "px; top: " + o.top + "px; position: absolute;")
                        }
                    }
                },
                this.debugLog = {
                    personal: []
                },
                this.debug = !1,
                this.statsRunning = !1,
                this.statsTimer = 3e3,
                this.statsDataPoints = 10,
                this.statsDataPointPerAvg = 10,
                this.statsDataAvgPoints = 120,
                this.remoteStats = {},
                this.message = {
                    COLLECT_LOGS: "collectlogs",
                    SEND_LOGS: "sendlogs",
                    DISCONNECT: "disc",
                    MUTE_AUDIO_ON: "muteaudioon",
                    MUTE_AUDIO_OFF: "muteaudiooff",
                    MUTE_VIDEO_ON: "mutevideoon",
                    MUTE_VIDEO_OFF: "mutevideooff"
                },
                this.candidateType = {
                    host: "HOST",
                    srflx: "STUN",
                    prflx: "STUN",
                    relay: "TURN"
                }
            }
            var n = function(t) {
                t.stopPropagation();
                let n = $(this).parents(".player");
                n.find(".video").attr("data-volume", "0"),
                e.webrtc.setVolume(n, 0)
            }
              , i = function(t) {
                t.stopPropagation();
                let n = $(this).parents(".player");
                n.find(".video").attr("data-volume", "1"),
                e.webrtc.setVolume(n, 1)
            }
              , o = function(e, t) {
                var n = e.find(".volume-bar")
                  , i = n[0].offsetLeft
                  , o = n.parents(".player")[0].offsetLeft
                  , r = n[0].offsetWidth
                  , a = ((t.clientX - i - o) / r).toFixed(2);
                return a > 1 ? 1 : a
            }
              , r = function(t) {
                t.stopPropagation();
                var n = $(this).parents(".player");
                n.find(".volume-bar").on("mousemove", a);
                let i = o(n, t);
                n.find(".video").attr("data-volume", i),
                e.webrtc.setVolume(n, i),
                n.on("mouseup", s)
            }
              , a = function(t) {
                var n = $(this).parents(".player");
                e.webrtc.setVolume(n, o(n, t))
            }
              , s = function(t) {
                var n = $(this);
                n.find(".volume-bar").off("mousemove", a),
                e.webrtc.setVolume(n, o(n, t)),
                n.off("mouseup", s)
            }
              , l = function(e) {
                if (!1 !== e) {
                    let t = $("#player_" + window.currentPlayer.id).find(".avatarvideo");
                    t.length && t.remove();
                    let n = window.currentPlayer.get("speakingas");
                    e.find("div.video").removeClass("pause-video"),
                    window.currentPlayer.updateAvatar(n)
                }
            }
              , c = function(e) {
                if (!1 !== e) {
                    let t = window.currentPlayer.get("speakingas");
                    e.find("div.video").addClass("pause-video"),
                    window.currentPlayer.updateAvatar(t)
                }
            }
              , u = function(e) {
                !1 !== e && e.find("div.video").addClass("no-video")
            }
              , d = function(e) {
                !1 !== e && e.find("div.video").removeClass("hide-volume")
            }
              , h = function(e) {
                !1 !== e && e.find("div.video").addClass("hide-volume")
            }
              , p = function(e) {
                !1 !== e && e.find("div.video").addClass("muted-self")
            }
              , f = function(e) {
                !1 !== e && e.find("div.video").removeClass("muted-self")
            }
              , g = function(e) {
                !1 !== e && e.find("div.video").addClass("muted-other")
            }
              , m = function(e) {
                !1 !== e && e.find("div.video").removeClass("muted-other")
            }
              , y = function(e) {
                !1 !== e && (e.find("div.video").removeClass("muted-other muted-self no-video pause-video in-other-whisper"),
                e.find("span.vol-min").text("<"),
                e.find("div.pause-video .cross").show(),
                e.find("div.connection-status").fadeOut())
            }
              , v = function(e) {
                var t = $("#editor-wrapper").width() - $("#playerzone .player").width() - 10
                  , n = e.left * $("#editor-wrapper").width() - $("#playerzone").offset().left;
                n = n > t ? t : n;
                var i = $("#editor-wrapper").height() - $("#playerzone").offset().top - $("#playerzone .player").height() - 25
                  , o = e.top * $("#editor-wrapper").height() - $("#playerzone").offset().top;
                return {
                    top: o = o > i ? i : o,
                    left: n
                }
            }
              , b = function() {
                if ("gm" === e.Campaign.get("controlsvideopos")) {
                    var t = JSON.parse(e.Campaign.get("videopos"));
                    $.each(t, function(e, t) {
                        if (t) {
                            var n = v(t);
                            $("#player_" + e).attr("style", "left: " + n.left + "px; top: " + n.top + "px; position: absolute;")
                        } else
                            $("#player_" + e).attr("style", "")
                    })
                }
            }
              , w = function() {
                var e = "gm" === window.Campaign.get("controlsvideopos");
                e && !window.is_gm ? ($(".player").each(function() {
                    $(this).find(".player-handle").hide()
                }),
                b(),
                $("#resetvideopos").prop("disabled", !0)) : e || window.is_gm || ($(".player").each(function() {
                    $(this).find(".player-handle").attr("style", "")
                }),
                b(),
                $("#resetvideopos").prop("disabled", !1))
            }
              , x = function(e) {
                var t = $("#player_" + e + " div.video");
                return 0 === t.length && $.each(window.allChildWindows, function(n, i) {
                    if ((t = $(i.document).find("#player_" + e)).length > 0)
                        return !1
                }),
                0 !== t.length && t
            }
              , k = function(e) {
                var t = $("#player_" + e);
                return t.hasClass("popped-out") && $.each(window.allChildWindows, function(n, i) {
                    if ((t = $(i.document).find("#player_" + e)).length > 0)
                        return !1
                }),
                0 !== t.length && t
            };
            return t.prototype.log = function() {
                var e = [];
                for (var t in arguments)
                    "undefined" != typeof arguments[t] && ("string" == typeof arguments[t] ? e.push(arguments[t]) : e.push(JSON.stringify(arguments[t], null, 2)));
                this.debugLog.personal.push(e),
                this.debug && console.log(e)
            }
            ,
            t.prototype.errorLog = function(e) {
                this.debugLog.personal.push(e.stack),
                console.error(e)
            }
            ,
            t.prototype.getCandidateData = function(e) {
                return " | " + this.candidateType[e.getSdpCandidateAttribute().getCandidateType()] + " " + e.getSdpCandidateAttribute().getProtocol()
            }
            ,
            t.prototype.startSoundMeter = function(e, t) {
                var n = this;
                this.audioLevels[e] = {
                    levels: [],
                    instant: [],
                    slow: []
                },
                t.addOnAudioLevel(function(t) {
                    if (n.audioLevels[e].levels.push(t),
                    3 === n.audioLevels[e].levels.length) {
                        var i = n.audioLevels[e].levels.reduce(function(e, t) {
                            return e + t
                        }) / 3;
                        n.audioLevels[e].instant.push(i),
                        n.audioLevels[e].instant.length > 3 && n.audioLevels[e].instant.shift();
                        var o = n.audioLevels[e].instant.reduce(function(e, t) {
                            return e + t
                        }) / 3;
                        n.audioLevels[e].slow.push(o),
                        n.audioLevels[e].slow.length > 3 && n.audioLevels[e].slow.shift(),
                        n.audioLevels[e].levels = []
                    }
                });
                var i = k(e);
                this.soundMeters[e] = setInterval(function() {
                    if (!(n.audioLevels[e].instant.length < 3)) {
                        var t = (n.audioLevels[e].instant.reduce(function(e, t) {
                            return e + t
                        }) / 3).toFixed(2)
                          , o = (n.audioLevels[e].slow.reduce(function(e, t) {
                            return e + t
                        }) / 3).toFixed(2);
                        if (o > 0 || t > 0) {
                            var r = .15;
                            if (i.find(".volume-meter").hasClass("vol-on")) {
                                var a = o > r ? 70 : o / r * 70;
                                i.find(".volume-meter").animate({
                                    width: 30 + a + "%",
                                    marginLeft: -(30 + a) / 2 + "%"
                                }, 100)
                            } else
                                i.find(".volume-meter").fadeIn(200, function() {
                                    i.find(".volume-meter").addClass("vol-on")
                                })
                        } else
                            i.find(".volume-meter").fadeOut(200, function() {
                                i.find(".volume-meter").removeClass("vol-on")
                            })
                    }
                }, 200)
            }
            ,
            t.prototype.addOverlay = function(t) {
                var n = $("#player_" + t)
                  , i = t === window.currentPlayer.id;
                if (0 !== n.find("div.av-controls").length)
                    return i || this.setVolume(n, 1),
                    void (i && "voiceonly" === this.broadcastType && u(n));
                n.find("div.playername").one("dblclick", function() {
                    var t = $(this).parents(".player").attr("id").substr(7);
                    e.Campaign.players.get(t).view.showPopout()
                });
                var o = $('<div class="av-controls"></div>')
                  , r = $('<div class="volume-controls"></div>')
                  , a = $('<div class="buttons-container"></div>');
                if (i ? (a.append('<span class="mute-audio pictos" title="Mute">&lt;</span>'),
                a.append('<span class="pause-video pictos">V</span>')) : (a.append('<span class="vol-min pictos" title="Mute">&lt;</span>'),
                a.append('<div class="volume-bar"><div class="volume-slider"></div></div>'),
                a.append('<span class="vol-max pictos" title="Max Volume">&gt;</span>')),
                r.append(a),
                o.append(r),
                n.find("div.video").append(o),
                i) {
                    var s = $('<div class="av-reconnect" title="Reconnect"></div>');
                    s.append('<span class="pictos reconnect">0</span>'),
                    o.append(s),
                    "voiceonly" === this.broadcastType && u(n)
                } else {
                    n.find("div.fm-video video"),
                    n.find(".volume-bar").find(".volume-slider"),
                    n.find(".vol-min"),
                    n.find(".vol-max");
                    if (window.is_gm) {
                        let e = $('<div class="av-whisper" title="Whisper Player"></div>');
                        e.append('<span class="pictos whisper">q</span>'),
                        o.append(e)
                    }
                }
            }
            ,
            t.prototype.playrNotInMyWhisper = function(e) {
                let t = e.find("div.video")
                  , n = e.find("div.fm-video video");
                this.setVolume(e, 0, !1),
                t.hasClass("in-other-whisper") || (t.addClass("in-other-whisper"),
                n.fadeTo(500, .25)),
                t.removeClass("in-my-whisper")
            }
            ,
            t.prototype.playerInMyWhisper = function(e, t) {
                let n = e.find("div.video")
                  , i = e.find("div.fm-video video");
                n.hasClass("in-other-whisper") && i.fadeTo(500, 1, function() {
                    n.removeClass("in-other-whisper")
                }),
                t ? n.addClass("in-my-whisper") : n.removeClass("in-my-whisper"),
                d(e),
                void 0 !== n.attr("data-volume") ? this.setVolume(e, parseFloat(n.attr("data-volume")), !1) : this.setVolume(e, 1, !1)
            }
            ,
            t.prototype.setVolume = function(e, t, n) {
                n = void 0 === n || n,
                t < .03 ? (t = 0,
                n && g(e),
                this.toggleMuteOther(e, !0)) : (m(e),
                this.toggleMuteOther(e, !1)),
                e.find(".volume-slider").css("width", 100 * t + "%");
                let i = Math.pow(10, t) / 10;
                e.find("div.fm-video video").prop("volume", i)
            }
            ,
            t.prototype.muteMe = function() {
                $player = k(window.currentPlayer.id);
                var e = this.localMedia.getAudioTrack();
                this.muted ? (e.setMuted(!1),
                f($player),
                this.muted = !1,
                this.webrtcMutedAudioRef.child(window.currentPlayer.id).set(!1),
                $player.find("span.vol-min").text("<")) : (e.setMuted(!0),
                p($player),
                this.muted = !0,
                this.webrtcMutedAudioRef.child(window.currentPlayer.id).set(!0),
                $player.find("span.vol-min").text(">"))
            }
            ,
            t.prototype.muteMeVideo = function() {
                $player = k(window.currentPlayer.id);
                var e = this.localMedia.getVideoTrack();
                this.mutedVideo ? (e.setMuted(!1),
                l($player),
                this.mutedVideo = !1,
                this.webrtcMutedVideoRef.child(window.currentPlayer.id).set(!1),
                $player.find("div.pause-video .cross").show()) : (e.setMuted(!0),
                c($player),
                this.mutedVideo = !0,
                this.webrtcMutedVideoRef.child(window.currentPlayer.id).set(!0))
            }
            ,
            t.prototype.toggleMuteOther = function(e, t) {
                var n = e.attr("id").substr(7)
                  , i = this.remoteMedia[n].getAudioTrack();
                t ? i.setMuted(!0) : i.setMuted(!1)
            }
            ,
            t.prototype.getDisplayNameByPID = function(t) {
                return e.Campaign.players.get(t).get("displayname")
            }
            ,
            t.prototype.loadEventHandlers = function() {
                if (this.eventHandlersLoaded)
                    return;
                var t = this;
                this.log("Loading Roll20 Chat Event Handlers"),
                this.eventHandlersLoaded = !0;
                var o = $("#playerzone");
                o.addClass("roll20-webrtc");
                var a = $("#videocontextmenu")
                  , s = $("#playerhandorientation");
                $("body").on(mousedowntype, function() {
                    a.hide(),
                    s.hide()
                }),
                a.find("li[data-action-type=reconnectAll]").show(),
                o.on("mousedown", ".av-controls span", function(e) {
                    e.stopPropagation()
                }),
                o.on("mousedown", ".volume-bar", r),
                o.on("click", ".vol-min", n),
                o.on("click", ".vol-max", i),
                o.on("click", ".av-reconnect", function() {
                    t.reconnect()
                }),
                o.on("click", ".mute-audio", function(e) {
                    e.stopPropagation(),
                    t.muteMe()
                }),
                o.on("click", ".pause-video", function(e) {
                    e.stopPropagation(),
                    t.muteMeVideo()
                }),
                t.webrtcWhisperRef.on("value", function(n) {
                    if (!t.joinedSignalling)
                        return;
                    let i = n.val() || {}
                      , o = window.currentPlayer.id
                      , r = i[o]
                      , a = !0
                      , s = $.map(e.Campaign.players.models, function(e) {
                        if (e.get("online") && e.id !== o)
                            return e.id
                    });
                    $.each(s, function(e, n) {
                        null === i && t.removeInWhisper(k(n));
                        let o = i[n]
                          , s = k(n);
                        r === o ? (t.playerInMyWhisper(s, void 0 !== r),
                        a = !1) : t.playrNotInMyWhisper(s)
                    }),
                    a && t.webrtcWhisperRef.child(o).set(null)
                });
                let l = _.throttle(function(n) {
                    n.stopPropagation();
                    let i = $(this).parents(".player").attr("id").substr(7)
                      , o = window.currentPlayer.id;
                    t.webrtcWhisperRef.once("value", function(n) {
                        let r = n.val() || {}
                          , a = "undefined" != typeof r[i]
                          , s = r[o];
                        if (a) {
                            t.log(window.currentPlayer.get("displayname") + " REMOVING " + e.Campaign.players.get(i).get("displayname") + " from whisper.");
                            let n = !0;
                            for (let e in r)
                                e !== o && e !== i && r[e] === s && (n = !1);
                            n ? (delete r[i],
                            delete r[o],
                            0 === Object.keys(r).length ? t.webrtcWhisperRef.set(null) : t.webrtcWhisperRef.update(r)) : t.webrtcWhisperRef.child(i).set(null)
                        } else if (t.log(window.currentPlayer.get("displayname") + " ADDING " + e.Campaign.players.get(i).get("displayname") + " to whisper."),
                        void 0 === s) {
                            s = generateUUID();
                            let e = {};
                            e[o] = s,
                            e[i] = s,
                            t.webrtcWhisperRef.update(e)
                        } else
                            t.webrtcWhisperRef.child(i).set(s)
                    })
                }, "1000", {
                    trailing: !1
                });
                o.on("click", ".av-whisper,.in-my-whisper-icon", l),
                o.on("contextmenu", ".playername", function(t) {
                    if ("gm" !== e.Campaign.get("controlsvideopos") || window.is_gm) {
                        var n = $(this).parents(".player").attr("id").substr(7);
                        a.show(),
                        a.attr("data-player-id", n),
                        $("#editor-wrapper").height() - t.pageY < a.height() + 5 ? a.css({
                            top: t.pageY - a.height() + "px",
                            left: t.pageX + "px"
                        }) : a.css({
                            top: t.pageY + "px",
                            left: t.pageX + "px"
                        }),
                        t.preventDefault(),
                        t.stopPropagation()
                    }
                }),
                a.on(mousedowntype, "li[data-action-type=resetLocations]", function() {
                    if (a.hide(),
                    $("#playerzone .player").each(function() {
                        $(this).attr("style", "")
                    }),
                    window.is_gm) {
                        var t = JSON.parse(e.Campaign.get("videopos"));
                        $.each(t, function(e) {
                            t[e] = !1
                        }),
                        e.Campaign.save({
                            videopos: JSON.stringify(t)
                        })
                    }
                }),
                a.on(mousedowntype, "li[data-action-type=resetLocation]", function() {
                    a.hide();
                    var t = a.attr("data-player-id");
                    if ($("#player_" + t).attr("style", ""),
                    window.is_gm) {
                        var n = JSON.parse(e.Campaign.get("videopos"));
                        n[t] = !1,
                        e.Campaign.save({
                            videopos: JSON.stringify(n)
                        })
                    }
                }),
                a.on(mousedowntype, "li[data-action-type=reconnectAll]", function() {
                    a.hide(),
                    t.reconnect()
                }),
                o.on("contextmenu", ".cardback", function(t) {
                    if ("gm" !== e.Campaign.get("controlsvideopos") || window.is_gm) {
                        var n = $(this).parents(".player").attr("id").substr(7);
                        s.show(),
                        s.attr("data-player-id", n),
                        s.css({
                            top: t.pageY + "px",
                            left: t.pageX + "px"
                        }),
                        t.preventDefault(),
                        t.stopPropagation()
                    }
                }),
                $("#playerhandorientation ul").on(mousedowntype, "li", function() {
                    s.hide();
                    var e = $(this).attr("data-action-type")
                      , t = s.attr("data-player-id")
                      , n = $("#player_" + t);
                    n.removeClass("player-hand-bottom player-hand-left player-hand-right"),
                    "player-hand-top" !== e && n.addClass(e)
                }),
                $("#videobroadcasttype").bind("change", function() {
                    var e = $(this).val();
                    window.currentPlayer && window.currentPlayer.save({
                        videobroadcasttype: e
                    }),
                    t.broadcastType = e
                }),
                $("#videoreceivetype").bind("change", function() {
                    var e = $(this).val();
                    window.currentPlayer && window.currentPlayer.save({
                        videoreceivetype: e
                    }),
                    t.receiveType = e
                }),
                $("#videoframerate").bind("change", function() {
                    var e = $(this).val();
                    window.Campaign && window.Campaign.save({
                        videobandwidth: e
                    }),
                    location.reload()
                }),
                $("#videoreconnect").bind("click", function() {
                    e.webrtc.reconnect()
                }),
                $("#videoplayerlocation").val(window.currentPlayer.get("videoplayerlocation")).trigger("change"),
                "top" === window.currentPlayer.get("videoplayerlocation") ? $("#playerzone").addClass("pz-top") : $("#playerzone").removeClass("pz-top"),
                $("#videoplayerlocation").bind("change", function() {
                    var e = $(this).val();
                    window.currentPlayer.save({
                        videoplayerlocation: e
                    }),
                    t.log("videoplayerlocation changed"),
                    "top" === e ? $("#playerzone").addClass("pz-top") : $("#playerzone").removeClass("pz-top"),
                    b()
                }),
                $("#resetvideopos").bind("click", function() {
                    $(this).val();
                    $("#playerzone .player").each(function() {
                        $(this).attr("style", "")
                    }),
                    window.is_gm && (e.Campaign.save({
                        videopos: "{}"
                    }),
                    e.Campaign.get("controlsvideopos"))
                }),
                $(".player").draggable(this.draggableVideo),
                $(window).bind("resize", b),
                b(),
                $("#movablevideo").val(window.Campaign.get("controlsvideopos")).trigger("change"),
                window.is_gm ? $("#movablevideo").bind("change", function() {
                    var t = $(this).val();
                    e.Campaign.save({
                        controlsvideopos: t
                    })
                }) : (e.Campaign.bind("change:controlsvideopos", function() {
                    t.log("Player: videoMoveControl"),
                    w()
                }),
                w()),
                e.Campaign.bind("change:videopos", function() {
                    t.log("video moved!"),
                    b()
                }),
                Mousetrap.bind("`", function() {
                    null !== e.webrtc && t.muteMe(!0)
                }),
                $("#webrtcdebug").on("click", function() {
                    function e(e) {
                        function t() {
                            let e = new Date
                              , t = "" + (e.getMonth() + 1)
                              , n = "" + e.getDate()
                              , i = e.getFullYear()
                              , o = "" + e.getHours()
                              , r = "" + e.getMinutes()
                              , a = "" + e.getSeconds();
                            return t.length < 2 && (t = "0" + t),
                            n.length < 2 && (n = "0" + n),
                            o.length < 2 && (o = "0" + o),
                            r.length < 2 && (r = "0" + r),
                            a.length < 2 && (a = "0" + a),
                            [i, t, n].join("-") + "_" + [o, r, a].join(".")
                        }
                        let n = document.createElement("a");
                        n.setAttribute("href", "data:text/plain;charset=utf-8," + encodeURIComponent(e)),
                        n.setAttribute("download", "WebRTC_Console_" + t() + ".txt"),
                        n.style.display = "none",
                        document.body.appendChild(n),
                        n.click(),
                        document.body.removeChild(n)
                    }
                    function n(e) {
                        let t = "";
                        return t += "Video SENT, Avg Per Second\n",
                        t += "    NACK: " + e.sender.video.nack.avg.join(",") + "\n",
                        t += "Pks Sent: " + e.sender.video.packets.sent.avg.join(",") + "\n",
                        t += "\nVideo RECEIVED, Avg Per Second\n",
                        t += "  Jitter: " + e.receiver.video.jitter.avg.join(",") + "\n",
                        t += "    NACK: " + e.receiver.video.nack.avg.join(",") + "\n",
                        t += "Pks Rcvd: " + e.receiver.video.packets.received.avg.join(",") + "\n",
                        t += "Pks Lost: " + e.receiver.video.packets.lost.avg.join(",") + "\n",
                        t += "\nAudio SENT, Avg Per Second\n",
                        t += "    NACK: " + e.sender.audio.nack.avg.join(",") + "\n",
                        t += "Pks Sent: " + e.sender.audio.packets.sent.avg.join(",") + "\n",
                        t += "\nAudio Received, Avg Per Second\n",
                        t += "  Jitter: " + e.receiver.audio.jitter.avg.join(",") + "\n",
                        t += "    NACK: " + e.receiver.audio.nack.avg.join(",") + "\n",
                        t += "Pks Rcvd: " + e.receiver.audio.packets.received.avg.join(",") + "\n",
                        t += "Pks Lost: " + e.receiver.audio.packets.lost.avg.join(",") + "\n"
                    }
                    function i(e) {
                        let t = ""
                          , n = e.length;
                        for (let i = 0; i < n; i++) {
                            let n = e[i]
                              , o = n.length;
                            if ("string" == typeof n || 1 === o)
                                t += n[0] + "\n";
                            else {
                                t += n[0] + "\n";
                                for (let e = 1; e < o; e++)
                                    t += "\t" + n[e] + "\n"
                            }
                        }
                        return t
                    }
                    0 === t.debugLog.personal.length && alert("The log is empty. You have not connected to anyone yet.");
                    $(this);
                    let o = "";
                    for (let e in t.remoteStats)
                        if (t.remoteStats[e].sender.video.nack.avg.length > 0) {
                            let i = t.getDisplayNameByPID(e);
                            o += "---- " + i + " Stats ----\n",
                            o += n(t.remoteStats[e]),
                            o += "---- END " + i + " Stats ----\n"
                        }
                    o += "----- Personal LOG -----\n",
                    o += i(t.debugLog.personal),
                    e(o += "---- END Personal LOG ----\n")
                }),
                $("#audioOutputSource").on("change", function() {
                    var e = $(this);
                    for (var n in t.audioOutput = e.val(),
                    window.localStorage.setItem("WebRTC-AudioOutput", e.val()),
                    t.remoteMedia)
                        t.remoteMedia[n].setAudioSinkOutput(t.outputSources.audio[e.val()])
                }),
                $("#audioInputSource").on("change", function() {
                    var e = $(this);
                    t.localMedia.stop().then(function() {
                        t.localMedia.setAudioSourceInput(t.inputSources.audio[e.val()]),
                        t.audioInput = e.val(),
                        window.localStorage.setItem("WebRTC-AudioInput", e.val()),
                        t.localMedia.start()
                    }).fail(function(e) {
                        t.errorLog(e)
                    })
                }),
                $("#videoInputSource").on("change", function() {
                    var e = $(this);
                    t.localMedia.stop().then(function() {
                        t.localMedia.setVideoSourceInput(t.inputSources.video[e.val()]),
                        t.videoInput = e.val(),
                        window.localStorage.setItem("WebRTC-VideoInput", e.val()),
                        t.localMedia.start()
                    }).fail(function(e) {
                        t.errorLog(e)
                    })
                }),
                $("#videoQuality").val(this.videoQuality),
                $("#videoQuality").on("change", function() {
                    var e = $(this).val();
                    t.webrtcVideoQualityRef.set(e),
                    t.videoQuality = e
                }),
                this.webrtcMutedAudioRef.child(window.currentPlayer.id).onDisconnect().set(!1),
                this.webrtcMutedVideoRef.child(window.currentPlayer.id).onDisconnect().set(!1),
                this.webrtcOnlineRef.child(window.currentPlayer.id).onDisconnect().set(!1)
            }
            ,
            t.prototype.incomingMessageCallback = function() {}
            ,
            t.prototype.peerLeftCallback = function(e) {
                u(k(e))
            }
            ,
            t.prototype.peerJoinedCallback = function(e) {
                this.log(this.getDisplayNameByPID(e) + " joined")
            }
            ,
            t.prototype.sendMessage = function(e, t, n) {
                void 0 === n ? (this.log("Send All Message: ", e, Date.now()),
                this.webrtcMessageRef.child("all").set({
                    ts: Date.now(),
                    fromId: window.currentPlayer.id,
                    type: e,
                    data: t || null
                })) : (this.log("Send Message To: " + this.getDisplayNameByPID(n), e, Date.now()),
                this.webrtcMessageRef.child(n).push({
                    ts: Date.now(),
                    fromId: window.currentPlayer.id,
                    type: e,
                    data: t
                }))
            }
            ,
            t.prototype.handleMessage = function(e, t, n) {
                switch (t) {
                case this.message.DISCONNECT:
                    "undefined" != typeof this.remoteConnection[e] && (this.remoteConnection[e].close(),
                    delete this.remoteConnection[e]),
                    y(k(e));
                    break;
                case this.message.COLLECT_LOGS:
                    var i = {
                        stats: this.remoteStats,
                        log: this.debugLog.personal
                    };
                    this.sendMessage(this.message.SEND_LOGS, i, e);
                    break;
                case this.message.SEND_LOGS:
                    this.debugLog[e] = n
                }
            }
            ,
            t.prototype.handleSignalling = function() {
                this.log("Handle Signalling");
                var e = this;
                if (!this.joinedSignalling) {
                    this.joinedSignalling = !0;
                    var t = !1;
                    this.webrtcMessageRef.child("all").on("value", function(n) {
                        if (t) {
                            var i = n.val()
                              , o = i.fromId
                              , r = i.type
                              , a = i.data
                              , s = i.ts;
                            o !== window.currentPlayer.id && (e.log("All Message FROM: " + e.getDisplayNameByPID(o), r, s),
                            e.handleMessage(o, r, a))
                        } else
                            t = !0
                    }),
                    this.webrtcMessageRef.child(window.currentPlayer.id).on("child_added", function(t) {
                        var n = t.val()
                          , i = n.fromId
                          , o = n.type
                          , r = n.data
                          , a = n.ts;
                        e.log("Individual Message FROM: " + e.getDisplayNameByPID(i), o, a),
                        e.webrtcMessageRef.child(window.currentPlayer.id).child(t.key()).remove(),
                        e.handleMessage(i, o, r)
                    }),
                    this.webrtcAnswerRef.on("child_added", function(t) {
                        var n = t.val()
                          , i = n.fromId
                          , o = n.toId
                          , r = n.data;
                        if (o === window.currentPlayer.id) {
                            e.log("Answer FROM: " + e.getDisplayNameByPID(i)),
                            e.webrtcAnswerRef.child(t.key()).remove();
                            var a = fm.icelink.SessionDescription.fromJson(r);
                            e.remoteConnection[i].setRemoteDescription(a)
                        }
                    }),
                    this.webrtcCandidateRef.on("child_added", function(t) {
                        var n = t.val()
                          , i = n.fromId
                          , o = n.toId
                          , r = n.data;
                        if (o === window.currentPlayer.id) {
                            e.webrtcCandidateRef.child(t.key()).remove();
                            var a = fm.icelink.Candidate.fromJson(r);
                            "undefined" == typeof e.remoteConnection[i] ? (e.log("Candidate FROM: Remote connection for " + e.getDisplayNameByPID(i) + " not created, YET."),
                            setTimeout(function() {
                                "undefined" == typeof e.remoteConnection[i] ? e.errorLog("Candidate FROM ERROR: Remote connection for " + e.getDisplayNameByPID(i) + " not created.") : (e.log("Candidate FROM: " + e.getDisplayNameByPID(i) + e.getCandidateData(a)),
                                e.remoteConnection[i].addRemoteCandidate(a))
                            }, 3e3)) : (e.log("Candidate FROM: " + e.getDisplayNameByPID(i) + e.getCandidateData(a)),
                            e.remoteConnection[i].addRemoteCandidate(a))
                        }
                    }),
                    this.webrtcOfferRef.on("child_added", function(t) {
                        var n = t.val()
                          , i = n.fromId
                          , o = n.toId
                          , r = n.data;
                        if (o === window.currentPlayer.id) {
                            e.log("Offer FROM: " + e.getDisplayNameByPID(i)),
                            e.webrtcOfferRef.child(t.key()).remove();
                            var a = fm.icelink.SessionDescription.fromJson(r);
                            e.remoteMedia[i] = new fm.icelink.RemoteMedia;
                            var s = new fm.icelink.AudioStream(e.localMedia,e.remoteMedia[i])
                              , l = new fm.icelink.VideoStream(e.localMedia,e.remoteMedia[i]);
                            e.remoteConnection[i] = new fm.icelink.Connection([s, l]),
                            e.connection(i),
                            e.remoteConnection[i].setRemoteDescription(a).then(function() {
                                return e.remoteConnection[i].createAnswer()
                            }).then(function(t) {
                                return e.remoteConnection[i].setLocalDescription(t)
                            }).then(function(t) {
                                var n = {
                                    ts: Date.now(),
                                    toId: i,
                                    fromId: window.currentPlayer.id,
                                    data: t.toJson()
                                };
                                e.webrtcAnswerRef.push(n)
                            }).fail(function(t) {
                                e.errorLog(t)
                            })
                        }
                    }),
                    this.webrtcBroadcastRef.on("value", function(t) {
                        e.remoteBroadcast = t.val()
                    });
                    var n = !1;
                    function i(e) {
                        e.val() ? p(k(e.key())) : f(k(e.key()))
                    }
                    function o(e) {
                        e.val() ? c(k(e.key())) : l(k(e.key()))
                    }
                    this.webrtcVideoQualityRef.on("value", function(t) {
                        n && (e.log("Video Quality Change", t.val()),
                        e.reconnect()),
                        e.log("Video Quality: " + t.val()),
                        n = !0
                    }),
                    this.webrtcMutedAudioRef.on("child_added", i),
                    this.webrtcMutedAudioRef.on("child_changed", i),
                    this.webrtcMutedVideoRef.on("child_added", o),
                    this.webrtcMutedVideoRef.on("child_changed", o)
                }
                this.webrtcOnlineRef.transaction(function(e) {
                    return null === e ? 0 : (e[window.currentPlayer.id] = !0,
                    e)
                }, function(t, n, i) {
                    var o = !0
                      , r = i.val();
                    for (var a in r)
                        if (a !== window.currentPlayer.id && r[a]) {
                            o = !1;
                            break
                        }
                    if (o)
                        e.webrtcOfferRef.remove(),
                        e.webrtcAnswerRef.remove(),
                        e.webrtcCandidateRef.remove();
                    else
                        for (var a in r)
                            a !== window.currentPlayer.id && r[a] && "undefined" == typeof e.remoteConnection[a] && function(e, t) {
                                e.remoteMedia[t] = new fm.icelink.RemoteMedia;
                                var n = new fm.icelink.AudioStream(e.localMedia,e.remoteMedia[t])
                                  , i = new fm.icelink.VideoStream(e.localMedia,e.remoteMedia[t]);
                                e.remoteConnection[t] = new fm.icelink.Connection([n, i]),
                                e.connection(t),
                                e.remoteConnection[t].createOffer().then(function(n) {
                                    return e.remoteConnection[t].setLocalDescription(n)
                                }).then(function(n) {
                                    var i = {
                                        ts: Date.now(),
                                        toId: t,
                                        fromId: window.currentPlayer.id,
                                        data: n.toJson()
                                    };
                                    e.log("Offer TO: " + e.getDisplayNameByPID(t)),
                                    e.webrtcOfferRef.push(i)
                                }).fail(function(t) {
                                    e.errorLog(t)
                                })
                            }(e, a);
                    e.webrtcOnlineRef.off("child_changed"),
                    e.webrtcOnlineRef.on("child_changed", function(t) {
                        if (!t.val()) {
                            var n = t.key();
                            "undefined" != typeof e.remoteConnection[n] && (e.remoteConnection[n].close(),
                            delete e.remoteConnection[n])
                        }
                    })
                }, !0)
            }
            ,
            t.prototype.getRemoteStats = function() {
                function e(e) {
                    var t = e.reduce(function(e, t) {
                        return e + t
                    });
                    return Math.round(t / (e.length * (i.statsTimer / 1e3)) * 100) / 100
                }
                function t(e, t) {
                    var n, i, o;
                    o = (n = e) - (i = t).last,
                    i.last = n,
                    i.ps.push(o)
                }
                function n(e) {
                    function t() {
                        return {
                            last: null,
                            ps: [],
                            avg: []
                        }
                    }
                    return e ? {
                        jitter: t(),
                        nack: t(),
                        packets: {
                            received: t(),
                            lost: t()
                        }
                    } : {
                        nack: t(),
                        packets: {
                            sent: t()
                        }
                    }
                }
                var i = this;
                for (var o in this.remoteConnection)
                    "undefined" == typeof this.remoteStats[o] && (this.remoteStats[o] = {
                        connectionType: null,
                        count: 0,
                        receiver: {
                            video: n(!0),
                            audio: n(!0)
                        },
                        sender: {
                            video: n(!1),
                            audio: n(!1)
                        }
                    }),
                    function(n, i) {
                        let o = n
                          , r = n.remoteConnection[i];
                        void 0 !== r && "undefined" != typeof r._internal._nativePeerConnection && r.getStats().then(function(n) {
                            null === o.remoteStats[i].connectionType && (o.remoteStats[i].connectionType = n.getIsHost() ? "host" : n.getIsReflexive() ? "srflx" : n.getIsRelayed() ? "relay" : null);
                            let r = o.remoteStats[i].count++
                              , a = n.getMediaStreams();
                            for (let n in a) {
                                let s = a[n].getReceiver()
                                  , l = a[n].getSender();
                                if (null == s || null == l)
                                    continue;
                                let c = 1 === a[n].getType() ? "audio" : "video"
                                  , u = o.remoteStats[i].receiver[c]
                                  , d = o.remoteStats[i].sender[c];
                                t(s.getJitter(), u.jitter),
                                t(s.getNackCount(), u.nack),
                                t(s.getPacketsReceived(), u.packets.received),
                                t(s.getPacketsLost(), u.packets.lost),
                                t(l.getNackCount(), d.nack),
                                t(l.getPacketsSent(), d.packets.sent),
                                0 !== r && r % o.statsDataPointPerAvg == 0 && (u.jitter.avg.push(e(u.jitter.ps)),
                                u.nack.avg.push(e(u.nack.ps)),
                                u.packets.received.avg.push(e(u.packets.received.ps)),
                                u.packets.lost.avg.push(e(u.packets.lost.ps)),
                                d.nack.avg.push(e(d.nack.ps)),
                                d.packets.sent.avg.push(e(d.packets.sent.ps)),
                                r > o.statsDataAvgPoints * o.statsDataPoints && (u.jitter.avg.shift(),
                                u.nack.avg.shift(),
                                u.packets.received.avg.shift(),
                                u.packets.lost.avg.shift(),
                                d.nack.avg.shift(),
                                d.packets.sent.avg.shift())),
                                o.remoteStats[i].receiver[c] = u,
                                o.remoteStats[i].sender[c] = d
                            }
                        }).fail(function(e) {
                            o.errorLog(e)
                        })
                    }(this, o)
            }
            ,
            t.prototype.connection = function(e) {
                var t = this
                  , n = this.remoteMedia[e].getView()
                  , i = this.remoteMedia[e]
                  , o = "both" === this.receiveType || "voiceonly" === this.receiveType
                  , r = "both" === this.receiveType || "videoonly" === this.receiveType;
                if (null != n && r && this.remoteBroadcast[e].video) {
                    i.getViewSink().setViewScale(fm.icelink.LayoutScale.Cover);
                    var a = x(e)[0];
                    if (!1 === a) {
                        var s = 0;
                        function l() {
                            !1 === (a = x(e)[0]) ? ++s < 5 ? setTimeout(l, 1e3) : console.error("Failed to find player video container after 5 tries.") : (t.remoteLayout[e] = new fm.icelink.DomLayoutManager(a),
                            t.remoteLayout[e].addRemoteView(i.getId(), n))
                        }
                        setTimeout(l, 1e3)
                    } else
                        this.remoteLayout[e] = new fm.icelink.DomLayoutManager(a),
                        this.remoteLayout[e].addRemoteView(i.getId(), n)
                }
                var c = this.remoteConnection[e];
                c.setIceServers(this.iceServers),
                c.getRemoteMedia().getAudioSinkOutputs().then(function(e) {
                    var n = $("#audioOutputSource");
                    if (n.empty(),
                    $("#audioOutputSourcesWarning").hide(),
                    $("#audioOutputSource").prop("disabled", !1),
                    e.length > 0)
                        for (var i = 0; i < e.length; i++) {
                            var o = e[i];
                            t.outputSources.audio[o.getId()] = o;
                            var r = $('<option value="' + o.getId() + '"' + (t.audioOutput === o.getId() ? " selected" : "") + ">" + o.getName() + "</option>");
                            n.append(r)
                        }
                    else {
                        t.log("No audio output device.");
                        r = $('<option value="">None</option>');
                        n.append(r)
                    }
                }).fail(function(e) {
                    t.errorLog(e)
                }),
                null !== this.audioOutput && c.getRemoteMedia().setAudioSinkOutput(this.outputSources.audio[this.audioOutput]),
                c.addOnLocalCandidate(function(n, i) {
                    var o = {
                        ts: Date.now(),
                        toId: e,
                        fromId: window.currentPlayer.id,
                        data: i.toJson()
                    };
                    t.log("Candidate TO: " + t.getDisplayNameByPID(e) + t.getCandidateData(i)),
                    t.webrtcCandidateRef.push(o)
                }),
                c.addOnStateChange(function(n) {
                    n.getState() === fm.icelink.ConnectionState.New ? t.log("New Connection: " + t.getDisplayNameByPID(e)) : n.getState() === fm.icelink.ConnectionState.Initializing ? t.log("Connection INIT: " + t.getDisplayNameByPID(e)) : n.getState() === fm.icelink.ConnectionState.Connected ? (n.getStats().then(function(n) {
                        let i = n.getMediaStreams()[0].getTransport().getActiveCandidatePair().getLocalCandidateId()
                          , o = n.getMediaStreams()[0].getTransport().getLocalCandidate(i)
                          , r = n.getMediaStreams()[0].getTransport().getActiveCandidatePair().getRemoteCandidateId()
                          , a = n.getMediaStreams()[0].getTransport().getRemoteCandidate(r)
                          , s = [];
                        o.getIsHost() && s.push("HOST"),
                        o.getIsReflexive() && s.push("STUN"),
                        o.getIsRelayed() && s.push("TURN"),
                        a.getIsHost() && s.push("HOST"),
                        a.getIsReflexive() && s.push("STUN"),
                        a.getIsRelayed() && s.push("TURN"),
                        t.log("CONNECTED: " + t.getDisplayNameByPID(e) + " | " + s.join("/"))
                    }).fail(function(e) {
                        t.log("Stats Collection Failed: " + e)
                    }),
                    o && t.remoteBroadcast[e].audio && (t.addOverlay(e),
                    t.startSoundMeter(e, n.getRemoteMedia())),
                    n.getRemoteMedia().setAudioMuted(!o),
                    n.getRemoteMedia().setVideoMuted(!r),
                    t.peerJoinedCallback(e),
                    !1 !== x(e) && r && x(e).removeClass("no-video"),
                    t.statsRunning || setInterval(function() {
                        t.getRemoteStats()
                    }, t.statsTimer)) : n.getState() === fm.icelink.ConnectionState.Closing ? (t.log("Connection CLOSING: " + t.getDisplayNameByPID(e)),
                    null != t.layoutManager[e] && t.remoteLayout[e].getRemoteView(t.remoteMedia[e].getId()) && (t.remoteLayout[e].removeRemoteView(t.remoteMedia[e].getId()),
                    t.remoteMedia[e].destroy())) : n.getState() === fm.icelink.ConnectionState.Failing ? (t.log("Connection FAILING: " + t.getDisplayNameByPID(e)),
                    null != t.layoutManager[e] && t.remoteLayout[e].getRemoteView(t.remoteMedia[e].getId()) && (t.remoteLayout[e].removeRemoteView(t.remoteMedia[e].getId()),
                    t.remoteMedia[e].destroy())) : n.getState() === fm.icelink.ConnectionState.Closed ? (t.log("Connection CLOSED: " + t.getDisplayNameByPID(e)),
                    t.peerLeftCallback(e)) : n.getState() === fm.icelink.ConnectionState.Failed && (t.log("Connection FAILED: " + t.getDisplayNameByPID(e)),
                    t.log("Connection ERROR: " + n.getError().getDescription()),
                    console.error("Connection ERROR: ", n.getError().getDescription()),
                    t.peerLeftCallback(e),
                    t.handleSignalling())
                })
            }
            ,
            t.prototype.startLocalMedia = function() {
                var e = x(window.currentPlayer.id)[0]
                  , t = this
                  , n = new fm.icelink.Promise;
                this.webrtcWhisperRef.child(window.currentPlayer.id).onDisconnect().cancel(),
                this.webrtcWhisperRef.child(window.currentPlayer.id).onDisconnect().set(null),
                this.broadcastType = window.currentPlayer.get("videobroadcasttype"),
                this.receiveType = window.currentPlayer.get("videoreceivetype");
                new fm.icelink.LocalMedia;
                var i = "both" === this.broadcastType || "voiceonly" === this.broadcastType
                  , o = "both" === this.broadcastType || "videoonly" === this.broadcastType;
                this.log("Broadcast Type: " + this.broadcastType),
                this.log("Receive Type: " + this.receiveType);
                try {
                    if (null !== this.localMedia)
                        throw new Error("Local media has already been started.");
                    var r = new fm.icelink.PluginConfig;
                    r.setActiveXPath("./FM.IceLink.ActiveX.cab"),
                    fm.icelink.Plugin.install(r).then(function() {
                        var r = !!i || null
                          , a = o ? t.videoConfigs.vlow : null
                          , s = new fm.icelink.LocalMedia(r,a,!1)
                          , l = []
                          , c = $("#audioInputSource")
                          , u = $("#videoInputSource");
                        if (t.layoutManager = new fm.icelink.DomLayoutManager(e),
                        r) {
                            var d = s.getAudioSourceInputs().then(function(e) {
                                if (c.empty(),
                                e.length > 0)
                                    for (var n = 0; n < e.length; n++) {
                                        var i = e[n];
                                        t.inputSources.audio[i.getId()] = i;
                                        var o = $('<option value="' + i.getId() + '"' + (t.audioInput === i.getId() ? " selected" : "") + ">" + i.getName() + "</option>");
                                        c.append(o)
                                    }
                                else {
                                    t.log("No audio device.");
                                    o = $('<option value="">None</option>');
                                    c.append(o),
                                    h(x(window.currentPlayer.id)),
                                    r = !1
                                }
                            }).fail(function(e) {
                                n.reject(e)
                            });
                            l.push(d)
                        }
                        if (a) {
                            var p = s.getVideoSourceInputs().then(function(e) {
                                if (u.empty(),
                                e.length > 0)
                                    for (var n = 0; n < e.length; n++) {
                                        var i = e[n];
                                        t.inputSources.video[i.getId()] = i;
                                        var o = $('<option value="' + i.getId() + '"' + (t.videoInput === i.getId() ? " selected" : "") + ">" + i.getName() + "</option>");
                                        u.append(o)
                                    }
                                else {
                                    t.log("No video device.");
                                    o = $('<option value="">None</option>');
                                    u.append(o),
                                    a = !1
                                }
                            }).fail(function(e) {
                                n.reject(e)
                            });
                            l.push(p)
                        }
                        return Promise.all(l).then(function() {
                            t.webrtcBroadcastRef.child(window.currentPlayer.id).set({
                                audio: r,
                                video: !1 !== a
                            }),
                            t.localMedia = new fm.icelink.LocalMedia(r,a,!1),
                            null !== t.audioInput && t.localMedia.setAudioSourceInput(t.inputSources.audio[t.audioInput]),
                            null !== t.videoInput && t.localMedia.setVideoSourceInput(t.inputSources.video[t.videoInput]),
                            t.localMedia.start().then(function(e) {
                                var r = e.getView();
                                null != r && o && (e.getViewSink().setViewScale(fm.icelink.LayoutScale.Cover),
                                t.layoutManager.setLocalView(r)),
                                i && t.addOverlay(window.currentPlayer.id),
                                t.startSoundMeter(window.currentPlayer.id, e),
                                n.resolve(!0)
                            }).fail(function(e) {
                                n.reject(e)
                            })
                        }),
                        n
                    }).fail(function(e) {
                        n.reject(e)
                    })
                } catch (a) {
                    n.reject(a)
                }
                return n
            }
            ,
            t.prototype.startLocalMediaDB = _.debounce(function() {
                var t = e.Campaign.players.filter(function(e) {
                    return e.get("online") && e !== window.currentPlayer
                }).length
                  , n = this;
                this.joinedLocal ? !this.joinedSignalling && t > 0 && (this.log("Number of other Players: " + t),
                this.handleSignalling()) : (this.log("Number of other Players: " + t),
                this.updateDraggable(),
                this.webrtcVideoQualityRef.once("value", function(e) {
                    null === e.val() ? (n.webrtcVideoQualityRef.set("medium"),
                    n.videoQuality = "medium") : n.videoQuality = e.val(),
                    n.joinedLocal = !0,
                    n.startLocalMedia().then(function() {
                        var e = new fm.icelink.Promise;
                        try {
                            n.log("Started local media"),
                            !n.joinedSignalling && t > 0 && (n.handleSignalling(),
                            e.resolve(!0))
                        } catch (i) {
                            e.reject(i)
                        }
                        return e
                    }).fail(function(e) {
                        n.log("Failed startLocalMedia"),
                        n.errorLog(e)
                    })
                }))
            }, 500),
            t.prototype.updateDraggable = function() {
                $(".player").draggable(this.draggableVideo),
                w(),
                b()
            }
            ,
            t.prototype.closeLocal = function() {
                this.webrtcOnlineRef.child(window.currentPlayer.id).set(!1),
                this.webrtcWhisperRef.child(window.currentPlayer.id).set(null),
                this.muted && this.muteMe(),
                this.mutedVideo && this.muteMeVideo(),
                this.webrtcAnswerRef.off("child_added"),
                this.webrtcOfferRef.off("child_added"),
                this.webrtcCandidateRef.off("child_added"),
                this.webrtcMessageRef.child("all").off("value"),
                this.webrtcMessageRef.child(window.currentPlayer.id).off("child_added"),
                this.webrtcVideoQualityRef.off("value"),
                this.webrtcMutedAudioRef.off("child_added"),
                this.webrtcMutedAudioRef.off("child_changed"),
                this.webrtcMutedVideoRef.off("child_added"),
                this.webrtcMutedVideoRef.off("child_changed"),
                y(k(window.currentPlayer.id)),
                this.joinedSignalling = !1,
                this.joinedLocal = !1,
                this.localMedia = null,
                this.remoteMedia = {},
                this.remoteLayout = {},
                this.remoteConnection = {},
                this.remoteBroadcast = {}
            }
            ,
            t.prototype.connect = function() {
                this.loadEventHandlers(),
                this.startLocalMediaDB()
            }
            ,
            t.prototype.reconnect = function() {
                this.log("Reconnect!");
                var e = this;
                for (var t in this.sendMessage(this.message.DISCONNECT),
                this.remoteConnection) {
                    this.remoteConnection[t].close()
                }
                this.localMedia.stop().then(function() {
                    e.closeLocal(),
                    e.startLocalMediaDB()
                }).fail(function(t) {
                    e.log("Failed reconnect"),
                    e.errorLog(t)
                })
            }
            ,
            t.prototype.disconnect = function() {}
            ,
            t.prototype.postLargeGroupWarning = function() {}
            ,
            t
        }();
        e.webrtc = new t(e)
    }(d20)),
    "roll20" === d20ext.videotype && (d20.webrtc = {
        publisher: !1,
        mediaStream: !1,
        eventHandlersLoaded: !1,
        muted: !1,
        whispering: !0,
        whisperGroup: {},
        bandwidth: "unlimited",
        largeGroupWarning: !1,
        playersCalled: [],
        soundMeters: {},
        loadedOnce: !1
    },
    window.TB && (TB.upgradeSystemRequirements = function() {
        var e = {
            who: "error",
            type: "error",
            content: "The browser you are using is not compatible with WebRTC, which is required for video and voice chat. If you're using an external application such as Skype or Discord. If you don't want to use video chat, you can safely ignore this message."
        };
        setTimeout(function() {
            d20.textchat.incoming(!1, e)
        }, 1e3)
    }
    ),
    $(function() {
        function e(e) {
            this.context = e,
            this.instant = 0,
            this.slow = 0,
            this.script = e.createScriptProcessor(2048, 1, 1);
            var t = this;
            this.script.onaudioprocess = function(e) {
                var n, i = e.inputBuffer.getChannelData(0), o = 0;
                for (n = 0; n < i.length; ++n)
                    o += i[n] * i[n];
                t.instant = Math.sqrt(o / i.length),
                t.slow = .9 * t.slow + .1 * t.instant
            }
        }
        var t = 5;
        try {
            window.AudioContext = window.AudioContext || window.webkitAudioContext,
            window.audioContext = new AudioContext
        } catch (H) {
            console.log("Web Audio API not supported.")
        }
        e.prototype.connectToSource = function(e, t) {
            try {
                this.mic = this.context.createMediaStreamSource(e),
                this.mic.connect(this.script),
                this.script.connect(this.context.destination),
                void 0 !== t && t(null)
            } catch (H) {
                console.error(H),
                void 0 !== t && t(H)
            }
        }
        ,
        e.prototype.stop = function() {
            this.mic.disconnect(),
            this.script.disconnect()
        }
        ;
        var n = function(e) {
            var t = $("#editor-wrapper").width() - $("#playerzone .player").width() - 10
              , n = e.left * $("#editor-wrapper").width() - $("#playerzone").offset().left;
            n = n > t ? t : n;
            var i = $("#editor-wrapper").height() - $("#playerzone").offset().top - $("#playerzone .player").height() - 25
              , o = e.top * $("#editor-wrapper").height() - $("#playerzone").offset().top;
            return {
                top: o = o > i ? i : o,
                left: n
            }
        }
          , i = {
            handle: ".player-handle",
            containment: "#playerzone",
            scroll: !1,
            start: function() {
                $(this).find(".player-handle").attr("style", "display: block;")
            },
            stop: function() {
                var e = $(this);
                e.find(".player-handle").attr("style", "");
                var t = e.attr("id").substr(7)
                  , i = {
                    top: ((e.position().top + $("#playerzone").offset().top) / $("#editor-wrapper").height()).toFixed(4),
                    left: ((e.position().left + $("#playerzone").offset().left) / $("#editor-wrapper").width()).toFixed(4)
                };
                window.is_gm && ((o = JSON.parse(d20.Campaign.get("videopos")))[t] = i,
                d20.Campaign.save({
                    videopos: JSON.stringify(o)
                }));
                if ("player" === d20.Campaign.get("controlsvideopos")) {
                    var o = n(i);
                    e.attr("style", "left: " + o.left + "px; top: " + o.top + "px; position: absolute;")
                }
            }
        }
          , o = function() {
            if ("gm" === d20.Campaign.get("controlsvideopos")) {
                var e = JSON.parse(d20.Campaign.get("videopos"));
                $.each(e, function(e, t) {
                    if (t) {
                        var i = n(t);
                        $("#player_" + e).attr("style", "left: " + i.left + "px; top: " + i.top + "px; position: absolute;")
                    } else
                        $("#player_" + e).attr("style", "")
                })
            }
        }
          , r = function() {
            var e = "gm" === window.Campaign.get("controlsvideopos");
            e && !window.is_gm ? ($(".player").each(function() {
                var e = $(this);
                e.find(".player-handle").hide(),
                e.draggable("disable")
            }),
            o(),
            $("#resetvideopos").prop("disabled", !0)) : e || window.is_gm || ($(".player").each(function() {
                var e = $(this);
                e.find(".player-handle").attr("style", ""),
                e.draggable("enable")
            }),
            $("#resetvideopos").prop("disabled", !1))
        }
          , a = {
            high: 30,
            medium: "Firefox" === util.browser ? 30 : 20,
            low: "Firefox" === util.browser ? 30 : 10,
            verylow: "Firefox" === util.browser ? 30 : 5
        }
          , s = function() {
            if (!d20.webrtc.eventHandlersLoaded) {
                console.log("Loading Roll20 Chat Event Handlers"),
                d20.webrtc.eventHandlersLoaded = !0,
                $("#playerzone").addClass("roll20-webrtc");
                var e = $("#videocontextmenu")
                  , t = $("#playerhandorientation");
                $("body").on(mousedowntype, function() {
                    e.hide(),
                    t.hide()
                }),
                $("#playerzone").on("contextmenu", ".playername", function(t) {
                    if ("gm" !== d20.Campaign.get("controlsvideopos") || window.is_gm) {
                        var n = $(this).parents(".player").attr("id").substr(7);
                        window.currentPlayer.id === n ? e.find("li[data-action-type=reconnectPlayer]").hide() : "none" !== e.find("li[data-action-type=reconnectAll]").css("display") && e.find("li[data-action-type=reconnectPlayer]").show(),
                        e.show(),
                        e.attr("data-player-id", n),
                        $("#editor-wrapper").height() - t.pageY < e.height() + 5 ? e.css({
                            top: t.pageY - e.height() + "px",
                            left: t.pageX + "px"
                        }) : e.css({
                            top: t.pageY + "px",
                            left: t.pageX + "px"
                        }),
                        t.preventDefault(),
                        t.stopPropagation()
                    }
                }),
                e.on(mousedowntype, "li[data-action-type=resetLocations]", function() {
                    if (e.hide(),
                    $("#playerzone .player").each(function() {
                        $(this).attr("style", "")
                    }),
                    window.is_gm) {
                        var t = JSON.parse(d20.Campaign.get("videopos"));
                        $.each(t, function(e) {
                            t[e] = !1
                        }),
                        d20.Campaign.save({
                            videopos: JSON.stringify(t)
                        })
                    }
                }),
                e.on(mousedowntype, "li[data-action-type=resetLocation]", function() {
                    e.hide();
                    var t = e.attr("data-player-id");
                    if ($("#player_" + t).attr("style", ""),
                    window.is_gm) {
                        var n = JSON.parse(d20.Campaign.get("videopos"));
                        n[t] = !1,
                        d20.Campaign.save({
                            videopos: JSON.stringify(n)
                        })
                    }
                }),
                $("#playerzone").on("contextmenu", ".cardback", function(e) {
                    if ("gm" !== d20.Campaign.get("controlsvideopos") || window.is_gm) {
                        var n = $(this).parents(".player").attr("id").substr(7);
                        t.show(),
                        t.attr("data-player-id", n),
                        t.css({
                            top: e.pageY + "px",
                            left: e.pageX + "px"
                        }),
                        e.preventDefault(),
                        e.stopPropagation()
                    }
                }),
                $("#playerhandorientation ul").on(mousedowntype, "li", function() {
                    t.hide();
                    var e = $(this).attr("data-action-type")
                      , n = t.attr("data-player-id")
                      , i = $("#player_" + n);
                    i.removeClass("player-hand-bottom player-hand-left player-hand-right"),
                    "player-hand-top" !== e && i.addClass(e)
                }),
                $("#videobroadcasttype").bind("change", function() {
                    var e = $(this).val();
                    window.currentPlayer && window.currentPlayer.save({
                        videobroadcasttype: e
                    }),
                    I()
                }),
                $("#videoreceivetype").bind("change", function() {
                    var e = $(this).val();
                    window.currentPlayer && window.currentPlayer.save({
                        videoreceivetype: e
                    }),
                    I()
                }),
                $("#videoframerate").bind("change", function() {
                    var e = $(this).val();
                    window.Campaign && window.Campaign.save({
                        videobandwidth: e
                    }),
                    location.reload()
                }),
                $("#videoreconnect").bind("click", function() {
                    d20.webrtc.reconnect()
                }),
                $("#videoplayerlocation").val(window.currentPlayer.get("videoplayerlocation")).trigger("change"),
                "top" === window.currentPlayer.get("videoplayerlocation") ? $("#playerzone").addClass("pz-top") : $("#playerzone").removeClass("pz-top"),
                $("#videoplayerlocation").bind("change", function() {
                    var e = $(this).val();
                    window.currentPlayer.save({
                        videoplayerlocation: e
                    }),
                    console.log("videoplayerlocation changed"),
                    "top" === e ? $("#playerzone").addClass("pz-top") : $("#playerzone").removeClass("pz-top"),
                    o()
                }),
                $("#resetvideopos").bind("click", function() {
                    $(this).val();
                    $("#playerzone .player").each(function() {
                        $(this).attr("style", "")
                    }),
                    window.is_gm && (d20.Campaign.save({
                        videopos: "{}"
                    }),
                    d20.Campaign.get("controlsvideopos"))
                }),
                $(".player").draggable(i),
                $(window).bind("resize", o),
                o(),
                $("#movablevideo").val(window.Campaign.get("controlsvideopos")).trigger("change"),
                window.is_gm ? $("#movablevideo").bind("change", function() {
                    var e = $(this).val();
                    d20.Campaign.save({
                        controlsvideopos: e
                    })
                }) : (d20.Campaign.bind("change:controlsvideopos", function() {
                    console.log("Player: videoMoveControl"),
                    r()
                }),
                r()),
                d20.Campaign.bind("change:videopos", function() {
                    console.log("video moved!"),
                    o()
                }),
                Mousetrap.bind("`", function() {
                    d20.webrtc.publisher && _(!0)
                }),
                $("#playerzone").on("dblclick", "div.playername", function() {
                    var e = $(this).parents(".player").attr("id").substr(7)
                      , t = d20.Campaign.players.get(e).view;
                    console.log("playerId", e),
                    console.log("thisPlayer", t),
                    t.showPopout()
                })
            }
        }
          , l = function(e) {
            return (window.chat_session_id + e).replace(/[^a-zA-Z0-9]/gi, "")
        }
          , c = function() {
            if (!1 === d20.webrtc.mediaStream) {
                d20.webrtc.mediaStream = !0;
                var e = window.Campaign.get("videobandwidth")
                  , t = window.currentPlayer.get("videobroadcasttype");
                if ("none" === t)
                    console.log("Skip user media and connect to Roll20 signaling server."),
                    d20.webrtc.mediaStream = "none",
                    u();
                else {
                    console.log("Load user media and connect to Roll20 signaling server.");
                    var n = ("both" === t || "videoonly" === t) && {
                        width: 200,
                        height: 200,
                        frameRate: {
                            max: a[e]
                        }
                    }
                      , i = !0;
                    navigator.mediaDevices.getUserMedia({
                        video: n,
                        audio: i
                    }).then(function(e) {
                        d20.webrtc.mediaStream = e,
                        d(window.currentPlayer.id, e),
                        u()
                    })["catch"](function(e) {
                        console.error("Error getting user media:", e)
                    })
                }
            }
        }
          , u = function() {
            if (!1 === d20.webrtc.publisher) {
                d20.webrtc.publisher = !0;
                var e = {}
                  , n = window.currentPlayer.get("videobroadcasttype");
                "none" !== n ? (d20.webrtc.localStream = h(d20.webrtc.mediaStream.clone(), "both" === n || "videoonly" === n ? "videoonly" : "none"),
                p(d20.webrtc.localStream, window.currentPlayer.id, !0)) : E($("#player_" + window.currentPlayer.id));
                var i = 0
                  , o = 30;
                try {
                    i = parseInt(window.FIREBASE_ROOT.split("-")[1].split(".")[0], 10) % o,
                    i = isNaN(i) ? 0 : i
                } catch (H) {
                    console.log("Unable to determine signal shard, falling back to default.")
                }
                d20.webrtc.publisher = new Peer(l(window.currentPlayer.id),{
                    host: "peer" + i + ".roll20.net",
                    port: 443,
                    secure: !0,
                    debug: 1,
                    config: {
                        iceServers: [{
                            url: "stun:rtc.roll20.net:3478"
                        }, {
                            url: "turn:rtc.roll20.net:3478",
                            username: "WtL212054t",
                            credential: "YCx3rCSdUsSDACsg"
                        }]
                    }
                }),
                console.log("PEER", d20.webrtc.publisher),
                d20.webrtc.publisher.on("open", function() {
                    var e = 0;
                    d20.Campaign.parentRef.child("webrtcConnected").transaction(function(t) {
                        return null !== t ? (0 === t && (t = {}),
                        console.log("Connection Status: ", t),
                        e++ > 0 && console.warn("Transaction Failed: getting online players again: ", e - 1),
                        t[window.currentPlayer.id] = !0,
                        t) : 0
                    }, function(e, n, i) {
                        var o = [];
                        0 !== i && $.each(i.val(), function(e, n) {
                            n && e !== window.currentPlayer.id && o.push({
                                id: e,
                                retries: t
                            })
                        }),
                        console.log(o.length + " ONLINE PLAYERS: ", o),
                        o.length > 0 && a(o)
                    })
                }),
                d20.webrtc.publisher.on("error", function(e) {
                    "network" === e.type ? (console.error(e),
                    d20.webrtc.reconnect()) : "peer-unavalable" === e.type ? console.warn(e) : "browser-incompatible" === e.type ? console.error("Browser incompatible with webrtc") : "server-error" === e.type ? console.error("Unable to connect to signaling server", e) : "webrtc" === e.type ? console.error("WebRTC Error: ", e) : "unavailable-id" === e.type ? (console.log("ID is taken. You were not properly disconnected. Trying again"),
                    d20.webrtc.publisher.reconnect()) : console.error("General Error: ", e)
                }),
                d20.webrtc.publisher.on("connection", function(e) {
                    e.on("data", function(n) {
                        "call-me" === n && (d20.webrtc.loadedOnce || (console.log("[WebRTC] - Connecting!"),
                        ga("send", {
                            hitType: "event",
                            eventCategory: "WebRTC",
                            eventAction: "Initial Broadcast"
                        }),
                        d20.webrtc.loadedOnce = !0),
                        d20.webrtc.playersCalled.indexOf(e.metadata.playerId) > -1 && d20.webrtc.playersCalled.splice(d20.webrtc.playersCalled.indexOf(e.metadata.playerId), 1),
                        a([{
                            id: e.metadata.playerId,
                            retries: t
                        }]))
                    })
                }),
                d20.webrtc.publisher.on("call", function(e) {
                    var t = window.Campaign.players.get(e.metadata.playerId).get("displayname");
                    console.log("Call FROM: " + t + " | " + e.metadata.playerId + " | " + e.metadata.broadcastType),
                    "none" === d20.webrtc.mediaStream ? (e.answer(),
                    e.on("stream", function(n) {
                        console.log("Connection FROM: " + t + " | " + e.metadata.playerId),
                        inMediastream = h(n, window.currentPlayer.get("videoreceivetype")),
                        inMediastream = h(n, e.metadata.broadcastType),
                        d20.webrtc.inMediastream = n,
                        d(e.metadata.playerId, n),
                        p(n, e.metadata.playerId)
                    })) : (d20.webrtc.loadedOnce || (console.log("[WebRTC] - Connecting!"),
                    ga("send", {
                        hitType: "event",
                        eventCategory: "WebRTC",
                        eventAction: "Initial Broadcast"
                    }),
                    d20.webrtc.loadedOnce = !0),
                    outMediastream = h(d20.webrtc.mediaStream, window.currentPlayer.get("videobroadcasttype")),
                    e.answer(outMediastream),
                    e.on("stream", function(n) {
                        console.log("Connection FROM: " + t + " | " + e.metadata.playerId),
                        inMediastream = h(n, window.currentPlayer.get("videoreceivetype")),
                        inMediastream = h(n, e.metadata.broadcastType),
                        d20.webrtc.inMediastream = n,
                        d(e.metadata.playerId, n),
                        p(n, e.metadata.playerId)
                    })),
                    e.on("error", function(e) {
                        console.warn("Connection FROM ERROR: " + t + " | " + player.id + " | Retries: " + player.retries),
                        console.warn(e),
                        d20.webrtc.reconnect()
                    })
                }),
                d20.webrtc.publisher.on("disconnect", function() {
                    r()
                }),
                d20.webrtc.publisher.on("close", function() {
                    r()
                });
                var r = function() {
                    currentPlayer.save({
                        webrtcConnected: !1
                    })
                }
                  , a = function(t) {
                    var n = t.shift();
                    if (d20.webrtc.playersCalled.indexOf(n.id) > -1)
                        return console.log("Already called player: " + n.id),
                        void (t.length > 0 && a(t));
                    d20.webrtc.playersCalled.push(n.id);
                    var i = window.currentPlayer.get("videobroadcasttype")
                      , o = window.Campaign.players.get(n.id)
                      , r = o.get("videobroadcasttype")
                      , s = o.get("displayname");
                    console.log("Call TO: " + s + " | " + n.id + " | " + r);
                    var c = $("#player_" + n.id);
                    if (E(c),
                    P(c),
                    "none" === i && "none" === r)
                        ;
                    else if ("none" === i && "none" !== r || "voiceonly" === i && ("both" === r || "videoonly" === r)) {
                        console.log("Call BACK");
                        var u = d20.webrtc.publisher.connect(l(n.id), {
                            metadata: {
                                playerId: window.currentPlayer.id
                            }
                        });
                        u.on("open", function() {
                            u.send("call-me")
                        }),
                        u.on("error", function() {
                            console.log("Data Connection ERROR: " + s + " | " + n.id),
                            n.retries-- > 0 ? (t.push(n),
                            a(t)) : console.error("Exausted retries, cannot connect to player: " + n.id)
                        })
                    } else {
                        var g = d20.webrtc.publisher.call(l(n.id), d20.webrtc.mediaStream, {
                            metadata: {
                                playerId: window.currentPlayer.id,
                                broadcastType: i
                            }
                        });
                        g.on("stream", function(e) {
                            console.log("Connection TO: " + s + " | " + n.id);
                            var t = F(n.id);
                            void 0 === e ? (f(n.id),
                            C(t)) : (inMediastream = h(e, window.currentPlayer.get("videoreceivetype")),
                            d(n.id, e),
                            p(e, n.id))
                        }),
                        g.on("error", function(e) {
                            console.warn("Connection TO ERROR: " + s + " | " + n.id + " | Retries: " + n.retries),
                            console.warn(e),
                            d20.webrtc.playersCalled.splice(d20.webrtc.playersCalled.indexOf(n.id), 1),
                            n.retries-- > 0 ? t.length > 0 && setTimeout(function() {
                                a([n])
                            }, 500) : console.error("Exausted retries, cannot connect to player: " + s + " | " + n.id)
                        }),
                        e[n.id] = function() {
                            console.log("Reconnect TO: " + s + " | " + n.id),
                            g.close(),
                            $.each(window.allChildWindows, function(e, t) {
                                var i = $(t.document).find("#playerzone");
                                i.length > 0 && i.find("#player_" + n.id).length > 0 && t.close()
                            }),
                            setTimeout(function() {
                                a([n])
                            }, 500)
                        }
                    }
                    t.length > 0 && setTimeout(function() {
                        a(t)
                    }, 500)
                }
                  , s = $("#videocontextmenu");
                s.on(mousedowntype, "li[data-action-type=reconnectAll]", function() {
                    s.hide(),
                    d20.webrtc.reconnect()
                }),
                s.on(mousedowntype, "li[data-action-type=reconnectPlayer]", function() {
                    s.hide();
                    var t = s.attr("data-player-id");
                    e[t]()
                }),
                s.find("li[data-action-type=reconnectAll]").show(),
                s.find("li[data-action-type=reconnectPlayer]").show()
            }
        }
          , d = function(t, n) {
            var i = F(t)
              , o = new e(window.audioContext);
            "undefined" != typeof d20.webrtc.soundMeters[t] && clearInterval(d20.webrtc.soundMeters[t]),
            o.connectToSource(n, function(e) {
                e ? console.error(e) : d20.webrtc.soundMeters[t] = setInterval(function() {
                    if (o.slow.toFixed(2) > 0 || o.instant.toFixed(2) > 0) {
                        var e = .15;
                        if (i.find(".volume-meter").hasClass("vol-on")) {
                            var t = o.slow.toFixed(2) > e ? 70 : o.slow.toFixed(2) / e * 70;
                            i.find(".volume-meter").animate({
                                width: 30 + t + "%",
                                marginLeft: -(30 + t) / 2 + "%"
                            }, 100)
                        } else
                            i.find(".volume-meter").fadeIn(200, function() {
                                i.find(".volume-meter").addClass("vol-on")
                            })
                    } else
                        i.find(".volume-meter").fadeOut(200, function() {
                            i.find(".volume-meter").removeClass("vol-on")
                        })
                }, 200)
            })
        }
          , h = function(e, t) {
            window.currentPlayer.get("videoreceivetype");
            return "voiceonly" === t && 0 !== e.getVideoTracks().length ? e.getVideoTracks()[0].enabled = !1 : "videoonly" === t && 0 !== e.getAudioTracks().length ? e.getAudioTracks()[0].enabled = !1 : "none" === t && (0 !== e.getVideoTracks().length && (e.getVideoTracks()[0].enabled = !1),
            0 !== e.getAudioTracks().length && (e.getAudioTracks()[0].enabled = !1)),
            e
        }
          , p = function(e, t) {
            var n = $("#player_" + t)
              , i = $("<video autoplay></video>");
            i[0].srcObject = e,
            0 !== e.getVideoTracks().length && e.getVideoTracks()[0].enabled ? k(n) : E(n),
            window.currentPlayer.id === t && "videoonly" === window.currentPlayer.get("videobroadcasttype") || window.currentPlayer.id !== t && (0 === e.getAudioTracks().length || !e.getAudioTracks()[0].enabled) ? C(n) : S(n),
            n.find("div.video").empty().append(i),
            n.find("div.av-controls").remove(),
            f(t)
        }
          , f = function(e) {
            var t = $("#player_" + e)
              , n = e === window.currentPlayer.id;
            if (0 !== t.find("div.av-controls").length)
                return x(t, 1),
                void (n && "voiceonly" === d20.webrtc.broadcastType && E(t));
            var i = $('<div class="av-controls"></div>')
              , o = $('<div class="volume-controls"></div>');
            o.append('<span class="vol-min pictos" title="Mute">&lt;</span>'),
            n || (o.append('<div class="volume-bar"><div class="volume-slider"></div></div>'),
            o.append('<span class="vol-max pictos" title="Max Volume">&gt;</span>')),
            i.append(o),
            t.find("div.video").after(i);
            var r = $('<div class="connection-status"></div>');
            if (r.hide(),
            t.find("div.av-controls").after(r),
            n)
                "voiceonly" === d20.webrtc.broadcastType && E(t),
                t.find(".vol-min").on("click", _);
            else {
                t.find("video");
                var a = t.find(".volume-bar")
                  , s = (a.find(".volume-slider"),
                t.find(".vol-min"))
                  , l = t.find(".vol-max");
                if (a.on("mousedown", v),
                s.on("click", g),
                l.on("click", m),
                window.is_gm) {
                    var c = $('<div class="av-whisper" title="Whisper Player"></div>');
                    c.append('<span class="pictos whisper">q</span>'),
                    i.append(c);
                    var u = t.find(".av-whisper")
                      , d = function(t) {
                        t.stopPropagation();
                        var n = JSON.parse(d20.Campaign.get("whisperGroups"))
                          , i = window.currentPlayer.id;
                        if (console.log("whisperGroups", n),
                        u.hasClass("whispering"))
                            u.removeClass("whispering"),
                            "undefined" != typeof n[e] ? (delete n[e],
                            console.log("whisperGroups deleted", n),
                            d20.Campaign.save({
                                whisperGroups: JSON.stringify(n)
                            })) : ($.each(n, function(e, t) {
                                console.log("group Start", t);
                                for (var i, o, r = t.length; r && t.length; )
                                    for (i = t[--r]; -1 !== (o = t.indexOf(i)); )
                                        t.splice(o, 1);
                                console.log("group New", t),
                                0 === t.length ? delete n[e] : n[e] = t
                            }),
                            d20.Campaign.save({
                                whisperGroups: JSON.stringify(n)
                            }));
                        else {
                            u.addClass("whispering");
                            var o = n[i] || [];
                            o.push(e),
                            n[i] = o,
                            console.log("whisperGroups added", JSON.stringify(n)),
                            d20.Campaign.save({
                                whisperGroups: JSON.stringify(n)
                            })
                        }
                    };
                    u.on("click", d)
                }
            }
        }
          , g = function(e) {
            console.log("minVol"),
            e.stopPropagation();
            var t = $(this).parents(".player");
            x(t, 0)
        }
          , m = function(e) {
            console.log("minVol"),
            e.stopPropagation();
            var t = $(this).parents(".player");
            x(t, 1)
        }
          , y = function(e, t) {
            var n = e.find(".volume-bar")
              , i = n[0].offsetLeft
              , o = n.parents(".player")[0].offsetLeft
              , r = n[0].offsetWidth
              , a = ((t.clientX - i - o) / r).toFixed(2);
            return a > 1 ? 1 : a
        }
          , v = function(e) {
            console.log("Start Slide!"),
            e.stopPropagation();
            var t = $(this).parents(".player");
            t.find(".volume-bar").on("mousemove", b),
            x(t, y(t, e)),
            t.on("mouseup", w)
        }
          , b = function(e) {
            console.log("Move Slide!");
            var t = $(this).parents(".player");
            x(t, y(t, e))
        }
          , w = function(e) {
            console.log("End Slide!", this);
            var t = $(this);
            t.find(".volume-bar").off("mousemove", b),
            x(t, y(t, e)),
            t.off("mouseup", w)
        }
          , _ = function(e) {
            var t;
            console.log("muteMe", e),
            console.log(this),
            void 0 !== e && !0 === e ? F(window.currentPlayer.id) : (t = $(this).parents(".player"),
            console.log("Button Click player", t)),
            d20.webrtc.muted ? (d20.webrtc.mediaStream.getAudioTracks()[0].enabled = !0,
            A(t),
            d20.webrtc.muted = !1,
            t.find("span.vol-min").text("<")) : (d20.webrtc.mediaStream.getAudioTracks()[0].enabled = !1,
            console.log(d20.webrtc.mediaStream.getAudioTracks()),
            T(t),
            d20.webrtc.muted = !0,
            t.find("span.vol-min").text(">"))
        }
          , x = function(e, t, n) {
            console.log("setVolume", t, n);
            n = void 0 === n || n;
            t < .03 && n ? (t = 0,
            R(e)) : M(e),
            e.find(".volume-slider").css("width", 100 * t + "%"),
            e.find("video").prop("volume", t)
        }
          , k = function(e) {
            e.find("div.video").removeClass("hide-video")
        }
          , E = function(e) {
            e.find("div.video").addClass("hide-video")
        }
          , S = function(e) {
            e.find("div.video").removeClass("hide-volume")
        }
          , C = function(e) {
            e.find("div.video").addClass("hide-volume")
        }
          , T = function(e) {
            e.find("div.video").addClass("muted-self")
        }
          , A = function(e) {
            e.find("div.video").removeClass("muted-self")
        }
          , R = function(e) {
            e.find("div.video").addClass("muted-other")
        }
          , M = function(e) {
            e.find("div.video").removeClass("muted-other")
        }
          , P = function(e) {
            e.find("div.video").removeClass("muted-other muted-self no-video hide-video in-whisper not-whisper"),
            e.find("div.connection-status").fadeOut()
        }
          , I = function() {}
          , O = function(e) {
            var t = e.find("div.video")
              , n = e.find("video");
            t.prop("volume", n.prop("volume")),
            x(e, 0, !1),
            t.addClass("in-whisper"),
            n.fadeTo(500, .25)
        }
          , D = function(e) {
            var t = e.find("div.video");
            e.find("video").fadeTo(500, 1, function() {
                t.removeClass("in-whisper")
            }),
            void 0 !== t.prop("volume") ? x(e, parseInt(t.prop("volume")), !1) : x(e, 1, !1)
        }
          , L = function(e) {
            var t = e.find("div.video")
              , n = e.find("video");
            t.prop("volume", n.prop("volume")),
            x(e, 0, !1),
            t.addClass("not-whisper"),
            C(e),
            n.fadeTo(500, .25)
        }
          , B = function(e) {
            var t = e.find("div.video");
            e.find("video").fadeTo(500, 1, function() {
                t.removeClass("not-whisper")
            }),
            S(e),
            void 0 !== t.prop("volume") && x(e, parseInt(t.prop("volume")), !1)
        }
          , F = function(e) {
            var t = $("#player_" + e + " div.video").parent();
            return 0 === t.length && $.each(window.allChildWindows, function(n, i) {
                if (t = $(i.document).find("#player_" + e),
                console.log("Popout looop muteMeIcon", t),
                t.length > 0)
                    return !1
            }),
            0 !== t.length && t
        };
        d20.webrtc.updateDraggable = function() {
            $(".player").draggable(i),
            r(),
            o()
        }
        ,
        d20.webrtc.updateWhisperGroups = function() {
            if (!1 !== d20.webrtc.publisher) {
                var e = JSON.parse(d20.Campaign.get("whisperGroups"))
                  , t = window.currentPlayer.id
                  , n = $.map(d20.Campaign.players.models, function(e) {
                    if (e.get("online") && e.id !== t)
                        return e.id
                });
                $.each(n, function(n, i) {
                    var o = F(i);
                    if (0 === Object.keys(e).length)
                        return D(o),
                        void B(o);
                    $.each(e, function(e, n) {
                        console.log("myId", t),
                        console.log("owner", e),
                        e === t || -1 !== n.indexOf(t) ? (console.log("I'm in this group"),
                        e === i || -1 !== n.indexOf(i) ? (console.log("The current player IS in the group with me"),
                        B(o)) : (console.log("The current player is NOT in the group with me"),
                        L(o))) : e !== i && -1 === n.indexOf(i) || (console.log("I'm in not in this group"),
                        e !== i || -1 === n.indexOf(i) ? (console.log("The current player IS in the group I'm not in"),
                        O(o)) : (console.log("The current player is NOT in the group I'm not in"),
                        D(o)))
                    })
                })
            }
        }
        ,
        d20.webrtc.connect = function() {
            d20.webrtc.eventHandlersLoaded || s(),
            d20.Campaign.players.filter(function(e) {
                return e.get("online") && e !== window.currentPlayer
            }).length > 0 && c()
        }
        ,
        d20.webrtc.reconnect = function() {
            console.log("[WebRTC] - Reconnecting!"),
            ga("send", {
                hitType: "event",
                eventCategory: "WebRTC",
                eventAction: "Reconnect"
            }),
            $.each(window.allChildWindows, function(e, t) {
                $(t.document).find("#playerzone").length > 0 && (console.log("Closing video windows"),
                t.close())
            }),
            d20.webrtc.playersCalled = [],
            d20.webrtc.disconnect(),
            P($("#player_" + window.currentPlayer.id)),
            d20.webrtc.muted = !1,
            setTimeout(d20.webrtc.connect, 250)
        }
        ,
        d20.webrtc.disconnect = function() {
            !1 !== d20.webrtc.publisher && (d20.webrtc.publisher.destroy(),
            d20.webrtc.playersCalled = [],
            "none" !== d20.webrtc.mediaStream && $.each(d20.webrtc.mediaStream.getTracks(), function(e, t) {
                t.enabled = !1
            }),
            d20.webrtc.mediaStream = !1,
            d20.webrtc.publisher = !1)
        }
        ,
        d20.webrtc.postLargeGroupWarning = function() {
            !d20.webrtc.largeGroupWarning && d20.Campaign.players.filter(function(e) {
                return e.get("online") && e !== window.currentPlayer
            }).length > 5 && (d20.webrtc.largeGroupWarning = !0,
            setTimeout(function() {
                d20.textchat.incoming(!1, {
                    who: "system",
                    type: "system",
                    content: "There are a high number of users in your video chat call. If any of the players do not have sufficient internet bandwidth, you may experience degraded performance or instability as a result."
                })
            }, 5e3))
        }
    }))
}();